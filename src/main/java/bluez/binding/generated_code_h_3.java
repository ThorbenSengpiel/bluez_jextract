// Generated by jextract

package bluez.binding;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
 class generated_code_h_3 extends generated_code_h_2 {

    public static MethodHandle g_tree_new_full$MH() {
        return RuntimeHelper.requireNonNull(constants$317.g_tree_new_full$MH,"g_tree_new_full");
    }
    public static MemoryAddress g_tree_new_full ( Addressable key_compare_func,  Addressable key_compare_data,  Addressable key_destroy_func,  Addressable value_destroy_func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$317.g_tree_new_full$MH, "g_tree_new_full");
        try {
            return (MemoryAddress)mh$.invokeExact(key_compare_func, key_compare_data, key_destroy_func, value_destroy_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tree_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$318.g_tree_ref$MH,"g_tree_ref");
    }
    public static MemoryAddress g_tree_ref ( Addressable tree) {
        var mh$ = RuntimeHelper.requireNonNull(constants$318.g_tree_ref$MH, "g_tree_ref");
        try {
            return (MemoryAddress)mh$.invokeExact(tree);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tree_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$318.g_tree_unref$MH,"g_tree_unref");
    }
    public static void g_tree_unref ( Addressable tree) {
        var mh$ = RuntimeHelper.requireNonNull(constants$318.g_tree_unref$MH, "g_tree_unref");
        try {
            mh$.invokeExact(tree);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tree_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$318.g_tree_destroy$MH,"g_tree_destroy");
    }
    public static void g_tree_destroy ( Addressable tree) {
        var mh$ = RuntimeHelper.requireNonNull(constants$318.g_tree_destroy$MH, "g_tree_destroy");
        try {
            mh$.invokeExact(tree);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tree_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$318.g_tree_insert$MH,"g_tree_insert");
    }
    public static void g_tree_insert ( Addressable tree,  Addressable key,  Addressable value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$318.g_tree_insert$MH, "g_tree_insert");
        try {
            mh$.invokeExact(tree, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tree_replace$MH() {
        return RuntimeHelper.requireNonNull(constants$318.g_tree_replace$MH,"g_tree_replace");
    }
    public static void g_tree_replace ( Addressable tree,  Addressable key,  Addressable value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$318.g_tree_replace$MH, "g_tree_replace");
        try {
            mh$.invokeExact(tree, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tree_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$318.g_tree_remove$MH,"g_tree_remove");
    }
    public static int g_tree_remove ( Addressable tree,  Addressable key) {
        var mh$ = RuntimeHelper.requireNonNull(constants$318.g_tree_remove$MH, "g_tree_remove");
        try {
            return (int)mh$.invokeExact(tree, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tree_steal$MH() {
        return RuntimeHelper.requireNonNull(constants$319.g_tree_steal$MH,"g_tree_steal");
    }
    public static int g_tree_steal ( Addressable tree,  Addressable key) {
        var mh$ = RuntimeHelper.requireNonNull(constants$319.g_tree_steal$MH, "g_tree_steal");
        try {
            return (int)mh$.invokeExact(tree, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tree_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$319.g_tree_lookup$MH,"g_tree_lookup");
    }
    public static MemoryAddress g_tree_lookup ( Addressable tree,  Addressable key) {
        var mh$ = RuntimeHelper.requireNonNull(constants$319.g_tree_lookup$MH, "g_tree_lookup");
        try {
            return (MemoryAddress)mh$.invokeExact(tree, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tree_lookup_extended$MH() {
        return RuntimeHelper.requireNonNull(constants$319.g_tree_lookup_extended$MH,"g_tree_lookup_extended");
    }
    public static int g_tree_lookup_extended ( Addressable tree,  Addressable lookup_key,  Addressable orig_key,  Addressable value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$319.g_tree_lookup_extended$MH, "g_tree_lookup_extended");
        try {
            return (int)mh$.invokeExact(tree, lookup_key, orig_key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tree_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$319.g_tree_foreach$MH,"g_tree_foreach");
    }
    public static void g_tree_foreach ( Addressable tree,  Addressable func,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$319.g_tree_foreach$MH, "g_tree_foreach");
        try {
            mh$.invokeExact(tree, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tree_traverse$MH() {
        return RuntimeHelper.requireNonNull(constants$319.g_tree_traverse$MH,"g_tree_traverse");
    }
    public static void g_tree_traverse ( Addressable tree,  Addressable traverse_func,  int traverse_type,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$319.g_tree_traverse$MH, "g_tree_traverse");
        try {
            mh$.invokeExact(tree, traverse_func, traverse_type, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tree_search$MH() {
        return RuntimeHelper.requireNonNull(constants$319.g_tree_search$MH,"g_tree_search");
    }
    public static MemoryAddress g_tree_search ( Addressable tree,  Addressable search_func,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$319.g_tree_search$MH, "g_tree_search");
        try {
            return (MemoryAddress)mh$.invokeExact(tree, search_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tree_height$MH() {
        return RuntimeHelper.requireNonNull(constants$320.g_tree_height$MH,"g_tree_height");
    }
    public static int g_tree_height ( Addressable tree) {
        var mh$ = RuntimeHelper.requireNonNull(constants$320.g_tree_height$MH, "g_tree_height");
        try {
            return (int)mh$.invokeExact(tree);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tree_nnodes$MH() {
        return RuntimeHelper.requireNonNull(constants$320.g_tree_nnodes$MH,"g_tree_nnodes");
    }
    public static int g_tree_nnodes ( Addressable tree) {
        var mh$ = RuntimeHelper.requireNonNull(constants$320.g_tree_nnodes$MH, "g_tree_nnodes");
        try {
            return (int)mh$.invokeExact(tree);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_uri_unescape_string$MH() {
        return RuntimeHelper.requireNonNull(constants$320.g_uri_unescape_string$MH,"g_uri_unescape_string");
    }
    public static MemoryAddress g_uri_unescape_string ( Addressable escaped_string,  Addressable illegal_characters) {
        var mh$ = RuntimeHelper.requireNonNull(constants$320.g_uri_unescape_string$MH, "g_uri_unescape_string");
        try {
            return (MemoryAddress)mh$.invokeExact(escaped_string, illegal_characters);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_uri_unescape_segment$MH() {
        return RuntimeHelper.requireNonNull(constants$320.g_uri_unescape_segment$MH,"g_uri_unescape_segment");
    }
    public static MemoryAddress g_uri_unescape_segment ( Addressable escaped_string,  Addressable escaped_string_end,  Addressable illegal_characters) {
        var mh$ = RuntimeHelper.requireNonNull(constants$320.g_uri_unescape_segment$MH, "g_uri_unescape_segment");
        try {
            return (MemoryAddress)mh$.invokeExact(escaped_string, escaped_string_end, illegal_characters);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_uri_parse_scheme$MH() {
        return RuntimeHelper.requireNonNull(constants$320.g_uri_parse_scheme$MH,"g_uri_parse_scheme");
    }
    public static MemoryAddress g_uri_parse_scheme ( Addressable uri) {
        var mh$ = RuntimeHelper.requireNonNull(constants$320.g_uri_parse_scheme$MH, "g_uri_parse_scheme");
        try {
            return (MemoryAddress)mh$.invokeExact(uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_uri_escape_string$MH() {
        return RuntimeHelper.requireNonNull(constants$320.g_uri_escape_string$MH,"g_uri_escape_string");
    }
    public static MemoryAddress g_uri_escape_string ( Addressable unescaped,  Addressable reserved_chars_allowed,  int allow_utf8) {
        var mh$ = RuntimeHelper.requireNonNull(constants$320.g_uri_escape_string$MH, "g_uri_escape_string");
        try {
            return (MemoryAddress)mh$.invokeExact(unescaped, reserved_chars_allowed, allow_utf8);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_uuid_string_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$321.g_uuid_string_is_valid$MH,"g_uuid_string_is_valid");
    }
    public static int g_uuid_string_is_valid ( Addressable str) {
        var mh$ = RuntimeHelper.requireNonNull(constants$321.g_uuid_string_is_valid$MH, "g_uuid_string_is_valid");
        try {
            return (int)mh$.invokeExact(str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_uuid_string_random$MH() {
        return RuntimeHelper.requireNonNull(constants$321.g_uuid_string_random$MH,"g_uuid_string_random");
    }
    public static MemoryAddress g_uuid_string_random () {
        var mh$ = RuntimeHelper.requireNonNull(constants$321.g_uuid_string_random$MH, "g_uuid_string_random");
        try {
            return (MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout glib_major_version$LAYOUT() {
        return constants$321.glib_major_version$LAYOUT;
    }
    public static VarHandle glib_major_version$VH() {
        return constants$321.glib_major_version$VH;
    }
    public static MemorySegment glib_major_version$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$321.glib_major_version$SEGMENT,"glib_major_version");
    }
    public static int glib_major_version$get() {
        return (int) constants$321.glib_major_version$VH.get(RuntimeHelper.requireNonNull(constants$321.glib_major_version$SEGMENT, "glib_major_version"));
    }
    public static void glib_major_version$set( int x) {
        constants$321.glib_major_version$VH.set(RuntimeHelper.requireNonNull(constants$321.glib_major_version$SEGMENT, "glib_major_version"), x);
    }
    public static MemoryLayout glib_minor_version$LAYOUT() {
        return constants$321.glib_minor_version$LAYOUT;
    }
    public static VarHandle glib_minor_version$VH() {
        return constants$321.glib_minor_version$VH;
    }
    public static MemorySegment glib_minor_version$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$321.glib_minor_version$SEGMENT,"glib_minor_version");
    }
    public static int glib_minor_version$get() {
        return (int) constants$321.glib_minor_version$VH.get(RuntimeHelper.requireNonNull(constants$321.glib_minor_version$SEGMENT, "glib_minor_version"));
    }
    public static void glib_minor_version$set( int x) {
        constants$321.glib_minor_version$VH.set(RuntimeHelper.requireNonNull(constants$321.glib_minor_version$SEGMENT, "glib_minor_version"), x);
    }
    public static MemoryLayout glib_micro_version$LAYOUT() {
        return constants$321.glib_micro_version$LAYOUT;
    }
    public static VarHandle glib_micro_version$VH() {
        return constants$321.glib_micro_version$VH;
    }
    public static MemorySegment glib_micro_version$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$321.glib_micro_version$SEGMENT,"glib_micro_version");
    }
    public static int glib_micro_version$get() {
        return (int) constants$321.glib_micro_version$VH.get(RuntimeHelper.requireNonNull(constants$321.glib_micro_version$SEGMENT, "glib_micro_version"));
    }
    public static void glib_micro_version$set( int x) {
        constants$321.glib_micro_version$VH.set(RuntimeHelper.requireNonNull(constants$321.glib_micro_version$SEGMENT, "glib_micro_version"), x);
    }
    public static MemoryLayout glib_interface_age$LAYOUT() {
        return constants$321.glib_interface_age$LAYOUT;
    }
    public static VarHandle glib_interface_age$VH() {
        return constants$321.glib_interface_age$VH;
    }
    public static MemorySegment glib_interface_age$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$321.glib_interface_age$SEGMENT,"glib_interface_age");
    }
    public static int glib_interface_age$get() {
        return (int) constants$321.glib_interface_age$VH.get(RuntimeHelper.requireNonNull(constants$321.glib_interface_age$SEGMENT, "glib_interface_age"));
    }
    public static void glib_interface_age$set( int x) {
        constants$321.glib_interface_age$VH.set(RuntimeHelper.requireNonNull(constants$321.glib_interface_age$SEGMENT, "glib_interface_age"), x);
    }
    public static MemoryLayout glib_binary_age$LAYOUT() {
        return constants$322.glib_binary_age$LAYOUT;
    }
    public static VarHandle glib_binary_age$VH() {
        return constants$322.glib_binary_age$VH;
    }
    public static MemorySegment glib_binary_age$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$322.glib_binary_age$SEGMENT,"glib_binary_age");
    }
    public static int glib_binary_age$get() {
        return (int) constants$322.glib_binary_age$VH.get(RuntimeHelper.requireNonNull(constants$322.glib_binary_age$SEGMENT, "glib_binary_age"));
    }
    public static void glib_binary_age$set( int x) {
        constants$322.glib_binary_age$VH.set(RuntimeHelper.requireNonNull(constants$322.glib_binary_age$SEGMENT, "glib_binary_age"), x);
    }
    public static MethodHandle glib_check_version$MH() {
        return RuntimeHelper.requireNonNull(constants$322.glib_check_version$MH,"glib_check_version");
    }
    public static MemoryAddress glib_check_version ( int required_major,  int required_minor,  int required_micro) {
        var mh$ = RuntimeHelper.requireNonNull(constants$322.glib_check_version$MH, "glib_check_version");
        try {
            return (MemoryAddress)mh$.invokeExact(required_major, required_minor, required_micro);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mem_chunk_new$MH() {
        return RuntimeHelper.requireNonNull(constants$322.g_mem_chunk_new$MH,"g_mem_chunk_new");
    }
    public static MemoryAddress g_mem_chunk_new ( Addressable name,  int atom_size,  long area_size,  int type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$322.g_mem_chunk_new$MH, "g_mem_chunk_new");
        try {
            return (MemoryAddress)mh$.invokeExact(name, atom_size, area_size, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mem_chunk_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$322.g_mem_chunk_destroy$MH,"g_mem_chunk_destroy");
    }
    public static void g_mem_chunk_destroy ( Addressable mem_chunk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$322.g_mem_chunk_destroy$MH, "g_mem_chunk_destroy");
        try {
            mh$.invokeExact(mem_chunk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mem_chunk_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$322.g_mem_chunk_alloc$MH,"g_mem_chunk_alloc");
    }
    public static MemoryAddress g_mem_chunk_alloc ( Addressable mem_chunk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$322.g_mem_chunk_alloc$MH, "g_mem_chunk_alloc");
        try {
            return (MemoryAddress)mh$.invokeExact(mem_chunk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mem_chunk_alloc0$MH() {
        return RuntimeHelper.requireNonNull(constants$322.g_mem_chunk_alloc0$MH,"g_mem_chunk_alloc0");
    }
    public static MemoryAddress g_mem_chunk_alloc0 ( Addressable mem_chunk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$322.g_mem_chunk_alloc0$MH, "g_mem_chunk_alloc0");
        try {
            return (MemoryAddress)mh$.invokeExact(mem_chunk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mem_chunk_free$MH() {
        return RuntimeHelper.requireNonNull(constants$323.g_mem_chunk_free$MH,"g_mem_chunk_free");
    }
    public static void g_mem_chunk_free ( Addressable mem_chunk,  Addressable mem) {
        var mh$ = RuntimeHelper.requireNonNull(constants$323.g_mem_chunk_free$MH, "g_mem_chunk_free");
        try {
            mh$.invokeExact(mem_chunk, mem);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mem_chunk_clean$MH() {
        return RuntimeHelper.requireNonNull(constants$323.g_mem_chunk_clean$MH,"g_mem_chunk_clean");
    }
    public static void g_mem_chunk_clean ( Addressable mem_chunk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$323.g_mem_chunk_clean$MH, "g_mem_chunk_clean");
        try {
            mh$.invokeExact(mem_chunk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mem_chunk_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$323.g_mem_chunk_reset$MH,"g_mem_chunk_reset");
    }
    public static void g_mem_chunk_reset ( Addressable mem_chunk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$323.g_mem_chunk_reset$MH, "g_mem_chunk_reset");
        try {
            mh$.invokeExact(mem_chunk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mem_chunk_print$MH() {
        return RuntimeHelper.requireNonNull(constants$323.g_mem_chunk_print$MH,"g_mem_chunk_print");
    }
    public static void g_mem_chunk_print ( Addressable mem_chunk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$323.g_mem_chunk_print$MH, "g_mem_chunk_print");
        try {
            mh$.invokeExact(mem_chunk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mem_chunk_info$MH() {
        return RuntimeHelper.requireNonNull(constants$323.g_mem_chunk_info$MH,"g_mem_chunk_info");
    }
    public static void g_mem_chunk_info () {
        var mh$ = RuntimeHelper.requireNonNull(constants$323.g_mem_chunk_info$MH, "g_mem_chunk_info");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_blow_chunks$MH() {
        return RuntimeHelper.requireNonNull(constants$323.g_blow_chunks$MH,"g_blow_chunks");
    }
    public static void g_blow_chunks () {
        var mh$ = RuntimeHelper.requireNonNull(constants$323.g_blow_chunks$MH, "g_blow_chunks");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_allocator_new$MH() {
        return RuntimeHelper.requireNonNull(constants$324.g_allocator_new$MH,"g_allocator_new");
    }
    public static MemoryAddress g_allocator_new ( Addressable name,  int n_preallocs) {
        var mh$ = RuntimeHelper.requireNonNull(constants$324.g_allocator_new$MH, "g_allocator_new");
        try {
            return (MemoryAddress)mh$.invokeExact(name, n_preallocs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_allocator_free$MH() {
        return RuntimeHelper.requireNonNull(constants$324.g_allocator_free$MH,"g_allocator_free");
    }
    public static void g_allocator_free ( Addressable allocator) {
        var mh$ = RuntimeHelper.requireNonNull(constants$324.g_allocator_free$MH, "g_allocator_free");
        try {
            mh$.invokeExact(allocator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_push_allocator$MH() {
        return RuntimeHelper.requireNonNull(constants$324.g_list_push_allocator$MH,"g_list_push_allocator");
    }
    public static void g_list_push_allocator ( Addressable allocator) {
        var mh$ = RuntimeHelper.requireNonNull(constants$324.g_list_push_allocator$MH, "g_list_push_allocator");
        try {
            mh$.invokeExact(allocator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_pop_allocator$MH() {
        return RuntimeHelper.requireNonNull(constants$324.g_list_pop_allocator$MH,"g_list_pop_allocator");
    }
    public static void g_list_pop_allocator () {
        var mh$ = RuntimeHelper.requireNonNull(constants$324.g_list_pop_allocator$MH, "g_list_pop_allocator");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_push_allocator$MH() {
        return RuntimeHelper.requireNonNull(constants$324.g_slist_push_allocator$MH,"g_slist_push_allocator");
    }
    public static void g_slist_push_allocator ( Addressable allocator) {
        var mh$ = RuntimeHelper.requireNonNull(constants$324.g_slist_push_allocator$MH, "g_slist_push_allocator");
        try {
            mh$.invokeExact(allocator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_pop_allocator$MH() {
        return RuntimeHelper.requireNonNull(constants$324.g_slist_pop_allocator$MH,"g_slist_pop_allocator");
    }
    public static void g_slist_pop_allocator () {
        var mh$ = RuntimeHelper.requireNonNull(constants$324.g_slist_pop_allocator$MH, "g_slist_pop_allocator");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_push_allocator$MH() {
        return RuntimeHelper.requireNonNull(constants$325.g_node_push_allocator$MH,"g_node_push_allocator");
    }
    public static void g_node_push_allocator ( Addressable allocator) {
        var mh$ = RuntimeHelper.requireNonNull(constants$325.g_node_push_allocator$MH, "g_node_push_allocator");
        try {
            mh$.invokeExact(allocator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_pop_allocator$MH() {
        return RuntimeHelper.requireNonNull(constants$325.g_node_pop_allocator$MH,"g_node_pop_allocator");
    }
    public static void g_node_pop_allocator () {
        var mh$ = RuntimeHelper.requireNonNull(constants$325.g_node_pop_allocator$MH, "g_node_pop_allocator");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cache_new$MH() {
        return RuntimeHelper.requireNonNull(constants$326.g_cache_new$MH,"g_cache_new");
    }
    public static MemoryAddress g_cache_new ( Addressable value_new_func,  Addressable value_destroy_func,  Addressable key_dup_func,  Addressable key_destroy_func,  Addressable hash_key_func,  Addressable hash_value_func,  Addressable key_equal_func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$326.g_cache_new$MH, "g_cache_new");
        try {
            return (MemoryAddress)mh$.invokeExact(value_new_func, value_destroy_func, key_dup_func, key_destroy_func, hash_key_func, hash_value_func, key_equal_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cache_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$326.g_cache_destroy$MH,"g_cache_destroy");
    }
    public static void g_cache_destroy ( Addressable cache) {
        var mh$ = RuntimeHelper.requireNonNull(constants$326.g_cache_destroy$MH, "g_cache_destroy");
        try {
            mh$.invokeExact(cache);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cache_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$326.g_cache_insert$MH,"g_cache_insert");
    }
    public static MemoryAddress g_cache_insert ( Addressable cache,  Addressable key) {
        var mh$ = RuntimeHelper.requireNonNull(constants$326.g_cache_insert$MH, "g_cache_insert");
        try {
            return (MemoryAddress)mh$.invokeExact(cache, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cache_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$326.g_cache_remove$MH,"g_cache_remove");
    }
    public static void g_cache_remove ( Addressable cache,  Addressable value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$326.g_cache_remove$MH, "g_cache_remove");
        try {
            mh$.invokeExact(cache, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cache_key_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$327.g_cache_key_foreach$MH,"g_cache_key_foreach");
    }
    public static void g_cache_key_foreach ( Addressable cache,  Addressable func,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$327.g_cache_key_foreach$MH, "g_cache_key_foreach");
        try {
            mh$.invokeExact(cache, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cache_value_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$327.g_cache_value_foreach$MH,"g_cache_value_foreach");
    }
    public static void g_cache_value_foreach ( Addressable cache,  Addressable func,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$327.g_cache_value_foreach$MH, "g_cache_value_foreach");
        try {
            mh$.invokeExact(cache, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_completion_new$MH() {
        return RuntimeHelper.requireNonNull(constants$328.g_completion_new$MH,"g_completion_new");
    }
    public static MemoryAddress g_completion_new ( Addressable func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$328.g_completion_new$MH, "g_completion_new");
        try {
            return (MemoryAddress)mh$.invokeExact(func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_completion_add_items$MH() {
        return RuntimeHelper.requireNonNull(constants$328.g_completion_add_items$MH,"g_completion_add_items");
    }
    public static void g_completion_add_items ( Addressable cmp,  Addressable items) {
        var mh$ = RuntimeHelper.requireNonNull(constants$328.g_completion_add_items$MH, "g_completion_add_items");
        try {
            mh$.invokeExact(cmp, items);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_completion_remove_items$MH() {
        return RuntimeHelper.requireNonNull(constants$328.g_completion_remove_items$MH,"g_completion_remove_items");
    }
    public static void g_completion_remove_items ( Addressable cmp,  Addressable items) {
        var mh$ = RuntimeHelper.requireNonNull(constants$328.g_completion_remove_items$MH, "g_completion_remove_items");
        try {
            mh$.invokeExact(cmp, items);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_completion_clear_items$MH() {
        return RuntimeHelper.requireNonNull(constants$328.g_completion_clear_items$MH,"g_completion_clear_items");
    }
    public static void g_completion_clear_items ( Addressable cmp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$328.g_completion_clear_items$MH, "g_completion_clear_items");
        try {
            mh$.invokeExact(cmp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_completion_complete$MH() {
        return RuntimeHelper.requireNonNull(constants$328.g_completion_complete$MH,"g_completion_complete");
    }
    public static MemoryAddress g_completion_complete ( Addressable cmp,  Addressable prefix,  Addressable new_prefix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$328.g_completion_complete$MH, "g_completion_complete");
        try {
            return (MemoryAddress)mh$.invokeExact(cmp, prefix, new_prefix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_completion_complete_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$328.g_completion_complete_utf8$MH,"g_completion_complete_utf8");
    }
    public static MemoryAddress g_completion_complete_utf8 ( Addressable cmp,  Addressable prefix,  Addressable new_prefix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$328.g_completion_complete_utf8$MH, "g_completion_complete_utf8");
        try {
            return (MemoryAddress)mh$.invokeExact(cmp, prefix, new_prefix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_completion_set_compare$MH() {
        return RuntimeHelper.requireNonNull(constants$329.g_completion_set_compare$MH,"g_completion_set_compare");
    }
    public static void g_completion_set_compare ( Addressable cmp,  Addressable strncmp_func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$329.g_completion_set_compare$MH, "g_completion_set_compare");
        try {
            mh$.invokeExact(cmp, strncmp_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_completion_free$MH() {
        return RuntimeHelper.requireNonNull(constants$329.g_completion_free$MH,"g_completion_free");
    }
    public static void g_completion_free ( Addressable cmp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$329.g_completion_free$MH, "g_completion_free");
        try {
            mh$.invokeExact(cmp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_relation_new$MH() {
        return RuntimeHelper.requireNonNull(constants$329.g_relation_new$MH,"g_relation_new");
    }
    public static MemoryAddress g_relation_new ( int fields) {
        var mh$ = RuntimeHelper.requireNonNull(constants$329.g_relation_new$MH, "g_relation_new");
        try {
            return (MemoryAddress)mh$.invokeExact(fields);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_relation_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$329.g_relation_destroy$MH,"g_relation_destroy");
    }
    public static void g_relation_destroy ( Addressable relation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$329.g_relation_destroy$MH, "g_relation_destroy");
        try {
            mh$.invokeExact(relation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_relation_index$MH() {
        return RuntimeHelper.requireNonNull(constants$329.g_relation_index$MH,"g_relation_index");
    }
    public static void g_relation_index ( Addressable relation,  int field,  Addressable hash_func,  Addressable key_equal_func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$329.g_relation_index$MH, "g_relation_index");
        try {
            mh$.invokeExact(relation, field, hash_func, key_equal_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_relation_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$329.g_relation_insert$MH,"g_relation_insert");
    }
    public static void g_relation_insert ( Addressable relation, Object... x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$329.g_relation_insert$MH, "g_relation_insert");
        try {
            mh$.invokeExact(relation, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_relation_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$330.g_relation_delete$MH,"g_relation_delete");
    }
    public static int g_relation_delete ( Addressable relation,  Addressable key,  int field) {
        var mh$ = RuntimeHelper.requireNonNull(constants$330.g_relation_delete$MH, "g_relation_delete");
        try {
            return (int)mh$.invokeExact(relation, key, field);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_relation_select$MH() {
        return RuntimeHelper.requireNonNull(constants$330.g_relation_select$MH,"g_relation_select");
    }
    public static MemoryAddress g_relation_select ( Addressable relation,  Addressable key,  int field) {
        var mh$ = RuntimeHelper.requireNonNull(constants$330.g_relation_select$MH, "g_relation_select");
        try {
            return (MemoryAddress)mh$.invokeExact(relation, key, field);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_relation_count$MH() {
        return RuntimeHelper.requireNonNull(constants$330.g_relation_count$MH,"g_relation_count");
    }
    public static int g_relation_count ( Addressable relation,  Addressable key,  int field) {
        var mh$ = RuntimeHelper.requireNonNull(constants$330.g_relation_count$MH, "g_relation_count");
        try {
            return (int)mh$.invokeExact(relation, key, field);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_relation_exists$MH() {
        return RuntimeHelper.requireNonNull(constants$330.g_relation_exists$MH,"g_relation_exists");
    }
    public static int g_relation_exists ( Addressable relation, Object... x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$330.g_relation_exists$MH, "g_relation_exists");
        try {
            return (int)mh$.invokeExact(relation, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_relation_print$MH() {
        return RuntimeHelper.requireNonNull(constants$330.g_relation_print$MH,"g_relation_print");
    }
    public static void g_relation_print ( Addressable relation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$330.g_relation_print$MH, "g_relation_print");
        try {
            mh$.invokeExact(relation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tuples_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$330.g_tuples_destroy$MH,"g_tuples_destroy");
    }
    public static void g_tuples_destroy ( Addressable tuples) {
        var mh$ = RuntimeHelper.requireNonNull(constants$330.g_tuples_destroy$MH, "g_tuples_destroy");
        try {
            mh$.invokeExact(tuples);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tuples_index$MH() {
        return RuntimeHelper.requireNonNull(constants$331.g_tuples_index$MH,"g_tuples_index");
    }
    public static MemoryAddress g_tuples_index ( Addressable tuples,  int index_,  int field) {
        var mh$ = RuntimeHelper.requireNonNull(constants$331.g_tuples_index$MH, "g_tuples_index");
        try {
            return (MemoryAddress)mh$.invokeExact(tuples, index_, field);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_THREAD_PRIORITY_LOW() {
        return (int)0L;
    }
    public static int G_THREAD_PRIORITY_NORMAL() {
        return (int)1L;
    }
    public static int G_THREAD_PRIORITY_HIGH() {
        return (int)2L;
    }
    public static int G_THREAD_PRIORITY_URGENT() {
        return (int)3L;
    }
    public static MemorySegment g_thread_functions_for_glib_use$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$331.g_thread_functions_for_glib_use$SEGMENT,"g_thread_functions_for_glib_use");
    }
    public static MemoryLayout g_thread_use_default_impl$LAYOUT() {
        return constants$331.g_thread_use_default_impl$LAYOUT;
    }
    public static VarHandle g_thread_use_default_impl$VH() {
        return constants$331.g_thread_use_default_impl$VH;
    }
    public static MemorySegment g_thread_use_default_impl$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$331.g_thread_use_default_impl$SEGMENT,"g_thread_use_default_impl");
    }
    public static int g_thread_use_default_impl$get() {
        return (int) constants$331.g_thread_use_default_impl$VH.get(RuntimeHelper.requireNonNull(constants$331.g_thread_use_default_impl$SEGMENT, "g_thread_use_default_impl"));
    }
    public static void g_thread_use_default_impl$set( int x) {
        constants$331.g_thread_use_default_impl$VH.set(RuntimeHelper.requireNonNull(constants$331.g_thread_use_default_impl$SEGMENT, "g_thread_use_default_impl"), x);
    }
    public static MemoryLayout g_thread_gettime$LAYOUT() {
        return constants$331.g_thread_gettime$LAYOUT;
    }
    public static VarHandle g_thread_gettime$VH() {
        return constants$331.g_thread_gettime$VH;
    }
    public static MemorySegment g_thread_gettime$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$331.g_thread_gettime$SEGMENT,"g_thread_gettime");
    }
    public static MemoryAddress g_thread_gettime$get() {
        return (MemoryAddress) constants$331.g_thread_gettime$VH.get(RuntimeHelper.requireNonNull(constants$331.g_thread_gettime$SEGMENT, "g_thread_gettime"));
    }
    public static void g_thread_gettime$set( MemoryAddress x) {
        constants$331.g_thread_gettime$VH.set(RuntimeHelper.requireNonNull(constants$331.g_thread_gettime$SEGMENT, "g_thread_gettime"), x);
    }
    public static g_thread_gettime g_thread_gettime () {
        return g_thread_gettime.ofAddress(g_thread_gettime$get(), ResourceScope.globalScope());
    }
    public static MethodHandle g_thread_create$MH() {
        return RuntimeHelper.requireNonNull(constants$332.g_thread_create$MH,"g_thread_create");
    }
    public static MemoryAddress g_thread_create ( Addressable func,  Addressable data,  int joinable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$332.g_thread_create$MH, "g_thread_create");
        try {
            return (MemoryAddress)mh$.invokeExact(func, data, joinable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_thread_create_full$MH() {
        return RuntimeHelper.requireNonNull(constants$332.g_thread_create_full$MH,"g_thread_create_full");
    }
    public static MemoryAddress g_thread_create_full ( Addressable func,  Addressable data,  long stack_size,  int joinable,  int bound,  int priority,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$332.g_thread_create_full$MH, "g_thread_create_full");
        try {
            return (MemoryAddress)mh$.invokeExact(func, data, stack_size, joinable, bound, priority, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_thread_set_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$332.g_thread_set_priority$MH,"g_thread_set_priority");
    }
    public static void g_thread_set_priority ( Addressable thread,  int priority) {
        var mh$ = RuntimeHelper.requireNonNull(constants$332.g_thread_set_priority$MH, "g_thread_set_priority");
        try {
            mh$.invokeExact(thread, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_thread_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$332.g_thread_foreach$MH,"g_thread_foreach");
    }
    public static void g_thread_foreach ( Addressable thread_func,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$332.g_thread_foreach$MH, "g_thread_foreach");
        try {
            mh$.invokeExact(thread_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __sched_cpucount$MH() {
        return RuntimeHelper.requireNonNull(constants$332.__sched_cpucount$MH,"__sched_cpucount");
    }
    public static int __sched_cpucount ( long __setsize,  Addressable __setp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$332.__sched_cpucount$MH, "__sched_cpucount");
        try {
            return (int)mh$.invokeExact(__setsize, __setp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __sched_cpualloc$MH() {
        return RuntimeHelper.requireNonNull(constants$332.__sched_cpualloc$MH,"__sched_cpualloc");
    }
    public static MemoryAddress __sched_cpualloc ( long __count) {
        var mh$ = RuntimeHelper.requireNonNull(constants$332.__sched_cpualloc$MH, "__sched_cpualloc");
        try {
            return (MemoryAddress)mh$.invokeExact(__count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __sched_cpufree$MH() {
        return RuntimeHelper.requireNonNull(constants$333.__sched_cpufree$MH,"__sched_cpufree");
    }
    public static void __sched_cpufree ( Addressable __set) {
        var mh$ = RuntimeHelper.requireNonNull(constants$333.__sched_cpufree$MH, "__sched_cpufree");
        try {
            mh$.invokeExact(__set);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sched_setparam$MH() {
        return RuntimeHelper.requireNonNull(constants$333.sched_setparam$MH,"sched_setparam");
    }
    public static int sched_setparam ( int __pid,  Addressable __param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$333.sched_setparam$MH, "sched_setparam");
        try {
            return (int)mh$.invokeExact(__pid, __param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sched_getparam$MH() {
        return RuntimeHelper.requireNonNull(constants$333.sched_getparam$MH,"sched_getparam");
    }
    public static int sched_getparam ( int __pid,  Addressable __param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$333.sched_getparam$MH, "sched_getparam");
        try {
            return (int)mh$.invokeExact(__pid, __param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sched_setscheduler$MH() {
        return RuntimeHelper.requireNonNull(constants$333.sched_setscheduler$MH,"sched_setscheduler");
    }
    public static int sched_setscheduler ( int __pid,  int __policy,  Addressable __param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$333.sched_setscheduler$MH, "sched_setscheduler");
        try {
            return (int)mh$.invokeExact(__pid, __policy, __param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sched_getscheduler$MH() {
        return RuntimeHelper.requireNonNull(constants$333.sched_getscheduler$MH,"sched_getscheduler");
    }
    public static int sched_getscheduler ( int __pid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$333.sched_getscheduler$MH, "sched_getscheduler");
        try {
            return (int)mh$.invokeExact(__pid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sched_yield$MH() {
        return RuntimeHelper.requireNonNull(constants$333.sched_yield$MH,"sched_yield");
    }
    public static int sched_yield () {
        var mh$ = RuntimeHelper.requireNonNull(constants$333.sched_yield$MH, "sched_yield");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sched_get_priority_max$MH() {
        return RuntimeHelper.requireNonNull(constants$334.sched_get_priority_max$MH,"sched_get_priority_max");
    }
    public static int sched_get_priority_max ( int __algorithm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$334.sched_get_priority_max$MH, "sched_get_priority_max");
        try {
            return (int)mh$.invokeExact(__algorithm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sched_get_priority_min$MH() {
        return RuntimeHelper.requireNonNull(constants$334.sched_get_priority_min$MH,"sched_get_priority_min");
    }
    public static int sched_get_priority_min ( int __algorithm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$334.sched_get_priority_min$MH, "sched_get_priority_min");
        try {
            return (int)mh$.invokeExact(__algorithm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sched_rr_get_interval$MH() {
        return RuntimeHelper.requireNonNull(constants$334.sched_rr_get_interval$MH,"sched_rr_get_interval");
    }
    public static int sched_rr_get_interval ( int __pid,  Addressable __t) {
        var mh$ = RuntimeHelper.requireNonNull(constants$334.sched_rr_get_interval$MH, "sched_rr_get_interval");
        try {
            return (int)mh$.invokeExact(__pid, __t);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int PTHREAD_CREATE_JOINABLE() {
        return (int)0L;
    }
    public static int PTHREAD_CREATE_DETACHED() {
        return (int)1L;
    }
    public static int PTHREAD_MUTEX_TIMED_NP() {
        return (int)0L;
    }
    public static int PTHREAD_MUTEX_RECURSIVE_NP() {
        return (int)1L;
    }
    public static int PTHREAD_MUTEX_ERRORCHECK_NP() {
        return (int)2L;
    }
    public static int PTHREAD_MUTEX_ADAPTIVE_NP() {
        return (int)3L;
    }
    public static int PTHREAD_MUTEX_NORMAL() {
        return (int)0L;
    }
    public static int PTHREAD_MUTEX_RECURSIVE() {
        return (int)1L;
    }
    public static int PTHREAD_MUTEX_ERRORCHECK() {
        return (int)2L;
    }
    public static int PTHREAD_MUTEX_DEFAULT() {
        return (int)0L;
    }
    public static int PTHREAD_MUTEX_STALLED() {
        return (int)0L;
    }
    public static int PTHREAD_MUTEX_STALLED_NP() {
        return (int)0L;
    }
    public static int PTHREAD_MUTEX_ROBUST() {
        return (int)1L;
    }
    public static int PTHREAD_MUTEX_ROBUST_NP() {
        return (int)1L;
    }
    public static int PTHREAD_PRIO_NONE() {
        return (int)0L;
    }
    public static int PTHREAD_PRIO_INHERIT() {
        return (int)1L;
    }
    public static int PTHREAD_PRIO_PROTECT() {
        return (int)2L;
    }
    public static int PTHREAD_RWLOCK_PREFER_READER_NP() {
        return (int)0L;
    }
    public static int PTHREAD_RWLOCK_PREFER_WRITER_NP() {
        return (int)1L;
    }
    public static int PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP() {
        return (int)2L;
    }
    public static int PTHREAD_RWLOCK_DEFAULT_NP() {
        return (int)0L;
    }
    public static int PTHREAD_INHERIT_SCHED() {
        return (int)0L;
    }
    public static int PTHREAD_EXPLICIT_SCHED() {
        return (int)1L;
    }
    public static int PTHREAD_SCOPE_SYSTEM() {
        return (int)0L;
    }
    public static int PTHREAD_SCOPE_PROCESS() {
        return (int)1L;
    }
    public static int PTHREAD_PROCESS_PRIVATE() {
        return (int)0L;
    }
    public static int PTHREAD_PROCESS_SHARED() {
        return (int)1L;
    }
    public static int PTHREAD_CANCEL_ENABLE() {
        return (int)0L;
    }
    public static int PTHREAD_CANCEL_DISABLE() {
        return (int)1L;
    }
    public static int PTHREAD_CANCEL_DEFERRED() {
        return (int)0L;
    }
    public static int PTHREAD_CANCEL_ASYNCHRONOUS() {
        return (int)1L;
    }
    public static MethodHandle pthread_create$MH() {
        return RuntimeHelper.requireNonNull(constants$334.pthread_create$MH,"pthread_create");
    }
    public static int pthread_create ( Addressable __newthread,  Addressable __attr,  Addressable __start_routine,  Addressable __arg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$334.pthread_create$MH, "pthread_create");
        try {
            return (int)mh$.invokeExact(__newthread, __attr, __start_routine, __arg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_exit$MH() {
        return RuntimeHelper.requireNonNull(constants$335.pthread_exit$MH,"pthread_exit");
    }
    public static void pthread_exit ( Addressable __retval) {
        var mh$ = RuntimeHelper.requireNonNull(constants$335.pthread_exit$MH, "pthread_exit");
        try {
            mh$.invokeExact(__retval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_join$MH() {
        return RuntimeHelper.requireNonNull(constants$335.pthread_join$MH,"pthread_join");
    }
    public static int pthread_join ( long __th,  Addressable __thread_return) {
        var mh$ = RuntimeHelper.requireNonNull(constants$335.pthread_join$MH, "pthread_join");
        try {
            return (int)mh$.invokeExact(__th, __thread_return);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_detach$MH() {
        return RuntimeHelper.requireNonNull(constants$335.pthread_detach$MH,"pthread_detach");
    }
    public static int pthread_detach ( long __th) {
        var mh$ = RuntimeHelper.requireNonNull(constants$335.pthread_detach$MH, "pthread_detach");
        try {
            return (int)mh$.invokeExact(__th);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_self$MH() {
        return RuntimeHelper.requireNonNull(constants$335.pthread_self$MH,"pthread_self");
    }
    public static long pthread_self () {
        var mh$ = RuntimeHelper.requireNonNull(constants$335.pthread_self$MH, "pthread_self");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$335.pthread_equal$MH,"pthread_equal");
    }
    public static int pthread_equal ( long __thread1,  long __thread2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$335.pthread_equal$MH, "pthread_equal");
        try {
            return (int)mh$.invokeExact(__thread1, __thread2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_attr_init$MH() {
        return RuntimeHelper.requireNonNull(constants$335.pthread_attr_init$MH,"pthread_attr_init");
    }
    public static int pthread_attr_init ( Addressable __attr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$335.pthread_attr_init$MH, "pthread_attr_init");
        try {
            return (int)mh$.invokeExact(__attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_attr_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$336.pthread_attr_destroy$MH,"pthread_attr_destroy");
    }
    public static int pthread_attr_destroy ( Addressable __attr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$336.pthread_attr_destroy$MH, "pthread_attr_destroy");
        try {
            return (int)mh$.invokeExact(__attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_attr_getdetachstate$MH() {
        return RuntimeHelper.requireNonNull(constants$336.pthread_attr_getdetachstate$MH,"pthread_attr_getdetachstate");
    }
    public static int pthread_attr_getdetachstate ( Addressable __attr,  Addressable __detachstate) {
        var mh$ = RuntimeHelper.requireNonNull(constants$336.pthread_attr_getdetachstate$MH, "pthread_attr_getdetachstate");
        try {
            return (int)mh$.invokeExact(__attr, __detachstate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_attr_setdetachstate$MH() {
        return RuntimeHelper.requireNonNull(constants$336.pthread_attr_setdetachstate$MH,"pthread_attr_setdetachstate");
    }
    public static int pthread_attr_setdetachstate ( Addressable __attr,  int __detachstate) {
        var mh$ = RuntimeHelper.requireNonNull(constants$336.pthread_attr_setdetachstate$MH, "pthread_attr_setdetachstate");
        try {
            return (int)mh$.invokeExact(__attr, __detachstate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_attr_getguardsize$MH() {
        return RuntimeHelper.requireNonNull(constants$336.pthread_attr_getguardsize$MH,"pthread_attr_getguardsize");
    }
    public static int pthread_attr_getguardsize ( Addressable __attr,  Addressable __guardsize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$336.pthread_attr_getguardsize$MH, "pthread_attr_getguardsize");
        try {
            return (int)mh$.invokeExact(__attr, __guardsize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_attr_setguardsize$MH() {
        return RuntimeHelper.requireNonNull(constants$336.pthread_attr_setguardsize$MH,"pthread_attr_setguardsize");
    }
    public static int pthread_attr_setguardsize ( Addressable __attr,  long __guardsize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$336.pthread_attr_setguardsize$MH, "pthread_attr_setguardsize");
        try {
            return (int)mh$.invokeExact(__attr, __guardsize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_attr_getschedparam$MH() {
        return RuntimeHelper.requireNonNull(constants$336.pthread_attr_getschedparam$MH,"pthread_attr_getschedparam");
    }
    public static int pthread_attr_getschedparam ( Addressable __attr,  Addressable __param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$336.pthread_attr_getschedparam$MH, "pthread_attr_getschedparam");
        try {
            return (int)mh$.invokeExact(__attr, __param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_attr_setschedparam$MH() {
        return RuntimeHelper.requireNonNull(constants$337.pthread_attr_setschedparam$MH,"pthread_attr_setschedparam");
    }
    public static int pthread_attr_setschedparam ( Addressable __attr,  Addressable __param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$337.pthread_attr_setschedparam$MH, "pthread_attr_setschedparam");
        try {
            return (int)mh$.invokeExact(__attr, __param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_attr_getschedpolicy$MH() {
        return RuntimeHelper.requireNonNull(constants$337.pthread_attr_getschedpolicy$MH,"pthread_attr_getschedpolicy");
    }
    public static int pthread_attr_getschedpolicy ( Addressable __attr,  Addressable __policy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$337.pthread_attr_getschedpolicy$MH, "pthread_attr_getschedpolicy");
        try {
            return (int)mh$.invokeExact(__attr, __policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_attr_setschedpolicy$MH() {
        return RuntimeHelper.requireNonNull(constants$337.pthread_attr_setschedpolicy$MH,"pthread_attr_setschedpolicy");
    }
    public static int pthread_attr_setschedpolicy ( Addressable __attr,  int __policy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$337.pthread_attr_setschedpolicy$MH, "pthread_attr_setschedpolicy");
        try {
            return (int)mh$.invokeExact(__attr, __policy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_attr_getinheritsched$MH() {
        return RuntimeHelper.requireNonNull(constants$337.pthread_attr_getinheritsched$MH,"pthread_attr_getinheritsched");
    }
    public static int pthread_attr_getinheritsched ( Addressable __attr,  Addressable __inherit) {
        var mh$ = RuntimeHelper.requireNonNull(constants$337.pthread_attr_getinheritsched$MH, "pthread_attr_getinheritsched");
        try {
            return (int)mh$.invokeExact(__attr, __inherit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_attr_setinheritsched$MH() {
        return RuntimeHelper.requireNonNull(constants$337.pthread_attr_setinheritsched$MH,"pthread_attr_setinheritsched");
    }
    public static int pthread_attr_setinheritsched ( Addressable __attr,  int __inherit) {
        var mh$ = RuntimeHelper.requireNonNull(constants$337.pthread_attr_setinheritsched$MH, "pthread_attr_setinheritsched");
        try {
            return (int)mh$.invokeExact(__attr, __inherit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_attr_getscope$MH() {
        return RuntimeHelper.requireNonNull(constants$337.pthread_attr_getscope$MH,"pthread_attr_getscope");
    }
    public static int pthread_attr_getscope ( Addressable __attr,  Addressable __scope) {
        var mh$ = RuntimeHelper.requireNonNull(constants$337.pthread_attr_getscope$MH, "pthread_attr_getscope");
        try {
            return (int)mh$.invokeExact(__attr, __scope);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_attr_setscope$MH() {
        return RuntimeHelper.requireNonNull(constants$338.pthread_attr_setscope$MH,"pthread_attr_setscope");
    }
    public static int pthread_attr_setscope ( Addressable __attr,  int __scope) {
        var mh$ = RuntimeHelper.requireNonNull(constants$338.pthread_attr_setscope$MH, "pthread_attr_setscope");
        try {
            return (int)mh$.invokeExact(__attr, __scope);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_attr_getstackaddr$MH() {
        return RuntimeHelper.requireNonNull(constants$338.pthread_attr_getstackaddr$MH,"pthread_attr_getstackaddr");
    }
    public static int pthread_attr_getstackaddr ( Addressable __attr,  Addressable __stackaddr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$338.pthread_attr_getstackaddr$MH, "pthread_attr_getstackaddr");
        try {
            return (int)mh$.invokeExact(__attr, __stackaddr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_attr_setstackaddr$MH() {
        return RuntimeHelper.requireNonNull(constants$338.pthread_attr_setstackaddr$MH,"pthread_attr_setstackaddr");
    }
    public static int pthread_attr_setstackaddr ( Addressable __attr,  Addressable __stackaddr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$338.pthread_attr_setstackaddr$MH, "pthread_attr_setstackaddr");
        try {
            return (int)mh$.invokeExact(__attr, __stackaddr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_attr_getstacksize$MH() {
        return RuntimeHelper.requireNonNull(constants$338.pthread_attr_getstacksize$MH,"pthread_attr_getstacksize");
    }
    public static int pthread_attr_getstacksize ( Addressable __attr,  Addressable __stacksize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$338.pthread_attr_getstacksize$MH, "pthread_attr_getstacksize");
        try {
            return (int)mh$.invokeExact(__attr, __stacksize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_attr_setstacksize$MH() {
        return RuntimeHelper.requireNonNull(constants$338.pthread_attr_setstacksize$MH,"pthread_attr_setstacksize");
    }
    public static int pthread_attr_setstacksize ( Addressable __attr,  long __stacksize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$338.pthread_attr_setstacksize$MH, "pthread_attr_setstacksize");
        try {
            return (int)mh$.invokeExact(__attr, __stacksize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_attr_getstack$MH() {
        return RuntimeHelper.requireNonNull(constants$338.pthread_attr_getstack$MH,"pthread_attr_getstack");
    }
    public static int pthread_attr_getstack ( Addressable __attr,  Addressable __stackaddr,  Addressable __stacksize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$338.pthread_attr_getstack$MH, "pthread_attr_getstack");
        try {
            return (int)mh$.invokeExact(__attr, __stackaddr, __stacksize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_attr_setstack$MH() {
        return RuntimeHelper.requireNonNull(constants$339.pthread_attr_setstack$MH,"pthread_attr_setstack");
    }
    public static int pthread_attr_setstack ( Addressable __attr,  Addressable __stackaddr,  long __stacksize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$339.pthread_attr_setstack$MH, "pthread_attr_setstack");
        try {
            return (int)mh$.invokeExact(__attr, __stackaddr, __stacksize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_setschedparam$MH() {
        return RuntimeHelper.requireNonNull(constants$339.pthread_setschedparam$MH,"pthread_setschedparam");
    }
    public static int pthread_setschedparam ( long __target_thread,  int __policy,  Addressable __param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$339.pthread_setschedparam$MH, "pthread_setschedparam");
        try {
            return (int)mh$.invokeExact(__target_thread, __policy, __param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_getschedparam$MH() {
        return RuntimeHelper.requireNonNull(constants$339.pthread_getschedparam$MH,"pthread_getschedparam");
    }
    public static int pthread_getschedparam ( long __target_thread,  Addressable __policy,  Addressable __param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$339.pthread_getschedparam$MH, "pthread_getschedparam");
        try {
            return (int)mh$.invokeExact(__target_thread, __policy, __param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_setschedprio$MH() {
        return RuntimeHelper.requireNonNull(constants$339.pthread_setschedprio$MH,"pthread_setschedprio");
    }
    public static int pthread_setschedprio ( long __target_thread,  int __prio) {
        var mh$ = RuntimeHelper.requireNonNull(constants$339.pthread_setschedprio$MH, "pthread_setschedprio");
        try {
            return (int)mh$.invokeExact(__target_thread, __prio);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_once$MH() {
        return RuntimeHelper.requireNonNull(constants$340.pthread_once$MH,"pthread_once");
    }
    public static int pthread_once ( Addressable __once_control,  Addressable __init_routine) {
        var mh$ = RuntimeHelper.requireNonNull(constants$340.pthread_once$MH, "pthread_once");
        try {
            return (int)mh$.invokeExact(__once_control, __init_routine);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_setcancelstate$MH() {
        return RuntimeHelper.requireNonNull(constants$340.pthread_setcancelstate$MH,"pthread_setcancelstate");
    }
    public static int pthread_setcancelstate ( int __state,  Addressable __oldstate) {
        var mh$ = RuntimeHelper.requireNonNull(constants$340.pthread_setcancelstate$MH, "pthread_setcancelstate");
        try {
            return (int)mh$.invokeExact(__state, __oldstate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_setcanceltype$MH() {
        return RuntimeHelper.requireNonNull(constants$340.pthread_setcanceltype$MH,"pthread_setcanceltype");
    }
    public static int pthread_setcanceltype ( int __type,  Addressable __oldtype) {
        var mh$ = RuntimeHelper.requireNonNull(constants$340.pthread_setcanceltype$MH, "pthread_setcanceltype");
        try {
            return (int)mh$.invokeExact(__type, __oldtype);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_cancel$MH() {
        return RuntimeHelper.requireNonNull(constants$340.pthread_cancel$MH,"pthread_cancel");
    }
    public static int pthread_cancel ( long __th) {
        var mh$ = RuntimeHelper.requireNonNull(constants$340.pthread_cancel$MH, "pthread_cancel");
        try {
            return (int)mh$.invokeExact(__th);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_testcancel$MH() {
        return RuntimeHelper.requireNonNull(constants$340.pthread_testcancel$MH,"pthread_testcancel");
    }
    public static void pthread_testcancel () {
        var mh$ = RuntimeHelper.requireNonNull(constants$340.pthread_testcancel$MH, "pthread_testcancel");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __pthread_register_cancel$MH() {
        return RuntimeHelper.requireNonNull(constants$340.__pthread_register_cancel$MH,"__pthread_register_cancel");
    }
    public static void __pthread_register_cancel ( Addressable __buf) {
        var mh$ = RuntimeHelper.requireNonNull(constants$340.__pthread_register_cancel$MH, "__pthread_register_cancel");
        try {
            mh$.invokeExact(__buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __pthread_unregister_cancel$MH() {
        return RuntimeHelper.requireNonNull(constants$341.__pthread_unregister_cancel$MH,"__pthread_unregister_cancel");
    }
    public static void __pthread_unregister_cancel ( Addressable __buf) {
        var mh$ = RuntimeHelper.requireNonNull(constants$341.__pthread_unregister_cancel$MH, "__pthread_unregister_cancel");
        try {
            mh$.invokeExact(__buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __pthread_unwind_next$MH() {
        return RuntimeHelper.requireNonNull(constants$341.__pthread_unwind_next$MH,"__pthread_unwind_next");
    }
    public static void __pthread_unwind_next ( Addressable __buf) {
        var mh$ = RuntimeHelper.requireNonNull(constants$341.__pthread_unwind_next$MH, "__pthread_unwind_next");
        try {
            mh$.invokeExact(__buf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __sigsetjmp$MH() {
        return RuntimeHelper.requireNonNull(constants$341.__sigsetjmp$MH,"__sigsetjmp");
    }
    public static int __sigsetjmp ( Addressable __env,  int __savemask) {
        var mh$ = RuntimeHelper.requireNonNull(constants$341.__sigsetjmp$MH, "__sigsetjmp");
        try {
            return (int)mh$.invokeExact(__env, __savemask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_mutex_init$MH() {
        return RuntimeHelper.requireNonNull(constants$341.pthread_mutex_init$MH,"pthread_mutex_init");
    }
    public static int pthread_mutex_init ( Addressable __mutex,  Addressable __mutexattr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$341.pthread_mutex_init$MH, "pthread_mutex_init");
        try {
            return (int)mh$.invokeExact(__mutex, __mutexattr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_mutex_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$341.pthread_mutex_destroy$MH,"pthread_mutex_destroy");
    }
    public static int pthread_mutex_destroy ( Addressable __mutex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$341.pthread_mutex_destroy$MH, "pthread_mutex_destroy");
        try {
            return (int)mh$.invokeExact(__mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_mutex_trylock$MH() {
        return RuntimeHelper.requireNonNull(constants$341.pthread_mutex_trylock$MH,"pthread_mutex_trylock");
    }
    public static int pthread_mutex_trylock ( Addressable __mutex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$341.pthread_mutex_trylock$MH, "pthread_mutex_trylock");
        try {
            return (int)mh$.invokeExact(__mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_mutex_lock$MH() {
        return RuntimeHelper.requireNonNull(constants$342.pthread_mutex_lock$MH,"pthread_mutex_lock");
    }
    public static int pthread_mutex_lock ( Addressable __mutex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$342.pthread_mutex_lock$MH, "pthread_mutex_lock");
        try {
            return (int)mh$.invokeExact(__mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_mutex_timedlock$MH() {
        return RuntimeHelper.requireNonNull(constants$342.pthread_mutex_timedlock$MH,"pthread_mutex_timedlock");
    }
    public static int pthread_mutex_timedlock ( Addressable __mutex,  Addressable __abstime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$342.pthread_mutex_timedlock$MH, "pthread_mutex_timedlock");
        try {
            return (int)mh$.invokeExact(__mutex, __abstime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_mutex_unlock$MH() {
        return RuntimeHelper.requireNonNull(constants$342.pthread_mutex_unlock$MH,"pthread_mutex_unlock");
    }
    public static int pthread_mutex_unlock ( Addressable __mutex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$342.pthread_mutex_unlock$MH, "pthread_mutex_unlock");
        try {
            return (int)mh$.invokeExact(__mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_mutex_getprioceiling$MH() {
        return RuntimeHelper.requireNonNull(constants$342.pthread_mutex_getprioceiling$MH,"pthread_mutex_getprioceiling");
    }
    public static int pthread_mutex_getprioceiling ( Addressable __mutex,  Addressable __prioceiling) {
        var mh$ = RuntimeHelper.requireNonNull(constants$342.pthread_mutex_getprioceiling$MH, "pthread_mutex_getprioceiling");
        try {
            return (int)mh$.invokeExact(__mutex, __prioceiling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_mutex_setprioceiling$MH() {
        return RuntimeHelper.requireNonNull(constants$342.pthread_mutex_setprioceiling$MH,"pthread_mutex_setprioceiling");
    }
    public static int pthread_mutex_setprioceiling ( Addressable __mutex,  int __prioceiling,  Addressable __old_ceiling) {
        var mh$ = RuntimeHelper.requireNonNull(constants$342.pthread_mutex_setprioceiling$MH, "pthread_mutex_setprioceiling");
        try {
            return (int)mh$.invokeExact(__mutex, __prioceiling, __old_ceiling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_mutex_consistent$MH() {
        return RuntimeHelper.requireNonNull(constants$342.pthread_mutex_consistent$MH,"pthread_mutex_consistent");
    }
    public static int pthread_mutex_consistent ( Addressable __mutex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$342.pthread_mutex_consistent$MH, "pthread_mutex_consistent");
        try {
            return (int)mh$.invokeExact(__mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_mutexattr_init$MH() {
        return RuntimeHelper.requireNonNull(constants$343.pthread_mutexattr_init$MH,"pthread_mutexattr_init");
    }
    public static int pthread_mutexattr_init ( Addressable __attr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$343.pthread_mutexattr_init$MH, "pthread_mutexattr_init");
        try {
            return (int)mh$.invokeExact(__attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_mutexattr_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$343.pthread_mutexattr_destroy$MH,"pthread_mutexattr_destroy");
    }
    public static int pthread_mutexattr_destroy ( Addressable __attr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$343.pthread_mutexattr_destroy$MH, "pthread_mutexattr_destroy");
        try {
            return (int)mh$.invokeExact(__attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_mutexattr_getpshared$MH() {
        return RuntimeHelper.requireNonNull(constants$343.pthread_mutexattr_getpshared$MH,"pthread_mutexattr_getpshared");
    }
    public static int pthread_mutexattr_getpshared ( Addressable __attr,  Addressable __pshared) {
        var mh$ = RuntimeHelper.requireNonNull(constants$343.pthread_mutexattr_getpshared$MH, "pthread_mutexattr_getpshared");
        try {
            return (int)mh$.invokeExact(__attr, __pshared);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_mutexattr_setpshared$MH() {
        return RuntimeHelper.requireNonNull(constants$343.pthread_mutexattr_setpshared$MH,"pthread_mutexattr_setpshared");
    }
    public static int pthread_mutexattr_setpshared ( Addressable __attr,  int __pshared) {
        var mh$ = RuntimeHelper.requireNonNull(constants$343.pthread_mutexattr_setpshared$MH, "pthread_mutexattr_setpshared");
        try {
            return (int)mh$.invokeExact(__attr, __pshared);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_mutexattr_gettype$MH() {
        return RuntimeHelper.requireNonNull(constants$343.pthread_mutexattr_gettype$MH,"pthread_mutexattr_gettype");
    }
    public static int pthread_mutexattr_gettype ( Addressable __attr,  Addressable __kind) {
        var mh$ = RuntimeHelper.requireNonNull(constants$343.pthread_mutexattr_gettype$MH, "pthread_mutexattr_gettype");
        try {
            return (int)mh$.invokeExact(__attr, __kind);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_mutexattr_settype$MH() {
        return RuntimeHelper.requireNonNull(constants$343.pthread_mutexattr_settype$MH,"pthread_mutexattr_settype");
    }
    public static int pthread_mutexattr_settype ( Addressable __attr,  int __kind) {
        var mh$ = RuntimeHelper.requireNonNull(constants$343.pthread_mutexattr_settype$MH, "pthread_mutexattr_settype");
        try {
            return (int)mh$.invokeExact(__attr, __kind);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_mutexattr_getprotocol$MH() {
        return RuntimeHelper.requireNonNull(constants$344.pthread_mutexattr_getprotocol$MH,"pthread_mutexattr_getprotocol");
    }
    public static int pthread_mutexattr_getprotocol ( Addressable __attr,  Addressable __protocol) {
        var mh$ = RuntimeHelper.requireNonNull(constants$344.pthread_mutexattr_getprotocol$MH, "pthread_mutexattr_getprotocol");
        try {
            return (int)mh$.invokeExact(__attr, __protocol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_mutexattr_setprotocol$MH() {
        return RuntimeHelper.requireNonNull(constants$344.pthread_mutexattr_setprotocol$MH,"pthread_mutexattr_setprotocol");
    }
    public static int pthread_mutexattr_setprotocol ( Addressable __attr,  int __protocol) {
        var mh$ = RuntimeHelper.requireNonNull(constants$344.pthread_mutexattr_setprotocol$MH, "pthread_mutexattr_setprotocol");
        try {
            return (int)mh$.invokeExact(__attr, __protocol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_mutexattr_getprioceiling$MH() {
        return RuntimeHelper.requireNonNull(constants$344.pthread_mutexattr_getprioceiling$MH,"pthread_mutexattr_getprioceiling");
    }
    public static int pthread_mutexattr_getprioceiling ( Addressable __attr,  Addressable __prioceiling) {
        var mh$ = RuntimeHelper.requireNonNull(constants$344.pthread_mutexattr_getprioceiling$MH, "pthread_mutexattr_getprioceiling");
        try {
            return (int)mh$.invokeExact(__attr, __prioceiling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_mutexattr_setprioceiling$MH() {
        return RuntimeHelper.requireNonNull(constants$344.pthread_mutexattr_setprioceiling$MH,"pthread_mutexattr_setprioceiling");
    }
    public static int pthread_mutexattr_setprioceiling ( Addressable __attr,  int __prioceiling) {
        var mh$ = RuntimeHelper.requireNonNull(constants$344.pthread_mutexattr_setprioceiling$MH, "pthread_mutexattr_setprioceiling");
        try {
            return (int)mh$.invokeExact(__attr, __prioceiling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_mutexattr_getrobust$MH() {
        return RuntimeHelper.requireNonNull(constants$344.pthread_mutexattr_getrobust$MH,"pthread_mutexattr_getrobust");
    }
    public static int pthread_mutexattr_getrobust ( Addressable __attr,  Addressable __robustness) {
        var mh$ = RuntimeHelper.requireNonNull(constants$344.pthread_mutexattr_getrobust$MH, "pthread_mutexattr_getrobust");
        try {
            return (int)mh$.invokeExact(__attr, __robustness);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_mutexattr_setrobust$MH() {
        return RuntimeHelper.requireNonNull(constants$344.pthread_mutexattr_setrobust$MH,"pthread_mutexattr_setrobust");
    }
    public static int pthread_mutexattr_setrobust ( Addressable __attr,  int __robustness) {
        var mh$ = RuntimeHelper.requireNonNull(constants$344.pthread_mutexattr_setrobust$MH, "pthread_mutexattr_setrobust");
        try {
            return (int)mh$.invokeExact(__attr, __robustness);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_rwlock_init$MH() {
        return RuntimeHelper.requireNonNull(constants$345.pthread_rwlock_init$MH,"pthread_rwlock_init");
    }
    public static int pthread_rwlock_init ( Addressable __rwlock,  Addressable __attr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$345.pthread_rwlock_init$MH, "pthread_rwlock_init");
        try {
            return (int)mh$.invokeExact(__rwlock, __attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_rwlock_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$345.pthread_rwlock_destroy$MH,"pthread_rwlock_destroy");
    }
    public static int pthread_rwlock_destroy ( Addressable __rwlock) {
        var mh$ = RuntimeHelper.requireNonNull(constants$345.pthread_rwlock_destroy$MH, "pthread_rwlock_destroy");
        try {
            return (int)mh$.invokeExact(__rwlock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_rwlock_rdlock$MH() {
        return RuntimeHelper.requireNonNull(constants$345.pthread_rwlock_rdlock$MH,"pthread_rwlock_rdlock");
    }
    public static int pthread_rwlock_rdlock ( Addressable __rwlock) {
        var mh$ = RuntimeHelper.requireNonNull(constants$345.pthread_rwlock_rdlock$MH, "pthread_rwlock_rdlock");
        try {
            return (int)mh$.invokeExact(__rwlock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_rwlock_tryrdlock$MH() {
        return RuntimeHelper.requireNonNull(constants$345.pthread_rwlock_tryrdlock$MH,"pthread_rwlock_tryrdlock");
    }
    public static int pthread_rwlock_tryrdlock ( Addressable __rwlock) {
        var mh$ = RuntimeHelper.requireNonNull(constants$345.pthread_rwlock_tryrdlock$MH, "pthread_rwlock_tryrdlock");
        try {
            return (int)mh$.invokeExact(__rwlock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_rwlock_timedrdlock$MH() {
        return RuntimeHelper.requireNonNull(constants$345.pthread_rwlock_timedrdlock$MH,"pthread_rwlock_timedrdlock");
    }
    public static int pthread_rwlock_timedrdlock ( Addressable __rwlock,  Addressable __abstime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$345.pthread_rwlock_timedrdlock$MH, "pthread_rwlock_timedrdlock");
        try {
            return (int)mh$.invokeExact(__rwlock, __abstime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_rwlock_wrlock$MH() {
        return RuntimeHelper.requireNonNull(constants$345.pthread_rwlock_wrlock$MH,"pthread_rwlock_wrlock");
    }
    public static int pthread_rwlock_wrlock ( Addressable __rwlock) {
        var mh$ = RuntimeHelper.requireNonNull(constants$345.pthread_rwlock_wrlock$MH, "pthread_rwlock_wrlock");
        try {
            return (int)mh$.invokeExact(__rwlock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_rwlock_trywrlock$MH() {
        return RuntimeHelper.requireNonNull(constants$346.pthread_rwlock_trywrlock$MH,"pthread_rwlock_trywrlock");
    }
    public static int pthread_rwlock_trywrlock ( Addressable __rwlock) {
        var mh$ = RuntimeHelper.requireNonNull(constants$346.pthread_rwlock_trywrlock$MH, "pthread_rwlock_trywrlock");
        try {
            return (int)mh$.invokeExact(__rwlock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_rwlock_timedwrlock$MH() {
        return RuntimeHelper.requireNonNull(constants$346.pthread_rwlock_timedwrlock$MH,"pthread_rwlock_timedwrlock");
    }
    public static int pthread_rwlock_timedwrlock ( Addressable __rwlock,  Addressable __abstime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$346.pthread_rwlock_timedwrlock$MH, "pthread_rwlock_timedwrlock");
        try {
            return (int)mh$.invokeExact(__rwlock, __abstime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_rwlock_unlock$MH() {
        return RuntimeHelper.requireNonNull(constants$346.pthread_rwlock_unlock$MH,"pthread_rwlock_unlock");
    }
    public static int pthread_rwlock_unlock ( Addressable __rwlock) {
        var mh$ = RuntimeHelper.requireNonNull(constants$346.pthread_rwlock_unlock$MH, "pthread_rwlock_unlock");
        try {
            return (int)mh$.invokeExact(__rwlock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_rwlockattr_init$MH() {
        return RuntimeHelper.requireNonNull(constants$346.pthread_rwlockattr_init$MH,"pthread_rwlockattr_init");
    }
    public static int pthread_rwlockattr_init ( Addressable __attr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$346.pthread_rwlockattr_init$MH, "pthread_rwlockattr_init");
        try {
            return (int)mh$.invokeExact(__attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_rwlockattr_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$346.pthread_rwlockattr_destroy$MH,"pthread_rwlockattr_destroy");
    }
    public static int pthread_rwlockattr_destroy ( Addressable __attr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$346.pthread_rwlockattr_destroy$MH, "pthread_rwlockattr_destroy");
        try {
            return (int)mh$.invokeExact(__attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_rwlockattr_getpshared$MH() {
        return RuntimeHelper.requireNonNull(constants$346.pthread_rwlockattr_getpshared$MH,"pthread_rwlockattr_getpshared");
    }
    public static int pthread_rwlockattr_getpshared ( Addressable __attr,  Addressable __pshared) {
        var mh$ = RuntimeHelper.requireNonNull(constants$346.pthread_rwlockattr_getpshared$MH, "pthread_rwlockattr_getpshared");
        try {
            return (int)mh$.invokeExact(__attr, __pshared);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_rwlockattr_setpshared$MH() {
        return RuntimeHelper.requireNonNull(constants$347.pthread_rwlockattr_setpshared$MH,"pthread_rwlockattr_setpshared");
    }
    public static int pthread_rwlockattr_setpshared ( Addressable __attr,  int __pshared) {
        var mh$ = RuntimeHelper.requireNonNull(constants$347.pthread_rwlockattr_setpshared$MH, "pthread_rwlockattr_setpshared");
        try {
            return (int)mh$.invokeExact(__attr, __pshared);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_rwlockattr_getkind_np$MH() {
        return RuntimeHelper.requireNonNull(constants$347.pthread_rwlockattr_getkind_np$MH,"pthread_rwlockattr_getkind_np");
    }
    public static int pthread_rwlockattr_getkind_np ( Addressable __attr,  Addressable __pref) {
        var mh$ = RuntimeHelper.requireNonNull(constants$347.pthread_rwlockattr_getkind_np$MH, "pthread_rwlockattr_getkind_np");
        try {
            return (int)mh$.invokeExact(__attr, __pref);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_rwlockattr_setkind_np$MH() {
        return RuntimeHelper.requireNonNull(constants$347.pthread_rwlockattr_setkind_np$MH,"pthread_rwlockattr_setkind_np");
    }
    public static int pthread_rwlockattr_setkind_np ( Addressable __attr,  int __pref) {
        var mh$ = RuntimeHelper.requireNonNull(constants$347.pthread_rwlockattr_setkind_np$MH, "pthread_rwlockattr_setkind_np");
        try {
            return (int)mh$.invokeExact(__attr, __pref);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_cond_init$MH() {
        return RuntimeHelper.requireNonNull(constants$347.pthread_cond_init$MH,"pthread_cond_init");
    }
    public static int pthread_cond_init ( Addressable __cond,  Addressable __cond_attr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$347.pthread_cond_init$MH, "pthread_cond_init");
        try {
            return (int)mh$.invokeExact(__cond, __cond_attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_cond_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$347.pthread_cond_destroy$MH,"pthread_cond_destroy");
    }
    public static int pthread_cond_destroy ( Addressable __cond) {
        var mh$ = RuntimeHelper.requireNonNull(constants$347.pthread_cond_destroy$MH, "pthread_cond_destroy");
        try {
            return (int)mh$.invokeExact(__cond);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_cond_signal$MH() {
        return RuntimeHelper.requireNonNull(constants$347.pthread_cond_signal$MH,"pthread_cond_signal");
    }
    public static int pthread_cond_signal ( Addressable __cond) {
        var mh$ = RuntimeHelper.requireNonNull(constants$347.pthread_cond_signal$MH, "pthread_cond_signal");
        try {
            return (int)mh$.invokeExact(__cond);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_cond_broadcast$MH() {
        return RuntimeHelper.requireNonNull(constants$348.pthread_cond_broadcast$MH,"pthread_cond_broadcast");
    }
    public static int pthread_cond_broadcast ( Addressable __cond) {
        var mh$ = RuntimeHelper.requireNonNull(constants$348.pthread_cond_broadcast$MH, "pthread_cond_broadcast");
        try {
            return (int)mh$.invokeExact(__cond);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_cond_wait$MH() {
        return RuntimeHelper.requireNonNull(constants$348.pthread_cond_wait$MH,"pthread_cond_wait");
    }
    public static int pthread_cond_wait ( Addressable __cond,  Addressable __mutex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$348.pthread_cond_wait$MH, "pthread_cond_wait");
        try {
            return (int)mh$.invokeExact(__cond, __mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_cond_timedwait$MH() {
        return RuntimeHelper.requireNonNull(constants$348.pthread_cond_timedwait$MH,"pthread_cond_timedwait");
    }
    public static int pthread_cond_timedwait ( Addressable __cond,  Addressable __mutex,  Addressable __abstime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$348.pthread_cond_timedwait$MH, "pthread_cond_timedwait");
        try {
            return (int)mh$.invokeExact(__cond, __mutex, __abstime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_condattr_init$MH() {
        return RuntimeHelper.requireNonNull(constants$348.pthread_condattr_init$MH,"pthread_condattr_init");
    }
    public static int pthread_condattr_init ( Addressable __attr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$348.pthread_condattr_init$MH, "pthread_condattr_init");
        try {
            return (int)mh$.invokeExact(__attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_condattr_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$348.pthread_condattr_destroy$MH,"pthread_condattr_destroy");
    }
    public static int pthread_condattr_destroy ( Addressable __attr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$348.pthread_condattr_destroy$MH, "pthread_condattr_destroy");
        try {
            return (int)mh$.invokeExact(__attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_condattr_getpshared$MH() {
        return RuntimeHelper.requireNonNull(constants$348.pthread_condattr_getpshared$MH,"pthread_condattr_getpshared");
    }
    public static int pthread_condattr_getpshared ( Addressable __attr,  Addressable __pshared) {
        var mh$ = RuntimeHelper.requireNonNull(constants$348.pthread_condattr_getpshared$MH, "pthread_condattr_getpshared");
        try {
            return (int)mh$.invokeExact(__attr, __pshared);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_condattr_setpshared$MH() {
        return RuntimeHelper.requireNonNull(constants$349.pthread_condattr_setpshared$MH,"pthread_condattr_setpshared");
    }
    public static int pthread_condattr_setpshared ( Addressable __attr,  int __pshared) {
        var mh$ = RuntimeHelper.requireNonNull(constants$349.pthread_condattr_setpshared$MH, "pthread_condattr_setpshared");
        try {
            return (int)mh$.invokeExact(__attr, __pshared);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_condattr_getclock$MH() {
        return RuntimeHelper.requireNonNull(constants$349.pthread_condattr_getclock$MH,"pthread_condattr_getclock");
    }
    public static int pthread_condattr_getclock ( Addressable __attr,  Addressable __clock_id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$349.pthread_condattr_getclock$MH, "pthread_condattr_getclock");
        try {
            return (int)mh$.invokeExact(__attr, __clock_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_condattr_setclock$MH() {
        return RuntimeHelper.requireNonNull(constants$349.pthread_condattr_setclock$MH,"pthread_condattr_setclock");
    }
    public static int pthread_condattr_setclock ( Addressable __attr,  int __clock_id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$349.pthread_condattr_setclock$MH, "pthread_condattr_setclock");
        try {
            return (int)mh$.invokeExact(__attr, __clock_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_spin_init$MH() {
        return RuntimeHelper.requireNonNull(constants$349.pthread_spin_init$MH,"pthread_spin_init");
    }
    public static int pthread_spin_init ( Addressable __lock,  int __pshared) {
        var mh$ = RuntimeHelper.requireNonNull(constants$349.pthread_spin_init$MH, "pthread_spin_init");
        try {
            return (int)mh$.invokeExact(__lock, __pshared);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_spin_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$349.pthread_spin_destroy$MH,"pthread_spin_destroy");
    }
    public static int pthread_spin_destroy ( Addressable __lock) {
        var mh$ = RuntimeHelper.requireNonNull(constants$349.pthread_spin_destroy$MH, "pthread_spin_destroy");
        try {
            return (int)mh$.invokeExact(__lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_spin_lock$MH() {
        return RuntimeHelper.requireNonNull(constants$349.pthread_spin_lock$MH,"pthread_spin_lock");
    }
    public static int pthread_spin_lock ( Addressable __lock) {
        var mh$ = RuntimeHelper.requireNonNull(constants$349.pthread_spin_lock$MH, "pthread_spin_lock");
        try {
            return (int)mh$.invokeExact(__lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_spin_trylock$MH() {
        return RuntimeHelper.requireNonNull(constants$350.pthread_spin_trylock$MH,"pthread_spin_trylock");
    }
    public static int pthread_spin_trylock ( Addressable __lock) {
        var mh$ = RuntimeHelper.requireNonNull(constants$350.pthread_spin_trylock$MH, "pthread_spin_trylock");
        try {
            return (int)mh$.invokeExact(__lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_spin_unlock$MH() {
        return RuntimeHelper.requireNonNull(constants$350.pthread_spin_unlock$MH,"pthread_spin_unlock");
    }
    public static int pthread_spin_unlock ( Addressable __lock) {
        var mh$ = RuntimeHelper.requireNonNull(constants$350.pthread_spin_unlock$MH, "pthread_spin_unlock");
        try {
            return (int)mh$.invokeExact(__lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_barrier_init$MH() {
        return RuntimeHelper.requireNonNull(constants$350.pthread_barrier_init$MH,"pthread_barrier_init");
    }
    public static int pthread_barrier_init ( Addressable __barrier,  Addressable __attr,  int __count) {
        var mh$ = RuntimeHelper.requireNonNull(constants$350.pthread_barrier_init$MH, "pthread_barrier_init");
        try {
            return (int)mh$.invokeExact(__barrier, __attr, __count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_barrier_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$350.pthread_barrier_destroy$MH,"pthread_barrier_destroy");
    }
    public static int pthread_barrier_destroy ( Addressable __barrier) {
        var mh$ = RuntimeHelper.requireNonNull(constants$350.pthread_barrier_destroy$MH, "pthread_barrier_destroy");
        try {
            return (int)mh$.invokeExact(__barrier);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_barrier_wait$MH() {
        return RuntimeHelper.requireNonNull(constants$350.pthread_barrier_wait$MH,"pthread_barrier_wait");
    }
    public static int pthread_barrier_wait ( Addressable __barrier) {
        var mh$ = RuntimeHelper.requireNonNull(constants$350.pthread_barrier_wait$MH, "pthread_barrier_wait");
        try {
            return (int)mh$.invokeExact(__barrier);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_barrierattr_init$MH() {
        return RuntimeHelper.requireNonNull(constants$350.pthread_barrierattr_init$MH,"pthread_barrierattr_init");
    }
    public static int pthread_barrierattr_init ( Addressable __attr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$350.pthread_barrierattr_init$MH, "pthread_barrierattr_init");
        try {
            return (int)mh$.invokeExact(__attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_barrierattr_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$351.pthread_barrierattr_destroy$MH,"pthread_barrierattr_destroy");
    }
    public static int pthread_barrierattr_destroy ( Addressable __attr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$351.pthread_barrierattr_destroy$MH, "pthread_barrierattr_destroy");
        try {
            return (int)mh$.invokeExact(__attr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_barrierattr_getpshared$MH() {
        return RuntimeHelper.requireNonNull(constants$351.pthread_barrierattr_getpshared$MH,"pthread_barrierattr_getpshared");
    }
    public static int pthread_barrierattr_getpshared ( Addressable __attr,  Addressable __pshared) {
        var mh$ = RuntimeHelper.requireNonNull(constants$351.pthread_barrierattr_getpshared$MH, "pthread_barrierattr_getpshared");
        try {
            return (int)mh$.invokeExact(__attr, __pshared);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_barrierattr_setpshared$MH() {
        return RuntimeHelper.requireNonNull(constants$351.pthread_barrierattr_setpshared$MH,"pthread_barrierattr_setpshared");
    }
    public static int pthread_barrierattr_setpshared ( Addressable __attr,  int __pshared) {
        var mh$ = RuntimeHelper.requireNonNull(constants$351.pthread_barrierattr_setpshared$MH, "pthread_barrierattr_setpshared");
        try {
            return (int)mh$.invokeExact(__attr, __pshared);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_key_create$MH() {
        return RuntimeHelper.requireNonNull(constants$351.pthread_key_create$MH,"pthread_key_create");
    }
    public static int pthread_key_create ( Addressable __key,  Addressable __destr_function) {
        var mh$ = RuntimeHelper.requireNonNull(constants$351.pthread_key_create$MH, "pthread_key_create");
        try {
            return (int)mh$.invokeExact(__key, __destr_function);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_key_delete$MH() {
        return RuntimeHelper.requireNonNull(constants$352.pthread_key_delete$MH,"pthread_key_delete");
    }
    public static int pthread_key_delete ( int __key) {
        var mh$ = RuntimeHelper.requireNonNull(constants$352.pthread_key_delete$MH, "pthread_key_delete");
        try {
            return (int)mh$.invokeExact(__key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_getspecific$MH() {
        return RuntimeHelper.requireNonNull(constants$352.pthread_getspecific$MH,"pthread_getspecific");
    }
    public static MemoryAddress pthread_getspecific ( int __key) {
        var mh$ = RuntimeHelper.requireNonNull(constants$352.pthread_getspecific$MH, "pthread_getspecific");
        try {
            return (MemoryAddress)mh$.invokeExact(__key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_setspecific$MH() {
        return RuntimeHelper.requireNonNull(constants$352.pthread_setspecific$MH,"pthread_setspecific");
    }
    public static int pthread_setspecific ( int __key,  Addressable __pointer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$352.pthread_setspecific$MH, "pthread_setspecific");
        try {
            return (int)mh$.invokeExact(__key, __pointer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_getcpuclockid$MH() {
        return RuntimeHelper.requireNonNull(constants$352.pthread_getcpuclockid$MH,"pthread_getcpuclockid");
    }
    public static int pthread_getcpuclockid ( long __thread_id,  Addressable __clock_id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$352.pthread_getcpuclockid$MH, "pthread_getcpuclockid");
        try {
            return (int)mh$.invokeExact(__thread_id, __clock_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle pthread_atfork$MH() {
        return RuntimeHelper.requireNonNull(constants$353.pthread_atfork$MH,"pthread_atfork");
    }
    public static int pthread_atfork ( Addressable __prepare,  Addressable __parent,  Addressable __child) {
        var mh$ = RuntimeHelper.requireNonNull(constants$353.pthread_atfork$MH, "pthread_atfork");
        try {
            return (int)mh$.invokeExact(__prepare, __parent, __child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_mutex_init$MH() {
        return RuntimeHelper.requireNonNull(constants$353.g_static_mutex_init$MH,"g_static_mutex_init");
    }
    public static void g_static_mutex_init ( Addressable mutex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$353.g_static_mutex_init$MH, "g_static_mutex_init");
        try {
            mh$.invokeExact(mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_mutex_free$MH() {
        return RuntimeHelper.requireNonNull(constants$354.g_static_mutex_free$MH,"g_static_mutex_free");
    }
    public static void g_static_mutex_free ( Addressable mutex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$354.g_static_mutex_free$MH, "g_static_mutex_free");
        try {
            mh$.invokeExact(mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_mutex_get_mutex_impl$MH() {
        return RuntimeHelper.requireNonNull(constants$354.g_static_mutex_get_mutex_impl$MH,"g_static_mutex_get_mutex_impl");
    }
    public static MemoryAddress g_static_mutex_get_mutex_impl ( Addressable mutex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$354.g_static_mutex_get_mutex_impl$MH, "g_static_mutex_get_mutex_impl");
        try {
            return (MemoryAddress)mh$.invokeExact(mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rec_mutex_init$MH() {
        return RuntimeHelper.requireNonNull(constants$354.g_static_rec_mutex_init$MH,"g_static_rec_mutex_init");
    }
    public static void g_static_rec_mutex_init ( Addressable mutex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$354.g_static_rec_mutex_init$MH, "g_static_rec_mutex_init");
        try {
            mh$.invokeExact(mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rec_mutex_lock$MH() {
        return RuntimeHelper.requireNonNull(constants$354.g_static_rec_mutex_lock$MH,"g_static_rec_mutex_lock");
    }
    public static void g_static_rec_mutex_lock ( Addressable mutex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$354.g_static_rec_mutex_lock$MH, "g_static_rec_mutex_lock");
        try {
            mh$.invokeExact(mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rec_mutex_trylock$MH() {
        return RuntimeHelper.requireNonNull(constants$354.g_static_rec_mutex_trylock$MH,"g_static_rec_mutex_trylock");
    }
    public static int g_static_rec_mutex_trylock ( Addressable mutex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$354.g_static_rec_mutex_trylock$MH, "g_static_rec_mutex_trylock");
        try {
            return (int)mh$.invokeExact(mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rec_mutex_unlock$MH() {
        return RuntimeHelper.requireNonNull(constants$354.g_static_rec_mutex_unlock$MH,"g_static_rec_mutex_unlock");
    }
    public static void g_static_rec_mutex_unlock ( Addressable mutex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$354.g_static_rec_mutex_unlock$MH, "g_static_rec_mutex_unlock");
        try {
            mh$.invokeExact(mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rec_mutex_lock_full$MH() {
        return RuntimeHelper.requireNonNull(constants$355.g_static_rec_mutex_lock_full$MH,"g_static_rec_mutex_lock_full");
    }
    public static void g_static_rec_mutex_lock_full ( Addressable mutex,  int depth) {
        var mh$ = RuntimeHelper.requireNonNull(constants$355.g_static_rec_mutex_lock_full$MH, "g_static_rec_mutex_lock_full");
        try {
            mh$.invokeExact(mutex, depth);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rec_mutex_unlock_full$MH() {
        return RuntimeHelper.requireNonNull(constants$355.g_static_rec_mutex_unlock_full$MH,"g_static_rec_mutex_unlock_full");
    }
    public static int g_static_rec_mutex_unlock_full ( Addressable mutex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$355.g_static_rec_mutex_unlock_full$MH, "g_static_rec_mutex_unlock_full");
        try {
            return (int)mh$.invokeExact(mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rec_mutex_free$MH() {
        return RuntimeHelper.requireNonNull(constants$355.g_static_rec_mutex_free$MH,"g_static_rec_mutex_free");
    }
    public static void g_static_rec_mutex_free ( Addressable mutex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$355.g_static_rec_mutex_free$MH, "g_static_rec_mutex_free");
        try {
            mh$.invokeExact(mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rw_lock_init$MH() {
        return RuntimeHelper.requireNonNull(constants$355.g_static_rw_lock_init$MH,"g_static_rw_lock_init");
    }
    public static void g_static_rw_lock_init ( Addressable lock) {
        var mh$ = RuntimeHelper.requireNonNull(constants$355.g_static_rw_lock_init$MH, "g_static_rw_lock_init");
        try {
            mh$.invokeExact(lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rw_lock_reader_lock$MH() {
        return RuntimeHelper.requireNonNull(constants$355.g_static_rw_lock_reader_lock$MH,"g_static_rw_lock_reader_lock");
    }
    public static void g_static_rw_lock_reader_lock ( Addressable lock) {
        var mh$ = RuntimeHelper.requireNonNull(constants$355.g_static_rw_lock_reader_lock$MH, "g_static_rw_lock_reader_lock");
        try {
            mh$.invokeExact(lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rw_lock_reader_trylock$MH() {
        return RuntimeHelper.requireNonNull(constants$355.g_static_rw_lock_reader_trylock$MH,"g_static_rw_lock_reader_trylock");
    }
    public static int g_static_rw_lock_reader_trylock ( Addressable lock) {
        var mh$ = RuntimeHelper.requireNonNull(constants$355.g_static_rw_lock_reader_trylock$MH, "g_static_rw_lock_reader_trylock");
        try {
            return (int)mh$.invokeExact(lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rw_lock_reader_unlock$MH() {
        return RuntimeHelper.requireNonNull(constants$356.g_static_rw_lock_reader_unlock$MH,"g_static_rw_lock_reader_unlock");
    }
    public static void g_static_rw_lock_reader_unlock ( Addressable lock) {
        var mh$ = RuntimeHelper.requireNonNull(constants$356.g_static_rw_lock_reader_unlock$MH, "g_static_rw_lock_reader_unlock");
        try {
            mh$.invokeExact(lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rw_lock_writer_lock$MH() {
        return RuntimeHelper.requireNonNull(constants$356.g_static_rw_lock_writer_lock$MH,"g_static_rw_lock_writer_lock");
    }
    public static void g_static_rw_lock_writer_lock ( Addressable lock) {
        var mh$ = RuntimeHelper.requireNonNull(constants$356.g_static_rw_lock_writer_lock$MH, "g_static_rw_lock_writer_lock");
        try {
            mh$.invokeExact(lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rw_lock_writer_trylock$MH() {
        return RuntimeHelper.requireNonNull(constants$356.g_static_rw_lock_writer_trylock$MH,"g_static_rw_lock_writer_trylock");
    }
    public static int g_static_rw_lock_writer_trylock ( Addressable lock) {
        var mh$ = RuntimeHelper.requireNonNull(constants$356.g_static_rw_lock_writer_trylock$MH, "g_static_rw_lock_writer_trylock");
        try {
            return (int)mh$.invokeExact(lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rw_lock_writer_unlock$MH() {
        return RuntimeHelper.requireNonNull(constants$356.g_static_rw_lock_writer_unlock$MH,"g_static_rw_lock_writer_unlock");
    }
    public static void g_static_rw_lock_writer_unlock ( Addressable lock) {
        var mh$ = RuntimeHelper.requireNonNull(constants$356.g_static_rw_lock_writer_unlock$MH, "g_static_rw_lock_writer_unlock");
        try {
            mh$.invokeExact(lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_rw_lock_free$MH() {
        return RuntimeHelper.requireNonNull(constants$356.g_static_rw_lock_free$MH,"g_static_rw_lock_free");
    }
    public static void g_static_rw_lock_free ( Addressable lock) {
        var mh$ = RuntimeHelper.requireNonNull(constants$356.g_static_rw_lock_free$MH, "g_static_rw_lock_free");
        try {
            mh$.invokeExact(lock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_private_new$MH() {
        return RuntimeHelper.requireNonNull(constants$356.g_private_new$MH,"g_private_new");
    }
    public static MemoryAddress g_private_new ( Addressable notify) {
        var mh$ = RuntimeHelper.requireNonNull(constants$356.g_private_new$MH, "g_private_new");
        try {
            return (MemoryAddress)mh$.invokeExact(notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_private_init$MH() {
        return RuntimeHelper.requireNonNull(constants$357.g_static_private_init$MH,"g_static_private_init");
    }
    public static void g_static_private_init ( Addressable private_key) {
        var mh$ = RuntimeHelper.requireNonNull(constants$357.g_static_private_init$MH, "g_static_private_init");
        try {
            mh$.invokeExact(private_key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_private_get$MH() {
        return RuntimeHelper.requireNonNull(constants$357.g_static_private_get$MH,"g_static_private_get");
    }
    public static MemoryAddress g_static_private_get ( Addressable private_key) {
        var mh$ = RuntimeHelper.requireNonNull(constants$357.g_static_private_get$MH, "g_static_private_get");
        try {
            return (MemoryAddress)mh$.invokeExact(private_key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_private_set$MH() {
        return RuntimeHelper.requireNonNull(constants$357.g_static_private_set$MH,"g_static_private_set");
    }
    public static void g_static_private_set ( Addressable private_key,  Addressable data,  Addressable notify) {
        var mh$ = RuntimeHelper.requireNonNull(constants$357.g_static_private_set$MH, "g_static_private_set");
        try {
            mh$.invokeExact(private_key, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_static_private_free$MH() {
        return RuntimeHelper.requireNonNull(constants$357.g_static_private_free$MH,"g_static_private_free");
    }
    public static void g_static_private_free ( Addressable private_key) {
        var mh$ = RuntimeHelper.requireNonNull(constants$357.g_static_private_free$MH, "g_static_private_free");
        try {
            mh$.invokeExact(private_key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_once_init_enter_impl$MH() {
        return RuntimeHelper.requireNonNull(constants$357.g_once_init_enter_impl$MH,"g_once_init_enter_impl");
    }
    public static int g_once_init_enter_impl ( Addressable location) {
        var mh$ = RuntimeHelper.requireNonNull(constants$357.g_once_init_enter_impl$MH, "g_once_init_enter_impl");
        try {
            return (int)mh$.invokeExact(location);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_thread_init$MH() {
        return RuntimeHelper.requireNonNull(constants$357.g_thread_init$MH,"g_thread_init");
    }
    public static void g_thread_init ( Addressable vtable) {
        var mh$ = RuntimeHelper.requireNonNull(constants$357.g_thread_init$MH, "g_thread_init");
        try {
            mh$.invokeExact(vtable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_thread_init_with_errorcheck_mutexes$MH() {
        return RuntimeHelper.requireNonNull(constants$358.g_thread_init_with_errorcheck_mutexes$MH,"g_thread_init_with_errorcheck_mutexes");
    }
    public static void g_thread_init_with_errorcheck_mutexes ( Addressable vtable) {
        var mh$ = RuntimeHelper.requireNonNull(constants$358.g_thread_init_with_errorcheck_mutexes$MH, "g_thread_init_with_errorcheck_mutexes");
        try {
            mh$.invokeExact(vtable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_thread_get_initialized$MH() {
        return RuntimeHelper.requireNonNull(constants$358.g_thread_get_initialized$MH,"g_thread_get_initialized");
    }
    public static int g_thread_get_initialized () {
        var mh$ = RuntimeHelper.requireNonNull(constants$358.g_thread_get_initialized$MH, "g_thread_get_initialized");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout g_threads_got_initialized$LAYOUT() {
        return constants$358.g_threads_got_initialized$LAYOUT;
    }
    public static VarHandle g_threads_got_initialized$VH() {
        return constants$358.g_threads_got_initialized$VH;
    }
    public static MemorySegment g_threads_got_initialized$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$358.g_threads_got_initialized$SEGMENT,"g_threads_got_initialized");
    }
    public static int g_threads_got_initialized$get() {
        return (int) constants$358.g_threads_got_initialized$VH.get(RuntimeHelper.requireNonNull(constants$358.g_threads_got_initialized$SEGMENT, "g_threads_got_initialized"));
    }
    public static void g_threads_got_initialized$set( int x) {
        constants$358.g_threads_got_initialized$VH.set(RuntimeHelper.requireNonNull(constants$358.g_threads_got_initialized$SEGMENT, "g_threads_got_initialized"), x);
    }
    public static MethodHandle g_mutex_new$MH() {
        return RuntimeHelper.requireNonNull(constants$358.g_mutex_new$MH,"g_mutex_new");
    }
    public static MemoryAddress g_mutex_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$358.g_mutex_new$MH, "g_mutex_new");
        try {
            return (MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mutex_free$MH() {
        return RuntimeHelper.requireNonNull(constants$358.g_mutex_free$MH,"g_mutex_free");
    }
    public static void g_mutex_free ( Addressable mutex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$358.g_mutex_free$MH, "g_mutex_free");
        try {
            mh$.invokeExact(mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cond_new$MH() {
        return RuntimeHelper.requireNonNull(constants$358.g_cond_new$MH,"g_cond_new");
    }
    public static MemoryAddress g_cond_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$358.g_cond_new$MH, "g_cond_new");
        try {
            return (MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cond_free$MH() {
        return RuntimeHelper.requireNonNull(constants$359.g_cond_free$MH,"g_cond_free");
    }
    public static void g_cond_free ( Addressable cond) {
        var mh$ = RuntimeHelper.requireNonNull(constants$359.g_cond_free$MH, "g_cond_free");
        try {
            mh$.invokeExact(cond);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cond_timed_wait$MH() {
        return RuntimeHelper.requireNonNull(constants$359.g_cond_timed_wait$MH,"g_cond_timed_wait");
    }
    public static int g_cond_timed_wait ( Addressable cond,  Addressable mutex,  Addressable timeval) {
        var mh$ = RuntimeHelper.requireNonNull(constants$359.g_cond_timed_wait$MH, "g_cond_timed_wait");
        try {
            return (int)mh$.invokeExact(cond, mutex, timeval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_autoptr_cleanup_generic_gfree$MH() {
        return RuntimeHelper.requireNonNull(constants$359.g_autoptr_cleanup_generic_gfree$MH,"g_autoptr_cleanup_generic_gfree");
    }
    public static void g_autoptr_cleanup_generic_gfree ( Addressable p) {
        var mh$ = RuntimeHelper.requireNonNull(constants$359.g_autoptr_cleanup_generic_gfree$MH, "g_autoptr_cleanup_generic_gfree");
        try {
            mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_autoptr_cleanup_gstring_free$MH() {
        return RuntimeHelper.requireNonNull(constants$359.g_autoptr_cleanup_gstring_free$MH,"g_autoptr_cleanup_gstring_free");
    }
    public static void g_autoptr_cleanup_gstring_free ( Addressable string) {
        var mh$ = RuntimeHelper.requireNonNull(constants$359.g_autoptr_cleanup_gstring_free$MH, "g_autoptr_cleanup_gstring_free");
        try {
            mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GAsyncQueue_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAsyncQueue_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAsyncQueue_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAsyncQueue_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GAsyncQueue$MH() {
        return RuntimeHelper.requireNonNull(constants$359.glib_autoptr_clear_GAsyncQueue$MH,"glib_autoptr_clear_GAsyncQueue");
    }
    public static void glib_autoptr_clear_GAsyncQueue ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$359.glib_autoptr_clear_GAsyncQueue$MH, "glib_autoptr_clear_GAsyncQueue");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GAsyncQueue$MH() {
        return RuntimeHelper.requireNonNull(constants$359.glib_autoptr_cleanup_GAsyncQueue$MH,"glib_autoptr_cleanup_GAsyncQueue");
    }
    public static void glib_autoptr_cleanup_GAsyncQueue ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$359.glib_autoptr_cleanup_GAsyncQueue$MH, "glib_autoptr_cleanup_GAsyncQueue");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GAsyncQueue$MH() {
        return RuntimeHelper.requireNonNull(constants$360.glib_listautoptr_cleanup_GAsyncQueue$MH,"glib_listautoptr_cleanup_GAsyncQueue");
    }
    public static void glib_listautoptr_cleanup_GAsyncQueue ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$360.glib_listautoptr_cleanup_GAsyncQueue$MH, "glib_listautoptr_cleanup_GAsyncQueue");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GAsyncQueue$MH() {
        return RuntimeHelper.requireNonNull(constants$360.glib_slistautoptr_cleanup_GAsyncQueue$MH,"glib_slistautoptr_cleanup_GAsyncQueue");
    }
    public static void glib_slistautoptr_cleanup_GAsyncQueue ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$360.glib_slistautoptr_cleanup_GAsyncQueue$MH, "glib_slistautoptr_cleanup_GAsyncQueue");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GAsyncQueue$MH() {
        return RuntimeHelper.requireNonNull(constants$360.glib_queueautoptr_cleanup_GAsyncQueue$MH,"glib_queueautoptr_cleanup_GAsyncQueue");
    }
    public static void glib_queueautoptr_cleanup_GAsyncQueue ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$360.glib_queueautoptr_cleanup_GAsyncQueue$MH, "glib_queueautoptr_cleanup_GAsyncQueue");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GBookmarkFile_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GBookmarkFile_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GBookmarkFile_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GBookmarkFile_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GBookmarkFile$MH() {
        return RuntimeHelper.requireNonNull(constants$360.glib_autoptr_clear_GBookmarkFile$MH,"glib_autoptr_clear_GBookmarkFile");
    }
    public static void glib_autoptr_clear_GBookmarkFile ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$360.glib_autoptr_clear_GBookmarkFile$MH, "glib_autoptr_clear_GBookmarkFile");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GBookmarkFile$MH() {
        return RuntimeHelper.requireNonNull(constants$360.glib_autoptr_cleanup_GBookmarkFile$MH,"glib_autoptr_cleanup_GBookmarkFile");
    }
    public static void glib_autoptr_cleanup_GBookmarkFile ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$360.glib_autoptr_cleanup_GBookmarkFile$MH, "glib_autoptr_cleanup_GBookmarkFile");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GBookmarkFile$MH() {
        return RuntimeHelper.requireNonNull(constants$360.glib_listautoptr_cleanup_GBookmarkFile$MH,"glib_listautoptr_cleanup_GBookmarkFile");
    }
    public static void glib_listautoptr_cleanup_GBookmarkFile ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$360.glib_listautoptr_cleanup_GBookmarkFile$MH, "glib_listautoptr_cleanup_GBookmarkFile");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GBookmarkFile$MH() {
        return RuntimeHelper.requireNonNull(constants$361.glib_slistautoptr_cleanup_GBookmarkFile$MH,"glib_slistautoptr_cleanup_GBookmarkFile");
    }
    public static void glib_slistautoptr_cleanup_GBookmarkFile ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$361.glib_slistautoptr_cleanup_GBookmarkFile$MH, "glib_slistautoptr_cleanup_GBookmarkFile");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GBookmarkFile$MH() {
        return RuntimeHelper.requireNonNull(constants$361.glib_queueautoptr_cleanup_GBookmarkFile$MH,"glib_queueautoptr_cleanup_GBookmarkFile");
    }
    public static void glib_queueautoptr_cleanup_GBookmarkFile ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$361.glib_queueautoptr_cleanup_GBookmarkFile$MH, "glib_queueautoptr_cleanup_GBookmarkFile");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GBytes_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GBytes_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GBytes_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GBytes_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GBytes$MH() {
        return RuntimeHelper.requireNonNull(constants$361.glib_autoptr_clear_GBytes$MH,"glib_autoptr_clear_GBytes");
    }
    public static void glib_autoptr_clear_GBytes ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$361.glib_autoptr_clear_GBytes$MH, "glib_autoptr_clear_GBytes");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GBytes$MH() {
        return RuntimeHelper.requireNonNull(constants$361.glib_autoptr_cleanup_GBytes$MH,"glib_autoptr_cleanup_GBytes");
    }
    public static void glib_autoptr_cleanup_GBytes ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$361.glib_autoptr_cleanup_GBytes$MH, "glib_autoptr_cleanup_GBytes");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GBytes$MH() {
        return RuntimeHelper.requireNonNull(constants$361.glib_listautoptr_cleanup_GBytes$MH,"glib_listautoptr_cleanup_GBytes");
    }
    public static void glib_listautoptr_cleanup_GBytes ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$361.glib_listautoptr_cleanup_GBytes$MH, "glib_listautoptr_cleanup_GBytes");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GBytes$MH() {
        return RuntimeHelper.requireNonNull(constants$361.glib_slistautoptr_cleanup_GBytes$MH,"glib_slistautoptr_cleanup_GBytes");
    }
    public static void glib_slistautoptr_cleanup_GBytes ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$361.glib_slistautoptr_cleanup_GBytes$MH, "glib_slistautoptr_cleanup_GBytes");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GBytes$MH() {
        return RuntimeHelper.requireNonNull(constants$362.glib_queueautoptr_cleanup_GBytes$MH,"glib_queueautoptr_cleanup_GBytes");
    }
    public static void glib_queueautoptr_cleanup_GBytes ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$362.glib_queueautoptr_cleanup_GBytes$MH, "glib_queueautoptr_cleanup_GBytes");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GChecksum_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GChecksum_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GChecksum_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GChecksum_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GChecksum$MH() {
        return RuntimeHelper.requireNonNull(constants$362.glib_autoptr_clear_GChecksum$MH,"glib_autoptr_clear_GChecksum");
    }
    public static void glib_autoptr_clear_GChecksum ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$362.glib_autoptr_clear_GChecksum$MH, "glib_autoptr_clear_GChecksum");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GChecksum$MH() {
        return RuntimeHelper.requireNonNull(constants$362.glib_autoptr_cleanup_GChecksum$MH,"glib_autoptr_cleanup_GChecksum");
    }
    public static void glib_autoptr_cleanup_GChecksum ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$362.glib_autoptr_cleanup_GChecksum$MH, "glib_autoptr_cleanup_GChecksum");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GChecksum$MH() {
        return RuntimeHelper.requireNonNull(constants$362.glib_listautoptr_cleanup_GChecksum$MH,"glib_listautoptr_cleanup_GChecksum");
    }
    public static void glib_listautoptr_cleanup_GChecksum ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$362.glib_listautoptr_cleanup_GChecksum$MH, "glib_listautoptr_cleanup_GChecksum");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GChecksum$MH() {
        return RuntimeHelper.requireNonNull(constants$362.glib_slistautoptr_cleanup_GChecksum$MH,"glib_slistautoptr_cleanup_GChecksum");
    }
    public static void glib_slistautoptr_cleanup_GChecksum ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$362.glib_slistautoptr_cleanup_GChecksum$MH, "glib_slistautoptr_cleanup_GChecksum");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GChecksum$MH() {
        return RuntimeHelper.requireNonNull(constants$362.glib_queueautoptr_cleanup_GChecksum$MH,"glib_queueautoptr_cleanup_GChecksum");
    }
    public static void glib_queueautoptr_cleanup_GChecksum ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$362.glib_queueautoptr_cleanup_GChecksum$MH, "glib_queueautoptr_cleanup_GChecksum");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDateTime_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDateTime_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDateTime_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDateTime_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDateTime$MH() {
        return RuntimeHelper.requireNonNull(constants$363.glib_autoptr_clear_GDateTime$MH,"glib_autoptr_clear_GDateTime");
    }
    public static void glib_autoptr_clear_GDateTime ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$363.glib_autoptr_clear_GDateTime$MH, "glib_autoptr_clear_GDateTime");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDateTime$MH() {
        return RuntimeHelper.requireNonNull(constants$363.glib_autoptr_cleanup_GDateTime$MH,"glib_autoptr_cleanup_GDateTime");
    }
    public static void glib_autoptr_cleanup_GDateTime ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$363.glib_autoptr_cleanup_GDateTime$MH, "glib_autoptr_cleanup_GDateTime");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDateTime$MH() {
        return RuntimeHelper.requireNonNull(constants$363.glib_listautoptr_cleanup_GDateTime$MH,"glib_listautoptr_cleanup_GDateTime");
    }
    public static void glib_listautoptr_cleanup_GDateTime ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$363.glib_listautoptr_cleanup_GDateTime$MH, "glib_listautoptr_cleanup_GDateTime");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDateTime$MH() {
        return RuntimeHelper.requireNonNull(constants$363.glib_slistautoptr_cleanup_GDateTime$MH,"glib_slistautoptr_cleanup_GDateTime");
    }
    public static void glib_slistautoptr_cleanup_GDateTime ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$363.glib_slistautoptr_cleanup_GDateTime$MH, "glib_slistautoptr_cleanup_GDateTime");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDateTime$MH() {
        return RuntimeHelper.requireNonNull(constants$363.glib_queueautoptr_cleanup_GDateTime$MH,"glib_queueautoptr_cleanup_GDateTime");
    }
    public static void glib_queueautoptr_cleanup_GDateTime ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$363.glib_queueautoptr_cleanup_GDateTime$MH, "glib_queueautoptr_cleanup_GDateTime");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDate_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDate_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDate_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDate_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDate$MH() {
        return RuntimeHelper.requireNonNull(constants$363.glib_autoptr_clear_GDate$MH,"glib_autoptr_clear_GDate");
    }
    public static void glib_autoptr_clear_GDate ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$363.glib_autoptr_clear_GDate$MH, "glib_autoptr_clear_GDate");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDate$MH() {
        return RuntimeHelper.requireNonNull(constants$364.glib_autoptr_cleanup_GDate$MH,"glib_autoptr_cleanup_GDate");
    }
    public static void glib_autoptr_cleanup_GDate ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$364.glib_autoptr_cleanup_GDate$MH, "glib_autoptr_cleanup_GDate");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDate$MH() {
        return RuntimeHelper.requireNonNull(constants$364.glib_listautoptr_cleanup_GDate$MH,"glib_listautoptr_cleanup_GDate");
    }
    public static void glib_listautoptr_cleanup_GDate ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$364.glib_listautoptr_cleanup_GDate$MH, "glib_listautoptr_cleanup_GDate");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDate$MH() {
        return RuntimeHelper.requireNonNull(constants$364.glib_slistautoptr_cleanup_GDate$MH,"glib_slistautoptr_cleanup_GDate");
    }
    public static void glib_slistautoptr_cleanup_GDate ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$364.glib_slistautoptr_cleanup_GDate$MH, "glib_slistautoptr_cleanup_GDate");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDate$MH() {
        return RuntimeHelper.requireNonNull(constants$364.glib_queueautoptr_cleanup_GDate$MH,"glib_queueautoptr_cleanup_GDate");
    }
    public static void glib_queueautoptr_cleanup_GDate ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$364.glib_queueautoptr_cleanup_GDate$MH, "glib_queueautoptr_cleanup_GDate");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDir_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDir_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDir_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDir_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDir$MH() {
        return RuntimeHelper.requireNonNull(constants$364.glib_autoptr_clear_GDir$MH,"glib_autoptr_clear_GDir");
    }
    public static void glib_autoptr_clear_GDir ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$364.glib_autoptr_clear_GDir$MH, "glib_autoptr_clear_GDir");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDir$MH() {
        return RuntimeHelper.requireNonNull(constants$364.glib_autoptr_cleanup_GDir$MH,"glib_autoptr_cleanup_GDir");
    }
    public static void glib_autoptr_cleanup_GDir ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$364.glib_autoptr_cleanup_GDir$MH, "glib_autoptr_cleanup_GDir");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDir$MH() {
        return RuntimeHelper.requireNonNull(constants$365.glib_listautoptr_cleanup_GDir$MH,"glib_listautoptr_cleanup_GDir");
    }
    public static void glib_listautoptr_cleanup_GDir ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$365.glib_listautoptr_cleanup_GDir$MH, "glib_listautoptr_cleanup_GDir");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDir$MH() {
        return RuntimeHelper.requireNonNull(constants$365.glib_slistautoptr_cleanup_GDir$MH,"glib_slistautoptr_cleanup_GDir");
    }
    public static void glib_slistautoptr_cleanup_GDir ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$365.glib_slistautoptr_cleanup_GDir$MH, "glib_slistautoptr_cleanup_GDir");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDir$MH() {
        return RuntimeHelper.requireNonNull(constants$365.glib_queueautoptr_cleanup_GDir$MH,"glib_queueautoptr_cleanup_GDir");
    }
    public static void glib_queueautoptr_cleanup_GDir ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$365.glib_queueautoptr_cleanup_GDir$MH, "glib_queueautoptr_cleanup_GDir");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GError_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GError_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GError_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GError_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GError$MH() {
        return RuntimeHelper.requireNonNull(constants$365.glib_autoptr_clear_GError$MH,"glib_autoptr_clear_GError");
    }
    public static void glib_autoptr_clear_GError ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$365.glib_autoptr_clear_GError$MH, "glib_autoptr_clear_GError");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GError$MH() {
        return RuntimeHelper.requireNonNull(constants$365.glib_autoptr_cleanup_GError$MH,"glib_autoptr_cleanup_GError");
    }
    public static void glib_autoptr_cleanup_GError ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$365.glib_autoptr_cleanup_GError$MH, "glib_autoptr_cleanup_GError");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GError$MH() {
        return RuntimeHelper.requireNonNull(constants$365.glib_listautoptr_cleanup_GError$MH,"glib_listautoptr_cleanup_GError");
    }
    public static void glib_listautoptr_cleanup_GError ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$365.glib_listautoptr_cleanup_GError$MH, "glib_listautoptr_cleanup_GError");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GError$MH() {
        return RuntimeHelper.requireNonNull(constants$366.glib_slistautoptr_cleanup_GError$MH,"glib_slistautoptr_cleanup_GError");
    }
    public static void glib_slistautoptr_cleanup_GError ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$366.glib_slistautoptr_cleanup_GError$MH, "glib_slistautoptr_cleanup_GError");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GError$MH() {
        return RuntimeHelper.requireNonNull(constants$366.glib_queueautoptr_cleanup_GError$MH,"glib_queueautoptr_cleanup_GError");
    }
    public static void glib_queueautoptr_cleanup_GError ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$366.glib_queueautoptr_cleanup_GError$MH, "glib_queueautoptr_cleanup_GError");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GHashTable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GHashTable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GHashTable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GHashTable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GHashTable$MH() {
        return RuntimeHelper.requireNonNull(constants$366.glib_autoptr_clear_GHashTable$MH,"glib_autoptr_clear_GHashTable");
    }
    public static void glib_autoptr_clear_GHashTable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$366.glib_autoptr_clear_GHashTable$MH, "glib_autoptr_clear_GHashTable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GHashTable$MH() {
        return RuntimeHelper.requireNonNull(constants$366.glib_autoptr_cleanup_GHashTable$MH,"glib_autoptr_cleanup_GHashTable");
    }
    public static void glib_autoptr_cleanup_GHashTable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$366.glib_autoptr_cleanup_GHashTable$MH, "glib_autoptr_cleanup_GHashTable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GHashTable$MH() {
        return RuntimeHelper.requireNonNull(constants$366.glib_listautoptr_cleanup_GHashTable$MH,"glib_listautoptr_cleanup_GHashTable");
    }
    public static void glib_listautoptr_cleanup_GHashTable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$366.glib_listautoptr_cleanup_GHashTable$MH, "glib_listautoptr_cleanup_GHashTable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GHashTable$MH() {
        return RuntimeHelper.requireNonNull(constants$366.glib_slistautoptr_cleanup_GHashTable$MH,"glib_slistautoptr_cleanup_GHashTable");
    }
    public static void glib_slistautoptr_cleanup_GHashTable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$366.glib_slistautoptr_cleanup_GHashTable$MH, "glib_slistautoptr_cleanup_GHashTable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GHashTable$MH() {
        return RuntimeHelper.requireNonNull(constants$367.glib_queueautoptr_cleanup_GHashTable$MH,"glib_queueautoptr_cleanup_GHashTable");
    }
    public static void glib_queueautoptr_cleanup_GHashTable ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$367.glib_queueautoptr_cleanup_GHashTable$MH, "glib_queueautoptr_cleanup_GHashTable");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GHmac_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GHmac_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GHmac_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GHmac_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GHmac$MH() {
        return RuntimeHelper.requireNonNull(constants$367.glib_autoptr_clear_GHmac$MH,"glib_autoptr_clear_GHmac");
    }
    public static void glib_autoptr_clear_GHmac ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$367.glib_autoptr_clear_GHmac$MH, "glib_autoptr_clear_GHmac");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GHmac$MH() {
        return RuntimeHelper.requireNonNull(constants$367.glib_autoptr_cleanup_GHmac$MH,"glib_autoptr_cleanup_GHmac");
    }
    public static void glib_autoptr_cleanup_GHmac ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$367.glib_autoptr_cleanup_GHmac$MH, "glib_autoptr_cleanup_GHmac");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GHmac$MH() {
        return RuntimeHelper.requireNonNull(constants$367.glib_listautoptr_cleanup_GHmac$MH,"glib_listautoptr_cleanup_GHmac");
    }
    public static void glib_listautoptr_cleanup_GHmac ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$367.glib_listautoptr_cleanup_GHmac$MH, "glib_listautoptr_cleanup_GHmac");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GHmac$MH() {
        return RuntimeHelper.requireNonNull(constants$367.glib_slistautoptr_cleanup_GHmac$MH,"glib_slistautoptr_cleanup_GHmac");
    }
    public static void glib_slistautoptr_cleanup_GHmac ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$367.glib_slistautoptr_cleanup_GHmac$MH, "glib_slistautoptr_cleanup_GHmac");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GHmac$MH() {
        return RuntimeHelper.requireNonNull(constants$367.glib_queueautoptr_cleanup_GHmac$MH,"glib_queueautoptr_cleanup_GHmac");
    }
    public static void glib_queueautoptr_cleanup_GHmac ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$367.glib_queueautoptr_cleanup_GHmac$MH, "glib_queueautoptr_cleanup_GHmac");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GIOChannel_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOChannel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOChannel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOChannel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GIOChannel$MH() {
        return RuntimeHelper.requireNonNull(constants$368.glib_autoptr_clear_GIOChannel$MH,"glib_autoptr_clear_GIOChannel");
    }
    public static void glib_autoptr_clear_GIOChannel ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$368.glib_autoptr_clear_GIOChannel$MH, "glib_autoptr_clear_GIOChannel");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GIOChannel$MH() {
        return RuntimeHelper.requireNonNull(constants$368.glib_autoptr_cleanup_GIOChannel$MH,"glib_autoptr_cleanup_GIOChannel");
    }
    public static void glib_autoptr_cleanup_GIOChannel ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$368.glib_autoptr_cleanup_GIOChannel$MH, "glib_autoptr_cleanup_GIOChannel");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GIOChannel$MH() {
        return RuntimeHelper.requireNonNull(constants$368.glib_listautoptr_cleanup_GIOChannel$MH,"glib_listautoptr_cleanup_GIOChannel");
    }
    public static void glib_listautoptr_cleanup_GIOChannel ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$368.glib_listautoptr_cleanup_GIOChannel$MH, "glib_listautoptr_cleanup_GIOChannel");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GIOChannel$MH() {
        return RuntimeHelper.requireNonNull(constants$368.glib_slistautoptr_cleanup_GIOChannel$MH,"glib_slistautoptr_cleanup_GIOChannel");
    }
    public static void glib_slistautoptr_cleanup_GIOChannel ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$368.glib_slistautoptr_cleanup_GIOChannel$MH, "glib_slistautoptr_cleanup_GIOChannel");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GIOChannel$MH() {
        return RuntimeHelper.requireNonNull(constants$368.glib_queueautoptr_cleanup_GIOChannel$MH,"glib_queueautoptr_cleanup_GIOChannel");
    }
    public static void glib_queueautoptr_cleanup_GIOChannel ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$368.glib_queueautoptr_cleanup_GIOChannel$MH, "glib_queueautoptr_cleanup_GIOChannel");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GKeyFile_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GKeyFile_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GKeyFile_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GKeyFile_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GKeyFile$MH() {
        return RuntimeHelper.requireNonNull(constants$368.glib_autoptr_clear_GKeyFile$MH,"glib_autoptr_clear_GKeyFile");
    }
    public static void glib_autoptr_clear_GKeyFile ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$368.glib_autoptr_clear_GKeyFile$MH, "glib_autoptr_clear_GKeyFile");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GKeyFile$MH() {
        return RuntimeHelper.requireNonNull(constants$369.glib_autoptr_cleanup_GKeyFile$MH,"glib_autoptr_cleanup_GKeyFile");
    }
    public static void glib_autoptr_cleanup_GKeyFile ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$369.glib_autoptr_cleanup_GKeyFile$MH, "glib_autoptr_cleanup_GKeyFile");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GKeyFile$MH() {
        return RuntimeHelper.requireNonNull(constants$369.glib_listautoptr_cleanup_GKeyFile$MH,"glib_listautoptr_cleanup_GKeyFile");
    }
    public static void glib_listautoptr_cleanup_GKeyFile ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$369.glib_listautoptr_cleanup_GKeyFile$MH, "glib_listautoptr_cleanup_GKeyFile");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GKeyFile$MH() {
        return RuntimeHelper.requireNonNull(constants$369.glib_slistautoptr_cleanup_GKeyFile$MH,"glib_slistautoptr_cleanup_GKeyFile");
    }
    public static void glib_slistautoptr_cleanup_GKeyFile ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$369.glib_slistautoptr_cleanup_GKeyFile$MH, "glib_slistautoptr_cleanup_GKeyFile");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GKeyFile$MH() {
        return RuntimeHelper.requireNonNull(constants$369.glib_queueautoptr_cleanup_GKeyFile$MH,"glib_queueautoptr_cleanup_GKeyFile");
    }
    public static void glib_queueautoptr_cleanup_GKeyFile ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$369.glib_queueautoptr_cleanup_GKeyFile$MH, "glib_queueautoptr_cleanup_GKeyFile");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GList_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GList_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GList_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GList_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GList$MH() {
        return RuntimeHelper.requireNonNull(constants$369.glib_autoptr_clear_GList$MH,"glib_autoptr_clear_GList");
    }
    public static void glib_autoptr_clear_GList ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$369.glib_autoptr_clear_GList$MH, "glib_autoptr_clear_GList");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GList$MH() {
        return RuntimeHelper.requireNonNull(constants$369.glib_autoptr_cleanup_GList$MH,"glib_autoptr_cleanup_GList");
    }
    public static void glib_autoptr_cleanup_GList ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$369.glib_autoptr_cleanup_GList$MH, "glib_autoptr_cleanup_GList");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GList$MH() {
        return RuntimeHelper.requireNonNull(constants$370.glib_listautoptr_cleanup_GList$MH,"glib_listautoptr_cleanup_GList");
    }
    public static void glib_listautoptr_cleanup_GList ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$370.glib_listautoptr_cleanup_GList$MH, "glib_listautoptr_cleanup_GList");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GList$MH() {
        return RuntimeHelper.requireNonNull(constants$370.glib_slistautoptr_cleanup_GList$MH,"glib_slistautoptr_cleanup_GList");
    }
    public static void glib_slistautoptr_cleanup_GList ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$370.glib_slistautoptr_cleanup_GList$MH, "glib_slistautoptr_cleanup_GList");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GList$MH() {
        return RuntimeHelper.requireNonNull(constants$370.glib_queueautoptr_cleanup_GList$MH,"glib_queueautoptr_cleanup_GList");
    }
    public static void glib_queueautoptr_cleanup_GList ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$370.glib_queueautoptr_cleanup_GList$MH, "glib_queueautoptr_cleanup_GList");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GArray_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GArray_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GArray_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GArray_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GArray$MH() {
        return RuntimeHelper.requireNonNull(constants$370.glib_autoptr_clear_GArray$MH,"glib_autoptr_clear_GArray");
    }
    public static void glib_autoptr_clear_GArray ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$370.glib_autoptr_clear_GArray$MH, "glib_autoptr_clear_GArray");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GArray$MH() {
        return RuntimeHelper.requireNonNull(constants$370.glib_autoptr_cleanup_GArray$MH,"glib_autoptr_cleanup_GArray");
    }
    public static void glib_autoptr_cleanup_GArray ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$370.glib_autoptr_cleanup_GArray$MH, "glib_autoptr_cleanup_GArray");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GArray$MH() {
        return RuntimeHelper.requireNonNull(constants$370.glib_listautoptr_cleanup_GArray$MH,"glib_listautoptr_cleanup_GArray");
    }
    public static void glib_listautoptr_cleanup_GArray ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$370.glib_listautoptr_cleanup_GArray$MH, "glib_listautoptr_cleanup_GArray");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GArray$MH() {
        return RuntimeHelper.requireNonNull(constants$371.glib_slistautoptr_cleanup_GArray$MH,"glib_slistautoptr_cleanup_GArray");
    }
    public static void glib_slistautoptr_cleanup_GArray ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$371.glib_slistautoptr_cleanup_GArray$MH, "glib_slistautoptr_cleanup_GArray");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GArray$MH() {
        return RuntimeHelper.requireNonNull(constants$371.glib_queueautoptr_cleanup_GArray$MH,"glib_queueautoptr_cleanup_GArray");
    }
    public static void glib_queueautoptr_cleanup_GArray ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$371.glib_queueautoptr_cleanup_GArray$MH, "glib_queueautoptr_cleanup_GArray");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GPtrArray_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPtrArray_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPtrArray_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPtrArray_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GPtrArray$MH() {
        return RuntimeHelper.requireNonNull(constants$371.glib_autoptr_clear_GPtrArray$MH,"glib_autoptr_clear_GPtrArray");
    }
    public static void glib_autoptr_clear_GPtrArray ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$371.glib_autoptr_clear_GPtrArray$MH, "glib_autoptr_clear_GPtrArray");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GPtrArray$MH() {
        return RuntimeHelper.requireNonNull(constants$371.glib_autoptr_cleanup_GPtrArray$MH,"glib_autoptr_cleanup_GPtrArray");
    }
    public static void glib_autoptr_cleanup_GPtrArray ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$371.glib_autoptr_cleanup_GPtrArray$MH, "glib_autoptr_cleanup_GPtrArray");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GPtrArray$MH() {
        return RuntimeHelper.requireNonNull(constants$371.glib_listautoptr_cleanup_GPtrArray$MH,"glib_listautoptr_cleanup_GPtrArray");
    }
    public static void glib_listautoptr_cleanup_GPtrArray ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$371.glib_listautoptr_cleanup_GPtrArray$MH, "glib_listautoptr_cleanup_GPtrArray");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GPtrArray$MH() {
        return RuntimeHelper.requireNonNull(constants$371.glib_slistautoptr_cleanup_GPtrArray$MH,"glib_slistautoptr_cleanup_GPtrArray");
    }
    public static void glib_slistautoptr_cleanup_GPtrArray ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$371.glib_slistautoptr_cleanup_GPtrArray$MH, "glib_slistautoptr_cleanup_GPtrArray");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GPtrArray$MH() {
        return RuntimeHelper.requireNonNull(constants$372.glib_queueautoptr_cleanup_GPtrArray$MH,"glib_queueautoptr_cleanup_GPtrArray");
    }
    public static void glib_queueautoptr_cleanup_GPtrArray ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$372.glib_queueautoptr_cleanup_GPtrArray$MH, "glib_queueautoptr_cleanup_GPtrArray");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GByteArray_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GByteArray_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GByteArray_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GByteArray_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GByteArray$MH() {
        return RuntimeHelper.requireNonNull(constants$372.glib_autoptr_clear_GByteArray$MH,"glib_autoptr_clear_GByteArray");
    }
    public static void glib_autoptr_clear_GByteArray ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$372.glib_autoptr_clear_GByteArray$MH, "glib_autoptr_clear_GByteArray");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GByteArray$MH() {
        return RuntimeHelper.requireNonNull(constants$372.glib_autoptr_cleanup_GByteArray$MH,"glib_autoptr_cleanup_GByteArray");
    }
    public static void glib_autoptr_cleanup_GByteArray ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$372.glib_autoptr_cleanup_GByteArray$MH, "glib_autoptr_cleanup_GByteArray");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GByteArray$MH() {
        return RuntimeHelper.requireNonNull(constants$372.glib_listautoptr_cleanup_GByteArray$MH,"glib_listautoptr_cleanup_GByteArray");
    }
    public static void glib_listautoptr_cleanup_GByteArray ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$372.glib_listautoptr_cleanup_GByteArray$MH, "glib_listautoptr_cleanup_GByteArray");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GByteArray$MH() {
        return RuntimeHelper.requireNonNull(constants$372.glib_slistautoptr_cleanup_GByteArray$MH,"glib_slistautoptr_cleanup_GByteArray");
    }
    public static void glib_slistautoptr_cleanup_GByteArray ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$372.glib_slistautoptr_cleanup_GByteArray$MH, "glib_slistautoptr_cleanup_GByteArray");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GByteArray$MH() {
        return RuntimeHelper.requireNonNull(constants$372.glib_queueautoptr_cleanup_GByteArray$MH,"glib_queueautoptr_cleanup_GByteArray");
    }
    public static void glib_queueautoptr_cleanup_GByteArray ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$372.glib_queueautoptr_cleanup_GByteArray$MH, "glib_queueautoptr_cleanup_GByteArray");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMainContext_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMainContext_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMainContext_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMainContext_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMainContext$MH() {
        return RuntimeHelper.requireNonNull(constants$373.glib_autoptr_clear_GMainContext$MH,"glib_autoptr_clear_GMainContext");
    }
    public static void glib_autoptr_clear_GMainContext ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$373.glib_autoptr_clear_GMainContext$MH, "glib_autoptr_clear_GMainContext");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMainContext$MH() {
        return RuntimeHelper.requireNonNull(constants$373.glib_autoptr_cleanup_GMainContext$MH,"glib_autoptr_cleanup_GMainContext");
    }
    public static void glib_autoptr_cleanup_GMainContext ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$373.glib_autoptr_cleanup_GMainContext$MH, "glib_autoptr_cleanup_GMainContext");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMainContext$MH() {
        return RuntimeHelper.requireNonNull(constants$373.glib_listautoptr_cleanup_GMainContext$MH,"glib_listautoptr_cleanup_GMainContext");
    }
    public static void glib_listautoptr_cleanup_GMainContext ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$373.glib_listautoptr_cleanup_GMainContext$MH, "glib_listautoptr_cleanup_GMainContext");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMainContext$MH() {
        return RuntimeHelper.requireNonNull(constants$373.glib_slistautoptr_cleanup_GMainContext$MH,"glib_slistautoptr_cleanup_GMainContext");
    }
    public static void glib_slistautoptr_cleanup_GMainContext ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$373.glib_slistautoptr_cleanup_GMainContext$MH, "glib_slistautoptr_cleanup_GMainContext");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMainContext$MH() {
        return RuntimeHelper.requireNonNull(constants$373.glib_queueautoptr_cleanup_GMainContext$MH,"glib_queueautoptr_cleanup_GMainContext");
    }
    public static void glib_queueautoptr_cleanup_GMainContext ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$373.glib_queueautoptr_cleanup_GMainContext$MH, "glib_queueautoptr_cleanup_GMainContext");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMainContextPusher_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMainContextPusher_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMainContextPusher_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMainContextPusher_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMainContextPusher$MH() {
        return RuntimeHelper.requireNonNull(constants$373.glib_autoptr_clear_GMainContextPusher$MH,"glib_autoptr_clear_GMainContextPusher");
    }
    public static void glib_autoptr_clear_GMainContextPusher ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$373.glib_autoptr_clear_GMainContextPusher$MH, "glib_autoptr_clear_GMainContextPusher");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMainContextPusher$MH() {
        return RuntimeHelper.requireNonNull(constants$374.glib_autoptr_cleanup_GMainContextPusher$MH,"glib_autoptr_cleanup_GMainContextPusher");
    }
    public static void glib_autoptr_cleanup_GMainContextPusher ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$374.glib_autoptr_cleanup_GMainContextPusher$MH, "glib_autoptr_cleanup_GMainContextPusher");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMainContextPusher$MH() {
        return RuntimeHelper.requireNonNull(constants$374.glib_listautoptr_cleanup_GMainContextPusher$MH,"glib_listautoptr_cleanup_GMainContextPusher");
    }
    public static void glib_listautoptr_cleanup_GMainContextPusher ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$374.glib_listautoptr_cleanup_GMainContextPusher$MH, "glib_listautoptr_cleanup_GMainContextPusher");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMainContextPusher$MH() {
        return RuntimeHelper.requireNonNull(constants$374.glib_slistautoptr_cleanup_GMainContextPusher$MH,"glib_slistautoptr_cleanup_GMainContextPusher");
    }
    public static void glib_slistautoptr_cleanup_GMainContextPusher ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$374.glib_slistautoptr_cleanup_GMainContextPusher$MH, "glib_slistautoptr_cleanup_GMainContextPusher");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMainContextPusher$MH() {
        return RuntimeHelper.requireNonNull(constants$374.glib_queueautoptr_cleanup_GMainContextPusher$MH,"glib_queueautoptr_cleanup_GMainContextPusher");
    }
    public static void glib_queueautoptr_cleanup_GMainContextPusher ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$374.glib_queueautoptr_cleanup_GMainContextPusher$MH, "glib_queueautoptr_cleanup_GMainContextPusher");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMainLoop_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMainLoop_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMainLoop_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMainLoop_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMainLoop$MH() {
        return RuntimeHelper.requireNonNull(constants$374.glib_autoptr_clear_GMainLoop$MH,"glib_autoptr_clear_GMainLoop");
    }
    public static void glib_autoptr_clear_GMainLoop ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$374.glib_autoptr_clear_GMainLoop$MH, "glib_autoptr_clear_GMainLoop");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMainLoop$MH() {
        return RuntimeHelper.requireNonNull(constants$374.glib_autoptr_cleanup_GMainLoop$MH,"glib_autoptr_cleanup_GMainLoop");
    }
    public static void glib_autoptr_cleanup_GMainLoop ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$374.glib_autoptr_cleanup_GMainLoop$MH, "glib_autoptr_cleanup_GMainLoop");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMainLoop$MH() {
        return RuntimeHelper.requireNonNull(constants$375.glib_listautoptr_cleanup_GMainLoop$MH,"glib_listautoptr_cleanup_GMainLoop");
    }
    public static void glib_listautoptr_cleanup_GMainLoop ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$375.glib_listautoptr_cleanup_GMainLoop$MH, "glib_listautoptr_cleanup_GMainLoop");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMainLoop$MH() {
        return RuntimeHelper.requireNonNull(constants$375.glib_slistautoptr_cleanup_GMainLoop$MH,"glib_slistautoptr_cleanup_GMainLoop");
    }
    public static void glib_slistautoptr_cleanup_GMainLoop ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$375.glib_slistautoptr_cleanup_GMainLoop$MH, "glib_slistautoptr_cleanup_GMainLoop");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMainLoop$MH() {
        return RuntimeHelper.requireNonNull(constants$375.glib_queueautoptr_cleanup_GMainLoop$MH,"glib_queueautoptr_cleanup_GMainLoop");
    }
    public static void glib_queueautoptr_cleanup_GMainLoop ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$375.glib_queueautoptr_cleanup_GMainLoop$MH, "glib_queueautoptr_cleanup_GMainLoop");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSource_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSource_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSource_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSource_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSource$MH() {
        return RuntimeHelper.requireNonNull(constants$375.glib_autoptr_clear_GSource$MH,"glib_autoptr_clear_GSource");
    }
    public static void glib_autoptr_clear_GSource ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$375.glib_autoptr_clear_GSource$MH, "glib_autoptr_clear_GSource");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSource$MH() {
        return RuntimeHelper.requireNonNull(constants$375.glib_autoptr_cleanup_GSource$MH,"glib_autoptr_cleanup_GSource");
    }
    public static void glib_autoptr_cleanup_GSource ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$375.glib_autoptr_cleanup_GSource$MH, "glib_autoptr_cleanup_GSource");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSource$MH() {
        return RuntimeHelper.requireNonNull(constants$375.glib_listautoptr_cleanup_GSource$MH,"glib_listautoptr_cleanup_GSource");
    }
    public static void glib_listautoptr_cleanup_GSource ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$375.glib_listautoptr_cleanup_GSource$MH, "glib_listautoptr_cleanup_GSource");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSource$MH() {
        return RuntimeHelper.requireNonNull(constants$376.glib_slistautoptr_cleanup_GSource$MH,"glib_slistautoptr_cleanup_GSource");
    }
    public static void glib_slistautoptr_cleanup_GSource ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$376.glib_slistautoptr_cleanup_GSource$MH, "glib_slistautoptr_cleanup_GSource");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSource$MH() {
        return RuntimeHelper.requireNonNull(constants$376.glib_queueautoptr_cleanup_GSource$MH,"glib_queueautoptr_cleanup_GSource");
    }
    public static void glib_queueautoptr_cleanup_GSource ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$376.glib_queueautoptr_cleanup_GSource$MH, "glib_queueautoptr_cleanup_GSource");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMappedFile_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMappedFile_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMappedFile_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMappedFile_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMappedFile$MH() {
        return RuntimeHelper.requireNonNull(constants$376.glib_autoptr_clear_GMappedFile$MH,"glib_autoptr_clear_GMappedFile");
    }
    public static void glib_autoptr_clear_GMappedFile ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$376.glib_autoptr_clear_GMappedFile$MH, "glib_autoptr_clear_GMappedFile");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMappedFile$MH() {
        return RuntimeHelper.requireNonNull(constants$376.glib_autoptr_cleanup_GMappedFile$MH,"glib_autoptr_cleanup_GMappedFile");
    }
    public static void glib_autoptr_cleanup_GMappedFile ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$376.glib_autoptr_cleanup_GMappedFile$MH, "glib_autoptr_cleanup_GMappedFile");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMappedFile$MH() {
        return RuntimeHelper.requireNonNull(constants$376.glib_listautoptr_cleanup_GMappedFile$MH,"glib_listautoptr_cleanup_GMappedFile");
    }
    public static void glib_listautoptr_cleanup_GMappedFile ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$376.glib_listautoptr_cleanup_GMappedFile$MH, "glib_listautoptr_cleanup_GMappedFile");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMappedFile$MH() {
        return RuntimeHelper.requireNonNull(constants$376.glib_slistautoptr_cleanup_GMappedFile$MH,"glib_slistautoptr_cleanup_GMappedFile");
    }
    public static void glib_slistautoptr_cleanup_GMappedFile ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$376.glib_slistautoptr_cleanup_GMappedFile$MH, "glib_slistautoptr_cleanup_GMappedFile");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMappedFile$MH() {
        return RuntimeHelper.requireNonNull(constants$377.glib_queueautoptr_cleanup_GMappedFile$MH,"glib_queueautoptr_cleanup_GMappedFile");
    }
    public static void glib_queueautoptr_cleanup_GMappedFile ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$377.glib_queueautoptr_cleanup_GMappedFile$MH, "glib_queueautoptr_cleanup_GMappedFile");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMarkupParseContext_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMarkupParseContext_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMarkupParseContext_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMarkupParseContext_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMarkupParseContext$MH() {
        return RuntimeHelper.requireNonNull(constants$377.glib_autoptr_clear_GMarkupParseContext$MH,"glib_autoptr_clear_GMarkupParseContext");
    }
    public static void glib_autoptr_clear_GMarkupParseContext ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$377.glib_autoptr_clear_GMarkupParseContext$MH, "glib_autoptr_clear_GMarkupParseContext");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMarkupParseContext$MH() {
        return RuntimeHelper.requireNonNull(constants$377.glib_autoptr_cleanup_GMarkupParseContext$MH,"glib_autoptr_cleanup_GMarkupParseContext");
    }
    public static void glib_autoptr_cleanup_GMarkupParseContext ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$377.glib_autoptr_cleanup_GMarkupParseContext$MH, "glib_autoptr_cleanup_GMarkupParseContext");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMarkupParseContext$MH() {
        return RuntimeHelper.requireNonNull(constants$377.glib_listautoptr_cleanup_GMarkupParseContext$MH,"glib_listautoptr_cleanup_GMarkupParseContext");
    }
    public static void glib_listautoptr_cleanup_GMarkupParseContext ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$377.glib_listautoptr_cleanup_GMarkupParseContext$MH, "glib_listautoptr_cleanup_GMarkupParseContext");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMarkupParseContext$MH() {
        return RuntimeHelper.requireNonNull(constants$377.glib_slistautoptr_cleanup_GMarkupParseContext$MH,"glib_slistautoptr_cleanup_GMarkupParseContext");
    }
    public static void glib_slistautoptr_cleanup_GMarkupParseContext ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$377.glib_slistautoptr_cleanup_GMarkupParseContext$MH, "glib_slistautoptr_cleanup_GMarkupParseContext");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMarkupParseContext$MH() {
        return RuntimeHelper.requireNonNull(constants$377.glib_queueautoptr_cleanup_GMarkupParseContext$MH,"glib_queueautoptr_cleanup_GMarkupParseContext");
    }
    public static void glib_queueautoptr_cleanup_GMarkupParseContext ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$377.glib_queueautoptr_cleanup_GMarkupParseContext$MH, "glib_queueautoptr_cleanup_GMarkupParseContext");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GNode_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNode_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNode_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNode_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GNode$MH() {
        return RuntimeHelper.requireNonNull(constants$378.glib_autoptr_clear_GNode$MH,"glib_autoptr_clear_GNode");
    }
    public static void glib_autoptr_clear_GNode ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$378.glib_autoptr_clear_GNode$MH, "glib_autoptr_clear_GNode");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GNode$MH() {
        return RuntimeHelper.requireNonNull(constants$378.glib_autoptr_cleanup_GNode$MH,"glib_autoptr_cleanup_GNode");
    }
    public static void glib_autoptr_cleanup_GNode ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$378.glib_autoptr_cleanup_GNode$MH, "glib_autoptr_cleanup_GNode");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GNode$MH() {
        return RuntimeHelper.requireNonNull(constants$378.glib_listautoptr_cleanup_GNode$MH,"glib_listautoptr_cleanup_GNode");
    }
    public static void glib_listautoptr_cleanup_GNode ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$378.glib_listautoptr_cleanup_GNode$MH, "glib_listautoptr_cleanup_GNode");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GNode$MH() {
        return RuntimeHelper.requireNonNull(constants$378.glib_slistautoptr_cleanup_GNode$MH,"glib_slistautoptr_cleanup_GNode");
    }
    public static void glib_slistautoptr_cleanup_GNode ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$378.glib_slistautoptr_cleanup_GNode$MH, "glib_slistautoptr_cleanup_GNode");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GNode$MH() {
        return RuntimeHelper.requireNonNull(constants$378.glib_queueautoptr_cleanup_GNode$MH,"glib_queueautoptr_cleanup_GNode");
    }
    public static void glib_queueautoptr_cleanup_GNode ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$378.glib_queueautoptr_cleanup_GNode$MH, "glib_queueautoptr_cleanup_GNode");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GOptionContext_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GOptionContext_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GOptionContext_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GOptionContext_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GOptionContext$MH() {
        return RuntimeHelper.requireNonNull(constants$378.glib_autoptr_clear_GOptionContext$MH,"glib_autoptr_clear_GOptionContext");
    }
    public static void glib_autoptr_clear_GOptionContext ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$378.glib_autoptr_clear_GOptionContext$MH, "glib_autoptr_clear_GOptionContext");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GOptionContext$MH() {
        return RuntimeHelper.requireNonNull(constants$379.glib_autoptr_cleanup_GOptionContext$MH,"glib_autoptr_cleanup_GOptionContext");
    }
    public static void glib_autoptr_cleanup_GOptionContext ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$379.glib_autoptr_cleanup_GOptionContext$MH, "glib_autoptr_cleanup_GOptionContext");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GOptionContext$MH() {
        return RuntimeHelper.requireNonNull(constants$379.glib_listautoptr_cleanup_GOptionContext$MH,"glib_listautoptr_cleanup_GOptionContext");
    }
    public static void glib_listautoptr_cleanup_GOptionContext ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$379.glib_listautoptr_cleanup_GOptionContext$MH, "glib_listautoptr_cleanup_GOptionContext");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GOptionContext$MH() {
        return RuntimeHelper.requireNonNull(constants$379.glib_slistautoptr_cleanup_GOptionContext$MH,"glib_slistautoptr_cleanup_GOptionContext");
    }
    public static void glib_slistautoptr_cleanup_GOptionContext ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$379.glib_slistautoptr_cleanup_GOptionContext$MH, "glib_slistautoptr_cleanup_GOptionContext");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GOptionContext$MH() {
        return RuntimeHelper.requireNonNull(constants$379.glib_queueautoptr_cleanup_GOptionContext$MH,"glib_queueautoptr_cleanup_GOptionContext");
    }
    public static void glib_queueautoptr_cleanup_GOptionContext ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$379.glib_queueautoptr_cleanup_GOptionContext$MH, "glib_queueautoptr_cleanup_GOptionContext");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GOptionGroup_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GOptionGroup_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GOptionGroup_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GOptionGroup_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GOptionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$379.glib_autoptr_clear_GOptionGroup$MH,"glib_autoptr_clear_GOptionGroup");
    }
    public static void glib_autoptr_clear_GOptionGroup ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$379.glib_autoptr_clear_GOptionGroup$MH, "glib_autoptr_clear_GOptionGroup");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GOptionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$379.glib_autoptr_cleanup_GOptionGroup$MH,"glib_autoptr_cleanup_GOptionGroup");
    }
    public static void glib_autoptr_cleanup_GOptionGroup ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$379.glib_autoptr_cleanup_GOptionGroup$MH, "glib_autoptr_cleanup_GOptionGroup");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GOptionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$380.glib_listautoptr_cleanup_GOptionGroup$MH,"glib_listautoptr_cleanup_GOptionGroup");
    }
    public static void glib_listautoptr_cleanup_GOptionGroup ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$380.glib_listautoptr_cleanup_GOptionGroup$MH, "glib_listautoptr_cleanup_GOptionGroup");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GOptionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$380.glib_slistautoptr_cleanup_GOptionGroup$MH,"glib_slistautoptr_cleanup_GOptionGroup");
    }
    public static void glib_slistautoptr_cleanup_GOptionGroup ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$380.glib_slistautoptr_cleanup_GOptionGroup$MH, "glib_slistautoptr_cleanup_GOptionGroup");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GOptionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$380.glib_queueautoptr_cleanup_GOptionGroup$MH,"glib_queueautoptr_cleanup_GOptionGroup");
    }
    public static void glib_queueautoptr_cleanup_GOptionGroup ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$380.glib_queueautoptr_cleanup_GOptionGroup$MH, "glib_queueautoptr_cleanup_GOptionGroup");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GPatternSpec_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPatternSpec_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPatternSpec_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPatternSpec_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GPatternSpec$MH() {
        return RuntimeHelper.requireNonNull(constants$380.glib_autoptr_clear_GPatternSpec$MH,"glib_autoptr_clear_GPatternSpec");
    }
    public static void glib_autoptr_clear_GPatternSpec ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$380.glib_autoptr_clear_GPatternSpec$MH, "glib_autoptr_clear_GPatternSpec");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GPatternSpec$MH() {
        return RuntimeHelper.requireNonNull(constants$380.glib_autoptr_cleanup_GPatternSpec$MH,"glib_autoptr_cleanup_GPatternSpec");
    }
    public static void glib_autoptr_cleanup_GPatternSpec ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$380.glib_autoptr_cleanup_GPatternSpec$MH, "glib_autoptr_cleanup_GPatternSpec");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GPatternSpec$MH() {
        return RuntimeHelper.requireNonNull(constants$380.glib_listautoptr_cleanup_GPatternSpec$MH,"glib_listautoptr_cleanup_GPatternSpec");
    }
    public static void glib_listautoptr_cleanup_GPatternSpec ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$380.glib_listautoptr_cleanup_GPatternSpec$MH, "glib_listautoptr_cleanup_GPatternSpec");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GPatternSpec$MH() {
        return RuntimeHelper.requireNonNull(constants$381.glib_slistautoptr_cleanup_GPatternSpec$MH,"glib_slistautoptr_cleanup_GPatternSpec");
    }
    public static void glib_slistautoptr_cleanup_GPatternSpec ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$381.glib_slistautoptr_cleanup_GPatternSpec$MH, "glib_slistautoptr_cleanup_GPatternSpec");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GPatternSpec$MH() {
        return RuntimeHelper.requireNonNull(constants$381.glib_queueautoptr_cleanup_GPatternSpec$MH,"glib_queueautoptr_cleanup_GPatternSpec");
    }
    public static void glib_queueautoptr_cleanup_GPatternSpec ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$381.glib_queueautoptr_cleanup_GPatternSpec$MH, "glib_queueautoptr_cleanup_GPatternSpec");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GQueue_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GQueue_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GQueue_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GQueue_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GQueue$MH() {
        return RuntimeHelper.requireNonNull(constants$381.glib_autoptr_clear_GQueue$MH,"glib_autoptr_clear_GQueue");
    }
    public static void glib_autoptr_clear_GQueue ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$381.glib_autoptr_clear_GQueue$MH, "glib_autoptr_clear_GQueue");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GQueue$MH() {
        return RuntimeHelper.requireNonNull(constants$381.glib_autoptr_cleanup_GQueue$MH,"glib_autoptr_cleanup_GQueue");
    }
    public static void glib_autoptr_cleanup_GQueue ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$381.glib_autoptr_cleanup_GQueue$MH, "glib_autoptr_cleanup_GQueue");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GQueue$MH() {
        return RuntimeHelper.requireNonNull(constants$381.glib_listautoptr_cleanup_GQueue$MH,"glib_listautoptr_cleanup_GQueue");
    }
    public static void glib_listautoptr_cleanup_GQueue ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$381.glib_listautoptr_cleanup_GQueue$MH, "glib_listautoptr_cleanup_GQueue");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GQueue$MH() {
        return RuntimeHelper.requireNonNull(constants$381.glib_slistautoptr_cleanup_GQueue$MH,"glib_slistautoptr_cleanup_GQueue");
    }
    public static void glib_slistautoptr_cleanup_GQueue ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$381.glib_slistautoptr_cleanup_GQueue$MH, "glib_slistautoptr_cleanup_GQueue");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GQueue$MH() {
        return RuntimeHelper.requireNonNull(constants$382.glib_queueautoptr_cleanup_GQueue$MH,"glib_queueautoptr_cleanup_GQueue");
    }
    public static void glib_queueautoptr_cleanup_GQueue ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$382.glib_queueautoptr_cleanup_GQueue$MH, "glib_queueautoptr_cleanup_GQueue");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_auto_cleanup_GQueue$MH() {
        return RuntimeHelper.requireNonNull(constants$382.glib_auto_cleanup_GQueue$MH,"glib_auto_cleanup_GQueue");
    }
    public static void glib_auto_cleanup_GQueue ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$382.glib_auto_cleanup_GQueue$MH, "glib_auto_cleanup_GQueue");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GRand_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRand_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRand_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRand_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GRand$MH() {
        return RuntimeHelper.requireNonNull(constants$382.glib_autoptr_clear_GRand$MH,"glib_autoptr_clear_GRand");
    }
    public static void glib_autoptr_clear_GRand ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$382.glib_autoptr_clear_GRand$MH, "glib_autoptr_clear_GRand");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GRand$MH() {
        return RuntimeHelper.requireNonNull(constants$382.glib_autoptr_cleanup_GRand$MH,"glib_autoptr_cleanup_GRand");
    }
    public static void glib_autoptr_cleanup_GRand ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$382.glib_autoptr_cleanup_GRand$MH, "glib_autoptr_cleanup_GRand");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GRand$MH() {
        return RuntimeHelper.requireNonNull(constants$382.glib_listautoptr_cleanup_GRand$MH,"glib_listautoptr_cleanup_GRand");
    }
    public static void glib_listautoptr_cleanup_GRand ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$382.glib_listautoptr_cleanup_GRand$MH, "glib_listautoptr_cleanup_GRand");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GRand$MH() {
        return RuntimeHelper.requireNonNull(constants$382.glib_slistautoptr_cleanup_GRand$MH,"glib_slistautoptr_cleanup_GRand");
    }
    public static void glib_slistautoptr_cleanup_GRand ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$382.glib_slistautoptr_cleanup_GRand$MH, "glib_slistautoptr_cleanup_GRand");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GRand$MH() {
        return RuntimeHelper.requireNonNull(constants$383.glib_queueautoptr_cleanup_GRand$MH,"glib_queueautoptr_cleanup_GRand");
    }
    public static void glib_queueautoptr_cleanup_GRand ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$383.glib_queueautoptr_cleanup_GRand$MH, "glib_queueautoptr_cleanup_GRand");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GRegex_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRegex_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRegex_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRegex_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GRegex$MH() {
        return RuntimeHelper.requireNonNull(constants$383.glib_autoptr_clear_GRegex$MH,"glib_autoptr_clear_GRegex");
    }
    public static void glib_autoptr_clear_GRegex ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$383.glib_autoptr_clear_GRegex$MH, "glib_autoptr_clear_GRegex");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GRegex$MH() {
        return RuntimeHelper.requireNonNull(constants$383.glib_autoptr_cleanup_GRegex$MH,"glib_autoptr_cleanup_GRegex");
    }
    public static void glib_autoptr_cleanup_GRegex ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$383.glib_autoptr_cleanup_GRegex$MH, "glib_autoptr_cleanup_GRegex");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GRegex$MH() {
        return RuntimeHelper.requireNonNull(constants$383.glib_listautoptr_cleanup_GRegex$MH,"glib_listautoptr_cleanup_GRegex");
    }
    public static void glib_listautoptr_cleanup_GRegex ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$383.glib_listautoptr_cleanup_GRegex$MH, "glib_listautoptr_cleanup_GRegex");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GRegex$MH() {
        return RuntimeHelper.requireNonNull(constants$383.glib_slistautoptr_cleanup_GRegex$MH,"glib_slistautoptr_cleanup_GRegex");
    }
    public static void glib_slistautoptr_cleanup_GRegex ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$383.glib_slistautoptr_cleanup_GRegex$MH, "glib_slistautoptr_cleanup_GRegex");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GRegex$MH() {
        return RuntimeHelper.requireNonNull(constants$383.glib_queueautoptr_cleanup_GRegex$MH,"glib_queueautoptr_cleanup_GRegex");
    }
    public static void glib_queueautoptr_cleanup_GRegex ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$383.glib_queueautoptr_cleanup_GRegex$MH, "glib_queueautoptr_cleanup_GRegex");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMatchInfo_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMatchInfo_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMatchInfo_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMatchInfo_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMatchInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$384.glib_autoptr_clear_GMatchInfo$MH,"glib_autoptr_clear_GMatchInfo");
    }
    public static void glib_autoptr_clear_GMatchInfo ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$384.glib_autoptr_clear_GMatchInfo$MH, "glib_autoptr_clear_GMatchInfo");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMatchInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$384.glib_autoptr_cleanup_GMatchInfo$MH,"glib_autoptr_cleanup_GMatchInfo");
    }
    public static void glib_autoptr_cleanup_GMatchInfo ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$384.glib_autoptr_cleanup_GMatchInfo$MH, "glib_autoptr_cleanup_GMatchInfo");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMatchInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$384.glib_listautoptr_cleanup_GMatchInfo$MH,"glib_listautoptr_cleanup_GMatchInfo");
    }
    public static void glib_listautoptr_cleanup_GMatchInfo ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$384.glib_listautoptr_cleanup_GMatchInfo$MH, "glib_listautoptr_cleanup_GMatchInfo");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMatchInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$384.glib_slistautoptr_cleanup_GMatchInfo$MH,"glib_slistautoptr_cleanup_GMatchInfo");
    }
    public static void glib_slistautoptr_cleanup_GMatchInfo ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$384.glib_slistautoptr_cleanup_GMatchInfo$MH, "glib_slistautoptr_cleanup_GMatchInfo");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMatchInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$384.glib_queueautoptr_cleanup_GMatchInfo$MH,"glib_queueautoptr_cleanup_GMatchInfo");
    }
    public static void glib_queueautoptr_cleanup_GMatchInfo ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$384.glib_queueautoptr_cleanup_GMatchInfo$MH, "glib_queueautoptr_cleanup_GMatchInfo");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GScanner_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GScanner_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GScanner_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GScanner_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GScanner$MH() {
        return RuntimeHelper.requireNonNull(constants$384.glib_autoptr_clear_GScanner$MH,"glib_autoptr_clear_GScanner");
    }
    public static void glib_autoptr_clear_GScanner ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$384.glib_autoptr_clear_GScanner$MH, "glib_autoptr_clear_GScanner");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GScanner$MH() {
        return RuntimeHelper.requireNonNull(constants$385.glib_autoptr_cleanup_GScanner$MH,"glib_autoptr_cleanup_GScanner");
    }
    public static void glib_autoptr_cleanup_GScanner ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$385.glib_autoptr_cleanup_GScanner$MH, "glib_autoptr_cleanup_GScanner");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GScanner$MH() {
        return RuntimeHelper.requireNonNull(constants$385.glib_listautoptr_cleanup_GScanner$MH,"glib_listautoptr_cleanup_GScanner");
    }
    public static void glib_listautoptr_cleanup_GScanner ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$385.glib_listautoptr_cleanup_GScanner$MH, "glib_listautoptr_cleanup_GScanner");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GScanner$MH() {
        return RuntimeHelper.requireNonNull(constants$385.glib_slistautoptr_cleanup_GScanner$MH,"glib_slistautoptr_cleanup_GScanner");
    }
    public static void glib_slistautoptr_cleanup_GScanner ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$385.glib_slistautoptr_cleanup_GScanner$MH, "glib_slistautoptr_cleanup_GScanner");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GScanner$MH() {
        return RuntimeHelper.requireNonNull(constants$385.glib_queueautoptr_cleanup_GScanner$MH,"glib_queueautoptr_cleanup_GScanner");
    }
    public static void glib_queueautoptr_cleanup_GScanner ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$385.glib_queueautoptr_cleanup_GScanner$MH, "glib_queueautoptr_cleanup_GScanner");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSequence_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSequence_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSequence_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSequence_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSequence$MH() {
        return RuntimeHelper.requireNonNull(constants$385.glib_autoptr_clear_GSequence$MH,"glib_autoptr_clear_GSequence");
    }
    public static void glib_autoptr_clear_GSequence ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$385.glib_autoptr_clear_GSequence$MH, "glib_autoptr_clear_GSequence");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSequence$MH() {
        return RuntimeHelper.requireNonNull(constants$385.glib_autoptr_cleanup_GSequence$MH,"glib_autoptr_cleanup_GSequence");
    }
    public static void glib_autoptr_cleanup_GSequence ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$385.glib_autoptr_cleanup_GSequence$MH, "glib_autoptr_cleanup_GSequence");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSequence$MH() {
        return RuntimeHelper.requireNonNull(constants$386.glib_listautoptr_cleanup_GSequence$MH,"glib_listautoptr_cleanup_GSequence");
    }
    public static void glib_listautoptr_cleanup_GSequence ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$386.glib_listautoptr_cleanup_GSequence$MH, "glib_listautoptr_cleanup_GSequence");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSequence$MH() {
        return RuntimeHelper.requireNonNull(constants$386.glib_slistautoptr_cleanup_GSequence$MH,"glib_slistautoptr_cleanup_GSequence");
    }
    public static void glib_slistautoptr_cleanup_GSequence ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$386.glib_slistautoptr_cleanup_GSequence$MH, "glib_slistautoptr_cleanup_GSequence");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSequence$MH() {
        return RuntimeHelper.requireNonNull(constants$386.glib_queueautoptr_cleanup_GSequence$MH,"glib_queueautoptr_cleanup_GSequence");
    }
    public static void glib_queueautoptr_cleanup_GSequence ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$386.glib_queueautoptr_cleanup_GSequence$MH, "glib_queueautoptr_cleanup_GSequence");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSList_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSList_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSList_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSList_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSList$MH() {
        return RuntimeHelper.requireNonNull(constants$386.glib_autoptr_clear_GSList$MH,"glib_autoptr_clear_GSList");
    }
    public static void glib_autoptr_clear_GSList ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$386.glib_autoptr_clear_GSList$MH, "glib_autoptr_clear_GSList");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSList$MH() {
        return RuntimeHelper.requireNonNull(constants$386.glib_autoptr_cleanup_GSList$MH,"glib_autoptr_cleanup_GSList");
    }
    public static void glib_autoptr_cleanup_GSList ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$386.glib_autoptr_cleanup_GSList$MH, "glib_autoptr_cleanup_GSList");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSList$MH() {
        return RuntimeHelper.requireNonNull(constants$386.glib_listautoptr_cleanup_GSList$MH,"glib_listautoptr_cleanup_GSList");
    }
    public static void glib_listautoptr_cleanup_GSList ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$386.glib_listautoptr_cleanup_GSList$MH, "glib_listautoptr_cleanup_GSList");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSList$MH() {
        return RuntimeHelper.requireNonNull(constants$387.glib_slistautoptr_cleanup_GSList$MH,"glib_slistautoptr_cleanup_GSList");
    }
    public static void glib_slistautoptr_cleanup_GSList ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$387.glib_slistautoptr_cleanup_GSList$MH, "glib_slistautoptr_cleanup_GSList");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSList$MH() {
        return RuntimeHelper.requireNonNull(constants$387.glib_queueautoptr_cleanup_GSList$MH,"glib_queueautoptr_cleanup_GSList");
    }
    public static void glib_queueautoptr_cleanup_GSList ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$387.glib_queueautoptr_cleanup_GSList$MH, "glib_queueautoptr_cleanup_GSList");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GString_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GString_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GString_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GString_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GString$MH() {
        return RuntimeHelper.requireNonNull(constants$387.glib_autoptr_clear_GString$MH,"glib_autoptr_clear_GString");
    }
    public static void glib_autoptr_clear_GString ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$387.glib_autoptr_clear_GString$MH, "glib_autoptr_clear_GString");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GString$MH() {
        return RuntimeHelper.requireNonNull(constants$387.glib_autoptr_cleanup_GString$MH,"glib_autoptr_cleanup_GString");
    }
    public static void glib_autoptr_cleanup_GString ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$387.glib_autoptr_cleanup_GString$MH, "glib_autoptr_cleanup_GString");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GString$MH() {
        return RuntimeHelper.requireNonNull(constants$387.glib_listautoptr_cleanup_GString$MH,"glib_listautoptr_cleanup_GString");
    }
    public static void glib_listautoptr_cleanup_GString ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$387.glib_listautoptr_cleanup_GString$MH, "glib_listautoptr_cleanup_GString");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GString$MH() {
        return RuntimeHelper.requireNonNull(constants$387.glib_slistautoptr_cleanup_GString$MH,"glib_slistautoptr_cleanup_GString");
    }
    public static void glib_slistautoptr_cleanup_GString ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$387.glib_slistautoptr_cleanup_GString$MH, "glib_slistautoptr_cleanup_GString");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GString$MH() {
        return RuntimeHelper.requireNonNull(constants$388.glib_queueautoptr_cleanup_GString$MH,"glib_queueautoptr_cleanup_GString");
    }
    public static void glib_queueautoptr_cleanup_GString ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$388.glib_queueautoptr_cleanup_GString$MH, "glib_queueautoptr_cleanup_GString");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GStringChunk_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GStringChunk_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GStringChunk_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GStringChunk_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GStringChunk$MH() {
        return RuntimeHelper.requireNonNull(constants$388.glib_autoptr_clear_GStringChunk$MH,"glib_autoptr_clear_GStringChunk");
    }
    public static void glib_autoptr_clear_GStringChunk ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$388.glib_autoptr_clear_GStringChunk$MH, "glib_autoptr_clear_GStringChunk");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GStringChunk$MH() {
        return RuntimeHelper.requireNonNull(constants$388.glib_autoptr_cleanup_GStringChunk$MH,"glib_autoptr_cleanup_GStringChunk");
    }
    public static void glib_autoptr_cleanup_GStringChunk ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$388.glib_autoptr_cleanup_GStringChunk$MH, "glib_autoptr_cleanup_GStringChunk");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GStringChunk$MH() {
        return RuntimeHelper.requireNonNull(constants$388.glib_listautoptr_cleanup_GStringChunk$MH,"glib_listautoptr_cleanup_GStringChunk");
    }
    public static void glib_listautoptr_cleanup_GStringChunk ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$388.glib_listautoptr_cleanup_GStringChunk$MH, "glib_listautoptr_cleanup_GStringChunk");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GStringChunk$MH() {
        return RuntimeHelper.requireNonNull(constants$388.glib_slistautoptr_cleanup_GStringChunk$MH,"glib_slistautoptr_cleanup_GStringChunk");
    }
    public static void glib_slistautoptr_cleanup_GStringChunk ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$388.glib_slistautoptr_cleanup_GStringChunk$MH, "glib_slistautoptr_cleanup_GStringChunk");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GStringChunk$MH() {
        return RuntimeHelper.requireNonNull(constants$388.glib_queueautoptr_cleanup_GStringChunk$MH,"glib_queueautoptr_cleanup_GStringChunk");
    }
    public static void glib_queueautoptr_cleanup_GStringChunk ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$388.glib_queueautoptr_cleanup_GStringChunk$MH, "glib_queueautoptr_cleanup_GStringChunk");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GThread_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThread_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThread_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThread_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GThread$MH() {
        return RuntimeHelper.requireNonNull(constants$389.glib_autoptr_clear_GThread$MH,"glib_autoptr_clear_GThread");
    }
    public static void glib_autoptr_clear_GThread ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$389.glib_autoptr_clear_GThread$MH, "glib_autoptr_clear_GThread");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GThread$MH() {
        return RuntimeHelper.requireNonNull(constants$389.glib_autoptr_cleanup_GThread$MH,"glib_autoptr_cleanup_GThread");
    }
    public static void glib_autoptr_cleanup_GThread ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$389.glib_autoptr_cleanup_GThread$MH, "glib_autoptr_cleanup_GThread");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GThread$MH() {
        return RuntimeHelper.requireNonNull(constants$389.glib_listautoptr_cleanup_GThread$MH,"glib_listautoptr_cleanup_GThread");
    }
    public static void glib_listautoptr_cleanup_GThread ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$389.glib_listautoptr_cleanup_GThread$MH, "glib_listautoptr_cleanup_GThread");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GThread$MH() {
        return RuntimeHelper.requireNonNull(constants$389.glib_slistautoptr_cleanup_GThread$MH,"glib_slistautoptr_cleanup_GThread");
    }
    public static void glib_slistautoptr_cleanup_GThread ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$389.glib_slistautoptr_cleanup_GThread$MH, "glib_slistautoptr_cleanup_GThread");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GThread$MH() {
        return RuntimeHelper.requireNonNull(constants$389.glib_queueautoptr_cleanup_GThread$MH,"glib_queueautoptr_cleanup_GThread");
    }
    public static void glib_queueautoptr_cleanup_GThread ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$389.glib_queueautoptr_cleanup_GThread$MH, "glib_queueautoptr_cleanup_GThread");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_auto_cleanup_GMutex$MH() {
        return RuntimeHelper.requireNonNull(constants$389.glib_auto_cleanup_GMutex$MH,"glib_auto_cleanup_GMutex");
    }
    public static void glib_auto_cleanup_GMutex ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$389.glib_auto_cleanup_GMutex$MH, "glib_auto_cleanup_GMutex");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMutexLocker_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMutexLocker_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMutexLocker_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMutexLocker_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMutexLocker$MH() {
        return RuntimeHelper.requireNonNull(constants$390.glib_autoptr_clear_GMutexLocker$MH,"glib_autoptr_clear_GMutexLocker");
    }
    public static void glib_autoptr_clear_GMutexLocker ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$390.glib_autoptr_clear_GMutexLocker$MH, "glib_autoptr_clear_GMutexLocker");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMutexLocker$MH() {
        return RuntimeHelper.requireNonNull(constants$390.glib_autoptr_cleanup_GMutexLocker$MH,"glib_autoptr_cleanup_GMutexLocker");
    }
    public static void glib_autoptr_cleanup_GMutexLocker ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$390.glib_autoptr_cleanup_GMutexLocker$MH, "glib_autoptr_cleanup_GMutexLocker");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMutexLocker$MH() {
        return RuntimeHelper.requireNonNull(constants$390.glib_listautoptr_cleanup_GMutexLocker$MH,"glib_listautoptr_cleanup_GMutexLocker");
    }
    public static void glib_listautoptr_cleanup_GMutexLocker ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$390.glib_listautoptr_cleanup_GMutexLocker$MH, "glib_listautoptr_cleanup_GMutexLocker");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMutexLocker$MH() {
        return RuntimeHelper.requireNonNull(constants$390.glib_slistautoptr_cleanup_GMutexLocker$MH,"glib_slistautoptr_cleanup_GMutexLocker");
    }
    public static void glib_slistautoptr_cleanup_GMutexLocker ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$390.glib_slistautoptr_cleanup_GMutexLocker$MH, "glib_slistautoptr_cleanup_GMutexLocker");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMutexLocker$MH() {
        return RuntimeHelper.requireNonNull(constants$390.glib_queueautoptr_cleanup_GMutexLocker$MH,"glib_queueautoptr_cleanup_GMutexLocker");
    }
    public static void glib_queueautoptr_cleanup_GMutexLocker ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$390.glib_queueautoptr_cleanup_GMutexLocker$MH, "glib_queueautoptr_cleanup_GMutexLocker");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GRecMutexLocker_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRecMutexLocker_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRecMutexLocker_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRecMutexLocker_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GRecMutexLocker$MH() {
        return RuntimeHelper.requireNonNull(constants$390.glib_autoptr_clear_GRecMutexLocker$MH,"glib_autoptr_clear_GRecMutexLocker");
    }
    public static void glib_autoptr_clear_GRecMutexLocker ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$390.glib_autoptr_clear_GRecMutexLocker$MH, "glib_autoptr_clear_GRecMutexLocker");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GRecMutexLocker$MH() {
        return RuntimeHelper.requireNonNull(constants$391.glib_autoptr_cleanup_GRecMutexLocker$MH,"glib_autoptr_cleanup_GRecMutexLocker");
    }
    public static void glib_autoptr_cleanup_GRecMutexLocker ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$391.glib_autoptr_cleanup_GRecMutexLocker$MH, "glib_autoptr_cleanup_GRecMutexLocker");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GRecMutexLocker$MH() {
        return RuntimeHelper.requireNonNull(constants$391.glib_listautoptr_cleanup_GRecMutexLocker$MH,"glib_listautoptr_cleanup_GRecMutexLocker");
    }
    public static void glib_listautoptr_cleanup_GRecMutexLocker ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$391.glib_listautoptr_cleanup_GRecMutexLocker$MH, "glib_listautoptr_cleanup_GRecMutexLocker");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GRecMutexLocker$MH() {
        return RuntimeHelper.requireNonNull(constants$391.glib_slistautoptr_cleanup_GRecMutexLocker$MH,"glib_slistautoptr_cleanup_GRecMutexLocker");
    }
    public static void glib_slistautoptr_cleanup_GRecMutexLocker ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$391.glib_slistautoptr_cleanup_GRecMutexLocker$MH, "glib_slistautoptr_cleanup_GRecMutexLocker");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GRecMutexLocker$MH() {
        return RuntimeHelper.requireNonNull(constants$391.glib_queueautoptr_cleanup_GRecMutexLocker$MH,"glib_queueautoptr_cleanup_GRecMutexLocker");
    }
    public static void glib_queueautoptr_cleanup_GRecMutexLocker ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$391.glib_queueautoptr_cleanup_GRecMutexLocker$MH, "glib_queueautoptr_cleanup_GRecMutexLocker");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GRWLockWriterLocker_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRWLockWriterLocker_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRWLockWriterLocker_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRWLockWriterLocker_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GRWLockWriterLocker$MH() {
        return RuntimeHelper.requireNonNull(constants$391.glib_autoptr_clear_GRWLockWriterLocker$MH,"glib_autoptr_clear_GRWLockWriterLocker");
    }
    public static void glib_autoptr_clear_GRWLockWriterLocker ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$391.glib_autoptr_clear_GRWLockWriterLocker$MH, "glib_autoptr_clear_GRWLockWriterLocker");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GRWLockWriterLocker$MH() {
        return RuntimeHelper.requireNonNull(constants$391.glib_autoptr_cleanup_GRWLockWriterLocker$MH,"glib_autoptr_cleanup_GRWLockWriterLocker");
    }
    public static void glib_autoptr_cleanup_GRWLockWriterLocker ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$391.glib_autoptr_cleanup_GRWLockWriterLocker$MH, "glib_autoptr_cleanup_GRWLockWriterLocker");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GRWLockWriterLocker$MH() {
        return RuntimeHelper.requireNonNull(constants$392.glib_listautoptr_cleanup_GRWLockWriterLocker$MH,"glib_listautoptr_cleanup_GRWLockWriterLocker");
    }
    public static void glib_listautoptr_cleanup_GRWLockWriterLocker ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$392.glib_listautoptr_cleanup_GRWLockWriterLocker$MH, "glib_listautoptr_cleanup_GRWLockWriterLocker");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GRWLockWriterLocker$MH() {
        return RuntimeHelper.requireNonNull(constants$392.glib_slistautoptr_cleanup_GRWLockWriterLocker$MH,"glib_slistautoptr_cleanup_GRWLockWriterLocker");
    }
    public static void glib_slistautoptr_cleanup_GRWLockWriterLocker ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$392.glib_slistautoptr_cleanup_GRWLockWriterLocker$MH, "glib_slistautoptr_cleanup_GRWLockWriterLocker");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GRWLockWriterLocker$MH() {
        return RuntimeHelper.requireNonNull(constants$392.glib_queueautoptr_cleanup_GRWLockWriterLocker$MH,"glib_queueautoptr_cleanup_GRWLockWriterLocker");
    }
    public static void glib_queueautoptr_cleanup_GRWLockWriterLocker ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$392.glib_queueautoptr_cleanup_GRWLockWriterLocker$MH, "glib_queueautoptr_cleanup_GRWLockWriterLocker");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GRWLockReaderLocker_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRWLockReaderLocker_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRWLockReaderLocker_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRWLockReaderLocker_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GRWLockReaderLocker$MH() {
        return RuntimeHelper.requireNonNull(constants$392.glib_autoptr_clear_GRWLockReaderLocker$MH,"glib_autoptr_clear_GRWLockReaderLocker");
    }
    public static void glib_autoptr_clear_GRWLockReaderLocker ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$392.glib_autoptr_clear_GRWLockReaderLocker$MH, "glib_autoptr_clear_GRWLockReaderLocker");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GRWLockReaderLocker$MH() {
        return RuntimeHelper.requireNonNull(constants$392.glib_autoptr_cleanup_GRWLockReaderLocker$MH,"glib_autoptr_cleanup_GRWLockReaderLocker");
    }
    public static void glib_autoptr_cleanup_GRWLockReaderLocker ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$392.glib_autoptr_cleanup_GRWLockReaderLocker$MH, "glib_autoptr_cleanup_GRWLockReaderLocker");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GRWLockReaderLocker$MH() {
        return RuntimeHelper.requireNonNull(constants$392.glib_listautoptr_cleanup_GRWLockReaderLocker$MH,"glib_listautoptr_cleanup_GRWLockReaderLocker");
    }
    public static void glib_listautoptr_cleanup_GRWLockReaderLocker ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$392.glib_listautoptr_cleanup_GRWLockReaderLocker$MH, "glib_listautoptr_cleanup_GRWLockReaderLocker");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GRWLockReaderLocker$MH() {
        return RuntimeHelper.requireNonNull(constants$393.glib_slistautoptr_cleanup_GRWLockReaderLocker$MH,"glib_slistautoptr_cleanup_GRWLockReaderLocker");
    }
    public static void glib_slistautoptr_cleanup_GRWLockReaderLocker ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$393.glib_slistautoptr_cleanup_GRWLockReaderLocker$MH, "glib_slistautoptr_cleanup_GRWLockReaderLocker");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GRWLockReaderLocker$MH() {
        return RuntimeHelper.requireNonNull(constants$393.glib_queueautoptr_cleanup_GRWLockReaderLocker$MH,"glib_queueautoptr_cleanup_GRWLockReaderLocker");
    }
    public static void glib_queueautoptr_cleanup_GRWLockReaderLocker ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$393.glib_queueautoptr_cleanup_GRWLockReaderLocker$MH, "glib_queueautoptr_cleanup_GRWLockReaderLocker");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_auto_cleanup_GCond$MH() {
        return RuntimeHelper.requireNonNull(constants$393.glib_auto_cleanup_GCond$MH,"glib_auto_cleanup_GCond");
    }
    public static void glib_auto_cleanup_GCond ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$393.glib_auto_cleanup_GCond$MH, "glib_auto_cleanup_GCond");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTimer_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTimer_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTimer_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTimer_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTimer$MH() {
        return RuntimeHelper.requireNonNull(constants$393.glib_autoptr_clear_GTimer$MH,"glib_autoptr_clear_GTimer");
    }
    public static void glib_autoptr_clear_GTimer ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$393.glib_autoptr_clear_GTimer$MH, "glib_autoptr_clear_GTimer");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTimer$MH() {
        return RuntimeHelper.requireNonNull(constants$393.glib_autoptr_cleanup_GTimer$MH,"glib_autoptr_cleanup_GTimer");
    }
    public static void glib_autoptr_cleanup_GTimer ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$393.glib_autoptr_cleanup_GTimer$MH, "glib_autoptr_cleanup_GTimer");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTimer$MH() {
        return RuntimeHelper.requireNonNull(constants$393.glib_listautoptr_cleanup_GTimer$MH,"glib_listautoptr_cleanup_GTimer");
    }
    public static void glib_listautoptr_cleanup_GTimer ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$393.glib_listautoptr_cleanup_GTimer$MH, "glib_listautoptr_cleanup_GTimer");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTimer$MH() {
        return RuntimeHelper.requireNonNull(constants$394.glib_slistautoptr_cleanup_GTimer$MH,"glib_slistautoptr_cleanup_GTimer");
    }
    public static void glib_slistautoptr_cleanup_GTimer ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$394.glib_slistautoptr_cleanup_GTimer$MH, "glib_slistautoptr_cleanup_GTimer");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTimer$MH() {
        return RuntimeHelper.requireNonNull(constants$394.glib_queueautoptr_cleanup_GTimer$MH,"glib_queueautoptr_cleanup_GTimer");
    }
    public static void glib_queueautoptr_cleanup_GTimer ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$394.glib_queueautoptr_cleanup_GTimer$MH, "glib_queueautoptr_cleanup_GTimer");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTimeZone_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTimeZone_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTimeZone_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTimeZone_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTimeZone$MH() {
        return RuntimeHelper.requireNonNull(constants$394.glib_autoptr_clear_GTimeZone$MH,"glib_autoptr_clear_GTimeZone");
    }
    public static void glib_autoptr_clear_GTimeZone ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$394.glib_autoptr_clear_GTimeZone$MH, "glib_autoptr_clear_GTimeZone");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTimeZone$MH() {
        return RuntimeHelper.requireNonNull(constants$394.glib_autoptr_cleanup_GTimeZone$MH,"glib_autoptr_cleanup_GTimeZone");
    }
    public static void glib_autoptr_cleanup_GTimeZone ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$394.glib_autoptr_cleanup_GTimeZone$MH, "glib_autoptr_cleanup_GTimeZone");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTimeZone$MH() {
        return RuntimeHelper.requireNonNull(constants$394.glib_listautoptr_cleanup_GTimeZone$MH,"glib_listautoptr_cleanup_GTimeZone");
    }
    public static void glib_listautoptr_cleanup_GTimeZone ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$394.glib_listautoptr_cleanup_GTimeZone$MH, "glib_listautoptr_cleanup_GTimeZone");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTimeZone$MH() {
        return RuntimeHelper.requireNonNull(constants$394.glib_slistautoptr_cleanup_GTimeZone$MH,"glib_slistautoptr_cleanup_GTimeZone");
    }
    public static void glib_slistautoptr_cleanup_GTimeZone ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$394.glib_slistautoptr_cleanup_GTimeZone$MH, "glib_slistautoptr_cleanup_GTimeZone");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTimeZone$MH() {
        return RuntimeHelper.requireNonNull(constants$395.glib_queueautoptr_cleanup_GTimeZone$MH,"glib_queueautoptr_cleanup_GTimeZone");
    }
    public static void glib_queueautoptr_cleanup_GTimeZone ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$395.glib_queueautoptr_cleanup_GTimeZone$MH, "glib_queueautoptr_cleanup_GTimeZone");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTree_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTree_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTree_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTree_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTree$MH() {
        return RuntimeHelper.requireNonNull(constants$395.glib_autoptr_clear_GTree$MH,"glib_autoptr_clear_GTree");
    }
    public static void glib_autoptr_clear_GTree ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$395.glib_autoptr_clear_GTree$MH, "glib_autoptr_clear_GTree");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTree$MH() {
        return RuntimeHelper.requireNonNull(constants$395.glib_autoptr_cleanup_GTree$MH,"glib_autoptr_cleanup_GTree");
    }
    public static void glib_autoptr_cleanup_GTree ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$395.glib_autoptr_cleanup_GTree$MH, "glib_autoptr_cleanup_GTree");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTree$MH() {
        return RuntimeHelper.requireNonNull(constants$395.glib_listautoptr_cleanup_GTree$MH,"glib_listautoptr_cleanup_GTree");
    }
    public static void glib_listautoptr_cleanup_GTree ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$395.glib_listautoptr_cleanup_GTree$MH, "glib_listautoptr_cleanup_GTree");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTree$MH() {
        return RuntimeHelper.requireNonNull(constants$395.glib_slistautoptr_cleanup_GTree$MH,"glib_slistautoptr_cleanup_GTree");
    }
    public static void glib_slistautoptr_cleanup_GTree ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$395.glib_slistautoptr_cleanup_GTree$MH, "glib_slistautoptr_cleanup_GTree");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTree$MH() {
        return RuntimeHelper.requireNonNull(constants$395.glib_queueautoptr_cleanup_GTree$MH,"glib_queueautoptr_cleanup_GTree");
    }
    public static void glib_queueautoptr_cleanup_GTree ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$395.glib_queueautoptr_cleanup_GTree$MH, "glib_queueautoptr_cleanup_GTree");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GVariant_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVariant_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVariant_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVariant_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GVariant$MH() {
        return RuntimeHelper.requireNonNull(constants$396.glib_autoptr_clear_GVariant$MH,"glib_autoptr_clear_GVariant");
    }
    public static void glib_autoptr_clear_GVariant ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$396.glib_autoptr_clear_GVariant$MH, "glib_autoptr_clear_GVariant");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GVariant$MH() {
        return RuntimeHelper.requireNonNull(constants$396.glib_autoptr_cleanup_GVariant$MH,"glib_autoptr_cleanup_GVariant");
    }
    public static void glib_autoptr_cleanup_GVariant ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$396.glib_autoptr_cleanup_GVariant$MH, "glib_autoptr_cleanup_GVariant");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GVariant$MH() {
        return RuntimeHelper.requireNonNull(constants$396.glib_listautoptr_cleanup_GVariant$MH,"glib_listautoptr_cleanup_GVariant");
    }
    public static void glib_listautoptr_cleanup_GVariant ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$396.glib_listautoptr_cleanup_GVariant$MH, "glib_listautoptr_cleanup_GVariant");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GVariant$MH() {
        return RuntimeHelper.requireNonNull(constants$396.glib_slistautoptr_cleanup_GVariant$MH,"glib_slistautoptr_cleanup_GVariant");
    }
    public static void glib_slistautoptr_cleanup_GVariant ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$396.glib_slistautoptr_cleanup_GVariant$MH, "glib_slistautoptr_cleanup_GVariant");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GVariant$MH() {
        return RuntimeHelper.requireNonNull(constants$396.glib_queueautoptr_cleanup_GVariant$MH,"glib_queueautoptr_cleanup_GVariant");
    }
    public static void glib_queueautoptr_cleanup_GVariant ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$396.glib_queueautoptr_cleanup_GVariant$MH, "glib_queueautoptr_cleanup_GVariant");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GVariantBuilder_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVariantBuilder_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVariantBuilder_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVariantBuilder_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GVariantBuilder$MH() {
        return RuntimeHelper.requireNonNull(constants$396.glib_autoptr_clear_GVariantBuilder$MH,"glib_autoptr_clear_GVariantBuilder");
    }
    public static void glib_autoptr_clear_GVariantBuilder ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$396.glib_autoptr_clear_GVariantBuilder$MH, "glib_autoptr_clear_GVariantBuilder");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GVariantBuilder$MH() {
        return RuntimeHelper.requireNonNull(constants$397.glib_autoptr_cleanup_GVariantBuilder$MH,"glib_autoptr_cleanup_GVariantBuilder");
    }
    public static void glib_autoptr_cleanup_GVariantBuilder ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$397.glib_autoptr_cleanup_GVariantBuilder$MH, "glib_autoptr_cleanup_GVariantBuilder");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GVariantBuilder$MH() {
        return RuntimeHelper.requireNonNull(constants$397.glib_listautoptr_cleanup_GVariantBuilder$MH,"glib_listautoptr_cleanup_GVariantBuilder");
    }
    public static void glib_listautoptr_cleanup_GVariantBuilder ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$397.glib_listautoptr_cleanup_GVariantBuilder$MH, "glib_listautoptr_cleanup_GVariantBuilder");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GVariantBuilder$MH() {
        return RuntimeHelper.requireNonNull(constants$397.glib_slistautoptr_cleanup_GVariantBuilder$MH,"glib_slistautoptr_cleanup_GVariantBuilder");
    }
    public static void glib_slistautoptr_cleanup_GVariantBuilder ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$397.glib_slistautoptr_cleanup_GVariantBuilder$MH, "glib_slistautoptr_cleanup_GVariantBuilder");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GVariantBuilder$MH() {
        return RuntimeHelper.requireNonNull(constants$397.glib_queueautoptr_cleanup_GVariantBuilder$MH,"glib_queueautoptr_cleanup_GVariantBuilder");
    }
    public static void glib_queueautoptr_cleanup_GVariantBuilder ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$397.glib_queueautoptr_cleanup_GVariantBuilder$MH, "glib_queueautoptr_cleanup_GVariantBuilder");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_auto_cleanup_GVariantBuilder$MH() {
        return RuntimeHelper.requireNonNull(constants$397.glib_auto_cleanup_GVariantBuilder$MH,"glib_auto_cleanup_GVariantBuilder");
    }
    public static void glib_auto_cleanup_GVariantBuilder ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$397.glib_auto_cleanup_GVariantBuilder$MH, "glib_auto_cleanup_GVariantBuilder");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GVariantIter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVariantIter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVariantIter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVariantIter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GVariantIter$MH() {
        return RuntimeHelper.requireNonNull(constants$397.glib_autoptr_clear_GVariantIter$MH,"glib_autoptr_clear_GVariantIter");
    }
    public static void glib_autoptr_clear_GVariantIter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$397.glib_autoptr_clear_GVariantIter$MH, "glib_autoptr_clear_GVariantIter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GVariantIter$MH() {
        return RuntimeHelper.requireNonNull(constants$398.glib_autoptr_cleanup_GVariantIter$MH,"glib_autoptr_cleanup_GVariantIter");
    }
    public static void glib_autoptr_cleanup_GVariantIter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$398.glib_autoptr_cleanup_GVariantIter$MH, "glib_autoptr_cleanup_GVariantIter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GVariantIter$MH() {
        return RuntimeHelper.requireNonNull(constants$398.glib_listautoptr_cleanup_GVariantIter$MH,"glib_listautoptr_cleanup_GVariantIter");
    }
    public static void glib_listautoptr_cleanup_GVariantIter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$398.glib_listautoptr_cleanup_GVariantIter$MH, "glib_listautoptr_cleanup_GVariantIter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GVariantIter$MH() {
        return RuntimeHelper.requireNonNull(constants$398.glib_slistautoptr_cleanup_GVariantIter$MH,"glib_slistautoptr_cleanup_GVariantIter");
    }
    public static void glib_slistautoptr_cleanup_GVariantIter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$398.glib_slistautoptr_cleanup_GVariantIter$MH, "glib_slistautoptr_cleanup_GVariantIter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GVariantIter$MH() {
        return RuntimeHelper.requireNonNull(constants$398.glib_queueautoptr_cleanup_GVariantIter$MH,"glib_queueautoptr_cleanup_GVariantIter");
    }
    public static void glib_queueautoptr_cleanup_GVariantIter ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$398.glib_queueautoptr_cleanup_GVariantIter$MH, "glib_queueautoptr_cleanup_GVariantIter");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GVariantDict_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVariantDict_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVariantDict_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVariantDict_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GVariantDict$MH() {
        return RuntimeHelper.requireNonNull(constants$398.glib_autoptr_clear_GVariantDict$MH,"glib_autoptr_clear_GVariantDict");
    }
    public static void glib_autoptr_clear_GVariantDict ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$398.glib_autoptr_clear_GVariantDict$MH, "glib_autoptr_clear_GVariantDict");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GVariantDict$MH() {
        return RuntimeHelper.requireNonNull(constants$398.glib_autoptr_cleanup_GVariantDict$MH,"glib_autoptr_cleanup_GVariantDict");
    }
    public static void glib_autoptr_cleanup_GVariantDict ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$398.glib_autoptr_cleanup_GVariantDict$MH, "glib_autoptr_cleanup_GVariantDict");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GVariantDict$MH() {
        return RuntimeHelper.requireNonNull(constants$399.glib_listautoptr_cleanup_GVariantDict$MH,"glib_listautoptr_cleanup_GVariantDict");
    }
    public static void glib_listautoptr_cleanup_GVariantDict ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$399.glib_listautoptr_cleanup_GVariantDict$MH, "glib_listautoptr_cleanup_GVariantDict");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GVariantDict$MH() {
        return RuntimeHelper.requireNonNull(constants$399.glib_slistautoptr_cleanup_GVariantDict$MH,"glib_slistautoptr_cleanup_GVariantDict");
    }
    public static void glib_slistautoptr_cleanup_GVariantDict ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$399.glib_slistautoptr_cleanup_GVariantDict$MH, "glib_slistautoptr_cleanup_GVariantDict");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GVariantDict$MH() {
        return RuntimeHelper.requireNonNull(constants$399.glib_queueautoptr_cleanup_GVariantDict$MH,"glib_queueautoptr_cleanup_GVariantDict");
    }
    public static void glib_queueautoptr_cleanup_GVariantDict ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$399.glib_queueautoptr_cleanup_GVariantDict$MH, "glib_queueautoptr_cleanup_GVariantDict");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_auto_cleanup_GVariantDict$MH() {
        return RuntimeHelper.requireNonNull(constants$399.glib_auto_cleanup_GVariantDict$MH,"glib_auto_cleanup_GVariantDict");
    }
    public static void glib_auto_cleanup_GVariantDict ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$399.glib_auto_cleanup_GVariantDict$MH, "glib_auto_cleanup_GVariantDict");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GVariantType_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVariantType_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVariantType_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVariantType_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GVariantType$MH() {
        return RuntimeHelper.requireNonNull(constants$399.glib_autoptr_clear_GVariantType$MH,"glib_autoptr_clear_GVariantType");
    }
    public static void glib_autoptr_clear_GVariantType ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$399.glib_autoptr_clear_GVariantType$MH, "glib_autoptr_clear_GVariantType");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GVariantType$MH() {
        return RuntimeHelper.requireNonNull(constants$399.glib_autoptr_cleanup_GVariantType$MH,"glib_autoptr_cleanup_GVariantType");
    }
    public static void glib_autoptr_cleanup_GVariantType ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$399.glib_autoptr_cleanup_GVariantType$MH, "glib_autoptr_cleanup_GVariantType");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GVariantType$MH() {
        return RuntimeHelper.requireNonNull(constants$400.glib_listautoptr_cleanup_GVariantType$MH,"glib_listautoptr_cleanup_GVariantType");
    }
    public static void glib_listautoptr_cleanup_GVariantType ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$400.glib_listautoptr_cleanup_GVariantType$MH, "glib_listautoptr_cleanup_GVariantType");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GVariantType$MH() {
        return RuntimeHelper.requireNonNull(constants$400.glib_slistautoptr_cleanup_GVariantType$MH,"glib_slistautoptr_cleanup_GVariantType");
    }
    public static void glib_slistautoptr_cleanup_GVariantType ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$400.glib_slistautoptr_cleanup_GVariantType$MH, "glib_slistautoptr_cleanup_GVariantType");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GVariantType$MH() {
        return RuntimeHelper.requireNonNull(constants$400.glib_queueautoptr_cleanup_GVariantType$MH,"glib_queueautoptr_cleanup_GVariantType");
    }
    public static void glib_queueautoptr_cleanup_GVariantType ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$400.glib_queueautoptr_cleanup_GVariantType$MH, "glib_queueautoptr_cleanup_GVariantType");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_auto_cleanup_GStrv$MH() {
        return RuntimeHelper.requireNonNull(constants$400.glib_auto_cleanup_GStrv$MH,"glib_auto_cleanup_GStrv");
    }
    public static void glib_auto_cleanup_GStrv ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$400.glib_auto_cleanup_GStrv$MH, "glib_auto_cleanup_GStrv");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GRefString_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRefString_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRefString_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRefString_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GRefString$MH() {
        return RuntimeHelper.requireNonNull(constants$400.glib_autoptr_clear_GRefString$MH,"glib_autoptr_clear_GRefString");
    }
    public static void glib_autoptr_clear_GRefString ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$400.glib_autoptr_clear_GRefString$MH, "glib_autoptr_clear_GRefString");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GRefString$MH() {
        return RuntimeHelper.requireNonNull(constants$400.glib_autoptr_cleanup_GRefString$MH,"glib_autoptr_cleanup_GRefString");
    }
    public static void glib_autoptr_cleanup_GRefString ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$400.glib_autoptr_cleanup_GRefString$MH, "glib_autoptr_cleanup_GRefString");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GRefString$MH() {
        return RuntimeHelper.requireNonNull(constants$401.glib_listautoptr_cleanup_GRefString$MH,"glib_listautoptr_cleanup_GRefString");
    }
    public static void glib_listautoptr_cleanup_GRefString ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$401.glib_listautoptr_cleanup_GRefString$MH, "glib_listautoptr_cleanup_GRefString");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GRefString$MH() {
        return RuntimeHelper.requireNonNull(constants$401.glib_slistautoptr_cleanup_GRefString$MH,"glib_slistautoptr_cleanup_GRefString");
    }
    public static void glib_slistautoptr_cleanup_GRefString ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$401.glib_slistautoptr_cleanup_GRefString$MH, "glib_slistautoptr_cleanup_GRefString");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GRefString$MH() {
        return RuntimeHelper.requireNonNull(constants$401.glib_queueautoptr_cleanup_GRefString$MH,"glib_queueautoptr_cleanup_GRefString");
    }
    public static void glib_queueautoptr_cleanup_GRefString ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$401.glib_queueautoptr_cleanup_GRefString$MH, "glib_queueautoptr_cleanup_GRefString");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_TYPE_DEBUG_NONE() {
        return (int)0L;
    }
    public static int G_TYPE_DEBUG_OBJECTS() {
        return (int)1L;
    }
    public static int G_TYPE_DEBUG_SIGNALS() {
        return (int)2L;
    }
    public static int G_TYPE_DEBUG_INSTANCE_COUNT() {
        return (int)4L;
    }
    public static int G_TYPE_DEBUG_MASK() {
        return (int)7L;
    }
    public static MethodHandle g_type_init$MH() {
        return RuntimeHelper.requireNonNull(constants$401.g_type_init$MH,"g_type_init");
    }
    public static void g_type_init () {
        var mh$ = RuntimeHelper.requireNonNull(constants$401.g_type_init$MH, "g_type_init");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_init_with_debug_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$401.g_type_init_with_debug_flags$MH,"g_type_init_with_debug_flags");
    }
    public static void g_type_init_with_debug_flags ( int debug_flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$401.g_type_init_with_debug_flags$MH, "g_type_init_with_debug_flags");
        try {
            mh$.invokeExact(debug_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_name$MH() {
        return RuntimeHelper.requireNonNull(constants$401.g_type_name$MH,"g_type_name");
    }
    public static MemoryAddress g_type_name ( long type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$401.g_type_name$MH, "g_type_name");
        try {
            return (MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_qname$MH() {
        return RuntimeHelper.requireNonNull(constants$402.g_type_qname$MH,"g_type_qname");
    }
    public static int g_type_qname ( long type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$402.g_type_qname$MH, "g_type_qname");
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_from_name$MH() {
        return RuntimeHelper.requireNonNull(constants$402.g_type_from_name$MH,"g_type_from_name");
    }
    public static long g_type_from_name ( Addressable name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$402.g_type_from_name$MH, "g_type_from_name");
        try {
            return (long)mh$.invokeExact(name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$402.g_type_parent$MH,"g_type_parent");
    }
    public static long g_type_parent ( long type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$402.g_type_parent$MH, "g_type_parent");
        try {
            return (long)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$402.g_type_depth$MH,"g_type_depth");
    }
    public static int g_type_depth ( long type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$402.g_type_depth$MH, "g_type_depth");
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_next_base$MH() {
        return RuntimeHelper.requireNonNull(constants$402.g_type_next_base$MH,"g_type_next_base");
    }
    public static long g_type_next_base ( long leaf_type,  long root_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$402.g_type_next_base$MH, "g_type_next_base");
        try {
            return (long)mh$.invokeExact(leaf_type, root_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_is_a$MH() {
        return RuntimeHelper.requireNonNull(constants$402.g_type_is_a$MH,"g_type_is_a");
    }
    public static int g_type_is_a ( long type,  long is_a_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$402.g_type_is_a$MH, "g_type_is_a");
        try {
            return (int)mh$.invokeExact(type, is_a_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$403.g_type_class_ref$MH,"g_type_class_ref");
    }
    public static MemoryAddress g_type_class_ref ( long type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$403.g_type_class_ref$MH, "g_type_class_ref");
        try {
            return (MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_peek$MH() {
        return RuntimeHelper.requireNonNull(constants$403.g_type_class_peek$MH,"g_type_class_peek");
    }
    public static MemoryAddress g_type_class_peek ( long type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$403.g_type_class_peek$MH, "g_type_class_peek");
        try {
            return (MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_peek_static$MH() {
        return RuntimeHelper.requireNonNull(constants$403.g_type_class_peek_static$MH,"g_type_class_peek_static");
    }
    public static MemoryAddress g_type_class_peek_static ( long type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$403.g_type_class_peek_static$MH, "g_type_class_peek_static");
        try {
            return (MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$403.g_type_class_unref$MH,"g_type_class_unref");
    }
    public static void g_type_class_unref ( Addressable g_class) {
        var mh$ = RuntimeHelper.requireNonNull(constants$403.g_type_class_unref$MH, "g_type_class_unref");
        try {
            mh$.invokeExact(g_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_peek_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$403.g_type_class_peek_parent$MH,"g_type_class_peek_parent");
    }
    public static MemoryAddress g_type_class_peek_parent ( Addressable g_class) {
        var mh$ = RuntimeHelper.requireNonNull(constants$403.g_type_class_peek_parent$MH, "g_type_class_peek_parent");
        try {
            return (MemoryAddress)mh$.invokeExact(g_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_peek$MH() {
        return RuntimeHelper.requireNonNull(constants$403.g_type_interface_peek$MH,"g_type_interface_peek");
    }
    public static MemoryAddress g_type_interface_peek ( Addressable instance_class,  long iface_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$403.g_type_interface_peek$MH, "g_type_interface_peek");
        try {
            return (MemoryAddress)mh$.invokeExact(instance_class, iface_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_peek_parent$MH() {
        return RuntimeHelper.requireNonNull(constants$404.g_type_interface_peek_parent$MH,"g_type_interface_peek_parent");
    }
    public static MemoryAddress g_type_interface_peek_parent ( Addressable g_iface) {
        var mh$ = RuntimeHelper.requireNonNull(constants$404.g_type_interface_peek_parent$MH, "g_type_interface_peek_parent");
        try {
            return (MemoryAddress)mh$.invokeExact(g_iface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_default_interface_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$404.g_type_default_interface_ref$MH,"g_type_default_interface_ref");
    }
    public static MemoryAddress g_type_default_interface_ref ( long g_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$404.g_type_default_interface_ref$MH, "g_type_default_interface_ref");
        try {
            return (MemoryAddress)mh$.invokeExact(g_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_default_interface_peek$MH() {
        return RuntimeHelper.requireNonNull(constants$404.g_type_default_interface_peek$MH,"g_type_default_interface_peek");
    }
    public static MemoryAddress g_type_default_interface_peek ( long g_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$404.g_type_default_interface_peek$MH, "g_type_default_interface_peek");
        try {
            return (MemoryAddress)mh$.invokeExact(g_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_default_interface_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$404.g_type_default_interface_unref$MH,"g_type_default_interface_unref");
    }
    public static void g_type_default_interface_unref ( Addressable g_iface) {
        var mh$ = RuntimeHelper.requireNonNull(constants$404.g_type_default_interface_unref$MH, "g_type_default_interface_unref");
        try {
            mh$.invokeExact(g_iface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_children$MH() {
        return RuntimeHelper.requireNonNull(constants$404.g_type_children$MH,"g_type_children");
    }
    public static MemoryAddress g_type_children ( long type,  Addressable n_children) {
        var mh$ = RuntimeHelper.requireNonNull(constants$404.g_type_children$MH, "g_type_children");
        try {
            return (MemoryAddress)mh$.invokeExact(type, n_children);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interfaces$MH() {
        return RuntimeHelper.requireNonNull(constants$404.g_type_interfaces$MH,"g_type_interfaces");
    }
    public static MemoryAddress g_type_interfaces ( long type,  Addressable n_interfaces) {
        var mh$ = RuntimeHelper.requireNonNull(constants$404.g_type_interfaces$MH, "g_type_interfaces");
        try {
            return (MemoryAddress)mh$.invokeExact(type, n_interfaces);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_set_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$405.g_type_set_qdata$MH,"g_type_set_qdata");
    }
    public static void g_type_set_qdata ( long type,  int quark,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$405.g_type_set_qdata$MH, "g_type_set_qdata");
        try {
            mh$.invokeExact(type, quark, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_get_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$405.g_type_get_qdata$MH,"g_type_get_qdata");
    }
    public static MemoryAddress g_type_get_qdata ( long type,  int quark) {
        var mh$ = RuntimeHelper.requireNonNull(constants$405.g_type_get_qdata$MH, "g_type_get_qdata");
        try {
            return (MemoryAddress)mh$.invokeExact(type, quark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_query$MH() {
        return RuntimeHelper.requireNonNull(constants$405.g_type_query$MH,"g_type_query");
    }
    public static void g_type_query ( long type,  Addressable query) {
        var mh$ = RuntimeHelper.requireNonNull(constants$405.g_type_query$MH, "g_type_query");
        try {
            mh$.invokeExact(type, query);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_get_instance_count$MH() {
        return RuntimeHelper.requireNonNull(constants$405.g_type_get_instance_count$MH,"g_type_get_instance_count");
    }
    public static int g_type_get_instance_count ( long type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$405.g_type_get_instance_count$MH, "g_type_get_instance_count");
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_TYPE_FLAG_CLASSED() {
        return (int)1L;
    }
    public static int G_TYPE_FLAG_INSTANTIATABLE() {
        return (int)2L;
    }
    public static int G_TYPE_FLAG_DERIVABLE() {
        return (int)4L;
    }
    public static int G_TYPE_FLAG_DEEP_DERIVABLE() {
        return (int)8L;
    }
    public static int G_TYPE_FLAG_ABSTRACT() {
        return (int)16L;
    }
    public static int G_TYPE_FLAG_VALUE_ABSTRACT() {
        return (int)32L;
    }
    public static MethodHandle g_type_register_static$MH() {
        return RuntimeHelper.requireNonNull(constants$408.g_type_register_static$MH,"g_type_register_static");
    }
    public static long g_type_register_static ( long parent_type,  Addressable type_name,  Addressable info,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$408.g_type_register_static$MH, "g_type_register_static");
        try {
            return (long)mh$.invokeExact(parent_type, type_name, info, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_register_static_simple$MH() {
        return RuntimeHelper.requireNonNull(constants$408.g_type_register_static_simple$MH,"g_type_register_static_simple");
    }
    public static long g_type_register_static_simple ( long parent_type,  Addressable type_name,  int class_size,  Addressable class_init,  int instance_size,  Addressable instance_init,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$408.g_type_register_static_simple$MH, "g_type_register_static_simple");
        try {
            return (long)mh$.invokeExact(parent_type, type_name, class_size, class_init, instance_size, instance_init, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_register_dynamic$MH() {
        return RuntimeHelper.requireNonNull(constants$409.g_type_register_dynamic$MH,"g_type_register_dynamic");
    }
    public static long g_type_register_dynamic ( long parent_type,  Addressable type_name,  Addressable plugin,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$409.g_type_register_dynamic$MH, "g_type_register_dynamic");
        try {
            return (long)mh$.invokeExact(parent_type, type_name, plugin, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_register_fundamental$MH() {
        return RuntimeHelper.requireNonNull(constants$409.g_type_register_fundamental$MH,"g_type_register_fundamental");
    }
    public static long g_type_register_fundamental ( long type_id,  Addressable type_name,  Addressable info,  Addressable finfo,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$409.g_type_register_fundamental$MH, "g_type_register_fundamental");
        try {
            return (long)mh$.invokeExact(type_id, type_name, info, finfo, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_interface_static$MH() {
        return RuntimeHelper.requireNonNull(constants$409.g_type_add_interface_static$MH,"g_type_add_interface_static");
    }
    public static void g_type_add_interface_static ( long instance_type,  long interface_type,  Addressable info) {
        var mh$ = RuntimeHelper.requireNonNull(constants$409.g_type_add_interface_static$MH, "g_type_add_interface_static");
        try {
            mh$.invokeExact(instance_type, interface_type, info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_interface_dynamic$MH() {
        return RuntimeHelper.requireNonNull(constants$409.g_type_add_interface_dynamic$MH,"g_type_add_interface_dynamic");
    }
    public static void g_type_add_interface_dynamic ( long instance_type,  long interface_type,  Addressable plugin) {
        var mh$ = RuntimeHelper.requireNonNull(constants$409.g_type_add_interface_dynamic$MH, "g_type_add_interface_dynamic");
        try {
            mh$.invokeExact(instance_type, interface_type, plugin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_add_prerequisite$MH() {
        return RuntimeHelper.requireNonNull(constants$409.g_type_interface_add_prerequisite$MH,"g_type_interface_add_prerequisite");
    }
    public static void g_type_interface_add_prerequisite ( long interface_type,  long prerequisite_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$409.g_type_interface_add_prerequisite$MH, "g_type_interface_add_prerequisite");
        try {
            mh$.invokeExact(interface_type, prerequisite_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_prerequisites$MH() {
        return RuntimeHelper.requireNonNull(constants$409.g_type_interface_prerequisites$MH,"g_type_interface_prerequisites");
    }
    public static MemoryAddress g_type_interface_prerequisites ( long interface_type,  Addressable n_prerequisites) {
        var mh$ = RuntimeHelper.requireNonNull(constants$409.g_type_interface_prerequisites$MH, "g_type_interface_prerequisites");
        try {
            return (MemoryAddress)mh$.invokeExact(interface_type, n_prerequisites);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_add_private$MH() {
        return RuntimeHelper.requireNonNull(constants$410.g_type_class_add_private$MH,"g_type_class_add_private");
    }
    public static void g_type_class_add_private ( Addressable g_class,  long private_size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$410.g_type_class_add_private$MH, "g_type_class_add_private");
        try {
            mh$.invokeExact(g_class, private_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_instance_private$MH() {
        return RuntimeHelper.requireNonNull(constants$410.g_type_add_instance_private$MH,"g_type_add_instance_private");
    }
    public static int g_type_add_instance_private ( long class_type,  long private_size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$410.g_type_add_instance_private$MH, "g_type_add_instance_private");
        try {
            return (int)mh$.invokeExact(class_type, private_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_instance_get_private$MH() {
        return RuntimeHelper.requireNonNull(constants$410.g_type_instance_get_private$MH,"g_type_instance_get_private");
    }
    public static MemoryAddress g_type_instance_get_private ( Addressable instance,  long private_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$410.g_type_instance_get_private$MH, "g_type_instance_get_private");
        try {
            return (MemoryAddress)mh$.invokeExact(instance, private_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_adjust_private_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$410.g_type_class_adjust_private_offset$MH,"g_type_class_adjust_private_offset");
    }
    public static void g_type_class_adjust_private_offset ( Addressable g_class,  Addressable private_size_or_offset) {
        var mh$ = RuntimeHelper.requireNonNull(constants$410.g_type_class_adjust_private_offset$MH, "g_type_class_adjust_private_offset");
        try {
            mh$.invokeExact(g_class, private_size_or_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_class_private$MH() {
        return RuntimeHelper.requireNonNull(constants$410.g_type_add_class_private$MH,"g_type_add_class_private");
    }
    public static void g_type_add_class_private ( long class_type,  long private_size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$410.g_type_add_class_private$MH, "g_type_add_class_private");
        try {
            mh$.invokeExact(class_type, private_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_get_private$MH() {
        return RuntimeHelper.requireNonNull(constants$410.g_type_class_get_private$MH,"g_type_class_get_private");
    }
    public static MemoryAddress g_type_class_get_private ( Addressable klass,  long private_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$410.g_type_class_get_private$MH, "g_type_class_get_private");
        try {
            return (MemoryAddress)mh$.invokeExact(klass, private_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_get_instance_private_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$411.g_type_class_get_instance_private_offset$MH,"g_type_class_get_instance_private_offset");
    }
    public static int g_type_class_get_instance_private_offset ( Addressable g_class) {
        var mh$ = RuntimeHelper.requireNonNull(constants$411.g_type_class_get_instance_private_offset$MH, "g_type_class_get_instance_private_offset");
        try {
            return (int)mh$.invokeExact(g_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_ensure$MH() {
        return RuntimeHelper.requireNonNull(constants$411.g_type_ensure$MH,"g_type_ensure");
    }
    public static void g_type_ensure ( long type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$411.g_type_ensure$MH, "g_type_ensure");
        try {
            mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_get_type_registration_serial$MH() {
        return RuntimeHelper.requireNonNull(constants$411.g_type_get_type_registration_serial$MH,"g_type_get_type_registration_serial");
    }
    public static int g_type_get_type_registration_serial () {
        var mh$ = RuntimeHelper.requireNonNull(constants$411.g_type_get_type_registration_serial$MH, "g_type_get_type_registration_serial");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_get_plugin$MH() {
        return RuntimeHelper.requireNonNull(constants$411.g_type_get_plugin$MH,"g_type_get_plugin");
    }
    public static MemoryAddress g_type_get_plugin ( long type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$411.g_type_get_plugin$MH, "g_type_get_plugin");
        try {
            return (MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_interface_get_plugin$MH() {
        return RuntimeHelper.requireNonNull(constants$411.g_type_interface_get_plugin$MH,"g_type_interface_get_plugin");
    }
    public static MemoryAddress g_type_interface_get_plugin ( long instance_type,  long interface_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$411.g_type_interface_get_plugin$MH, "g_type_interface_get_plugin");
        try {
            return (MemoryAddress)mh$.invokeExact(instance_type, interface_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_fundamental_next$MH() {
        return RuntimeHelper.requireNonNull(constants$411.g_type_fundamental_next$MH,"g_type_fundamental_next");
    }
    public static long g_type_fundamental_next () {
        var mh$ = RuntimeHelper.requireNonNull(constants$411.g_type_fundamental_next$MH, "g_type_fundamental_next");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_fundamental$MH() {
        return RuntimeHelper.requireNonNull(constants$412.g_type_fundamental$MH,"g_type_fundamental");
    }
    public static long g_type_fundamental ( long type_id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$412.g_type_fundamental$MH, "g_type_fundamental");
        try {
            return (long)mh$.invokeExact(type_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_create_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$412.g_type_create_instance$MH,"g_type_create_instance");
    }
    public static MemoryAddress g_type_create_instance ( long type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$412.g_type_create_instance$MH, "g_type_create_instance");
        try {
            return (MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_free_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$412.g_type_free_instance$MH,"g_type_free_instance");
    }
    public static void g_type_free_instance ( Addressable instance) {
        var mh$ = RuntimeHelper.requireNonNull(constants$412.g_type_free_instance$MH, "g_type_free_instance");
        try {
            mh$.invokeExact(instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_class_cache_func$MH() {
        return RuntimeHelper.requireNonNull(constants$412.g_type_add_class_cache_func$MH,"g_type_add_class_cache_func");
    }
    public static void g_type_add_class_cache_func ( Addressable cache_data,  Addressable cache_func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$412.g_type_add_class_cache_func$MH, "g_type_add_class_cache_func");
        try {
            mh$.invokeExact(cache_data, cache_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_remove_class_cache_func$MH() {
        return RuntimeHelper.requireNonNull(constants$412.g_type_remove_class_cache_func$MH,"g_type_remove_class_cache_func");
    }
    public static void g_type_remove_class_cache_func ( Addressable cache_data,  Addressable cache_func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$412.g_type_remove_class_cache_func$MH, "g_type_remove_class_cache_func");
        try {
            mh$.invokeExact(cache_data, cache_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_class_unref_uncached$MH() {
        return RuntimeHelper.requireNonNull(constants$412.g_type_class_unref_uncached$MH,"g_type_class_unref_uncached");
    }
    public static void g_type_class_unref_uncached ( Addressable g_class) {
        var mh$ = RuntimeHelper.requireNonNull(constants$412.g_type_class_unref_uncached$MH, "g_type_class_unref_uncached");
        try {
            mh$.invokeExact(g_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_add_interface_check$MH() {
        return RuntimeHelper.requireNonNull(constants$413.g_type_add_interface_check$MH,"g_type_add_interface_check");
    }
    public static void g_type_add_interface_check ( Addressable check_data,  Addressable check_func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$413.g_type_add_interface_check$MH, "g_type_add_interface_check");
        try {
            mh$.invokeExact(check_data, check_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_remove_interface_check$MH() {
        return RuntimeHelper.requireNonNull(constants$413.g_type_remove_interface_check$MH,"g_type_remove_interface_check");
    }
    public static void g_type_remove_interface_check ( Addressable check_data,  Addressable check_func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$413.g_type_remove_interface_check$MH, "g_type_remove_interface_check");
        try {
            mh$.invokeExact(check_data, check_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_value_table_peek$MH() {
        return RuntimeHelper.requireNonNull(constants$413.g_type_value_table_peek$MH,"g_type_value_table_peek");
    }
    public static MemoryAddress g_type_value_table_peek ( long type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$413.g_type_value_table_peek$MH, "g_type_value_table_peek");
        try {
            return (MemoryAddress)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$413.g_type_check_instance$MH,"g_type_check_instance");
    }
    public static int g_type_check_instance ( Addressable instance) {
        var mh$ = RuntimeHelper.requireNonNull(constants$413.g_type_check_instance$MH, "g_type_check_instance");
        try {
            return (int)mh$.invokeExact(instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_instance_cast$MH() {
        return RuntimeHelper.requireNonNull(constants$413.g_type_check_instance_cast$MH,"g_type_check_instance_cast");
    }
    public static MemoryAddress g_type_check_instance_cast ( Addressable instance,  long iface_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$413.g_type_check_instance_cast$MH, "g_type_check_instance_cast");
        try {
            return (MemoryAddress)mh$.invokeExact(instance, iface_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_instance_is_a$MH() {
        return RuntimeHelper.requireNonNull(constants$413.g_type_check_instance_is_a$MH,"g_type_check_instance_is_a");
    }
    public static int g_type_check_instance_is_a ( Addressable instance,  long iface_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$413.g_type_check_instance_is_a$MH, "g_type_check_instance_is_a");
        try {
            return (int)mh$.invokeExact(instance, iface_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_instance_is_fundamentally_a$MH() {
        return RuntimeHelper.requireNonNull(constants$414.g_type_check_instance_is_fundamentally_a$MH,"g_type_check_instance_is_fundamentally_a");
    }
    public static int g_type_check_instance_is_fundamentally_a ( Addressable instance,  long fundamental_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$414.g_type_check_instance_is_fundamentally_a$MH, "g_type_check_instance_is_fundamentally_a");
        try {
            return (int)mh$.invokeExact(instance, fundamental_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_class_cast$MH() {
        return RuntimeHelper.requireNonNull(constants$414.g_type_check_class_cast$MH,"g_type_check_class_cast");
    }
    public static MemoryAddress g_type_check_class_cast ( Addressable g_class,  long is_a_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$414.g_type_check_class_cast$MH, "g_type_check_class_cast");
        try {
            return (MemoryAddress)mh$.invokeExact(g_class, is_a_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_class_is_a$MH() {
        return RuntimeHelper.requireNonNull(constants$414.g_type_check_class_is_a$MH,"g_type_check_class_is_a");
    }
    public static int g_type_check_class_is_a ( Addressable g_class,  long is_a_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$414.g_type_check_class_is_a$MH, "g_type_check_class_is_a");
        try {
            return (int)mh$.invokeExact(g_class, is_a_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_is_value_type$MH() {
        return RuntimeHelper.requireNonNull(constants$414.g_type_check_is_value_type$MH,"g_type_check_is_value_type");
    }
    public static int g_type_check_is_value_type ( long type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$414.g_type_check_is_value_type$MH, "g_type_check_is_value_type");
        try {
            return (int)mh$.invokeExact(type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_value$MH() {
        return RuntimeHelper.requireNonNull(constants$414.g_type_check_value$MH,"g_type_check_value");
    }
    public static int g_type_check_value ( Addressable value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$414.g_type_check_value$MH, "g_type_check_value");
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_check_value_holds$MH() {
        return RuntimeHelper.requireNonNull(constants$414.g_type_check_value_holds$MH,"g_type_check_value_holds");
    }
    public static int g_type_check_value_holds ( Addressable value,  long type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$414.g_type_check_value_holds$MH, "g_type_check_value_holds");
        try {
            return (int)mh$.invokeExact(value, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_test_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$415.g_type_test_flags$MH,"g_type_test_flags");
    }
    public static int g_type_test_flags ( long type,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$415.g_type_test_flags$MH, "g_type_test_flags");
        try {
            return (int)mh$.invokeExact(type, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_name_from_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$415.g_type_name_from_instance$MH,"g_type_name_from_instance");
    }
    public static MemoryAddress g_type_name_from_instance ( Addressable instance) {
        var mh$ = RuntimeHelper.requireNonNull(constants$415.g_type_name_from_instance$MH, "g_type_name_from_instance");
        try {
            return (MemoryAddress)mh$.invokeExact(instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_type_name_from_class$MH() {
        return RuntimeHelper.requireNonNull(constants$415.g_type_name_from_class$MH,"g_type_name_from_class");
    }
    public static MemoryAddress g_type_name_from_class ( Addressable g_class) {
        var mh$ = RuntimeHelper.requireNonNull(constants$415.g_type_name_from_class$MH, "g_type_name_from_class");
        try {
            return (MemoryAddress)mh$.invokeExact(g_class);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_init$MH() {
        return RuntimeHelper.requireNonNull(constants$415.g_value_init$MH,"g_value_init");
    }
    public static MemoryAddress g_value_init ( Addressable value,  long g_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$415.g_value_init$MH, "g_value_init");
        try {
            return (MemoryAddress)mh$.invokeExact(value, g_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$416.g_value_copy$MH,"g_value_copy");
    }
    public static void g_value_copy ( Addressable src_value,  Addressable dest_value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$416.g_value_copy$MH, "g_value_copy");
        try {
            mh$.invokeExact(src_value, dest_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$416.g_value_reset$MH,"g_value_reset");
    }
    public static MemoryAddress g_value_reset ( Addressable value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$416.g_value_reset$MH, "g_value_reset");
        try {
            return (MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_unset$MH() {
        return RuntimeHelper.requireNonNull(constants$416.g_value_unset$MH,"g_value_unset");
    }
    public static void g_value_unset ( Addressable value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$416.g_value_unset$MH, "g_value_unset");
        try {
            mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$416.g_value_set_instance$MH,"g_value_set_instance");
    }
    public static void g_value_set_instance ( Addressable value,  Addressable instance) {
        var mh$ = RuntimeHelper.requireNonNull(constants$416.g_value_set_instance$MH, "g_value_set_instance");
        try {
            mh$.invokeExact(value, instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_init_from_instance$MH() {
        return RuntimeHelper.requireNonNull(constants$416.g_value_init_from_instance$MH,"g_value_init_from_instance");
    }
    public static void g_value_init_from_instance ( Addressable value,  Addressable instance) {
        var mh$ = RuntimeHelper.requireNonNull(constants$416.g_value_init_from_instance$MH, "g_value_init_from_instance");
        try {
            mh$.invokeExact(value, instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_fits_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$416.g_value_fits_pointer$MH,"g_value_fits_pointer");
    }
    public static int g_value_fits_pointer ( Addressable value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$416.g_value_fits_pointer$MH, "g_value_fits_pointer");
        try {
            return (int)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_peek_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$417.g_value_peek_pointer$MH,"g_value_peek_pointer");
    }
    public static MemoryAddress g_value_peek_pointer ( Addressable value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$417.g_value_peek_pointer$MH, "g_value_peek_pointer");
        try {
            return (MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_type_compatible$MH() {
        return RuntimeHelper.requireNonNull(constants$417.g_value_type_compatible$MH,"g_value_type_compatible");
    }
    public static int g_value_type_compatible ( long src_type,  long dest_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$417.g_value_type_compatible$MH, "g_value_type_compatible");
        try {
            return (int)mh$.invokeExact(src_type, dest_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_type_transformable$MH() {
        return RuntimeHelper.requireNonNull(constants$417.g_value_type_transformable$MH,"g_value_type_transformable");
    }
    public static int g_value_type_transformable ( long src_type,  long dest_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$417.g_value_type_transformable$MH, "g_value_type_transformable");
        try {
            return (int)mh$.invokeExact(src_type, dest_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_transform$MH() {
        return RuntimeHelper.requireNonNull(constants$417.g_value_transform$MH,"g_value_transform");
    }
    public static int g_value_transform ( Addressable src_value,  Addressable dest_value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$417.g_value_transform$MH, "g_value_transform");
        try {
            return (int)mh$.invokeExact(src_value, dest_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_register_transform_func$MH() {
        return RuntimeHelper.requireNonNull(constants$417.g_value_register_transform_func$MH,"g_value_register_transform_func");
    }
    public static void g_value_register_transform_func ( long src_type,  long dest_type,  Addressable transform_func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$417.g_value_register_transform_func$MH, "g_value_register_transform_func");
        try {
            mh$.invokeExact(src_type, dest_type, transform_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_PARAM_READABLE() {
        return (int)1L;
    }
    public static int G_PARAM_WRITABLE() {
        return (int)2L;
    }
    public static int G_PARAM_READWRITE() {
        return (int)3L;
    }
    public static int G_PARAM_CONSTRUCT() {
        return (int)4L;
    }
    public static int G_PARAM_CONSTRUCT_ONLY() {
        return (int)8L;
    }
    public static int G_PARAM_LAX_VALIDATION() {
        return (int)16L;
    }
    public static int G_PARAM_STATIC_NAME() {
        return (int)32L;
    }
    public static int G_PARAM_PRIVATE() {
        return (int)32L;
    }
    public static int G_PARAM_STATIC_NICK() {
        return (int)64L;
    }
    public static int G_PARAM_STATIC_BLURB() {
        return (int)128L;
    }
    public static int G_PARAM_EXPLICIT_NOTIFY() {
        return (int)1073741824L;
    }
    public static int G_PARAM_DEPRECATED() {
        return (int)-2147483648L;
    }
    public static MethodHandle g_param_spec_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$417.g_param_spec_ref$MH,"g_param_spec_ref");
    }
    public static MemoryAddress g_param_spec_ref ( Addressable pspec) {
        var mh$ = RuntimeHelper.requireNonNull(constants$417.g_param_spec_ref$MH, "g_param_spec_ref");
        try {
            return (MemoryAddress)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$418.g_param_spec_unref$MH,"g_param_spec_unref");
    }
    public static void g_param_spec_unref ( Addressable pspec) {
        var mh$ = RuntimeHelper.requireNonNull(constants$418.g_param_spec_unref$MH, "g_param_spec_unref");
        try {
            mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_sink$MH() {
        return RuntimeHelper.requireNonNull(constants$418.g_param_spec_sink$MH,"g_param_spec_sink");
    }
    public static void g_param_spec_sink ( Addressable pspec) {
        var mh$ = RuntimeHelper.requireNonNull(constants$418.g_param_spec_sink$MH, "g_param_spec_sink");
        try {
            mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_ref_sink$MH() {
        return RuntimeHelper.requireNonNull(constants$418.g_param_spec_ref_sink$MH,"g_param_spec_ref_sink");
    }
    public static MemoryAddress g_param_spec_ref_sink ( Addressable pspec) {
        var mh$ = RuntimeHelper.requireNonNull(constants$418.g_param_spec_ref_sink$MH, "g_param_spec_ref_sink");
        try {
            return (MemoryAddress)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$418.g_param_spec_get_qdata$MH,"g_param_spec_get_qdata");
    }
    public static MemoryAddress g_param_spec_get_qdata ( Addressable pspec,  int quark) {
        var mh$ = RuntimeHelper.requireNonNull(constants$418.g_param_spec_get_qdata$MH, "g_param_spec_get_qdata");
        try {
            return (MemoryAddress)mh$.invokeExact(pspec, quark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_set_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$418.g_param_spec_set_qdata$MH,"g_param_spec_set_qdata");
    }
    public static void g_param_spec_set_qdata ( Addressable pspec,  int quark,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$418.g_param_spec_set_qdata$MH, "g_param_spec_set_qdata");
        try {
            mh$.invokeExact(pspec, quark, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_set_qdata_full$MH() {
        return RuntimeHelper.requireNonNull(constants$418.g_param_spec_set_qdata_full$MH,"g_param_spec_set_qdata_full");
    }
    public static void g_param_spec_set_qdata_full ( Addressable pspec,  int quark,  Addressable data,  Addressable destroy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$418.g_param_spec_set_qdata_full$MH, "g_param_spec_set_qdata_full");
        try {
            mh$.invokeExact(pspec, quark, data, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_steal_qdata$MH() {
        return RuntimeHelper.requireNonNull(constants$419.g_param_spec_steal_qdata$MH,"g_param_spec_steal_qdata");
    }
    public static MemoryAddress g_param_spec_steal_qdata ( Addressable pspec,  int quark) {
        var mh$ = RuntimeHelper.requireNonNull(constants$419.g_param_spec_steal_qdata$MH, "g_param_spec_steal_qdata");
        try {
            return (MemoryAddress)mh$.invokeExact(pspec, quark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_redirect_target$MH() {
        return RuntimeHelper.requireNonNull(constants$419.g_param_spec_get_redirect_target$MH,"g_param_spec_get_redirect_target");
    }
    public static MemoryAddress g_param_spec_get_redirect_target ( Addressable pspec) {
        var mh$ = RuntimeHelper.requireNonNull(constants$419.g_param_spec_get_redirect_target$MH, "g_param_spec_get_redirect_target");
        try {
            return (MemoryAddress)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_value_set_default$MH() {
        return RuntimeHelper.requireNonNull(constants$419.g_param_value_set_default$MH,"g_param_value_set_default");
    }
    public static void g_param_value_set_default ( Addressable pspec,  Addressable value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$419.g_param_value_set_default$MH, "g_param_value_set_default");
        try {
            mh$.invokeExact(pspec, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_value_defaults$MH() {
        return RuntimeHelper.requireNonNull(constants$419.g_param_value_defaults$MH,"g_param_value_defaults");
    }
    public static int g_param_value_defaults ( Addressable pspec,  Addressable value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$419.g_param_value_defaults$MH, "g_param_value_defaults");
        try {
            return (int)mh$.invokeExact(pspec, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_value_validate$MH() {
        return RuntimeHelper.requireNonNull(constants$419.g_param_value_validate$MH,"g_param_value_validate");
    }
    public static int g_param_value_validate ( Addressable pspec,  Addressable value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$419.g_param_value_validate$MH, "g_param_value_validate");
        try {
            return (int)mh$.invokeExact(pspec, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_value_convert$MH() {
        return RuntimeHelper.requireNonNull(constants$419.g_param_value_convert$MH,"g_param_value_convert");
    }
    public static int g_param_value_convert ( Addressable pspec,  Addressable src_value,  Addressable dest_value,  int strict_validation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$419.g_param_value_convert$MH, "g_param_value_convert");
        try {
            return (int)mh$.invokeExact(pspec, src_value, dest_value, strict_validation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_values_cmp$MH() {
        return RuntimeHelper.requireNonNull(constants$420.g_param_values_cmp$MH,"g_param_values_cmp");
    }
    public static int g_param_values_cmp ( Addressable pspec,  Addressable value1,  Addressable value2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$420.g_param_values_cmp$MH, "g_param_values_cmp");
        try {
            return (int)mh$.invokeExact(pspec, value1, value2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$420.g_param_spec_get_name$MH,"g_param_spec_get_name");
    }
    public static MemoryAddress g_param_spec_get_name ( Addressable pspec) {
        var mh$ = RuntimeHelper.requireNonNull(constants$420.g_param_spec_get_name$MH, "g_param_spec_get_name");
        try {
            return (MemoryAddress)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_nick$MH() {
        return RuntimeHelper.requireNonNull(constants$420.g_param_spec_get_nick$MH,"g_param_spec_get_nick");
    }
    public static MemoryAddress g_param_spec_get_nick ( Addressable pspec) {
        var mh$ = RuntimeHelper.requireNonNull(constants$420.g_param_spec_get_nick$MH, "g_param_spec_get_nick");
        try {
            return (MemoryAddress)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_blurb$MH() {
        return RuntimeHelper.requireNonNull(constants$420.g_param_spec_get_blurb$MH,"g_param_spec_get_blurb");
    }
    public static MemoryAddress g_param_spec_get_blurb ( Addressable pspec) {
        var mh$ = RuntimeHelper.requireNonNull(constants$420.g_param_spec_get_blurb$MH, "g_param_spec_get_blurb");
        try {
            return (MemoryAddress)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_param$MH() {
        return RuntimeHelper.requireNonNull(constants$420.g_value_set_param$MH,"g_value_set_param");
    }
    public static void g_value_set_param ( Addressable value,  Addressable param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$420.g_value_set_param$MH, "g_value_set_param");
        try {
            mh$.invokeExact(value, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_param$MH() {
        return RuntimeHelper.requireNonNull(constants$420.g_value_get_param$MH,"g_value_get_param");
    }
    public static MemoryAddress g_value_get_param ( Addressable value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$420.g_value_get_param$MH, "g_value_get_param");
        try {
            return (MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_dup_param$MH() {
        return RuntimeHelper.requireNonNull(constants$421.g_value_dup_param$MH,"g_value_dup_param");
    }
    public static MemoryAddress g_value_dup_param ( Addressable value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$421.g_value_dup_param$MH, "g_value_dup_param");
        try {
            return (MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_take_param$MH() {
        return RuntimeHelper.requireNonNull(constants$421.g_value_take_param$MH,"g_value_take_param");
    }
    public static void g_value_take_param ( Addressable value,  Addressable param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$421.g_value_take_param$MH, "g_value_take_param");
        try {
            mh$.invokeExact(value, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_param_take_ownership$MH() {
        return RuntimeHelper.requireNonNull(constants$421.g_value_set_param_take_ownership$MH,"g_value_set_param_take_ownership");
    }
    public static void g_value_set_param_take_ownership ( Addressable value,  Addressable param) {
        var mh$ = RuntimeHelper.requireNonNull(constants$421.g_value_set_param_take_ownership$MH, "g_value_set_param_take_ownership");
        try {
            mh$.invokeExact(value, param);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_default_value$MH() {
        return RuntimeHelper.requireNonNull(constants$421.g_param_spec_get_default_value$MH,"g_param_spec_get_default_value");
    }
    public static MemoryAddress g_param_spec_get_default_value ( Addressable pspec) {
        var mh$ = RuntimeHelper.requireNonNull(constants$421.g_param_spec_get_default_value$MH, "g_param_spec_get_default_value");
        try {
            return (MemoryAddress)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_get_name_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$421.g_param_spec_get_name_quark$MH,"g_param_spec_get_name_quark");
    }
    public static int g_param_spec_get_name_quark ( Addressable pspec) {
        var mh$ = RuntimeHelper.requireNonNull(constants$421.g_param_spec_get_name_quark$MH, "g_param_spec_get_name_quark");
        try {
            return (int)mh$.invokeExact(pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_type_register_static$MH() {
        return RuntimeHelper.requireNonNull(constants$421.g_param_type_register_static$MH,"g_param_type_register_static");
    }
    public static long g_param_type_register_static ( Addressable name,  Addressable pspec_info) {
        var mh$ = RuntimeHelper.requireNonNull(constants$421.g_param_type_register_static$MH, "g_param_type_register_static");
        try {
            return (long)mh$.invokeExact(name, pspec_info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _g_param_type_register_static_constant$MH() {
        return RuntimeHelper.requireNonNull(constants$422._g_param_type_register_static_constant$MH,"_g_param_type_register_static_constant");
    }
    public static long _g_param_type_register_static_constant ( Addressable name,  Addressable pspec_info,  long opt_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$422._g_param_type_register_static_constant$MH, "_g_param_type_register_static_constant");
        try {
            return (long)mh$.invokeExact(name, pspec_info, opt_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_internal$MH() {
        return RuntimeHelper.requireNonNull(constants$422.g_param_spec_internal$MH,"g_param_spec_internal");
    }
    public static MemoryAddress g_param_spec_internal ( long param_type,  Addressable name,  Addressable nick,  Addressable blurb,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$422.g_param_spec_internal$MH, "g_param_spec_internal");
        try {
            return (MemoryAddress)mh$.invokeExact(param_type, name, nick, blurb, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pool_new$MH() {
        return RuntimeHelper.requireNonNull(constants$422.g_param_spec_pool_new$MH,"g_param_spec_pool_new");
    }
    public static MemoryAddress g_param_spec_pool_new ( int type_prefixing) {
        var mh$ = RuntimeHelper.requireNonNull(constants$422.g_param_spec_pool_new$MH, "g_param_spec_pool_new");
        try {
            return (MemoryAddress)mh$.invokeExact(type_prefixing);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pool_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$422.g_param_spec_pool_insert$MH,"g_param_spec_pool_insert");
    }
    public static void g_param_spec_pool_insert ( Addressable pool,  Addressable pspec,  long owner_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$422.g_param_spec_pool_insert$MH, "g_param_spec_pool_insert");
        try {
            mh$.invokeExact(pool, pspec, owner_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pool_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$422.g_param_spec_pool_remove$MH,"g_param_spec_pool_remove");
    }
    public static void g_param_spec_pool_remove ( Addressable pool,  Addressable pspec) {
        var mh$ = RuntimeHelper.requireNonNull(constants$422.g_param_spec_pool_remove$MH, "g_param_spec_pool_remove");
        try {
            mh$.invokeExact(pool, pspec);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pool_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$422.g_param_spec_pool_lookup$MH,"g_param_spec_pool_lookup");
    }
    public static MemoryAddress g_param_spec_pool_lookup ( Addressable pool,  Addressable param_name,  long owner_type,  int walk_ancestors) {
        var mh$ = RuntimeHelper.requireNonNull(constants$422.g_param_spec_pool_lookup$MH, "g_param_spec_pool_lookup");
        try {
            return (MemoryAddress)mh$.invokeExact(pool, param_name, owner_type, walk_ancestors);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pool_list_owned$MH() {
        return RuntimeHelper.requireNonNull(constants$423.g_param_spec_pool_list_owned$MH,"g_param_spec_pool_list_owned");
    }
    public static MemoryAddress g_param_spec_pool_list_owned ( Addressable pool,  long owner_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$423.g_param_spec_pool_list_owned$MH, "g_param_spec_pool_list_owned");
        try {
            return (MemoryAddress)mh$.invokeExact(pool, owner_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_param_spec_pool_list$MH() {
        return RuntimeHelper.requireNonNull(constants$423.g_param_spec_pool_list$MH,"g_param_spec_pool_list");
    }
    public static MemoryAddress g_param_spec_pool_list ( Addressable pool,  long owner_type,  Addressable n_pspecs_p) {
        var mh$ = RuntimeHelper.requireNonNull(constants$423.g_param_spec_pool_list$MH, "g_param_spec_pool_list");
        try {
            return (MemoryAddress)mh$.invokeExact(pool, owner_type, n_pspecs_p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_new$MH() {
        return RuntimeHelper.requireNonNull(constants$424.g_cclosure_new$MH,"g_cclosure_new");
    }
    public static MemoryAddress g_cclosure_new ( Addressable callback_func,  Addressable user_data,  Addressable destroy_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$424.g_cclosure_new$MH, "g_cclosure_new");
        try {
            return (MemoryAddress)mh$.invokeExact(callback_func, user_data, destroy_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_new_swap$MH() {
        return RuntimeHelper.requireNonNull(constants$424.g_cclosure_new_swap$MH,"g_cclosure_new_swap");
    }
    public static MemoryAddress g_cclosure_new_swap ( Addressable callback_func,  Addressable user_data,  Addressable destroy_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$424.g_cclosure_new_swap$MH, "g_cclosure_new_swap");
        try {
            return (MemoryAddress)mh$.invokeExact(callback_func, user_data, destroy_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_type_cclosure_new$MH() {
        return RuntimeHelper.requireNonNull(constants$425.g_signal_type_cclosure_new$MH,"g_signal_type_cclosure_new");
    }
    public static MemoryAddress g_signal_type_cclosure_new ( long itype,  int struct_offset) {
        var mh$ = RuntimeHelper.requireNonNull(constants$425.g_signal_type_cclosure_new$MH, "g_signal_type_cclosure_new");
        try {
            return (MemoryAddress)mh$.invokeExact(itype, struct_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$425.g_closure_ref$MH,"g_closure_ref");
    }
    public static MemoryAddress g_closure_ref ( Addressable closure) {
        var mh$ = RuntimeHelper.requireNonNull(constants$425.g_closure_ref$MH, "g_closure_ref");
        try {
            return (MemoryAddress)mh$.invokeExact(closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_sink$MH() {
        return RuntimeHelper.requireNonNull(constants$425.g_closure_sink$MH,"g_closure_sink");
    }
    public static void g_closure_sink ( Addressable closure) {
        var mh$ = RuntimeHelper.requireNonNull(constants$425.g_closure_sink$MH, "g_closure_sink");
        try {
            mh$.invokeExact(closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$425.g_closure_unref$MH,"g_closure_unref");
    }
    public static void g_closure_unref ( Addressable closure) {
        var mh$ = RuntimeHelper.requireNonNull(constants$425.g_closure_unref$MH, "g_closure_unref");
        try {
            mh$.invokeExact(closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_new_simple$MH() {
        return RuntimeHelper.requireNonNull(constants$425.g_closure_new_simple$MH,"g_closure_new_simple");
    }
    public static MemoryAddress g_closure_new_simple ( int sizeof_closure,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$425.g_closure_new_simple$MH, "g_closure_new_simple");
        try {
            return (MemoryAddress)mh$.invokeExact(sizeof_closure, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_add_finalize_notifier$MH() {
        return RuntimeHelper.requireNonNull(constants$425.g_closure_add_finalize_notifier$MH,"g_closure_add_finalize_notifier");
    }
    public static void g_closure_add_finalize_notifier ( Addressable closure,  Addressable notify_data,  Addressable notify_func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$425.g_closure_add_finalize_notifier$MH, "g_closure_add_finalize_notifier");
        try {
            mh$.invokeExact(closure, notify_data, notify_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_remove_finalize_notifier$MH() {
        return RuntimeHelper.requireNonNull(constants$426.g_closure_remove_finalize_notifier$MH,"g_closure_remove_finalize_notifier");
    }
    public static void g_closure_remove_finalize_notifier ( Addressable closure,  Addressable notify_data,  Addressable notify_func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$426.g_closure_remove_finalize_notifier$MH, "g_closure_remove_finalize_notifier");
        try {
            mh$.invokeExact(closure, notify_data, notify_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_add_invalidate_notifier$MH() {
        return RuntimeHelper.requireNonNull(constants$426.g_closure_add_invalidate_notifier$MH,"g_closure_add_invalidate_notifier");
    }
    public static void g_closure_add_invalidate_notifier ( Addressable closure,  Addressable notify_data,  Addressable notify_func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$426.g_closure_add_invalidate_notifier$MH, "g_closure_add_invalidate_notifier");
        try {
            mh$.invokeExact(closure, notify_data, notify_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_remove_invalidate_notifier$MH() {
        return RuntimeHelper.requireNonNull(constants$426.g_closure_remove_invalidate_notifier$MH,"g_closure_remove_invalidate_notifier");
    }
    public static void g_closure_remove_invalidate_notifier ( Addressable closure,  Addressable notify_data,  Addressable notify_func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$426.g_closure_remove_invalidate_notifier$MH, "g_closure_remove_invalidate_notifier");
        try {
            mh$.invokeExact(closure, notify_data, notify_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_add_marshal_guards$MH() {
        return RuntimeHelper.requireNonNull(constants$426.g_closure_add_marshal_guards$MH,"g_closure_add_marshal_guards");
    }
    public static void g_closure_add_marshal_guards ( Addressable closure,  Addressable pre_marshal_data,  Addressable pre_marshal_notify,  Addressable post_marshal_data,  Addressable post_marshal_notify) {
        var mh$ = RuntimeHelper.requireNonNull(constants$426.g_closure_add_marshal_guards$MH, "g_closure_add_marshal_guards");
        try {
            mh$.invokeExact(closure, pre_marshal_data, pre_marshal_notify, post_marshal_data, post_marshal_notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_set_marshal$MH() {
        return RuntimeHelper.requireNonNull(constants$426.g_closure_set_marshal$MH,"g_closure_set_marshal");
    }
    public static void g_closure_set_marshal ( Addressable closure,  Addressable marshal) {
        var mh$ = RuntimeHelper.requireNonNull(constants$426.g_closure_set_marshal$MH, "g_closure_set_marshal");
        try {
            mh$.invokeExact(closure, marshal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_set_meta_marshal$MH() {
        return RuntimeHelper.requireNonNull(constants$426.g_closure_set_meta_marshal$MH,"g_closure_set_meta_marshal");
    }
    public static void g_closure_set_meta_marshal ( Addressable closure,  Addressable marshal_data,  Addressable meta_marshal) {
        var mh$ = RuntimeHelper.requireNonNull(constants$426.g_closure_set_meta_marshal$MH, "g_closure_set_meta_marshal");
        try {
            mh$.invokeExact(closure, marshal_data, meta_marshal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_invalidate$MH() {
        return RuntimeHelper.requireNonNull(constants$427.g_closure_invalidate$MH,"g_closure_invalidate");
    }
    public static void g_closure_invalidate ( Addressable closure) {
        var mh$ = RuntimeHelper.requireNonNull(constants$427.g_closure_invalidate$MH, "g_closure_invalidate");
        try {
            mh$.invokeExact(closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_closure_invoke$MH() {
        return RuntimeHelper.requireNonNull(constants$427.g_closure_invoke$MH,"g_closure_invoke");
    }
    public static void g_closure_invoke ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint) {
        var mh$ = RuntimeHelper.requireNonNull(constants$427.g_closure_invoke$MH, "g_closure_invoke");
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_generic$MH() {
        return RuntimeHelper.requireNonNull(constants$427.g_cclosure_marshal_generic$MH,"g_cclosure_marshal_generic");
    }
    public static void g_cclosure_marshal_generic ( Addressable closure,  Addressable return_gvalue,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$427.g_cclosure_marshal_generic$MH, "g_cclosure_marshal_generic");
        try {
            mh$.invokeExact(closure, return_gvalue, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_generic_va$MH() {
        return RuntimeHelper.requireNonNull(constants$427.g_cclosure_marshal_generic_va$MH,"g_cclosure_marshal_generic_va");
    }
    public static void g_cclosure_marshal_generic_va ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args_list,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = RuntimeHelper.requireNonNull(constants$427.g_cclosure_marshal_generic_va$MH, "g_cclosure_marshal_generic_va");
        try {
            mh$.invokeExact(closure, return_value, instance, args_list, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__VOID$MH() {
        return RuntimeHelper.requireNonNull(constants$427.g_cclosure_marshal_VOID__VOID$MH,"g_cclosure_marshal_VOID__VOID");
    }
    public static void g_cclosure_marshal_VOID__VOID ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$427.g_cclosure_marshal_VOID__VOID$MH, "g_cclosure_marshal_VOID__VOID");
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__VOIDv$MH() {
        return RuntimeHelper.requireNonNull(constants$427.g_cclosure_marshal_VOID__VOIDv$MH,"g_cclosure_marshal_VOID__VOIDv");
    }
    public static void g_cclosure_marshal_VOID__VOIDv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = RuntimeHelper.requireNonNull(constants$427.g_cclosure_marshal_VOID__VOIDv$MH, "g_cclosure_marshal_VOID__VOIDv");
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__BOOLEAN$MH() {
        return RuntimeHelper.requireNonNull(constants$428.g_cclosure_marshal_VOID__BOOLEAN$MH,"g_cclosure_marshal_VOID__BOOLEAN");
    }
    public static void g_cclosure_marshal_VOID__BOOLEAN ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$428.g_cclosure_marshal_VOID__BOOLEAN$MH, "g_cclosure_marshal_VOID__BOOLEAN");
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__BOOLEANv$MH() {
        return RuntimeHelper.requireNonNull(constants$428.g_cclosure_marshal_VOID__BOOLEANv$MH,"g_cclosure_marshal_VOID__BOOLEANv");
    }
    public static void g_cclosure_marshal_VOID__BOOLEANv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = RuntimeHelper.requireNonNull(constants$428.g_cclosure_marshal_VOID__BOOLEANv$MH, "g_cclosure_marshal_VOID__BOOLEANv");
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__CHAR$MH() {
        return RuntimeHelper.requireNonNull(constants$428.g_cclosure_marshal_VOID__CHAR$MH,"g_cclosure_marshal_VOID__CHAR");
    }
    public static void g_cclosure_marshal_VOID__CHAR ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$428.g_cclosure_marshal_VOID__CHAR$MH, "g_cclosure_marshal_VOID__CHAR");
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__CHARv$MH() {
        return RuntimeHelper.requireNonNull(constants$428.g_cclosure_marshal_VOID__CHARv$MH,"g_cclosure_marshal_VOID__CHARv");
    }
    public static void g_cclosure_marshal_VOID__CHARv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = RuntimeHelper.requireNonNull(constants$428.g_cclosure_marshal_VOID__CHARv$MH, "g_cclosure_marshal_VOID__CHARv");
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__UCHAR$MH() {
        return RuntimeHelper.requireNonNull(constants$428.g_cclosure_marshal_VOID__UCHAR$MH,"g_cclosure_marshal_VOID__UCHAR");
    }
    public static void g_cclosure_marshal_VOID__UCHAR ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$428.g_cclosure_marshal_VOID__UCHAR$MH, "g_cclosure_marshal_VOID__UCHAR");
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__UCHARv$MH() {
        return RuntimeHelper.requireNonNull(constants$428.g_cclosure_marshal_VOID__UCHARv$MH,"g_cclosure_marshal_VOID__UCHARv");
    }
    public static void g_cclosure_marshal_VOID__UCHARv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = RuntimeHelper.requireNonNull(constants$428.g_cclosure_marshal_VOID__UCHARv$MH, "g_cclosure_marshal_VOID__UCHARv");
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__INT$MH() {
        return RuntimeHelper.requireNonNull(constants$429.g_cclosure_marshal_VOID__INT$MH,"g_cclosure_marshal_VOID__INT");
    }
    public static void g_cclosure_marshal_VOID__INT ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$429.g_cclosure_marshal_VOID__INT$MH, "g_cclosure_marshal_VOID__INT");
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__INTv$MH() {
        return RuntimeHelper.requireNonNull(constants$429.g_cclosure_marshal_VOID__INTv$MH,"g_cclosure_marshal_VOID__INTv");
    }
    public static void g_cclosure_marshal_VOID__INTv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = RuntimeHelper.requireNonNull(constants$429.g_cclosure_marshal_VOID__INTv$MH, "g_cclosure_marshal_VOID__INTv");
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__UINT$MH() {
        return RuntimeHelper.requireNonNull(constants$429.g_cclosure_marshal_VOID__UINT$MH,"g_cclosure_marshal_VOID__UINT");
    }
    public static void g_cclosure_marshal_VOID__UINT ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$429.g_cclosure_marshal_VOID__UINT$MH, "g_cclosure_marshal_VOID__UINT");
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__UINTv$MH() {
        return RuntimeHelper.requireNonNull(constants$429.g_cclosure_marshal_VOID__UINTv$MH,"g_cclosure_marshal_VOID__UINTv");
    }
    public static void g_cclosure_marshal_VOID__UINTv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = RuntimeHelper.requireNonNull(constants$429.g_cclosure_marshal_VOID__UINTv$MH, "g_cclosure_marshal_VOID__UINTv");
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__LONG$MH() {
        return RuntimeHelper.requireNonNull(constants$429.g_cclosure_marshal_VOID__LONG$MH,"g_cclosure_marshal_VOID__LONG");
    }
    public static void g_cclosure_marshal_VOID__LONG ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$429.g_cclosure_marshal_VOID__LONG$MH, "g_cclosure_marshal_VOID__LONG");
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__LONGv$MH() {
        return RuntimeHelper.requireNonNull(constants$429.g_cclosure_marshal_VOID__LONGv$MH,"g_cclosure_marshal_VOID__LONGv");
    }
    public static void g_cclosure_marshal_VOID__LONGv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = RuntimeHelper.requireNonNull(constants$429.g_cclosure_marshal_VOID__LONGv$MH, "g_cclosure_marshal_VOID__LONGv");
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__ULONG$MH() {
        return RuntimeHelper.requireNonNull(constants$430.g_cclosure_marshal_VOID__ULONG$MH,"g_cclosure_marshal_VOID__ULONG");
    }
    public static void g_cclosure_marshal_VOID__ULONG ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$430.g_cclosure_marshal_VOID__ULONG$MH, "g_cclosure_marshal_VOID__ULONG");
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__ULONGv$MH() {
        return RuntimeHelper.requireNonNull(constants$430.g_cclosure_marshal_VOID__ULONGv$MH,"g_cclosure_marshal_VOID__ULONGv");
    }
    public static void g_cclosure_marshal_VOID__ULONGv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = RuntimeHelper.requireNonNull(constants$430.g_cclosure_marshal_VOID__ULONGv$MH, "g_cclosure_marshal_VOID__ULONGv");
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__ENUM$MH() {
        return RuntimeHelper.requireNonNull(constants$430.g_cclosure_marshal_VOID__ENUM$MH,"g_cclosure_marshal_VOID__ENUM");
    }
    public static void g_cclosure_marshal_VOID__ENUM ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$430.g_cclosure_marshal_VOID__ENUM$MH, "g_cclosure_marshal_VOID__ENUM");
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__ENUMv$MH() {
        return RuntimeHelper.requireNonNull(constants$430.g_cclosure_marshal_VOID__ENUMv$MH,"g_cclosure_marshal_VOID__ENUMv");
    }
    public static void g_cclosure_marshal_VOID__ENUMv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = RuntimeHelper.requireNonNull(constants$430.g_cclosure_marshal_VOID__ENUMv$MH, "g_cclosure_marshal_VOID__ENUMv");
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__FLAGS$MH() {
        return RuntimeHelper.requireNonNull(constants$430.g_cclosure_marshal_VOID__FLAGS$MH,"g_cclosure_marshal_VOID__FLAGS");
    }
    public static void g_cclosure_marshal_VOID__FLAGS ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$430.g_cclosure_marshal_VOID__FLAGS$MH, "g_cclosure_marshal_VOID__FLAGS");
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__FLAGSv$MH() {
        return RuntimeHelper.requireNonNull(constants$430.g_cclosure_marshal_VOID__FLAGSv$MH,"g_cclosure_marshal_VOID__FLAGSv");
    }
    public static void g_cclosure_marshal_VOID__FLAGSv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = RuntimeHelper.requireNonNull(constants$430.g_cclosure_marshal_VOID__FLAGSv$MH, "g_cclosure_marshal_VOID__FLAGSv");
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__FLOAT$MH() {
        return RuntimeHelper.requireNonNull(constants$431.g_cclosure_marshal_VOID__FLOAT$MH,"g_cclosure_marshal_VOID__FLOAT");
    }
    public static void g_cclosure_marshal_VOID__FLOAT ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$431.g_cclosure_marshal_VOID__FLOAT$MH, "g_cclosure_marshal_VOID__FLOAT");
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__FLOATv$MH() {
        return RuntimeHelper.requireNonNull(constants$431.g_cclosure_marshal_VOID__FLOATv$MH,"g_cclosure_marshal_VOID__FLOATv");
    }
    public static void g_cclosure_marshal_VOID__FLOATv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = RuntimeHelper.requireNonNull(constants$431.g_cclosure_marshal_VOID__FLOATv$MH, "g_cclosure_marshal_VOID__FLOATv");
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__DOUBLE$MH() {
        return RuntimeHelper.requireNonNull(constants$431.g_cclosure_marshal_VOID__DOUBLE$MH,"g_cclosure_marshal_VOID__DOUBLE");
    }
    public static void g_cclosure_marshal_VOID__DOUBLE ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$431.g_cclosure_marshal_VOID__DOUBLE$MH, "g_cclosure_marshal_VOID__DOUBLE");
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__DOUBLEv$MH() {
        return RuntimeHelper.requireNonNull(constants$431.g_cclosure_marshal_VOID__DOUBLEv$MH,"g_cclosure_marshal_VOID__DOUBLEv");
    }
    public static void g_cclosure_marshal_VOID__DOUBLEv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = RuntimeHelper.requireNonNull(constants$431.g_cclosure_marshal_VOID__DOUBLEv$MH, "g_cclosure_marshal_VOID__DOUBLEv");
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__STRING$MH() {
        return RuntimeHelper.requireNonNull(constants$431.g_cclosure_marshal_VOID__STRING$MH,"g_cclosure_marshal_VOID__STRING");
    }
    public static void g_cclosure_marshal_VOID__STRING ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$431.g_cclosure_marshal_VOID__STRING$MH, "g_cclosure_marshal_VOID__STRING");
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__STRINGv$MH() {
        return RuntimeHelper.requireNonNull(constants$431.g_cclosure_marshal_VOID__STRINGv$MH,"g_cclosure_marshal_VOID__STRINGv");
    }
    public static void g_cclosure_marshal_VOID__STRINGv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = RuntimeHelper.requireNonNull(constants$431.g_cclosure_marshal_VOID__STRINGv$MH, "g_cclosure_marshal_VOID__STRINGv");
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__PARAM$MH() {
        return RuntimeHelper.requireNonNull(constants$432.g_cclosure_marshal_VOID__PARAM$MH,"g_cclosure_marshal_VOID__PARAM");
    }
    public static void g_cclosure_marshal_VOID__PARAM ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$432.g_cclosure_marshal_VOID__PARAM$MH, "g_cclosure_marshal_VOID__PARAM");
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__PARAMv$MH() {
        return RuntimeHelper.requireNonNull(constants$432.g_cclosure_marshal_VOID__PARAMv$MH,"g_cclosure_marshal_VOID__PARAMv");
    }
    public static void g_cclosure_marshal_VOID__PARAMv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = RuntimeHelper.requireNonNull(constants$432.g_cclosure_marshal_VOID__PARAMv$MH, "g_cclosure_marshal_VOID__PARAMv");
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__BOXED$MH() {
        return RuntimeHelper.requireNonNull(constants$432.g_cclosure_marshal_VOID__BOXED$MH,"g_cclosure_marshal_VOID__BOXED");
    }
    public static void g_cclosure_marshal_VOID__BOXED ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$432.g_cclosure_marshal_VOID__BOXED$MH, "g_cclosure_marshal_VOID__BOXED");
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__BOXEDv$MH() {
        return RuntimeHelper.requireNonNull(constants$432.g_cclosure_marshal_VOID__BOXEDv$MH,"g_cclosure_marshal_VOID__BOXEDv");
    }
    public static void g_cclosure_marshal_VOID__BOXEDv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = RuntimeHelper.requireNonNull(constants$432.g_cclosure_marshal_VOID__BOXEDv$MH, "g_cclosure_marshal_VOID__BOXEDv");
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__POINTER$MH() {
        return RuntimeHelper.requireNonNull(constants$432.g_cclosure_marshal_VOID__POINTER$MH,"g_cclosure_marshal_VOID__POINTER");
    }
    public static void g_cclosure_marshal_VOID__POINTER ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$432.g_cclosure_marshal_VOID__POINTER$MH, "g_cclosure_marshal_VOID__POINTER");
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__POINTERv$MH() {
        return RuntimeHelper.requireNonNull(constants$432.g_cclosure_marshal_VOID__POINTERv$MH,"g_cclosure_marshal_VOID__POINTERv");
    }
    public static void g_cclosure_marshal_VOID__POINTERv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = RuntimeHelper.requireNonNull(constants$432.g_cclosure_marshal_VOID__POINTERv$MH, "g_cclosure_marshal_VOID__POINTERv");
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__OBJECT$MH() {
        return RuntimeHelper.requireNonNull(constants$433.g_cclosure_marshal_VOID__OBJECT$MH,"g_cclosure_marshal_VOID__OBJECT");
    }
    public static void g_cclosure_marshal_VOID__OBJECT ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$433.g_cclosure_marshal_VOID__OBJECT$MH, "g_cclosure_marshal_VOID__OBJECT");
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__OBJECTv$MH() {
        return RuntimeHelper.requireNonNull(constants$433.g_cclosure_marshal_VOID__OBJECTv$MH,"g_cclosure_marshal_VOID__OBJECTv");
    }
    public static void g_cclosure_marshal_VOID__OBJECTv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = RuntimeHelper.requireNonNull(constants$433.g_cclosure_marshal_VOID__OBJECTv$MH, "g_cclosure_marshal_VOID__OBJECTv");
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__VARIANT$MH() {
        return RuntimeHelper.requireNonNull(constants$433.g_cclosure_marshal_VOID__VARIANT$MH,"g_cclosure_marshal_VOID__VARIANT");
    }
    public static void g_cclosure_marshal_VOID__VARIANT ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$433.g_cclosure_marshal_VOID__VARIANT$MH, "g_cclosure_marshal_VOID__VARIANT");
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__VARIANTv$MH() {
        return RuntimeHelper.requireNonNull(constants$433.g_cclosure_marshal_VOID__VARIANTv$MH,"g_cclosure_marshal_VOID__VARIANTv");
    }
    public static void g_cclosure_marshal_VOID__VARIANTv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = RuntimeHelper.requireNonNull(constants$433.g_cclosure_marshal_VOID__VARIANTv$MH, "g_cclosure_marshal_VOID__VARIANTv");
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__UINT_POINTER$MH() {
        return RuntimeHelper.requireNonNull(constants$433.g_cclosure_marshal_VOID__UINT_POINTER$MH,"g_cclosure_marshal_VOID__UINT_POINTER");
    }
    public static void g_cclosure_marshal_VOID__UINT_POINTER ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$433.g_cclosure_marshal_VOID__UINT_POINTER$MH, "g_cclosure_marshal_VOID__UINT_POINTER");
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_VOID__UINT_POINTERv$MH() {
        return RuntimeHelper.requireNonNull(constants$433.g_cclosure_marshal_VOID__UINT_POINTERv$MH,"g_cclosure_marshal_VOID__UINT_POINTERv");
    }
    public static void g_cclosure_marshal_VOID__UINT_POINTERv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = RuntimeHelper.requireNonNull(constants$433.g_cclosure_marshal_VOID__UINT_POINTERv$MH, "g_cclosure_marshal_VOID__UINT_POINTERv");
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_BOOLEAN__FLAGS$MH() {
        return RuntimeHelper.requireNonNull(constants$434.g_cclosure_marshal_BOOLEAN__FLAGS$MH,"g_cclosure_marshal_BOOLEAN__FLAGS");
    }
    public static void g_cclosure_marshal_BOOLEAN__FLAGS ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$434.g_cclosure_marshal_BOOLEAN__FLAGS$MH, "g_cclosure_marshal_BOOLEAN__FLAGS");
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_BOOLEAN__FLAGSv$MH() {
        return RuntimeHelper.requireNonNull(constants$434.g_cclosure_marshal_BOOLEAN__FLAGSv$MH,"g_cclosure_marshal_BOOLEAN__FLAGSv");
    }
    public static void g_cclosure_marshal_BOOLEAN__FLAGSv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = RuntimeHelper.requireNonNull(constants$434.g_cclosure_marshal_BOOLEAN__FLAGSv$MH, "g_cclosure_marshal_BOOLEAN__FLAGSv");
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_STRING__OBJECT_POINTER$MH() {
        return RuntimeHelper.requireNonNull(constants$434.g_cclosure_marshal_STRING__OBJECT_POINTER$MH,"g_cclosure_marshal_STRING__OBJECT_POINTER");
    }
    public static void g_cclosure_marshal_STRING__OBJECT_POINTER ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$434.g_cclosure_marshal_STRING__OBJECT_POINTER$MH, "g_cclosure_marshal_STRING__OBJECT_POINTER");
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_STRING__OBJECT_POINTERv$MH() {
        return RuntimeHelper.requireNonNull(constants$434.g_cclosure_marshal_STRING__OBJECT_POINTERv$MH,"g_cclosure_marshal_STRING__OBJECT_POINTERv");
    }
    public static void g_cclosure_marshal_STRING__OBJECT_POINTERv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = RuntimeHelper.requireNonNull(constants$434.g_cclosure_marshal_STRING__OBJECT_POINTERv$MH, "g_cclosure_marshal_STRING__OBJECT_POINTERv");
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_BOOLEAN__BOXED_BOXED$MH() {
        return RuntimeHelper.requireNonNull(constants$434.g_cclosure_marshal_BOOLEAN__BOXED_BOXED$MH,"g_cclosure_marshal_BOOLEAN__BOXED_BOXED");
    }
    public static void g_cclosure_marshal_BOOLEAN__BOXED_BOXED ( Addressable closure,  Addressable return_value,  int n_param_values,  Addressable param_values,  Addressable invocation_hint,  Addressable marshal_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$434.g_cclosure_marshal_BOOLEAN__BOXED_BOXED$MH, "g_cclosure_marshal_BOOLEAN__BOXED_BOXED");
        try {
            mh$.invokeExact(closure, return_value, n_param_values, param_values, invocation_hint, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv$MH() {
        return RuntimeHelper.requireNonNull(constants$434.g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv$MH,"g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv");
    }
    public static void g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv ( Addressable closure,  Addressable return_value,  Addressable instance,  Addressable args,  Addressable marshal_data,  int n_params,  Addressable param_types) {
        var mh$ = RuntimeHelper.requireNonNull(constants$434.g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv$MH, "g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv");
        try {
            mh$.invokeExact(closure, return_value, instance, args, marshal_data, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_SIGNAL_RUN_FIRST() {
        return (int)1L;
    }
    public static int G_SIGNAL_RUN_LAST() {
        return (int)2L;
    }
    public static int G_SIGNAL_RUN_CLEANUP() {
        return (int)4L;
    }
    public static int G_SIGNAL_NO_RECURSE() {
        return (int)8L;
    }
    public static int G_SIGNAL_DETAILED() {
        return (int)16L;
    }
    public static int G_SIGNAL_ACTION() {
        return (int)32L;
    }
    public static int G_SIGNAL_NO_HOOKS() {
        return (int)64L;
    }
    public static int G_SIGNAL_MUST_COLLECT() {
        return (int)128L;
    }
    public static int G_SIGNAL_DEPRECATED() {
        return (int)256L;
    }
    public static int G_CONNECT_AFTER() {
        return (int)1L;
    }
    public static int G_CONNECT_SWAPPED() {
        return (int)2L;
    }
    public static int G_SIGNAL_MATCH_ID() {
        return (int)1L;
    }
    public static int G_SIGNAL_MATCH_DETAIL() {
        return (int)2L;
    }
    public static int G_SIGNAL_MATCH_CLOSURE() {
        return (int)4L;
    }
    public static int G_SIGNAL_MATCH_FUNC() {
        return (int)8L;
    }
    public static int G_SIGNAL_MATCH_DATA() {
        return (int)16L;
    }
    public static int G_SIGNAL_MATCH_UNBLOCKED() {
        return (int)32L;
    }
    public static MethodHandle g_signal_newv$MH() {
        return RuntimeHelper.requireNonNull(constants$436.g_signal_newv$MH,"g_signal_newv");
    }
    public static int g_signal_newv ( Addressable signal_name,  long itype,  int signal_flags,  Addressable class_closure,  Addressable accumulator,  Addressable accu_data,  Addressable c_marshaller,  long return_type,  int n_params,  Addressable param_types) {
        var mh$ = RuntimeHelper.requireNonNull(constants$436.g_signal_newv$MH, "g_signal_newv");
        try {
            return (int)mh$.invokeExact(signal_name, itype, signal_flags, class_closure, accumulator, accu_data, c_marshaller, return_type, n_params, param_types);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_new_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$436.g_signal_new_valist$MH,"g_signal_new_valist");
    }
    public static int g_signal_new_valist ( Addressable signal_name,  long itype,  int signal_flags,  Addressable class_closure,  Addressable accumulator,  Addressable accu_data,  Addressable c_marshaller,  long return_type,  int n_params,  Addressable args) {
        var mh$ = RuntimeHelper.requireNonNull(constants$436.g_signal_new_valist$MH, "g_signal_new_valist");
        try {
            return (int)mh$.invokeExact(signal_name, itype, signal_flags, class_closure, accumulator, accu_data, c_marshaller, return_type, n_params, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_new$MH() {
        return RuntimeHelper.requireNonNull(constants$436.g_signal_new$MH,"g_signal_new");
    }
    public static int g_signal_new ( Addressable signal_name,  long itype,  int signal_flags,  int class_offset,  Addressable accumulator,  Addressable accu_data,  Addressable c_marshaller,  long return_type,  int n_params, Object... x9) {
        var mh$ = RuntimeHelper.requireNonNull(constants$436.g_signal_new$MH, "g_signal_new");
        try {
            return (int)mh$.invokeExact(signal_name, itype, signal_flags, class_offset, accumulator, accu_data, c_marshaller, return_type, n_params, x9);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_new_class_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$436.g_signal_new_class_handler$MH,"g_signal_new_class_handler");
    }
    public static int g_signal_new_class_handler ( Addressable signal_name,  long itype,  int signal_flags,  Addressable class_handler,  Addressable accumulator,  Addressable accu_data,  Addressable c_marshaller,  long return_type,  int n_params, Object... x9) {
        var mh$ = RuntimeHelper.requireNonNull(constants$436.g_signal_new_class_handler$MH, "g_signal_new_class_handler");
        try {
            return (int)mh$.invokeExact(signal_name, itype, signal_flags, class_handler, accumulator, accu_data, c_marshaller, return_type, n_params, x9);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_set_va_marshaller$MH() {
        return RuntimeHelper.requireNonNull(constants$437.g_signal_set_va_marshaller$MH,"g_signal_set_va_marshaller");
    }
    public static void g_signal_set_va_marshaller ( int signal_id,  long instance_type,  Addressable va_marshaller) {
        var mh$ = RuntimeHelper.requireNonNull(constants$437.g_signal_set_va_marshaller$MH, "g_signal_set_va_marshaller");
        try {
            mh$.invokeExact(signal_id, instance_type, va_marshaller);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_emitv$MH() {
        return RuntimeHelper.requireNonNull(constants$437.g_signal_emitv$MH,"g_signal_emitv");
    }
    public static void g_signal_emitv ( Addressable instance_and_params,  int signal_id,  int detail,  Addressable return_value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$437.g_signal_emitv$MH, "g_signal_emitv");
        try {
            mh$.invokeExact(instance_and_params, signal_id, detail, return_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_emit_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$437.g_signal_emit_valist$MH,"g_signal_emit_valist");
    }
    public static void g_signal_emit_valist ( Addressable instance,  int signal_id,  int detail,  Addressable var_args) {
        var mh$ = RuntimeHelper.requireNonNull(constants$437.g_signal_emit_valist$MH, "g_signal_emit_valist");
        try {
            mh$.invokeExact(instance, signal_id, detail, var_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_emit$MH() {
        return RuntimeHelper.requireNonNull(constants$437.g_signal_emit$MH,"g_signal_emit");
    }
    public static void g_signal_emit ( Addressable instance,  int signal_id,  int detail, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$437.g_signal_emit$MH, "g_signal_emit");
        try {
            mh$.invokeExact(instance, signal_id, detail, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_emit_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$437.g_signal_emit_by_name$MH,"g_signal_emit_by_name");
    }
    public static void g_signal_emit_by_name ( Addressable instance,  Addressable detailed_signal, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$437.g_signal_emit_by_name$MH, "g_signal_emit_by_name");
        try {
            mh$.invokeExact(instance, detailed_signal, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$437.g_signal_lookup$MH,"g_signal_lookup");
    }
    public static int g_signal_lookup ( Addressable name,  long itype) {
        var mh$ = RuntimeHelper.requireNonNull(constants$437.g_signal_lookup$MH, "g_signal_lookup");
        try {
            return (int)mh$.invokeExact(name, itype);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_name$MH() {
        return RuntimeHelper.requireNonNull(constants$438.g_signal_name$MH,"g_signal_name");
    }
    public static MemoryAddress g_signal_name ( int signal_id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$438.g_signal_name$MH, "g_signal_name");
        try {
            return (MemoryAddress)mh$.invokeExact(signal_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_query$MH() {
        return RuntimeHelper.requireNonNull(constants$438.g_signal_query$MH,"g_signal_query");
    }
    public static void g_signal_query ( int signal_id,  Addressable query) {
        var mh$ = RuntimeHelper.requireNonNull(constants$438.g_signal_query$MH, "g_signal_query");
        try {
            mh$.invokeExact(signal_id, query);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_list_ids$MH() {
        return RuntimeHelper.requireNonNull(constants$438.g_signal_list_ids$MH,"g_signal_list_ids");
    }
    public static MemoryAddress g_signal_list_ids ( long itype,  Addressable n_ids) {
        var mh$ = RuntimeHelper.requireNonNull(constants$438.g_signal_list_ids$MH, "g_signal_list_ids");
        try {
            return (MemoryAddress)mh$.invokeExact(itype, n_ids);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_parse_name$MH() {
        return RuntimeHelper.requireNonNull(constants$438.g_signal_parse_name$MH,"g_signal_parse_name");
    }
    public static int g_signal_parse_name ( Addressable detailed_signal,  long itype,  Addressable signal_id_p,  Addressable detail_p,  int force_detail_quark) {
        var mh$ = RuntimeHelper.requireNonNull(constants$438.g_signal_parse_name$MH, "g_signal_parse_name");
        try {
            return (int)mh$.invokeExact(detailed_signal, itype, signal_id_p, detail_p, force_detail_quark);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_get_invocation_hint$MH() {
        return RuntimeHelper.requireNonNull(constants$438.g_signal_get_invocation_hint$MH,"g_signal_get_invocation_hint");
    }
    public static MemoryAddress g_signal_get_invocation_hint ( Addressable instance) {
        var mh$ = RuntimeHelper.requireNonNull(constants$438.g_signal_get_invocation_hint$MH, "g_signal_get_invocation_hint");
        try {
            return (MemoryAddress)mh$.invokeExact(instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_stop_emission$MH() {
        return RuntimeHelper.requireNonNull(constants$438.g_signal_stop_emission$MH,"g_signal_stop_emission");
    }
    public static void g_signal_stop_emission ( Addressable instance,  int signal_id,  int detail) {
        var mh$ = RuntimeHelper.requireNonNull(constants$438.g_signal_stop_emission$MH, "g_signal_stop_emission");
        try {
            mh$.invokeExact(instance, signal_id, detail);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_stop_emission_by_name$MH() {
        return RuntimeHelper.requireNonNull(constants$439.g_signal_stop_emission_by_name$MH,"g_signal_stop_emission_by_name");
    }
    public static void g_signal_stop_emission_by_name ( Addressable instance,  Addressable detailed_signal) {
        var mh$ = RuntimeHelper.requireNonNull(constants$439.g_signal_stop_emission_by_name$MH, "g_signal_stop_emission_by_name");
        try {
            mh$.invokeExact(instance, detailed_signal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_add_emission_hook$MH() {
        return RuntimeHelper.requireNonNull(constants$439.g_signal_add_emission_hook$MH,"g_signal_add_emission_hook");
    }
    public static long g_signal_add_emission_hook ( int signal_id,  int detail,  Addressable hook_func,  Addressable hook_data,  Addressable data_destroy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$439.g_signal_add_emission_hook$MH, "g_signal_add_emission_hook");
        try {
            return (long)mh$.invokeExact(signal_id, detail, hook_func, hook_data, data_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_remove_emission_hook$MH() {
        return RuntimeHelper.requireNonNull(constants$439.g_signal_remove_emission_hook$MH,"g_signal_remove_emission_hook");
    }
    public static void g_signal_remove_emission_hook ( int signal_id,  long hook_id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$439.g_signal_remove_emission_hook$MH, "g_signal_remove_emission_hook");
        try {
            mh$.invokeExact(signal_id, hook_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_has_handler_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$439.g_signal_has_handler_pending$MH,"g_signal_has_handler_pending");
    }
    public static int g_signal_has_handler_pending ( Addressable instance,  int signal_id,  int detail,  int may_be_blocked) {
        var mh$ = RuntimeHelper.requireNonNull(constants$439.g_signal_has_handler_pending$MH, "g_signal_has_handler_pending");
        try {
            return (int)mh$.invokeExact(instance, signal_id, detail, may_be_blocked);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_connect_closure_by_id$MH() {
        return RuntimeHelper.requireNonNull(constants$439.g_signal_connect_closure_by_id$MH,"g_signal_connect_closure_by_id");
    }
    public static long g_signal_connect_closure_by_id ( Addressable instance,  int signal_id,  int detail,  Addressable closure,  int after) {
        var mh$ = RuntimeHelper.requireNonNull(constants$439.g_signal_connect_closure_by_id$MH, "g_signal_connect_closure_by_id");
        try {
            return (long)mh$.invokeExact(instance, signal_id, detail, closure, after);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_connect_closure$MH() {
        return RuntimeHelper.requireNonNull(constants$439.g_signal_connect_closure$MH,"g_signal_connect_closure");
    }
    public static long g_signal_connect_closure ( Addressable instance,  Addressable detailed_signal,  Addressable closure,  int after) {
        var mh$ = RuntimeHelper.requireNonNull(constants$439.g_signal_connect_closure$MH, "g_signal_connect_closure");
        try {
            return (long)mh$.invokeExact(instance, detailed_signal, closure, after);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_connect_data$MH() {
        return RuntimeHelper.requireNonNull(constants$440.g_signal_connect_data$MH,"g_signal_connect_data");
    }
    public static long g_signal_connect_data ( Addressable instance,  Addressable detailed_signal,  Addressable c_handler,  Addressable data,  Addressable destroy_data,  int connect_flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$440.g_signal_connect_data$MH, "g_signal_connect_data");
        try {
            return (long)mh$.invokeExact(instance, detailed_signal, c_handler, data, destroy_data, connect_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handler_block$MH() {
        return RuntimeHelper.requireNonNull(constants$440.g_signal_handler_block$MH,"g_signal_handler_block");
    }
    public static void g_signal_handler_block ( Addressable instance,  long handler_id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$440.g_signal_handler_block$MH, "g_signal_handler_block");
        try {
            mh$.invokeExact(instance, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handler_unblock$MH() {
        return RuntimeHelper.requireNonNull(constants$440.g_signal_handler_unblock$MH,"g_signal_handler_unblock");
    }
    public static void g_signal_handler_unblock ( Addressable instance,  long handler_id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$440.g_signal_handler_unblock$MH, "g_signal_handler_unblock");
        try {
            mh$.invokeExact(instance, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handler_disconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$440.g_signal_handler_disconnect$MH,"g_signal_handler_disconnect");
    }
    public static void g_signal_handler_disconnect ( Addressable instance,  long handler_id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$440.g_signal_handler_disconnect$MH, "g_signal_handler_disconnect");
        try {
            mh$.invokeExact(instance, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handler_is_connected$MH() {
        return RuntimeHelper.requireNonNull(constants$440.g_signal_handler_is_connected$MH,"g_signal_handler_is_connected");
    }
    public static int g_signal_handler_is_connected ( Addressable instance,  long handler_id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$440.g_signal_handler_is_connected$MH, "g_signal_handler_is_connected");
        try {
            return (int)mh$.invokeExact(instance, handler_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handler_find$MH() {
        return RuntimeHelper.requireNonNull(constants$440.g_signal_handler_find$MH,"g_signal_handler_find");
    }
    public static long g_signal_handler_find ( Addressable instance,  int mask,  int signal_id,  int detail,  Addressable closure,  Addressable func,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$440.g_signal_handler_find$MH, "g_signal_handler_find");
        try {
            return (long)mh$.invokeExact(instance, mask, signal_id, detail, closure, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handlers_block_matched$MH() {
        return RuntimeHelper.requireNonNull(constants$441.g_signal_handlers_block_matched$MH,"g_signal_handlers_block_matched");
    }
    public static int g_signal_handlers_block_matched ( Addressable instance,  int mask,  int signal_id,  int detail,  Addressable closure,  Addressable func,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$441.g_signal_handlers_block_matched$MH, "g_signal_handlers_block_matched");
        try {
            return (int)mh$.invokeExact(instance, mask, signal_id, detail, closure, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handlers_unblock_matched$MH() {
        return RuntimeHelper.requireNonNull(constants$441.g_signal_handlers_unblock_matched$MH,"g_signal_handlers_unblock_matched");
    }
    public static int g_signal_handlers_unblock_matched ( Addressable instance,  int mask,  int signal_id,  int detail,  Addressable closure,  Addressable func,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$441.g_signal_handlers_unblock_matched$MH, "g_signal_handlers_unblock_matched");
        try {
            return (int)mh$.invokeExact(instance, mask, signal_id, detail, closure, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handlers_disconnect_matched$MH() {
        return RuntimeHelper.requireNonNull(constants$441.g_signal_handlers_disconnect_matched$MH,"g_signal_handlers_disconnect_matched");
    }
    public static int g_signal_handlers_disconnect_matched ( Addressable instance,  int mask,  int signal_id,  int detail,  Addressable closure,  Addressable func,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$441.g_signal_handlers_disconnect_matched$MH, "g_signal_handlers_disconnect_matched");
        try {
            return (int)mh$.invokeExact(instance, mask, signal_id, detail, closure, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_clear_signal_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$441.g_clear_signal_handler$MH,"g_clear_signal_handler");
    }
    public static void g_clear_signal_handler ( Addressable handler_id_ptr,  Addressable instance) {
        var mh$ = RuntimeHelper.requireNonNull(constants$441.g_clear_signal_handler$MH, "g_clear_signal_handler");
        try {
            mh$.invokeExact(handler_id_ptr, instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_override_class_closure$MH() {
        return RuntimeHelper.requireNonNull(constants$441.g_signal_override_class_closure$MH,"g_signal_override_class_closure");
    }
    public static void g_signal_override_class_closure ( int signal_id,  long instance_type,  Addressable class_closure) {
        var mh$ = RuntimeHelper.requireNonNull(constants$441.g_signal_override_class_closure$MH, "g_signal_override_class_closure");
        try {
            mh$.invokeExact(signal_id, instance_type, class_closure);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_override_class_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$441.g_signal_override_class_handler$MH,"g_signal_override_class_handler");
    }
    public static void g_signal_override_class_handler ( Addressable signal_name,  long instance_type,  Addressable class_handler) {
        var mh$ = RuntimeHelper.requireNonNull(constants$441.g_signal_override_class_handler$MH, "g_signal_override_class_handler");
        try {
            mh$.invokeExact(signal_name, instance_type, class_handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_chain_from_overridden$MH() {
        return RuntimeHelper.requireNonNull(constants$442.g_signal_chain_from_overridden$MH,"g_signal_chain_from_overridden");
    }
    public static void g_signal_chain_from_overridden ( Addressable instance_and_params,  Addressable return_value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$442.g_signal_chain_from_overridden$MH, "g_signal_chain_from_overridden");
        try {
            mh$.invokeExact(instance_and_params, return_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_chain_from_overridden_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$442.g_signal_chain_from_overridden_handler$MH,"g_signal_chain_from_overridden_handler");
    }
    public static void g_signal_chain_from_overridden_handler ( Addressable instance, Object... x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$442.g_signal_chain_from_overridden_handler$MH, "g_signal_chain_from_overridden_handler");
        try {
            mh$.invokeExact(instance, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_accumulator_true_handled$MH() {
        return RuntimeHelper.requireNonNull(constants$442.g_signal_accumulator_true_handled$MH,"g_signal_accumulator_true_handled");
    }
    public static int g_signal_accumulator_true_handled ( Addressable ihint,  Addressable return_accu,  Addressable handler_return,  Addressable dummy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$442.g_signal_accumulator_true_handled$MH, "g_signal_accumulator_true_handled");
        try {
            return (int)mh$.invokeExact(ihint, return_accu, handler_return, dummy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_accumulator_first_wins$MH() {
        return RuntimeHelper.requireNonNull(constants$442.g_signal_accumulator_first_wins$MH,"g_signal_accumulator_first_wins");
    }
    public static int g_signal_accumulator_first_wins ( Addressable ihint,  Addressable return_accu,  Addressable handler_return,  Addressable dummy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$442.g_signal_accumulator_first_wins$MH, "g_signal_accumulator_first_wins");
        try {
            return (int)mh$.invokeExact(ihint, return_accu, handler_return, dummy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_signal_handlers_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$442.g_signal_handlers_destroy$MH,"g_signal_handlers_destroy");
    }
    public static void g_signal_handlers_destroy ( Addressable instance) {
        var mh$ = RuntimeHelper.requireNonNull(constants$442.g_signal_handlers_destroy$MH, "g_signal_handlers_destroy");
        try {
            mh$.invokeExact(instance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _g_signals_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$442._g_signals_destroy$MH,"_g_signals_destroy");
    }
    public static void _g_signals_destroy ( long itype) {
        var mh$ = RuntimeHelper.requireNonNull(constants$442._g_signals_destroy$MH, "_g_signals_destroy");
        try {
            mh$.invokeExact(itype);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$443.g_date_get_type$MH,"g_date_get_type");
    }
    public static long g_date_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$443.g_date_get_type$MH, "g_date_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strv_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$443.g_strv_get_type$MH,"g_strv_get_type");
    }
    public static long g_strv_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$443.g_strv_get_type$MH, "g_strv_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_gstring_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$443.g_gstring_get_type$MH,"g_gstring_get_type");
    }
    public static long g_gstring_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$443.g_gstring_get_type$MH, "g_gstring_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$443.g_hash_table_get_type$MH,"g_hash_table_get_type");
    }
    public static long g_hash_table_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$443.g_hash_table_get_type$MH, "g_hash_table_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_array_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$443.g_array_get_type$MH,"g_array_get_type");
    }
    public static long g_array_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$443.g_array_get_type$MH, "g_array_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_byte_array_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$443.g_byte_array_get_type$MH,"g_byte_array_get_type");
    }
    public static long g_byte_array_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$443.g_byte_array_get_type$MH, "g_byte_array_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_ptr_array_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$444.g_ptr_array_get_type$MH,"g_ptr_array_get_type");
    }
    public static long g_ptr_array_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$444.g_ptr_array_get_type$MH, "g_ptr_array_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_bytes_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$444.g_bytes_get_type$MH,"g_bytes_get_type");
    }
    public static long g_bytes_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$444.g_bytes_get_type$MH, "g_bytes_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_type_get_gtype$MH() {
        return RuntimeHelper.requireNonNull(constants$444.g_variant_type_get_gtype$MH,"g_variant_type_get_gtype");
    }
    public static long g_variant_type_get_gtype () {
        var mh$ = RuntimeHelper.requireNonNull(constants$444.g_variant_type_get_gtype$MH, "g_variant_type_get_gtype");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_regex_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$444.g_regex_get_type$MH,"g_regex_get_type");
    }
    public static long g_regex_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$444.g_regex_get_type$MH, "g_regex_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_match_info_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$444.g_match_info_get_type$MH,"g_match_info_get_type");
    }
    public static long g_match_info_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$444.g_match_info_get_type$MH, "g_match_info_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_error_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$444.g_error_get_type$MH,"g_error_get_type");
    }
    public static long g_error_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$444.g_error_get_type$MH, "g_error_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$445.g_date_time_get_type$MH,"g_date_time_get_type");
    }
    public static long g_date_time_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$445.g_date_time_get_type$MH, "g_date_time_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_time_zone_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$445.g_time_zone_get_type$MH,"g_time_zone_get_type");
    }
    public static long g_time_zone_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$445.g_time_zone_get_type$MH, "g_time_zone_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$445.g_io_channel_get_type$MH,"g_io_channel_get_type");
    }
    public static long g_io_channel_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$445.g_io_channel_get_type$MH, "g_io_channel_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_condition_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$445.g_io_condition_get_type$MH,"g_io_condition_get_type");
    }
    public static long g_io_condition_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$445.g_io_condition_get_type$MH, "g_io_condition_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_builder_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$445.g_variant_builder_get_type$MH,"g_variant_builder_get_type");
    }
    public static long g_variant_builder_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$445.g_variant_builder_get_type$MH, "g_variant_builder_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_dict_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$445.g_variant_dict_get_type$MH,"g_variant_dict_get_type");
    }
    public static long g_variant_dict_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$445.g_variant_dict_get_type$MH, "g_variant_dict_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_key_file_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$446.g_key_file_get_type$MH,"g_key_file_get_type");
    }
    public static long g_key_file_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$446.g_key_file_get_type$MH, "g_key_file_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_loop_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$446.g_main_loop_get_type$MH,"g_main_loop_get_type");
    }
    public static long g_main_loop_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$446.g_main_loop_get_type$MH, "g_main_loop_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$446.g_main_context_get_type$MH,"g_main_context_get_type");
    }
    public static long g_main_context_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$446.g_main_context_get_type$MH, "g_main_context_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$446.g_source_get_type$MH,"g_source_get_type");
    }
    public static long g_source_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$446.g_source_get_type$MH, "g_source_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_pollfd_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$446.g_pollfd_get_type$MH,"g_pollfd_get_type");
    }
    public static long g_pollfd_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$446.g_pollfd_get_type$MH, "g_pollfd_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_thread_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$446.g_thread_get_type$MH,"g_thread_get_type");
    }
    public static long g_thread_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$446.g_thread_get_type$MH, "g_thread_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_checksum_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$447.g_checksum_get_type$MH,"g_checksum_get_type");
    }
    public static long g_checksum_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$447.g_checksum_get_type$MH, "g_checksum_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_markup_parse_context_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$447.g_markup_parse_context_get_type$MH,"g_markup_parse_context_get_type");
    }
    public static long g_markup_parse_context_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$447.g_markup_parse_context_get_type$MH, "g_markup_parse_context_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mapped_file_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$447.g_mapped_file_get_type$MH,"g_mapped_file_get_type");
    }
    public static long g_mapped_file_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$447.g_mapped_file_get_type$MH, "g_mapped_file_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_option_group_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$447.g_option_group_get_type$MH,"g_option_group_get_type");
    }
    public static long g_option_group_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$447.g_option_group_get_type$MH, "g_option_group_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_variant_get_gtype$MH() {
        return RuntimeHelper.requireNonNull(constants$447.g_variant_get_gtype$MH,"g_variant_get_gtype");
    }
    public static long g_variant_get_gtype () {
        var mh$ = RuntimeHelper.requireNonNull(constants$447.g_variant_get_gtype$MH, "g_variant_get_gtype");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_boxed_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$448.g_boxed_copy$MH,"g_boxed_copy");
    }
    public static MemoryAddress g_boxed_copy ( long boxed_type,  Addressable src_boxed) {
        var mh$ = RuntimeHelper.requireNonNull(constants$448.g_boxed_copy$MH, "g_boxed_copy");
        try {
            return (MemoryAddress)mh$.invokeExact(boxed_type, src_boxed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_boxed_free$MH() {
        return RuntimeHelper.requireNonNull(constants$448.g_boxed_free$MH,"g_boxed_free");
    }
    public static void g_boxed_free ( long boxed_type,  Addressable boxed) {
        var mh$ = RuntimeHelper.requireNonNull(constants$448.g_boxed_free$MH, "g_boxed_free");
        try {
            mh$.invokeExact(boxed_type, boxed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_boxed$MH() {
        return RuntimeHelper.requireNonNull(constants$448.g_value_set_boxed$MH,"g_value_set_boxed");
    }
    public static void g_value_set_boxed ( Addressable value,  Addressable v_boxed) {
        var mh$ = RuntimeHelper.requireNonNull(constants$448.g_value_set_boxed$MH, "g_value_set_boxed");
        try {
            mh$.invokeExact(value, v_boxed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_static_boxed$MH() {
        return RuntimeHelper.requireNonNull(constants$449.g_value_set_static_boxed$MH,"g_value_set_static_boxed");
    }
    public static void g_value_set_static_boxed ( Addressable value,  Addressable v_boxed) {
        var mh$ = RuntimeHelper.requireNonNull(constants$449.g_value_set_static_boxed$MH, "g_value_set_static_boxed");
        try {
            mh$.invokeExact(value, v_boxed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_take_boxed$MH() {
        return RuntimeHelper.requireNonNull(constants$449.g_value_take_boxed$MH,"g_value_take_boxed");
    }
    public static void g_value_take_boxed ( Addressable value,  Addressable v_boxed) {
        var mh$ = RuntimeHelper.requireNonNull(constants$449.g_value_take_boxed$MH, "g_value_take_boxed");
        try {
            mh$.invokeExact(value, v_boxed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_set_boxed_take_ownership$MH() {
        return RuntimeHelper.requireNonNull(constants$449.g_value_set_boxed_take_ownership$MH,"g_value_set_boxed_take_ownership");
    }
    public static void g_value_set_boxed_take_ownership ( Addressable value,  Addressable v_boxed) {
        var mh$ = RuntimeHelper.requireNonNull(constants$449.g_value_set_boxed_take_ownership$MH, "g_value_set_boxed_take_ownership");
        try {
            mh$.invokeExact(value, v_boxed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_get_boxed$MH() {
        return RuntimeHelper.requireNonNull(constants$449.g_value_get_boxed$MH,"g_value_get_boxed");
    }
    public static MemoryAddress g_value_get_boxed ( Addressable value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$449.g_value_get_boxed$MH, "g_value_get_boxed");
        try {
            return (MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_value_dup_boxed$MH() {
        return RuntimeHelper.requireNonNull(constants$449.g_value_dup_boxed$MH,"g_value_dup_boxed");
    }
    public static MemoryAddress g_value_dup_boxed ( Addressable value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$449.g_value_dup_boxed$MH, "g_value_dup_boxed");
        try {
            return (MemoryAddress)mh$.invokeExact(value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_boxed_type_register_static$MH() {
        return RuntimeHelper.requireNonNull(constants$449.g_boxed_type_register_static$MH,"g_boxed_type_register_static");
    }
    public static long g_boxed_type_register_static ( Addressable name,  Addressable boxed_copy,  Addressable boxed_free) {
        var mh$ = RuntimeHelper.requireNonNull(constants$449.g_boxed_type_register_static$MH, "g_boxed_type_register_static");
        try {
            return (long)mh$.invokeExact(name, boxed_copy, boxed_free);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


