// Generated by jextract

package bluez.binding;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$306 {

    static final FunctionDescriptor g_test_queue_destroy$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_test_queue_destroy$MH = RuntimeHelper.downcallHandle(
        "g_test_queue_destroy",
        constants$306.g_test_queue_destroy$FUNC, false
    );
    static final FunctionDescriptor g_test_trap_fork$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle g_test_trap_fork$MH = RuntimeHelper.downcallHandle(
        "g_test_trap_fork",
        constants$306.g_test_trap_fork$FUNC, false
    );
    static final FunctionDescriptor g_test_trap_subprocess$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle g_test_trap_subprocess$MH = RuntimeHelper.downcallHandle(
        "g_test_trap_subprocess",
        constants$306.g_test_trap_subprocess$FUNC, false
    );
    static final FunctionDescriptor g_test_trap_has_passed$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle g_test_trap_has_passed$MH = RuntimeHelper.downcallHandle(
        "g_test_trap_has_passed",
        constants$306.g_test_trap_has_passed$FUNC, false
    );
    static final FunctionDescriptor g_test_trap_reached_timeout$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle g_test_trap_reached_timeout$MH = RuntimeHelper.downcallHandle(
        "g_test_trap_reached_timeout",
        constants$306.g_test_trap_reached_timeout$FUNC, false
    );
    static final FunctionDescriptor g_test_rand_int$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle g_test_rand_int$MH = RuntimeHelper.downcallHandle(
        "g_test_rand_int",
        constants$306.g_test_rand_int$FUNC, false
    );
}


