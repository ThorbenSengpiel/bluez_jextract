// Generated by jextract

package bluez.binding;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$50 {

    static final FunctionDescriptor g_thread_error_quark$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle g_thread_error_quark$MH = RuntimeHelper.downcallHandle(
        "g_thread_error_quark",
        constants$50.g_thread_error_quark$FUNC, false
    );
    static final FunctionDescriptor GThreadFunc$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GThreadFunc$MH = RuntimeHelper.downcallHandle(
        constants$50.GThreadFunc$FUNC, false
    );
    static final FunctionDescriptor g_thread_ref$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_thread_ref$MH = RuntimeHelper.downcallHandle(
        "g_thread_ref",
        constants$50.g_thread_ref$FUNC, false
    );
    static final FunctionDescriptor g_thread_unref$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_thread_unref$MH = RuntimeHelper.downcallHandle(
        "g_thread_unref",
        constants$50.g_thread_unref$FUNC, false
    );
    static final FunctionDescriptor g_thread_new$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_thread_new$MH = RuntimeHelper.downcallHandle(
        "g_thread_new",
        constants$50.g_thread_new$FUNC, false
    );
}


