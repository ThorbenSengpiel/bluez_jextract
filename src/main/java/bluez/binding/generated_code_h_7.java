// Generated by jextract

package bluez.binding;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
 class generated_code_h_7 extends generated_code_h_6 {

    public static MethodHandle g_tls_password_get_warning$MH() {
        return RuntimeHelper.requireNonNull(constants$837.g_tls_password_get_warning$MH,"g_tls_password_get_warning");
    }
    public static MemoryAddress g_tls_password_get_warning ( Addressable password) {
        var mh$ = RuntimeHelper.requireNonNull(constants$837.g_tls_password_get_warning$MH, "g_tls_password_get_warning");
        try {
            return (MemoryAddress)mh$.invokeExact(password);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_set_warning$MH() {
        return RuntimeHelper.requireNonNull(constants$837.g_tls_password_set_warning$MH,"g_tls_password_set_warning");
    }
    public static void g_tls_password_set_warning ( Addressable password,  Addressable warning) {
        var mh$ = RuntimeHelper.requireNonNull(constants$837.g_tls_password_set_warning$MH, "g_tls_password_set_warning");
        try {
            mh$.invokeExact(password, warning);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_server_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$837.g_tls_server_connection_get_type$MH,"g_tls_server_connection_get_type");
    }
    public static long g_tls_server_connection_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$837.g_tls_server_connection_get_type$MH, "g_tls_server_connection_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_server_connection_new$MH() {
        return RuntimeHelper.requireNonNull(constants$837.g_tls_server_connection_new$MH,"g_tls_server_connection_new");
    }
    public static MemoryAddress g_tls_server_connection_new ( Addressable base_io_stream,  Addressable certificate,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$837.g_tls_server_connection_new$MH, "g_tls_server_connection_new");
        try {
            return (MemoryAddress)mh$.invokeExact(base_io_stream, certificate, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$838.g_vfs_get_type$MH,"g_vfs_get_type");
    }
    public static long g_vfs_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$838.g_vfs_get_type$MH, "g_vfs_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_is_active$MH() {
        return RuntimeHelper.requireNonNull(constants$838.g_vfs_is_active$MH,"g_vfs_is_active");
    }
    public static int g_vfs_is_active ( Addressable vfs) {
        var mh$ = RuntimeHelper.requireNonNull(constants$838.g_vfs_is_active$MH, "g_vfs_is_active");
        try {
            return (int)mh$.invokeExact(vfs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_get_file_for_path$MH() {
        return RuntimeHelper.requireNonNull(constants$838.g_vfs_get_file_for_path$MH,"g_vfs_get_file_for_path");
    }
    public static MemoryAddress g_vfs_get_file_for_path ( Addressable vfs,  Addressable path) {
        var mh$ = RuntimeHelper.requireNonNull(constants$838.g_vfs_get_file_for_path$MH, "g_vfs_get_file_for_path");
        try {
            return (MemoryAddress)mh$.invokeExact(vfs, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_get_file_for_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$838.g_vfs_get_file_for_uri$MH,"g_vfs_get_file_for_uri");
    }
    public static MemoryAddress g_vfs_get_file_for_uri ( Addressable vfs,  Addressable uri) {
        var mh$ = RuntimeHelper.requireNonNull(constants$838.g_vfs_get_file_for_uri$MH, "g_vfs_get_file_for_uri");
        try {
            return (MemoryAddress)mh$.invokeExact(vfs, uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_get_supported_uri_schemes$MH() {
        return RuntimeHelper.requireNonNull(constants$838.g_vfs_get_supported_uri_schemes$MH,"g_vfs_get_supported_uri_schemes");
    }
    public static MemoryAddress g_vfs_get_supported_uri_schemes ( Addressable vfs) {
        var mh$ = RuntimeHelper.requireNonNull(constants$838.g_vfs_get_supported_uri_schemes$MH, "g_vfs_get_supported_uri_schemes");
        try {
            return (MemoryAddress)mh$.invokeExact(vfs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_parse_name$MH() {
        return RuntimeHelper.requireNonNull(constants$839.g_vfs_parse_name$MH,"g_vfs_parse_name");
    }
    public static MemoryAddress g_vfs_parse_name ( Addressable vfs,  Addressable parse_name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$839.g_vfs_parse_name$MH, "g_vfs_parse_name");
        try {
            return (MemoryAddress)mh$.invokeExact(vfs, parse_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$839.g_vfs_get_default$MH,"g_vfs_get_default");
    }
    public static MemoryAddress g_vfs_get_default () {
        var mh$ = RuntimeHelper.requireNonNull(constants$839.g_vfs_get_default$MH, "g_vfs_get_default");
        try {
            return (MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_get_local$MH() {
        return RuntimeHelper.requireNonNull(constants$839.g_vfs_get_local$MH,"g_vfs_get_local");
    }
    public static MemoryAddress g_vfs_get_local () {
        var mh$ = RuntimeHelper.requireNonNull(constants$839.g_vfs_get_local$MH, "g_vfs_get_local");
        try {
            return (MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_register_uri_scheme$MH() {
        return RuntimeHelper.requireNonNull(constants$839.g_vfs_register_uri_scheme$MH,"g_vfs_register_uri_scheme");
    }
    public static int g_vfs_register_uri_scheme ( Addressable vfs,  Addressable scheme,  Addressable uri_func,  Addressable uri_data,  Addressable uri_destroy,  Addressable parse_name_func,  Addressable parse_name_data,  Addressable parse_name_destroy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$839.g_vfs_register_uri_scheme$MH, "g_vfs_register_uri_scheme");
        try {
            return (int)mh$.invokeExact(vfs, scheme, uri_func, uri_data, uri_destroy, parse_name_func, parse_name_data, parse_name_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_unregister_uri_scheme$MH() {
        return RuntimeHelper.requireNonNull(constants$839.g_vfs_unregister_uri_scheme$MH,"g_vfs_unregister_uri_scheme");
    }
    public static int g_vfs_unregister_uri_scheme ( Addressable vfs,  Addressable scheme) {
        var mh$ = RuntimeHelper.requireNonNull(constants$839.g_vfs_unregister_uri_scheme$MH, "g_vfs_unregister_uri_scheme");
        try {
            return (int)mh$.invokeExact(vfs, scheme);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$839.g_volume_get_type$MH,"g_volume_get_type");
    }
    public static long g_volume_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$839.g_volume_get_type$MH, "g_volume_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$840.g_volume_get_name$MH,"g_volume_get_name");
    }
    public static MemoryAddress g_volume_get_name ( Addressable volume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$840.g_volume_get_name$MH, "g_volume_get_name");
        try {
            return (MemoryAddress)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$840.g_volume_get_icon$MH,"g_volume_get_icon");
    }
    public static MemoryAddress g_volume_get_icon ( Addressable volume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$840.g_volume_get_icon$MH, "g_volume_get_icon");
        try {
            return (MemoryAddress)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_symbolic_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$840.g_volume_get_symbolic_icon$MH,"g_volume_get_symbolic_icon");
    }
    public static MemoryAddress g_volume_get_symbolic_icon ( Addressable volume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$840.g_volume_get_symbolic_icon$MH, "g_volume_get_symbolic_icon");
        try {
            return (MemoryAddress)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_uuid$MH() {
        return RuntimeHelper.requireNonNull(constants$840.g_volume_get_uuid$MH,"g_volume_get_uuid");
    }
    public static MemoryAddress g_volume_get_uuid ( Addressable volume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$840.g_volume_get_uuid$MH, "g_volume_get_uuid");
        try {
            return (MemoryAddress)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_drive$MH() {
        return RuntimeHelper.requireNonNull(constants$840.g_volume_get_drive$MH,"g_volume_get_drive");
    }
    public static MemoryAddress g_volume_get_drive ( Addressable volume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$840.g_volume_get_drive$MH, "g_volume_get_drive");
        try {
            return (MemoryAddress)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_mount$MH() {
        return RuntimeHelper.requireNonNull(constants$840.g_volume_get_mount$MH,"g_volume_get_mount");
    }
    public static MemoryAddress g_volume_get_mount ( Addressable volume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$840.g_volume_get_mount$MH, "g_volume_get_mount");
        try {
            return (MemoryAddress)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_can_mount$MH() {
        return RuntimeHelper.requireNonNull(constants$841.g_volume_can_mount$MH,"g_volume_can_mount");
    }
    public static int g_volume_can_mount ( Addressable volume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$841.g_volume_can_mount$MH, "g_volume_can_mount");
        try {
            return (int)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_can_eject$MH() {
        return RuntimeHelper.requireNonNull(constants$841.g_volume_can_eject$MH,"g_volume_can_eject");
    }
    public static int g_volume_can_eject ( Addressable volume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$841.g_volume_can_eject$MH, "g_volume_can_eject");
        try {
            return (int)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_should_automount$MH() {
        return RuntimeHelper.requireNonNull(constants$841.g_volume_should_automount$MH,"g_volume_should_automount");
    }
    public static int g_volume_should_automount ( Addressable volume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$841.g_volume_should_automount$MH, "g_volume_should_automount");
        try {
            return (int)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_mount$MH() {
        return RuntimeHelper.requireNonNull(constants$841.g_volume_mount$MH,"g_volume_mount");
    }
    public static void g_volume_mount ( Addressable volume,  int flags,  Addressable mount_operation,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$841.g_volume_mount$MH, "g_volume_mount");
        try {
            mh$.invokeExact(volume, flags, mount_operation, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_mount_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$841.g_volume_mount_finish$MH,"g_volume_mount_finish");
    }
    public static int g_volume_mount_finish ( Addressable volume,  Addressable result,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$841.g_volume_mount_finish$MH, "g_volume_mount_finish");
        try {
            return (int)mh$.invokeExact(volume, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_eject$MH() {
        return RuntimeHelper.requireNonNull(constants$841.g_volume_eject$MH,"g_volume_eject");
    }
    public static void g_volume_eject ( Addressable volume,  int flags,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$841.g_volume_eject$MH, "g_volume_eject");
        try {
            mh$.invokeExact(volume, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_eject_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$842.g_volume_eject_finish$MH,"g_volume_eject_finish");
    }
    public static int g_volume_eject_finish ( Addressable volume,  Addressable result,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$842.g_volume_eject_finish$MH, "g_volume_eject_finish");
        try {
            return (int)mh$.invokeExact(volume, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_identifier$MH() {
        return RuntimeHelper.requireNonNull(constants$842.g_volume_get_identifier$MH,"g_volume_get_identifier");
    }
    public static MemoryAddress g_volume_get_identifier ( Addressable volume,  Addressable kind) {
        var mh$ = RuntimeHelper.requireNonNull(constants$842.g_volume_get_identifier$MH, "g_volume_get_identifier");
        try {
            return (MemoryAddress)mh$.invokeExact(volume, kind);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_enumerate_identifiers$MH() {
        return RuntimeHelper.requireNonNull(constants$842.g_volume_enumerate_identifiers$MH,"g_volume_enumerate_identifiers");
    }
    public static MemoryAddress g_volume_enumerate_identifiers ( Addressable volume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$842.g_volume_enumerate_identifiers$MH, "g_volume_enumerate_identifiers");
        try {
            return (MemoryAddress)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_activation_root$MH() {
        return RuntimeHelper.requireNonNull(constants$842.g_volume_get_activation_root$MH,"g_volume_get_activation_root");
    }
    public static MemoryAddress g_volume_get_activation_root ( Addressable volume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$842.g_volume_get_activation_root$MH, "g_volume_get_activation_root");
        try {
            return (MemoryAddress)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_eject_with_operation$MH() {
        return RuntimeHelper.requireNonNull(constants$842.g_volume_eject_with_operation$MH,"g_volume_eject_with_operation");
    }
    public static void g_volume_eject_with_operation ( Addressable volume,  int flags,  Addressable mount_operation,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$842.g_volume_eject_with_operation$MH, "g_volume_eject_with_operation");
        try {
            mh$.invokeExact(volume, flags, mount_operation, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_eject_with_operation_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$842.g_volume_eject_with_operation_finish$MH,"g_volume_eject_with_operation_finish");
    }
    public static int g_volume_eject_with_operation_finish ( Addressable volume,  Addressable result,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$842.g_volume_eject_with_operation_finish$MH, "g_volume_eject_with_operation_finish");
        try {
            return (int)mh$.invokeExact(volume, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_sort_key$MH() {
        return RuntimeHelper.requireNonNull(constants$843.g_volume_get_sort_key$MH,"g_volume_get_sort_key");
    }
    public static MemoryAddress g_volume_get_sort_key ( Addressable volume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$843.g_volume_get_sort_key$MH, "g_volume_get_sort_key");
        try {
            return (MemoryAddress)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_compressor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$843.g_zlib_compressor_get_type$MH,"g_zlib_compressor_get_type");
    }
    public static long g_zlib_compressor_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$843.g_zlib_compressor_get_type$MH, "g_zlib_compressor_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_compressor_new$MH() {
        return RuntimeHelper.requireNonNull(constants$843.g_zlib_compressor_new$MH,"g_zlib_compressor_new");
    }
    public static MemoryAddress g_zlib_compressor_new ( int format,  int level) {
        var mh$ = RuntimeHelper.requireNonNull(constants$843.g_zlib_compressor_new$MH, "g_zlib_compressor_new");
        try {
            return (MemoryAddress)mh$.invokeExact(format, level);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_compressor_get_file_info$MH() {
        return RuntimeHelper.requireNonNull(constants$843.g_zlib_compressor_get_file_info$MH,"g_zlib_compressor_get_file_info");
    }
    public static MemoryAddress g_zlib_compressor_get_file_info ( Addressable compressor) {
        var mh$ = RuntimeHelper.requireNonNull(constants$843.g_zlib_compressor_get_file_info$MH, "g_zlib_compressor_get_file_info");
        try {
            return (MemoryAddress)mh$.invokeExact(compressor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_compressor_set_file_info$MH() {
        return RuntimeHelper.requireNonNull(constants$843.g_zlib_compressor_set_file_info$MH,"g_zlib_compressor_set_file_info");
    }
    public static void g_zlib_compressor_set_file_info ( Addressable compressor,  Addressable file_info) {
        var mh$ = RuntimeHelper.requireNonNull(constants$843.g_zlib_compressor_set_file_info$MH, "g_zlib_compressor_set_file_info");
        try {
            mh$.invokeExact(compressor, file_info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_decompressor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$843.g_zlib_decompressor_get_type$MH,"g_zlib_decompressor_get_type");
    }
    public static long g_zlib_decompressor_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$843.g_zlib_decompressor_get_type$MH, "g_zlib_decompressor_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_decompressor_new$MH() {
        return RuntimeHelper.requireNonNull(constants$844.g_zlib_decompressor_new$MH,"g_zlib_decompressor_new");
    }
    public static MemoryAddress g_zlib_decompressor_new ( int format) {
        var mh$ = RuntimeHelper.requireNonNull(constants$844.g_zlib_decompressor_new$MH, "g_zlib_decompressor_new");
        try {
            return (MemoryAddress)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_decompressor_get_file_info$MH() {
        return RuntimeHelper.requireNonNull(constants$844.g_zlib_decompressor_get_file_info$MH,"g_zlib_decompressor_get_file_info");
    }
    public static MemoryAddress g_zlib_decompressor_get_file_info ( Addressable decompressor) {
        var mh$ = RuntimeHelper.requireNonNull(constants$844.g_zlib_decompressor_get_file_info$MH, "g_zlib_decompressor_get_file_info");
        try {
            return (MemoryAddress)mh$.invokeExact(decompressor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GAction$MH() {
        return RuntimeHelper.requireNonNull(constants$844.glib_autoptr_clear_GAction$MH,"glib_autoptr_clear_GAction");
    }
    public static void glib_autoptr_clear_GAction ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$844.glib_autoptr_clear_GAction$MH, "glib_autoptr_clear_GAction");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GAction$MH() {
        return RuntimeHelper.requireNonNull(constants$844.glib_autoptr_cleanup_GAction$MH,"glib_autoptr_cleanup_GAction");
    }
    public static void glib_autoptr_cleanup_GAction ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$844.glib_autoptr_cleanup_GAction$MH, "glib_autoptr_cleanup_GAction");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GAction$MH() {
        return RuntimeHelper.requireNonNull(constants$844.glib_listautoptr_cleanup_GAction$MH,"glib_listautoptr_cleanup_GAction");
    }
    public static void glib_listautoptr_cleanup_GAction ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$844.glib_listautoptr_cleanup_GAction$MH, "glib_listautoptr_cleanup_GAction");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GAction$MH() {
        return RuntimeHelper.requireNonNull(constants$844.glib_slistautoptr_cleanup_GAction$MH,"glib_slistautoptr_cleanup_GAction");
    }
    public static void glib_slistautoptr_cleanup_GAction ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$844.glib_slistautoptr_cleanup_GAction$MH, "glib_slistautoptr_cleanup_GAction");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GAction$MH() {
        return RuntimeHelper.requireNonNull(constants$845.glib_queueautoptr_cleanup_GAction$MH,"glib_queueautoptr_cleanup_GAction");
    }
    public static void glib_queueautoptr_cleanup_GAction ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$845.glib_queueautoptr_cleanup_GAction$MH, "glib_queueautoptr_cleanup_GAction");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GActionMap_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GActionMap_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GActionMap_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GActionMap_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GActionMap$MH() {
        return RuntimeHelper.requireNonNull(constants$845.glib_autoptr_clear_GActionMap$MH,"glib_autoptr_clear_GActionMap");
    }
    public static void glib_autoptr_clear_GActionMap ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$845.glib_autoptr_clear_GActionMap$MH, "glib_autoptr_clear_GActionMap");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GActionMap$MH() {
        return RuntimeHelper.requireNonNull(constants$845.glib_autoptr_cleanup_GActionMap$MH,"glib_autoptr_cleanup_GActionMap");
    }
    public static void glib_autoptr_cleanup_GActionMap ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$845.glib_autoptr_cleanup_GActionMap$MH, "glib_autoptr_cleanup_GActionMap");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GActionMap$MH() {
        return RuntimeHelper.requireNonNull(constants$845.glib_listautoptr_cleanup_GActionMap$MH,"glib_listautoptr_cleanup_GActionMap");
    }
    public static void glib_listautoptr_cleanup_GActionMap ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$845.glib_listautoptr_cleanup_GActionMap$MH, "glib_listautoptr_cleanup_GActionMap");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GActionMap$MH() {
        return RuntimeHelper.requireNonNull(constants$845.glib_slistautoptr_cleanup_GActionMap$MH,"glib_slistautoptr_cleanup_GActionMap");
    }
    public static void glib_slistautoptr_cleanup_GActionMap ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$845.glib_slistautoptr_cleanup_GActionMap$MH, "glib_slistautoptr_cleanup_GActionMap");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GActionMap$MH() {
        return RuntimeHelper.requireNonNull(constants$845.glib_queueautoptr_cleanup_GActionMap$MH,"glib_queueautoptr_cleanup_GActionMap");
    }
    public static void glib_queueautoptr_cleanup_GActionMap ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$845.glib_queueautoptr_cleanup_GActionMap$MH, "glib_queueautoptr_cleanup_GActionMap");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GAppInfo_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAppInfo_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAppInfo_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAppInfo_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GAppInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$846.glib_autoptr_clear_GAppInfo$MH,"glib_autoptr_clear_GAppInfo");
    }
    public static void glib_autoptr_clear_GAppInfo ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$846.glib_autoptr_clear_GAppInfo$MH, "glib_autoptr_clear_GAppInfo");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GAppInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$846.glib_autoptr_cleanup_GAppInfo$MH,"glib_autoptr_cleanup_GAppInfo");
    }
    public static void glib_autoptr_cleanup_GAppInfo ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$846.glib_autoptr_cleanup_GAppInfo$MH, "glib_autoptr_cleanup_GAppInfo");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GAppInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$846.glib_listautoptr_cleanup_GAppInfo$MH,"glib_listautoptr_cleanup_GAppInfo");
    }
    public static void glib_listautoptr_cleanup_GAppInfo ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$846.glib_listautoptr_cleanup_GAppInfo$MH, "glib_listautoptr_cleanup_GAppInfo");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GAppInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$846.glib_slistautoptr_cleanup_GAppInfo$MH,"glib_slistautoptr_cleanup_GAppInfo");
    }
    public static void glib_slistautoptr_cleanup_GAppInfo ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$846.glib_slistautoptr_cleanup_GAppInfo$MH, "glib_slistautoptr_cleanup_GAppInfo");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GAppInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$846.glib_queueautoptr_cleanup_GAppInfo$MH,"glib_queueautoptr_cleanup_GAppInfo");
    }
    public static void glib_queueautoptr_cleanup_GAppInfo ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$846.glib_queueautoptr_cleanup_GAppInfo$MH, "glib_queueautoptr_cleanup_GAppInfo");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GAppLaunchContext_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAppLaunchContext_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAppLaunchContext_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAppLaunchContext_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GAppLaunchContext$MH() {
        return RuntimeHelper.requireNonNull(constants$846.glib_autoptr_clear_GAppLaunchContext$MH,"glib_autoptr_clear_GAppLaunchContext");
    }
    public static void glib_autoptr_clear_GAppLaunchContext ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$846.glib_autoptr_clear_GAppLaunchContext$MH, "glib_autoptr_clear_GAppLaunchContext");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GAppLaunchContext$MH() {
        return RuntimeHelper.requireNonNull(constants$847.glib_autoptr_cleanup_GAppLaunchContext$MH,"glib_autoptr_cleanup_GAppLaunchContext");
    }
    public static void glib_autoptr_cleanup_GAppLaunchContext ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$847.glib_autoptr_cleanup_GAppLaunchContext$MH, "glib_autoptr_cleanup_GAppLaunchContext");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GAppLaunchContext$MH() {
        return RuntimeHelper.requireNonNull(constants$847.glib_listautoptr_cleanup_GAppLaunchContext$MH,"glib_listautoptr_cleanup_GAppLaunchContext");
    }
    public static void glib_listautoptr_cleanup_GAppLaunchContext ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$847.glib_listautoptr_cleanup_GAppLaunchContext$MH, "glib_listautoptr_cleanup_GAppLaunchContext");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GAppLaunchContext$MH() {
        return RuntimeHelper.requireNonNull(constants$847.glib_slistautoptr_cleanup_GAppLaunchContext$MH,"glib_slistautoptr_cleanup_GAppLaunchContext");
    }
    public static void glib_slistautoptr_cleanup_GAppLaunchContext ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$847.glib_slistautoptr_cleanup_GAppLaunchContext$MH, "glib_slistautoptr_cleanup_GAppLaunchContext");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GAppLaunchContext$MH() {
        return RuntimeHelper.requireNonNull(constants$847.glib_queueautoptr_cleanup_GAppLaunchContext$MH,"glib_queueautoptr_cleanup_GAppLaunchContext");
    }
    public static void glib_queueautoptr_cleanup_GAppLaunchContext ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$847.glib_queueautoptr_cleanup_GAppLaunchContext$MH, "glib_queueautoptr_cleanup_GAppLaunchContext");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GAppInfoMonitor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAppInfoMonitor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAppInfoMonitor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAppInfoMonitor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GAppInfoMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$847.glib_autoptr_clear_GAppInfoMonitor$MH,"glib_autoptr_clear_GAppInfoMonitor");
    }
    public static void glib_autoptr_clear_GAppInfoMonitor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$847.glib_autoptr_clear_GAppInfoMonitor$MH, "glib_autoptr_clear_GAppInfoMonitor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GAppInfoMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$847.glib_autoptr_cleanup_GAppInfoMonitor$MH,"glib_autoptr_cleanup_GAppInfoMonitor");
    }
    public static void glib_autoptr_cleanup_GAppInfoMonitor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$847.glib_autoptr_cleanup_GAppInfoMonitor$MH, "glib_autoptr_cleanup_GAppInfoMonitor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GAppInfoMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$848.glib_listautoptr_cleanup_GAppInfoMonitor$MH,"glib_listautoptr_cleanup_GAppInfoMonitor");
    }
    public static void glib_listautoptr_cleanup_GAppInfoMonitor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$848.glib_listautoptr_cleanup_GAppInfoMonitor$MH, "glib_listautoptr_cleanup_GAppInfoMonitor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GAppInfoMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$848.glib_slistautoptr_cleanup_GAppInfoMonitor$MH,"glib_slistautoptr_cleanup_GAppInfoMonitor");
    }
    public static void glib_slistautoptr_cleanup_GAppInfoMonitor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$848.glib_slistautoptr_cleanup_GAppInfoMonitor$MH, "glib_slistautoptr_cleanup_GAppInfoMonitor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GAppInfoMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$848.glib_queueautoptr_cleanup_GAppInfoMonitor$MH,"glib_queueautoptr_cleanup_GAppInfoMonitor");
    }
    public static void glib_queueautoptr_cleanup_GAppInfoMonitor ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$848.glib_queueautoptr_cleanup_GAppInfoMonitor$MH, "glib_queueautoptr_cleanup_GAppInfoMonitor");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GApplicationCommandLine_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GApplicationCommandLine_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GApplicationCommandLine_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GApplicationCommandLine_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GApplicationCommandLine$MH() {
        return RuntimeHelper.requireNonNull(constants$848.glib_autoptr_clear_GApplicationCommandLine$MH,"glib_autoptr_clear_GApplicationCommandLine");
    }
    public static void glib_autoptr_clear_GApplicationCommandLine ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$848.glib_autoptr_clear_GApplicationCommandLine$MH, "glib_autoptr_clear_GApplicationCommandLine");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GApplicationCommandLine$MH() {
        return RuntimeHelper.requireNonNull(constants$848.glib_autoptr_cleanup_GApplicationCommandLine$MH,"glib_autoptr_cleanup_GApplicationCommandLine");
    }
    public static void glib_autoptr_cleanup_GApplicationCommandLine ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$848.glib_autoptr_cleanup_GApplicationCommandLine$MH, "glib_autoptr_cleanup_GApplicationCommandLine");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GApplicationCommandLine$MH() {
        return RuntimeHelper.requireNonNull(constants$848.glib_listautoptr_cleanup_GApplicationCommandLine$MH,"glib_listautoptr_cleanup_GApplicationCommandLine");
    }
    public static void glib_listautoptr_cleanup_GApplicationCommandLine ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$848.glib_listautoptr_cleanup_GApplicationCommandLine$MH, "glib_listautoptr_cleanup_GApplicationCommandLine");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GApplicationCommandLine$MH() {
        return RuntimeHelper.requireNonNull(constants$849.glib_slistautoptr_cleanup_GApplicationCommandLine$MH,"glib_slistautoptr_cleanup_GApplicationCommandLine");
    }
    public static void glib_slistautoptr_cleanup_GApplicationCommandLine ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$849.glib_slistautoptr_cleanup_GApplicationCommandLine$MH, "glib_slistautoptr_cleanup_GApplicationCommandLine");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GApplicationCommandLine$MH() {
        return RuntimeHelper.requireNonNull(constants$849.glib_queueautoptr_cleanup_GApplicationCommandLine$MH,"glib_queueautoptr_cleanup_GApplicationCommandLine");
    }
    public static void glib_queueautoptr_cleanup_GApplicationCommandLine ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$849.glib_queueautoptr_cleanup_GApplicationCommandLine$MH, "glib_queueautoptr_cleanup_GApplicationCommandLine");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GApplication_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GApplication_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GApplication_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GApplication_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GApplication$MH() {
        return RuntimeHelper.requireNonNull(constants$849.glib_autoptr_clear_GApplication$MH,"glib_autoptr_clear_GApplication");
    }
    public static void glib_autoptr_clear_GApplication ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$849.glib_autoptr_clear_GApplication$MH, "glib_autoptr_clear_GApplication");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GApplication$MH() {
        return RuntimeHelper.requireNonNull(constants$849.glib_autoptr_cleanup_GApplication$MH,"glib_autoptr_cleanup_GApplication");
    }
    public static void glib_autoptr_cleanup_GApplication ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$849.glib_autoptr_cleanup_GApplication$MH, "glib_autoptr_cleanup_GApplication");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GApplication$MH() {
        return RuntimeHelper.requireNonNull(constants$849.glib_listautoptr_cleanup_GApplication$MH,"glib_listautoptr_cleanup_GApplication");
    }
    public static void glib_listautoptr_cleanup_GApplication ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$849.glib_listautoptr_cleanup_GApplication$MH, "glib_listautoptr_cleanup_GApplication");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GApplication$MH() {
        return RuntimeHelper.requireNonNull(constants$849.glib_slistautoptr_cleanup_GApplication$MH,"glib_slistautoptr_cleanup_GApplication");
    }
    public static void glib_slistautoptr_cleanup_GApplication ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$849.glib_slistautoptr_cleanup_GApplication$MH, "glib_slistautoptr_cleanup_GApplication");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GApplication$MH() {
        return RuntimeHelper.requireNonNull(constants$850.glib_queueautoptr_cleanup_GApplication$MH,"glib_queueautoptr_cleanup_GApplication");
    }
    public static void glib_queueautoptr_cleanup_GApplication ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$850.glib_queueautoptr_cleanup_GApplication$MH, "glib_queueautoptr_cleanup_GApplication");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GAsyncInitable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAsyncInitable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAsyncInitable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAsyncInitable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GAsyncInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$850.glib_autoptr_clear_GAsyncInitable$MH,"glib_autoptr_clear_GAsyncInitable");
    }
    public static void glib_autoptr_clear_GAsyncInitable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$850.glib_autoptr_clear_GAsyncInitable$MH, "glib_autoptr_clear_GAsyncInitable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GAsyncInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$850.glib_autoptr_cleanup_GAsyncInitable$MH,"glib_autoptr_cleanup_GAsyncInitable");
    }
    public static void glib_autoptr_cleanup_GAsyncInitable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$850.glib_autoptr_cleanup_GAsyncInitable$MH, "glib_autoptr_cleanup_GAsyncInitable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GAsyncInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$850.glib_listautoptr_cleanup_GAsyncInitable$MH,"glib_listautoptr_cleanup_GAsyncInitable");
    }
    public static void glib_listautoptr_cleanup_GAsyncInitable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$850.glib_listautoptr_cleanup_GAsyncInitable$MH, "glib_listautoptr_cleanup_GAsyncInitable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GAsyncInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$850.glib_slistautoptr_cleanup_GAsyncInitable$MH,"glib_slistautoptr_cleanup_GAsyncInitable");
    }
    public static void glib_slistautoptr_cleanup_GAsyncInitable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$850.glib_slistautoptr_cleanup_GAsyncInitable$MH, "glib_slistautoptr_cleanup_GAsyncInitable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GAsyncInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$850.glib_queueautoptr_cleanup_GAsyncInitable$MH,"glib_queueautoptr_cleanup_GAsyncInitable");
    }
    public static void glib_queueautoptr_cleanup_GAsyncInitable ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$850.glib_queueautoptr_cleanup_GAsyncInitable$MH, "glib_queueautoptr_cleanup_GAsyncInitable");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GAsyncResult_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAsyncResult_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAsyncResult_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAsyncResult_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$851.glib_autoptr_clear_GAsyncResult$MH,"glib_autoptr_clear_GAsyncResult");
    }
    public static void glib_autoptr_clear_GAsyncResult ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$851.glib_autoptr_clear_GAsyncResult$MH, "glib_autoptr_clear_GAsyncResult");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$851.glib_autoptr_cleanup_GAsyncResult$MH,"glib_autoptr_cleanup_GAsyncResult");
    }
    public static void glib_autoptr_cleanup_GAsyncResult ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$851.glib_autoptr_cleanup_GAsyncResult$MH, "glib_autoptr_cleanup_GAsyncResult");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$851.glib_listautoptr_cleanup_GAsyncResult$MH,"glib_listautoptr_cleanup_GAsyncResult");
    }
    public static void glib_listautoptr_cleanup_GAsyncResult ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$851.glib_listautoptr_cleanup_GAsyncResult$MH, "glib_listautoptr_cleanup_GAsyncResult");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$851.glib_slistautoptr_cleanup_GAsyncResult$MH,"glib_slistautoptr_cleanup_GAsyncResult");
    }
    public static void glib_slistautoptr_cleanup_GAsyncResult ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$851.glib_slistautoptr_cleanup_GAsyncResult$MH, "glib_slistautoptr_cleanup_GAsyncResult");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$851.glib_queueautoptr_cleanup_GAsyncResult$MH,"glib_queueautoptr_cleanup_GAsyncResult");
    }
    public static void glib_queueautoptr_cleanup_GAsyncResult ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$851.glib_queueautoptr_cleanup_GAsyncResult$MH, "glib_queueautoptr_cleanup_GAsyncResult");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GBufferedInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GBufferedInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GBufferedInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GBufferedInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GBufferedInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$851.glib_autoptr_clear_GBufferedInputStream$MH,"glib_autoptr_clear_GBufferedInputStream");
    }
    public static void glib_autoptr_clear_GBufferedInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$851.glib_autoptr_clear_GBufferedInputStream$MH, "glib_autoptr_clear_GBufferedInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GBufferedInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$852.glib_autoptr_cleanup_GBufferedInputStream$MH,"glib_autoptr_cleanup_GBufferedInputStream");
    }
    public static void glib_autoptr_cleanup_GBufferedInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$852.glib_autoptr_cleanup_GBufferedInputStream$MH, "glib_autoptr_cleanup_GBufferedInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GBufferedInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$852.glib_listautoptr_cleanup_GBufferedInputStream$MH,"glib_listautoptr_cleanup_GBufferedInputStream");
    }
    public static void glib_listautoptr_cleanup_GBufferedInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$852.glib_listautoptr_cleanup_GBufferedInputStream$MH, "glib_listautoptr_cleanup_GBufferedInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GBufferedInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$852.glib_slistautoptr_cleanup_GBufferedInputStream$MH,"glib_slistautoptr_cleanup_GBufferedInputStream");
    }
    public static void glib_slistautoptr_cleanup_GBufferedInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$852.glib_slistautoptr_cleanup_GBufferedInputStream$MH, "glib_slistautoptr_cleanup_GBufferedInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GBufferedInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$852.glib_queueautoptr_cleanup_GBufferedInputStream$MH,"glib_queueautoptr_cleanup_GBufferedInputStream");
    }
    public static void glib_queueautoptr_cleanup_GBufferedInputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$852.glib_queueautoptr_cleanup_GBufferedInputStream$MH, "glib_queueautoptr_cleanup_GBufferedInputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GBufferedOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GBufferedOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GBufferedOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GBufferedOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GBufferedOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$852.glib_autoptr_clear_GBufferedOutputStream$MH,"glib_autoptr_clear_GBufferedOutputStream");
    }
    public static void glib_autoptr_clear_GBufferedOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$852.glib_autoptr_clear_GBufferedOutputStream$MH, "glib_autoptr_clear_GBufferedOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GBufferedOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$852.glib_autoptr_cleanup_GBufferedOutputStream$MH,"glib_autoptr_cleanup_GBufferedOutputStream");
    }
    public static void glib_autoptr_cleanup_GBufferedOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$852.glib_autoptr_cleanup_GBufferedOutputStream$MH, "glib_autoptr_cleanup_GBufferedOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GBufferedOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$853.glib_listautoptr_cleanup_GBufferedOutputStream$MH,"glib_listautoptr_cleanup_GBufferedOutputStream");
    }
    public static void glib_listautoptr_cleanup_GBufferedOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$853.glib_listautoptr_cleanup_GBufferedOutputStream$MH, "glib_listautoptr_cleanup_GBufferedOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GBufferedOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$853.glib_slistautoptr_cleanup_GBufferedOutputStream$MH,"glib_slistautoptr_cleanup_GBufferedOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GBufferedOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$853.glib_slistautoptr_cleanup_GBufferedOutputStream$MH, "glib_slistautoptr_cleanup_GBufferedOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GBufferedOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$853.glib_queueautoptr_cleanup_GBufferedOutputStream$MH,"glib_queueautoptr_cleanup_GBufferedOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GBufferedOutputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$853.glib_queueautoptr_cleanup_GBufferedOutputStream$MH, "glib_queueautoptr_cleanup_GBufferedOutputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GBytesIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GBytesIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GBytesIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GBytesIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GBytesIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$853.glib_autoptr_clear_GBytesIcon$MH,"glib_autoptr_clear_GBytesIcon");
    }
    public static void glib_autoptr_clear_GBytesIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$853.glib_autoptr_clear_GBytesIcon$MH, "glib_autoptr_clear_GBytesIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GBytesIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$853.glib_autoptr_cleanup_GBytesIcon$MH,"glib_autoptr_cleanup_GBytesIcon");
    }
    public static void glib_autoptr_cleanup_GBytesIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$853.glib_autoptr_cleanup_GBytesIcon$MH, "glib_autoptr_cleanup_GBytesIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GBytesIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$853.glib_listautoptr_cleanup_GBytesIcon$MH,"glib_listautoptr_cleanup_GBytesIcon");
    }
    public static void glib_listautoptr_cleanup_GBytesIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$853.glib_listautoptr_cleanup_GBytesIcon$MH, "glib_listautoptr_cleanup_GBytesIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GBytesIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$854.glib_slistautoptr_cleanup_GBytesIcon$MH,"glib_slistautoptr_cleanup_GBytesIcon");
    }
    public static void glib_slistautoptr_cleanup_GBytesIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$854.glib_slistautoptr_cleanup_GBytesIcon$MH, "glib_slistautoptr_cleanup_GBytesIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GBytesIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$854.glib_queueautoptr_cleanup_GBytesIcon$MH,"glib_queueautoptr_cleanup_GBytesIcon");
    }
    public static void glib_queueautoptr_cleanup_GBytesIcon ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$854.glib_queueautoptr_cleanup_GBytesIcon$MH, "glib_queueautoptr_cleanup_GBytesIcon");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GCancellable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GCancellable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GCancellable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GCancellable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GCancellable$MH() {
        return RuntimeHelper.requireNonNull(constants$854.glib_autoptr_clear_GCancellable$MH,"glib_autoptr_clear_GCancellable");
    }
    public static void glib_autoptr_clear_GCancellable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$854.glib_autoptr_clear_GCancellable$MH, "glib_autoptr_clear_GCancellable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GCancellable$MH() {
        return RuntimeHelper.requireNonNull(constants$854.glib_autoptr_cleanup_GCancellable$MH,"glib_autoptr_cleanup_GCancellable");
    }
    public static void glib_autoptr_cleanup_GCancellable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$854.glib_autoptr_cleanup_GCancellable$MH, "glib_autoptr_cleanup_GCancellable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GCancellable$MH() {
        return RuntimeHelper.requireNonNull(constants$854.glib_listautoptr_cleanup_GCancellable$MH,"glib_listautoptr_cleanup_GCancellable");
    }
    public static void glib_listautoptr_cleanup_GCancellable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$854.glib_listautoptr_cleanup_GCancellable$MH, "glib_listautoptr_cleanup_GCancellable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GCancellable$MH() {
        return RuntimeHelper.requireNonNull(constants$854.glib_slistautoptr_cleanup_GCancellable$MH,"glib_slistautoptr_cleanup_GCancellable");
    }
    public static void glib_slistautoptr_cleanup_GCancellable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$854.glib_slistautoptr_cleanup_GCancellable$MH, "glib_slistautoptr_cleanup_GCancellable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GCancellable$MH() {
        return RuntimeHelper.requireNonNull(constants$855.glib_queueautoptr_cleanup_GCancellable$MH,"glib_queueautoptr_cleanup_GCancellable");
    }
    public static void glib_queueautoptr_cleanup_GCancellable ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$855.glib_queueautoptr_cleanup_GCancellable$MH, "glib_queueautoptr_cleanup_GCancellable");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GCharsetConverter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GCharsetConverter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GCharsetConverter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GCharsetConverter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GCharsetConverter$MH() {
        return RuntimeHelper.requireNonNull(constants$855.glib_autoptr_clear_GCharsetConverter$MH,"glib_autoptr_clear_GCharsetConverter");
    }
    public static void glib_autoptr_clear_GCharsetConverter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$855.glib_autoptr_clear_GCharsetConverter$MH, "glib_autoptr_clear_GCharsetConverter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GCharsetConverter$MH() {
        return RuntimeHelper.requireNonNull(constants$855.glib_autoptr_cleanup_GCharsetConverter$MH,"glib_autoptr_cleanup_GCharsetConverter");
    }
    public static void glib_autoptr_cleanup_GCharsetConverter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$855.glib_autoptr_cleanup_GCharsetConverter$MH, "glib_autoptr_cleanup_GCharsetConverter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GCharsetConverter$MH() {
        return RuntimeHelper.requireNonNull(constants$855.glib_listautoptr_cleanup_GCharsetConverter$MH,"glib_listautoptr_cleanup_GCharsetConverter");
    }
    public static void glib_listautoptr_cleanup_GCharsetConverter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$855.glib_listautoptr_cleanup_GCharsetConverter$MH, "glib_listautoptr_cleanup_GCharsetConverter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GCharsetConverter$MH() {
        return RuntimeHelper.requireNonNull(constants$855.glib_slistautoptr_cleanup_GCharsetConverter$MH,"glib_slistautoptr_cleanup_GCharsetConverter");
    }
    public static void glib_slistautoptr_cleanup_GCharsetConverter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$855.glib_slistautoptr_cleanup_GCharsetConverter$MH, "glib_slistautoptr_cleanup_GCharsetConverter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GCharsetConverter$MH() {
        return RuntimeHelper.requireNonNull(constants$855.glib_queueautoptr_cleanup_GCharsetConverter$MH,"glib_queueautoptr_cleanup_GCharsetConverter");
    }
    public static void glib_queueautoptr_cleanup_GCharsetConverter ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$855.glib_queueautoptr_cleanup_GCharsetConverter$MH, "glib_queueautoptr_cleanup_GCharsetConverter");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GConverter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GConverter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GConverter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GConverter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GConverter$MH() {
        return RuntimeHelper.requireNonNull(constants$856.glib_autoptr_clear_GConverter$MH,"glib_autoptr_clear_GConverter");
    }
    public static void glib_autoptr_clear_GConverter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$856.glib_autoptr_clear_GConverter$MH, "glib_autoptr_clear_GConverter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GConverter$MH() {
        return RuntimeHelper.requireNonNull(constants$856.glib_autoptr_cleanup_GConverter$MH,"glib_autoptr_cleanup_GConverter");
    }
    public static void glib_autoptr_cleanup_GConverter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$856.glib_autoptr_cleanup_GConverter$MH, "glib_autoptr_cleanup_GConverter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GConverter$MH() {
        return RuntimeHelper.requireNonNull(constants$856.glib_listautoptr_cleanup_GConverter$MH,"glib_listautoptr_cleanup_GConverter");
    }
    public static void glib_listautoptr_cleanup_GConverter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$856.glib_listautoptr_cleanup_GConverter$MH, "glib_listautoptr_cleanup_GConverter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GConverter$MH() {
        return RuntimeHelper.requireNonNull(constants$856.glib_slistautoptr_cleanup_GConverter$MH,"glib_slistautoptr_cleanup_GConverter");
    }
    public static void glib_slistautoptr_cleanup_GConverter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$856.glib_slistautoptr_cleanup_GConverter$MH, "glib_slistautoptr_cleanup_GConverter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GConverter$MH() {
        return RuntimeHelper.requireNonNull(constants$856.glib_queueautoptr_cleanup_GConverter$MH,"glib_queueautoptr_cleanup_GConverter");
    }
    public static void glib_queueautoptr_cleanup_GConverter ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$856.glib_queueautoptr_cleanup_GConverter$MH, "glib_queueautoptr_cleanup_GConverter");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GConverterInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GConverterInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GConverterInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GConverterInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GConverterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$856.glib_autoptr_clear_GConverterInputStream$MH,"glib_autoptr_clear_GConverterInputStream");
    }
    public static void glib_autoptr_clear_GConverterInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$856.glib_autoptr_clear_GConverterInputStream$MH, "glib_autoptr_clear_GConverterInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GConverterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$857.glib_autoptr_cleanup_GConverterInputStream$MH,"glib_autoptr_cleanup_GConverterInputStream");
    }
    public static void glib_autoptr_cleanup_GConverterInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$857.glib_autoptr_cleanup_GConverterInputStream$MH, "glib_autoptr_cleanup_GConverterInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GConverterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$857.glib_listautoptr_cleanup_GConverterInputStream$MH,"glib_listautoptr_cleanup_GConverterInputStream");
    }
    public static void glib_listautoptr_cleanup_GConverterInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$857.glib_listautoptr_cleanup_GConverterInputStream$MH, "glib_listautoptr_cleanup_GConverterInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GConverterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$857.glib_slistautoptr_cleanup_GConverterInputStream$MH,"glib_slistautoptr_cleanup_GConverterInputStream");
    }
    public static void glib_slistautoptr_cleanup_GConverterInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$857.glib_slistautoptr_cleanup_GConverterInputStream$MH, "glib_slistautoptr_cleanup_GConverterInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GConverterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$857.glib_queueautoptr_cleanup_GConverterInputStream$MH,"glib_queueautoptr_cleanup_GConverterInputStream");
    }
    public static void glib_queueautoptr_cleanup_GConverterInputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$857.glib_queueautoptr_cleanup_GConverterInputStream$MH, "glib_queueautoptr_cleanup_GConverterInputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GConverterOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GConverterOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GConverterOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GConverterOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GConverterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$857.glib_autoptr_clear_GConverterOutputStream$MH,"glib_autoptr_clear_GConverterOutputStream");
    }
    public static void glib_autoptr_clear_GConverterOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$857.glib_autoptr_clear_GConverterOutputStream$MH, "glib_autoptr_clear_GConverterOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GConverterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$857.glib_autoptr_cleanup_GConverterOutputStream$MH,"glib_autoptr_cleanup_GConverterOutputStream");
    }
    public static void glib_autoptr_cleanup_GConverterOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$857.glib_autoptr_cleanup_GConverterOutputStream$MH, "glib_autoptr_cleanup_GConverterOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GConverterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$858.glib_listautoptr_cleanup_GConverterOutputStream$MH,"glib_listautoptr_cleanup_GConverterOutputStream");
    }
    public static void glib_listautoptr_cleanup_GConverterOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$858.glib_listautoptr_cleanup_GConverterOutputStream$MH, "glib_listautoptr_cleanup_GConverterOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GConverterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$858.glib_slistautoptr_cleanup_GConverterOutputStream$MH,"glib_slistautoptr_cleanup_GConverterOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GConverterOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$858.glib_slistautoptr_cleanup_GConverterOutputStream$MH, "glib_slistautoptr_cleanup_GConverterOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GConverterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$858.glib_queueautoptr_cleanup_GConverterOutputStream$MH,"glib_queueautoptr_cleanup_GConverterOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GConverterOutputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$858.glib_queueautoptr_cleanup_GConverterOutputStream$MH, "glib_queueautoptr_cleanup_GConverterOutputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GCredentials_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GCredentials_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GCredentials_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GCredentials_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GCredentials$MH() {
        return RuntimeHelper.requireNonNull(constants$858.glib_autoptr_clear_GCredentials$MH,"glib_autoptr_clear_GCredentials");
    }
    public static void glib_autoptr_clear_GCredentials ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$858.glib_autoptr_clear_GCredentials$MH, "glib_autoptr_clear_GCredentials");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GCredentials$MH() {
        return RuntimeHelper.requireNonNull(constants$858.glib_autoptr_cleanup_GCredentials$MH,"glib_autoptr_cleanup_GCredentials");
    }
    public static void glib_autoptr_cleanup_GCredentials ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$858.glib_autoptr_cleanup_GCredentials$MH, "glib_autoptr_cleanup_GCredentials");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GCredentials$MH() {
        return RuntimeHelper.requireNonNull(constants$858.glib_listautoptr_cleanup_GCredentials$MH,"glib_listautoptr_cleanup_GCredentials");
    }
    public static void glib_listautoptr_cleanup_GCredentials ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$858.glib_listautoptr_cleanup_GCredentials$MH, "glib_listautoptr_cleanup_GCredentials");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GCredentials$MH() {
        return RuntimeHelper.requireNonNull(constants$859.glib_slistautoptr_cleanup_GCredentials$MH,"glib_slistautoptr_cleanup_GCredentials");
    }
    public static void glib_slistautoptr_cleanup_GCredentials ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$859.glib_slistautoptr_cleanup_GCredentials$MH, "glib_slistautoptr_cleanup_GCredentials");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GCredentials$MH() {
        return RuntimeHelper.requireNonNull(constants$859.glib_queueautoptr_cleanup_GCredentials$MH,"glib_queueautoptr_cleanup_GCredentials");
    }
    public static void glib_queueautoptr_cleanup_GCredentials ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$859.glib_queueautoptr_cleanup_GCredentials$MH, "glib_queueautoptr_cleanup_GCredentials");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDatagramBased_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDatagramBased_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDatagramBased_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDatagramBased_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDatagramBased$MH() {
        return RuntimeHelper.requireNonNull(constants$859.glib_autoptr_clear_GDatagramBased$MH,"glib_autoptr_clear_GDatagramBased");
    }
    public static void glib_autoptr_clear_GDatagramBased ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$859.glib_autoptr_clear_GDatagramBased$MH, "glib_autoptr_clear_GDatagramBased");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDatagramBased$MH() {
        return RuntimeHelper.requireNonNull(constants$859.glib_autoptr_cleanup_GDatagramBased$MH,"glib_autoptr_cleanup_GDatagramBased");
    }
    public static void glib_autoptr_cleanup_GDatagramBased ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$859.glib_autoptr_cleanup_GDatagramBased$MH, "glib_autoptr_cleanup_GDatagramBased");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDatagramBased$MH() {
        return RuntimeHelper.requireNonNull(constants$859.glib_listautoptr_cleanup_GDatagramBased$MH,"glib_listautoptr_cleanup_GDatagramBased");
    }
    public static void glib_listautoptr_cleanup_GDatagramBased ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$859.glib_listautoptr_cleanup_GDatagramBased$MH, "glib_listautoptr_cleanup_GDatagramBased");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDatagramBased$MH() {
        return RuntimeHelper.requireNonNull(constants$859.glib_slistautoptr_cleanup_GDatagramBased$MH,"glib_slistautoptr_cleanup_GDatagramBased");
    }
    public static void glib_slistautoptr_cleanup_GDatagramBased ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$859.glib_slistautoptr_cleanup_GDatagramBased$MH, "glib_slistautoptr_cleanup_GDatagramBased");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDatagramBased$MH() {
        return RuntimeHelper.requireNonNull(constants$860.glib_queueautoptr_cleanup_GDatagramBased$MH,"glib_queueautoptr_cleanup_GDatagramBased");
    }
    public static void glib_queueautoptr_cleanup_GDatagramBased ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$860.glib_queueautoptr_cleanup_GDatagramBased$MH, "glib_queueautoptr_cleanup_GDatagramBased");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDataInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDataInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDataInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDataInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDataInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$860.glib_autoptr_clear_GDataInputStream$MH,"glib_autoptr_clear_GDataInputStream");
    }
    public static void glib_autoptr_clear_GDataInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$860.glib_autoptr_clear_GDataInputStream$MH, "glib_autoptr_clear_GDataInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDataInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$860.glib_autoptr_cleanup_GDataInputStream$MH,"glib_autoptr_cleanup_GDataInputStream");
    }
    public static void glib_autoptr_cleanup_GDataInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$860.glib_autoptr_cleanup_GDataInputStream$MH, "glib_autoptr_cleanup_GDataInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDataInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$860.glib_listautoptr_cleanup_GDataInputStream$MH,"glib_listautoptr_cleanup_GDataInputStream");
    }
    public static void glib_listautoptr_cleanup_GDataInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$860.glib_listautoptr_cleanup_GDataInputStream$MH, "glib_listautoptr_cleanup_GDataInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDataInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$860.glib_slistautoptr_cleanup_GDataInputStream$MH,"glib_slistautoptr_cleanup_GDataInputStream");
    }
    public static void glib_slistautoptr_cleanup_GDataInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$860.glib_slistautoptr_cleanup_GDataInputStream$MH, "glib_slistautoptr_cleanup_GDataInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDataInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$860.glib_queueautoptr_cleanup_GDataInputStream$MH,"glib_queueautoptr_cleanup_GDataInputStream");
    }
    public static void glib_queueautoptr_cleanup_GDataInputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$860.glib_queueautoptr_cleanup_GDataInputStream$MH, "glib_queueautoptr_cleanup_GDataInputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDataOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDataOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDataOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDataOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDataOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$861.glib_autoptr_clear_GDataOutputStream$MH,"glib_autoptr_clear_GDataOutputStream");
    }
    public static void glib_autoptr_clear_GDataOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$861.glib_autoptr_clear_GDataOutputStream$MH, "glib_autoptr_clear_GDataOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDataOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$861.glib_autoptr_cleanup_GDataOutputStream$MH,"glib_autoptr_cleanup_GDataOutputStream");
    }
    public static void glib_autoptr_cleanup_GDataOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$861.glib_autoptr_cleanup_GDataOutputStream$MH, "glib_autoptr_cleanup_GDataOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDataOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$861.glib_listautoptr_cleanup_GDataOutputStream$MH,"glib_listautoptr_cleanup_GDataOutputStream");
    }
    public static void glib_listautoptr_cleanup_GDataOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$861.glib_listautoptr_cleanup_GDataOutputStream$MH, "glib_listautoptr_cleanup_GDataOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDataOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$861.glib_slistautoptr_cleanup_GDataOutputStream$MH,"glib_slistautoptr_cleanup_GDataOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GDataOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$861.glib_slistautoptr_cleanup_GDataOutputStream$MH, "glib_slistautoptr_cleanup_GDataOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDataOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$861.glib_queueautoptr_cleanup_GDataOutputStream$MH,"glib_queueautoptr_cleanup_GDataOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GDataOutputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$861.glib_queueautoptr_cleanup_GDataOutputStream$MH, "glib_queueautoptr_cleanup_GDataOutputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusActionGroup_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusActionGroup_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusActionGroup_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusActionGroup_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$861.glib_autoptr_clear_GDBusActionGroup$MH,"glib_autoptr_clear_GDBusActionGroup");
    }
    public static void glib_autoptr_clear_GDBusActionGroup ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$861.glib_autoptr_clear_GDBusActionGroup$MH, "glib_autoptr_clear_GDBusActionGroup");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$862.glib_autoptr_cleanup_GDBusActionGroup$MH,"glib_autoptr_cleanup_GDBusActionGroup");
    }
    public static void glib_autoptr_cleanup_GDBusActionGroup ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$862.glib_autoptr_cleanup_GDBusActionGroup$MH, "glib_autoptr_cleanup_GDBusActionGroup");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$862.glib_listautoptr_cleanup_GDBusActionGroup$MH,"glib_listautoptr_cleanup_GDBusActionGroup");
    }
    public static void glib_listautoptr_cleanup_GDBusActionGroup ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$862.glib_listautoptr_cleanup_GDBusActionGroup$MH, "glib_listautoptr_cleanup_GDBusActionGroup");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$862.glib_slistautoptr_cleanup_GDBusActionGroup$MH,"glib_slistautoptr_cleanup_GDBusActionGroup");
    }
    public static void glib_slistautoptr_cleanup_GDBusActionGroup ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$862.glib_slistautoptr_cleanup_GDBusActionGroup$MH, "glib_slistautoptr_cleanup_GDBusActionGroup");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$862.glib_queueautoptr_cleanup_GDBusActionGroup$MH,"glib_queueautoptr_cleanup_GDBusActionGroup");
    }
    public static void glib_queueautoptr_cleanup_GDBusActionGroup ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$862.glib_queueautoptr_cleanup_GDBusActionGroup$MH, "glib_queueautoptr_cleanup_GDBusActionGroup");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusAuthObserver_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusAuthObserver_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusAuthObserver_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusAuthObserver_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusAuthObserver$MH() {
        return RuntimeHelper.requireNonNull(constants$862.glib_autoptr_clear_GDBusAuthObserver$MH,"glib_autoptr_clear_GDBusAuthObserver");
    }
    public static void glib_autoptr_clear_GDBusAuthObserver ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$862.glib_autoptr_clear_GDBusAuthObserver$MH, "glib_autoptr_clear_GDBusAuthObserver");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusAuthObserver$MH() {
        return RuntimeHelper.requireNonNull(constants$862.glib_autoptr_cleanup_GDBusAuthObserver$MH,"glib_autoptr_cleanup_GDBusAuthObserver");
    }
    public static void glib_autoptr_cleanup_GDBusAuthObserver ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$862.glib_autoptr_cleanup_GDBusAuthObserver$MH, "glib_autoptr_cleanup_GDBusAuthObserver");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusAuthObserver$MH() {
        return RuntimeHelper.requireNonNull(constants$863.glib_listautoptr_cleanup_GDBusAuthObserver$MH,"glib_listautoptr_cleanup_GDBusAuthObserver");
    }
    public static void glib_listautoptr_cleanup_GDBusAuthObserver ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$863.glib_listautoptr_cleanup_GDBusAuthObserver$MH, "glib_listautoptr_cleanup_GDBusAuthObserver");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusAuthObserver$MH() {
        return RuntimeHelper.requireNonNull(constants$863.glib_slistautoptr_cleanup_GDBusAuthObserver$MH,"glib_slistautoptr_cleanup_GDBusAuthObserver");
    }
    public static void glib_slistautoptr_cleanup_GDBusAuthObserver ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$863.glib_slistautoptr_cleanup_GDBusAuthObserver$MH, "glib_slistautoptr_cleanup_GDBusAuthObserver");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusAuthObserver$MH() {
        return RuntimeHelper.requireNonNull(constants$863.glib_queueautoptr_cleanup_GDBusAuthObserver$MH,"glib_queueautoptr_cleanup_GDBusAuthObserver");
    }
    public static void glib_queueautoptr_cleanup_GDBusAuthObserver ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$863.glib_queueautoptr_cleanup_GDBusAuthObserver$MH, "glib_queueautoptr_cleanup_GDBusAuthObserver");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$863.glib_autoptr_clear_GDBusConnection$MH,"glib_autoptr_clear_GDBusConnection");
    }
    public static void glib_autoptr_clear_GDBusConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$863.glib_autoptr_clear_GDBusConnection$MH, "glib_autoptr_clear_GDBusConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$863.glib_autoptr_cleanup_GDBusConnection$MH,"glib_autoptr_cleanup_GDBusConnection");
    }
    public static void glib_autoptr_cleanup_GDBusConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$863.glib_autoptr_cleanup_GDBusConnection$MH, "glib_autoptr_cleanup_GDBusConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$863.glib_listautoptr_cleanup_GDBusConnection$MH,"glib_listautoptr_cleanup_GDBusConnection");
    }
    public static void glib_listautoptr_cleanup_GDBusConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$863.glib_listautoptr_cleanup_GDBusConnection$MH, "glib_listautoptr_cleanup_GDBusConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$864.glib_slistautoptr_cleanup_GDBusConnection$MH,"glib_slistautoptr_cleanup_GDBusConnection");
    }
    public static void glib_slistautoptr_cleanup_GDBusConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$864.glib_slistautoptr_cleanup_GDBusConnection$MH, "glib_slistautoptr_cleanup_GDBusConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$864.glib_queueautoptr_cleanup_GDBusConnection$MH,"glib_queueautoptr_cleanup_GDBusConnection");
    }
    public static void glib_queueautoptr_cleanup_GDBusConnection ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$864.glib_queueautoptr_cleanup_GDBusConnection$MH, "glib_queueautoptr_cleanup_GDBusConnection");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusInterface_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusInterface_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusInterface_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusInterface_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusInterface$MH() {
        return RuntimeHelper.requireNonNull(constants$864.glib_autoptr_clear_GDBusInterface$MH,"glib_autoptr_clear_GDBusInterface");
    }
    public static void glib_autoptr_clear_GDBusInterface ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$864.glib_autoptr_clear_GDBusInterface$MH, "glib_autoptr_clear_GDBusInterface");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusInterface$MH() {
        return RuntimeHelper.requireNonNull(constants$864.glib_autoptr_cleanup_GDBusInterface$MH,"glib_autoptr_cleanup_GDBusInterface");
    }
    public static void glib_autoptr_cleanup_GDBusInterface ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$864.glib_autoptr_cleanup_GDBusInterface$MH, "glib_autoptr_cleanup_GDBusInterface");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusInterface$MH() {
        return RuntimeHelper.requireNonNull(constants$864.glib_listautoptr_cleanup_GDBusInterface$MH,"glib_listautoptr_cleanup_GDBusInterface");
    }
    public static void glib_listautoptr_cleanup_GDBusInterface ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$864.glib_listautoptr_cleanup_GDBusInterface$MH, "glib_listautoptr_cleanup_GDBusInterface");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusInterface$MH() {
        return RuntimeHelper.requireNonNull(constants$864.glib_slistautoptr_cleanup_GDBusInterface$MH,"glib_slistautoptr_cleanup_GDBusInterface");
    }
    public static void glib_slistautoptr_cleanup_GDBusInterface ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$864.glib_slistautoptr_cleanup_GDBusInterface$MH, "glib_slistautoptr_cleanup_GDBusInterface");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusInterface$MH() {
        return RuntimeHelper.requireNonNull(constants$865.glib_queueautoptr_cleanup_GDBusInterface$MH,"glib_queueautoptr_cleanup_GDBusInterface");
    }
    public static void glib_queueautoptr_cleanup_GDBusInterface ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$865.glib_queueautoptr_cleanup_GDBusInterface$MH, "glib_queueautoptr_cleanup_GDBusInterface");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusInterfaceSkeleton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusInterfaceSkeleton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusInterfaceSkeleton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusInterfaceSkeleton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusInterfaceSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$865.glib_autoptr_clear_GDBusInterfaceSkeleton$MH,"glib_autoptr_clear_GDBusInterfaceSkeleton");
    }
    public static void glib_autoptr_clear_GDBusInterfaceSkeleton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$865.glib_autoptr_clear_GDBusInterfaceSkeleton$MH, "glib_autoptr_clear_GDBusInterfaceSkeleton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusInterfaceSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$865.glib_autoptr_cleanup_GDBusInterfaceSkeleton$MH,"glib_autoptr_cleanup_GDBusInterfaceSkeleton");
    }
    public static void glib_autoptr_cleanup_GDBusInterfaceSkeleton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$865.glib_autoptr_cleanup_GDBusInterfaceSkeleton$MH, "glib_autoptr_cleanup_GDBusInterfaceSkeleton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusInterfaceSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$865.glib_listautoptr_cleanup_GDBusInterfaceSkeleton$MH,"glib_listautoptr_cleanup_GDBusInterfaceSkeleton");
    }
    public static void glib_listautoptr_cleanup_GDBusInterfaceSkeleton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$865.glib_listautoptr_cleanup_GDBusInterfaceSkeleton$MH, "glib_listautoptr_cleanup_GDBusInterfaceSkeleton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusInterfaceSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$865.glib_slistautoptr_cleanup_GDBusInterfaceSkeleton$MH,"glib_slistautoptr_cleanup_GDBusInterfaceSkeleton");
    }
    public static void glib_slistautoptr_cleanup_GDBusInterfaceSkeleton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$865.glib_slistautoptr_cleanup_GDBusInterfaceSkeleton$MH, "glib_slistautoptr_cleanup_GDBusInterfaceSkeleton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusInterfaceSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$865.glib_queueautoptr_cleanup_GDBusInterfaceSkeleton$MH,"glib_queueautoptr_cleanup_GDBusInterfaceSkeleton");
    }
    public static void glib_queueautoptr_cleanup_GDBusInterfaceSkeleton ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$865.glib_queueautoptr_cleanup_GDBusInterfaceSkeleton$MH, "glib_queueautoptr_cleanup_GDBusInterfaceSkeleton");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusMenuModel_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMenuModel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMenuModel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMenuModel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$866.glib_autoptr_clear_GDBusMenuModel$MH,"glib_autoptr_clear_GDBusMenuModel");
    }
    public static void glib_autoptr_clear_GDBusMenuModel ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$866.glib_autoptr_clear_GDBusMenuModel$MH, "glib_autoptr_clear_GDBusMenuModel");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$866.glib_autoptr_cleanup_GDBusMenuModel$MH,"glib_autoptr_cleanup_GDBusMenuModel");
    }
    public static void glib_autoptr_cleanup_GDBusMenuModel ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$866.glib_autoptr_cleanup_GDBusMenuModel$MH, "glib_autoptr_cleanup_GDBusMenuModel");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$866.glib_listautoptr_cleanup_GDBusMenuModel$MH,"glib_listautoptr_cleanup_GDBusMenuModel");
    }
    public static void glib_listautoptr_cleanup_GDBusMenuModel ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$866.glib_listautoptr_cleanup_GDBusMenuModel$MH, "glib_listautoptr_cleanup_GDBusMenuModel");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$866.glib_slistautoptr_cleanup_GDBusMenuModel$MH,"glib_slistautoptr_cleanup_GDBusMenuModel");
    }
    public static void glib_slistautoptr_cleanup_GDBusMenuModel ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$866.glib_slistautoptr_cleanup_GDBusMenuModel$MH, "glib_slistautoptr_cleanup_GDBusMenuModel");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$866.glib_queueautoptr_cleanup_GDBusMenuModel$MH,"glib_queueautoptr_cleanup_GDBusMenuModel");
    }
    public static void glib_queueautoptr_cleanup_GDBusMenuModel ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$866.glib_queueautoptr_cleanup_GDBusMenuModel$MH, "glib_queueautoptr_cleanup_GDBusMenuModel");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusMessage_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMessage_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMessage_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMessage_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$866.glib_autoptr_clear_GDBusMessage$MH,"glib_autoptr_clear_GDBusMessage");
    }
    public static void glib_autoptr_clear_GDBusMessage ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$866.glib_autoptr_clear_GDBusMessage$MH, "glib_autoptr_clear_GDBusMessage");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$867.glib_autoptr_cleanup_GDBusMessage$MH,"glib_autoptr_cleanup_GDBusMessage");
    }
    public static void glib_autoptr_cleanup_GDBusMessage ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$867.glib_autoptr_cleanup_GDBusMessage$MH, "glib_autoptr_cleanup_GDBusMessage");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$867.glib_listautoptr_cleanup_GDBusMessage$MH,"glib_listautoptr_cleanup_GDBusMessage");
    }
    public static void glib_listautoptr_cleanup_GDBusMessage ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$867.glib_listautoptr_cleanup_GDBusMessage$MH, "glib_listautoptr_cleanup_GDBusMessage");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$867.glib_slistautoptr_cleanup_GDBusMessage$MH,"glib_slistautoptr_cleanup_GDBusMessage");
    }
    public static void glib_slistautoptr_cleanup_GDBusMessage ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$867.glib_slistautoptr_cleanup_GDBusMessage$MH, "glib_slistautoptr_cleanup_GDBusMessage");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$867.glib_queueautoptr_cleanup_GDBusMessage$MH,"glib_queueautoptr_cleanup_GDBusMessage");
    }
    public static void glib_queueautoptr_cleanup_GDBusMessage ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$867.glib_queueautoptr_cleanup_GDBusMessage$MH, "glib_queueautoptr_cleanup_GDBusMessage");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusMethodInvocation_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMethodInvocation_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMethodInvocation_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMethodInvocation_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusMethodInvocation$MH() {
        return RuntimeHelper.requireNonNull(constants$867.glib_autoptr_clear_GDBusMethodInvocation$MH,"glib_autoptr_clear_GDBusMethodInvocation");
    }
    public static void glib_autoptr_clear_GDBusMethodInvocation ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$867.glib_autoptr_clear_GDBusMethodInvocation$MH, "glib_autoptr_clear_GDBusMethodInvocation");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusMethodInvocation$MH() {
        return RuntimeHelper.requireNonNull(constants$867.glib_autoptr_cleanup_GDBusMethodInvocation$MH,"glib_autoptr_cleanup_GDBusMethodInvocation");
    }
    public static void glib_autoptr_cleanup_GDBusMethodInvocation ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$867.glib_autoptr_cleanup_GDBusMethodInvocation$MH, "glib_autoptr_cleanup_GDBusMethodInvocation");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusMethodInvocation$MH() {
        return RuntimeHelper.requireNonNull(constants$868.glib_listautoptr_cleanup_GDBusMethodInvocation$MH,"glib_listautoptr_cleanup_GDBusMethodInvocation");
    }
    public static void glib_listautoptr_cleanup_GDBusMethodInvocation ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$868.glib_listautoptr_cleanup_GDBusMethodInvocation$MH, "glib_listautoptr_cleanup_GDBusMethodInvocation");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusMethodInvocation$MH() {
        return RuntimeHelper.requireNonNull(constants$868.glib_slistautoptr_cleanup_GDBusMethodInvocation$MH,"glib_slistautoptr_cleanup_GDBusMethodInvocation");
    }
    public static void glib_slistautoptr_cleanup_GDBusMethodInvocation ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$868.glib_slistautoptr_cleanup_GDBusMethodInvocation$MH, "glib_slistautoptr_cleanup_GDBusMethodInvocation");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusMethodInvocation$MH() {
        return RuntimeHelper.requireNonNull(constants$868.glib_queueautoptr_cleanup_GDBusMethodInvocation$MH,"glib_queueautoptr_cleanup_GDBusMethodInvocation");
    }
    public static void glib_queueautoptr_cleanup_GDBusMethodInvocation ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$868.glib_queueautoptr_cleanup_GDBusMethodInvocation$MH, "glib_queueautoptr_cleanup_GDBusMethodInvocation");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusNodeInfo_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusNodeInfo_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusNodeInfo_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusNodeInfo_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusNodeInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$868.glib_autoptr_clear_GDBusNodeInfo$MH,"glib_autoptr_clear_GDBusNodeInfo");
    }
    public static void glib_autoptr_clear_GDBusNodeInfo ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$868.glib_autoptr_clear_GDBusNodeInfo$MH, "glib_autoptr_clear_GDBusNodeInfo");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusNodeInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$868.glib_autoptr_cleanup_GDBusNodeInfo$MH,"glib_autoptr_cleanup_GDBusNodeInfo");
    }
    public static void glib_autoptr_cleanup_GDBusNodeInfo ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$868.glib_autoptr_cleanup_GDBusNodeInfo$MH, "glib_autoptr_cleanup_GDBusNodeInfo");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusNodeInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$868.glib_listautoptr_cleanup_GDBusNodeInfo$MH,"glib_listautoptr_cleanup_GDBusNodeInfo");
    }
    public static void glib_listautoptr_cleanup_GDBusNodeInfo ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$868.glib_listautoptr_cleanup_GDBusNodeInfo$MH, "glib_listautoptr_cleanup_GDBusNodeInfo");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusNodeInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$869.glib_slistautoptr_cleanup_GDBusNodeInfo$MH,"glib_slistautoptr_cleanup_GDBusNodeInfo");
    }
    public static void glib_slistautoptr_cleanup_GDBusNodeInfo ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$869.glib_slistautoptr_cleanup_GDBusNodeInfo$MH, "glib_slistautoptr_cleanup_GDBusNodeInfo");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusNodeInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$869.glib_queueautoptr_cleanup_GDBusNodeInfo$MH,"glib_queueautoptr_cleanup_GDBusNodeInfo");
    }
    public static void glib_queueautoptr_cleanup_GDBusNodeInfo ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$869.glib_queueautoptr_cleanup_GDBusNodeInfo$MH, "glib_queueautoptr_cleanup_GDBusNodeInfo");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusObject_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObject_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObject_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObject_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusObject$MH() {
        return RuntimeHelper.requireNonNull(constants$869.glib_autoptr_clear_GDBusObject$MH,"glib_autoptr_clear_GDBusObject");
    }
    public static void glib_autoptr_clear_GDBusObject ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$869.glib_autoptr_clear_GDBusObject$MH, "glib_autoptr_clear_GDBusObject");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusObject$MH() {
        return RuntimeHelper.requireNonNull(constants$869.glib_autoptr_cleanup_GDBusObject$MH,"glib_autoptr_cleanup_GDBusObject");
    }
    public static void glib_autoptr_cleanup_GDBusObject ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$869.glib_autoptr_cleanup_GDBusObject$MH, "glib_autoptr_cleanup_GDBusObject");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusObject$MH() {
        return RuntimeHelper.requireNonNull(constants$869.glib_listautoptr_cleanup_GDBusObject$MH,"glib_listautoptr_cleanup_GDBusObject");
    }
    public static void glib_listautoptr_cleanup_GDBusObject ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$869.glib_listautoptr_cleanup_GDBusObject$MH, "glib_listautoptr_cleanup_GDBusObject");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusObject$MH() {
        return RuntimeHelper.requireNonNull(constants$869.glib_slistautoptr_cleanup_GDBusObject$MH,"glib_slistautoptr_cleanup_GDBusObject");
    }
    public static void glib_slistautoptr_cleanup_GDBusObject ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$869.glib_slistautoptr_cleanup_GDBusObject$MH, "glib_slistautoptr_cleanup_GDBusObject");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusObject$MH() {
        return RuntimeHelper.requireNonNull(constants$870.glib_queueautoptr_cleanup_GDBusObject$MH,"glib_queueautoptr_cleanup_GDBusObject");
    }
    public static void glib_queueautoptr_cleanup_GDBusObject ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$870.glib_queueautoptr_cleanup_GDBusObject$MH, "glib_queueautoptr_cleanup_GDBusObject");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusObjectManagerClient_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManagerClient_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManagerClient_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManagerClient_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusObjectManagerClient$MH() {
        return RuntimeHelper.requireNonNull(constants$870.glib_autoptr_clear_GDBusObjectManagerClient$MH,"glib_autoptr_clear_GDBusObjectManagerClient");
    }
    public static void glib_autoptr_clear_GDBusObjectManagerClient ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$870.glib_autoptr_clear_GDBusObjectManagerClient$MH, "glib_autoptr_clear_GDBusObjectManagerClient");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusObjectManagerClient$MH() {
        return RuntimeHelper.requireNonNull(constants$870.glib_autoptr_cleanup_GDBusObjectManagerClient$MH,"glib_autoptr_cleanup_GDBusObjectManagerClient");
    }
    public static void glib_autoptr_cleanup_GDBusObjectManagerClient ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$870.glib_autoptr_cleanup_GDBusObjectManagerClient$MH, "glib_autoptr_cleanup_GDBusObjectManagerClient");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusObjectManagerClient$MH() {
        return RuntimeHelper.requireNonNull(constants$870.glib_listautoptr_cleanup_GDBusObjectManagerClient$MH,"glib_listautoptr_cleanup_GDBusObjectManagerClient");
    }
    public static void glib_listautoptr_cleanup_GDBusObjectManagerClient ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$870.glib_listautoptr_cleanup_GDBusObjectManagerClient$MH, "glib_listautoptr_cleanup_GDBusObjectManagerClient");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusObjectManagerClient$MH() {
        return RuntimeHelper.requireNonNull(constants$870.glib_slistautoptr_cleanup_GDBusObjectManagerClient$MH,"glib_slistautoptr_cleanup_GDBusObjectManagerClient");
    }
    public static void glib_slistautoptr_cleanup_GDBusObjectManagerClient ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$870.glib_slistautoptr_cleanup_GDBusObjectManagerClient$MH, "glib_slistautoptr_cleanup_GDBusObjectManagerClient");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusObjectManagerClient$MH() {
        return RuntimeHelper.requireNonNull(constants$870.glib_queueautoptr_cleanup_GDBusObjectManagerClient$MH,"glib_queueautoptr_cleanup_GDBusObjectManagerClient");
    }
    public static void glib_queueautoptr_cleanup_GDBusObjectManagerClient ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$870.glib_queueautoptr_cleanup_GDBusObjectManagerClient$MH, "glib_queueautoptr_cleanup_GDBusObjectManagerClient");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusObjectManager_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManager_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManager_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManager_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusObjectManager$MH() {
        return RuntimeHelper.requireNonNull(constants$871.glib_autoptr_clear_GDBusObjectManager$MH,"glib_autoptr_clear_GDBusObjectManager");
    }
    public static void glib_autoptr_clear_GDBusObjectManager ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$871.glib_autoptr_clear_GDBusObjectManager$MH, "glib_autoptr_clear_GDBusObjectManager");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusObjectManager$MH() {
        return RuntimeHelper.requireNonNull(constants$871.glib_autoptr_cleanup_GDBusObjectManager$MH,"glib_autoptr_cleanup_GDBusObjectManager");
    }
    public static void glib_autoptr_cleanup_GDBusObjectManager ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$871.glib_autoptr_cleanup_GDBusObjectManager$MH, "glib_autoptr_cleanup_GDBusObjectManager");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusObjectManager$MH() {
        return RuntimeHelper.requireNonNull(constants$871.glib_listautoptr_cleanup_GDBusObjectManager$MH,"glib_listautoptr_cleanup_GDBusObjectManager");
    }
    public static void glib_listautoptr_cleanup_GDBusObjectManager ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$871.glib_listautoptr_cleanup_GDBusObjectManager$MH, "glib_listautoptr_cleanup_GDBusObjectManager");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusObjectManager$MH() {
        return RuntimeHelper.requireNonNull(constants$871.glib_slistautoptr_cleanup_GDBusObjectManager$MH,"glib_slistautoptr_cleanup_GDBusObjectManager");
    }
    public static void glib_slistautoptr_cleanup_GDBusObjectManager ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$871.glib_slistautoptr_cleanup_GDBusObjectManager$MH, "glib_slistautoptr_cleanup_GDBusObjectManager");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusObjectManager$MH() {
        return RuntimeHelper.requireNonNull(constants$871.glib_queueautoptr_cleanup_GDBusObjectManager$MH,"glib_queueautoptr_cleanup_GDBusObjectManager");
    }
    public static void glib_queueautoptr_cleanup_GDBusObjectManager ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$871.glib_queueautoptr_cleanup_GDBusObjectManager$MH, "glib_queueautoptr_cleanup_GDBusObjectManager");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusObjectManagerServer_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManagerServer_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManagerServer_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManagerServer_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusObjectManagerServer$MH() {
        return RuntimeHelper.requireNonNull(constants$871.glib_autoptr_clear_GDBusObjectManagerServer$MH,"glib_autoptr_clear_GDBusObjectManagerServer");
    }
    public static void glib_autoptr_clear_GDBusObjectManagerServer ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$871.glib_autoptr_clear_GDBusObjectManagerServer$MH, "glib_autoptr_clear_GDBusObjectManagerServer");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusObjectManagerServer$MH() {
        return RuntimeHelper.requireNonNull(constants$872.glib_autoptr_cleanup_GDBusObjectManagerServer$MH,"glib_autoptr_cleanup_GDBusObjectManagerServer");
    }
    public static void glib_autoptr_cleanup_GDBusObjectManagerServer ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$872.glib_autoptr_cleanup_GDBusObjectManagerServer$MH, "glib_autoptr_cleanup_GDBusObjectManagerServer");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusObjectManagerServer$MH() {
        return RuntimeHelper.requireNonNull(constants$872.glib_listautoptr_cleanup_GDBusObjectManagerServer$MH,"glib_listautoptr_cleanup_GDBusObjectManagerServer");
    }
    public static void glib_listautoptr_cleanup_GDBusObjectManagerServer ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$872.glib_listautoptr_cleanup_GDBusObjectManagerServer$MH, "glib_listautoptr_cleanup_GDBusObjectManagerServer");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusObjectManagerServer$MH() {
        return RuntimeHelper.requireNonNull(constants$872.glib_slistautoptr_cleanup_GDBusObjectManagerServer$MH,"glib_slistautoptr_cleanup_GDBusObjectManagerServer");
    }
    public static void glib_slistautoptr_cleanup_GDBusObjectManagerServer ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$872.glib_slistautoptr_cleanup_GDBusObjectManagerServer$MH, "glib_slistautoptr_cleanup_GDBusObjectManagerServer");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusObjectManagerServer$MH() {
        return RuntimeHelper.requireNonNull(constants$872.glib_queueautoptr_cleanup_GDBusObjectManagerServer$MH,"glib_queueautoptr_cleanup_GDBusObjectManagerServer");
    }
    public static void glib_queueautoptr_cleanup_GDBusObjectManagerServer ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$872.glib_queueautoptr_cleanup_GDBusObjectManagerServer$MH, "glib_queueautoptr_cleanup_GDBusObjectManagerServer");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusObjectProxy_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectProxy_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectProxy_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectProxy_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusObjectProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$872.glib_autoptr_clear_GDBusObjectProxy$MH,"glib_autoptr_clear_GDBusObjectProxy");
    }
    public static void glib_autoptr_clear_GDBusObjectProxy ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$872.glib_autoptr_clear_GDBusObjectProxy$MH, "glib_autoptr_clear_GDBusObjectProxy");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusObjectProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$872.glib_autoptr_cleanup_GDBusObjectProxy$MH,"glib_autoptr_cleanup_GDBusObjectProxy");
    }
    public static void glib_autoptr_cleanup_GDBusObjectProxy ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$872.glib_autoptr_cleanup_GDBusObjectProxy$MH, "glib_autoptr_cleanup_GDBusObjectProxy");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusObjectProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$873.glib_listautoptr_cleanup_GDBusObjectProxy$MH,"glib_listautoptr_cleanup_GDBusObjectProxy");
    }
    public static void glib_listautoptr_cleanup_GDBusObjectProxy ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$873.glib_listautoptr_cleanup_GDBusObjectProxy$MH, "glib_listautoptr_cleanup_GDBusObjectProxy");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusObjectProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$873.glib_slistautoptr_cleanup_GDBusObjectProxy$MH,"glib_slistautoptr_cleanup_GDBusObjectProxy");
    }
    public static void glib_slistautoptr_cleanup_GDBusObjectProxy ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$873.glib_slistautoptr_cleanup_GDBusObjectProxy$MH, "glib_slistautoptr_cleanup_GDBusObjectProxy");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusObjectProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$873.glib_queueautoptr_cleanup_GDBusObjectProxy$MH,"glib_queueautoptr_cleanup_GDBusObjectProxy");
    }
    public static void glib_queueautoptr_cleanup_GDBusObjectProxy ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$873.glib_queueautoptr_cleanup_GDBusObjectProxy$MH, "glib_queueautoptr_cleanup_GDBusObjectProxy");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusObjectSkeleton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectSkeleton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectSkeleton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectSkeleton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusObjectSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$873.glib_autoptr_clear_GDBusObjectSkeleton$MH,"glib_autoptr_clear_GDBusObjectSkeleton");
    }
    public static void glib_autoptr_clear_GDBusObjectSkeleton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$873.glib_autoptr_clear_GDBusObjectSkeleton$MH, "glib_autoptr_clear_GDBusObjectSkeleton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusObjectSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$873.glib_autoptr_cleanup_GDBusObjectSkeleton$MH,"glib_autoptr_cleanup_GDBusObjectSkeleton");
    }
    public static void glib_autoptr_cleanup_GDBusObjectSkeleton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$873.glib_autoptr_cleanup_GDBusObjectSkeleton$MH, "glib_autoptr_cleanup_GDBusObjectSkeleton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusObjectSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$873.glib_listautoptr_cleanup_GDBusObjectSkeleton$MH,"glib_listautoptr_cleanup_GDBusObjectSkeleton");
    }
    public static void glib_listautoptr_cleanup_GDBusObjectSkeleton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$873.glib_listautoptr_cleanup_GDBusObjectSkeleton$MH, "glib_listautoptr_cleanup_GDBusObjectSkeleton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusObjectSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$874.glib_slistautoptr_cleanup_GDBusObjectSkeleton$MH,"glib_slistautoptr_cleanup_GDBusObjectSkeleton");
    }
    public static void glib_slistautoptr_cleanup_GDBusObjectSkeleton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$874.glib_slistautoptr_cleanup_GDBusObjectSkeleton$MH, "glib_slistautoptr_cleanup_GDBusObjectSkeleton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusObjectSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$874.glib_queueautoptr_cleanup_GDBusObjectSkeleton$MH,"glib_queueautoptr_cleanup_GDBusObjectSkeleton");
    }
    public static void glib_queueautoptr_cleanup_GDBusObjectSkeleton ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$874.glib_queueautoptr_cleanup_GDBusObjectSkeleton$MH, "glib_queueautoptr_cleanup_GDBusObjectSkeleton");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusProxy_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusProxy_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusProxy_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusProxy_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$874.glib_autoptr_clear_GDBusProxy$MH,"glib_autoptr_clear_GDBusProxy");
    }
    public static void glib_autoptr_clear_GDBusProxy ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$874.glib_autoptr_clear_GDBusProxy$MH, "glib_autoptr_clear_GDBusProxy");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$874.glib_autoptr_cleanup_GDBusProxy$MH,"glib_autoptr_cleanup_GDBusProxy");
    }
    public static void glib_autoptr_cleanup_GDBusProxy ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$874.glib_autoptr_cleanup_GDBusProxy$MH, "glib_autoptr_cleanup_GDBusProxy");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$874.glib_listautoptr_cleanup_GDBusProxy$MH,"glib_listautoptr_cleanup_GDBusProxy");
    }
    public static void glib_listautoptr_cleanup_GDBusProxy ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$874.glib_listautoptr_cleanup_GDBusProxy$MH, "glib_listautoptr_cleanup_GDBusProxy");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$874.glib_slistautoptr_cleanup_GDBusProxy$MH,"glib_slistautoptr_cleanup_GDBusProxy");
    }
    public static void glib_slistautoptr_cleanup_GDBusProxy ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$874.glib_slistautoptr_cleanup_GDBusProxy$MH, "glib_slistautoptr_cleanup_GDBusProxy");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$875.glib_queueautoptr_cleanup_GDBusProxy$MH,"glib_queueautoptr_cleanup_GDBusProxy");
    }
    public static void glib_queueautoptr_cleanup_GDBusProxy ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$875.glib_queueautoptr_cleanup_GDBusProxy$MH, "glib_queueautoptr_cleanup_GDBusProxy");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusServer_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusServer_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusServer_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusServer_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusServer$MH() {
        return RuntimeHelper.requireNonNull(constants$875.glib_autoptr_clear_GDBusServer$MH,"glib_autoptr_clear_GDBusServer");
    }
    public static void glib_autoptr_clear_GDBusServer ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$875.glib_autoptr_clear_GDBusServer$MH, "glib_autoptr_clear_GDBusServer");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusServer$MH() {
        return RuntimeHelper.requireNonNull(constants$875.glib_autoptr_cleanup_GDBusServer$MH,"glib_autoptr_cleanup_GDBusServer");
    }
    public static void glib_autoptr_cleanup_GDBusServer ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$875.glib_autoptr_cleanup_GDBusServer$MH, "glib_autoptr_cleanup_GDBusServer");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusServer$MH() {
        return RuntimeHelper.requireNonNull(constants$875.glib_listautoptr_cleanup_GDBusServer$MH,"glib_listautoptr_cleanup_GDBusServer");
    }
    public static void glib_listautoptr_cleanup_GDBusServer ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$875.glib_listautoptr_cleanup_GDBusServer$MH, "glib_listautoptr_cleanup_GDBusServer");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusServer$MH() {
        return RuntimeHelper.requireNonNull(constants$875.glib_slistautoptr_cleanup_GDBusServer$MH,"glib_slistautoptr_cleanup_GDBusServer");
    }
    public static void glib_slistautoptr_cleanup_GDBusServer ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$875.glib_slistautoptr_cleanup_GDBusServer$MH, "glib_slistautoptr_cleanup_GDBusServer");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusServer$MH() {
        return RuntimeHelper.requireNonNull(constants$875.glib_queueautoptr_cleanup_GDBusServer$MH,"glib_queueautoptr_cleanup_GDBusServer");
    }
    public static void glib_queueautoptr_cleanup_GDBusServer ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$875.glib_queueautoptr_cleanup_GDBusServer$MH, "glib_queueautoptr_cleanup_GDBusServer");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDrive_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDrive_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDrive_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDrive_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDrive$MH() {
        return RuntimeHelper.requireNonNull(constants$876.glib_autoptr_clear_GDrive$MH,"glib_autoptr_clear_GDrive");
    }
    public static void glib_autoptr_clear_GDrive ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$876.glib_autoptr_clear_GDrive$MH, "glib_autoptr_clear_GDrive");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDrive$MH() {
        return RuntimeHelper.requireNonNull(constants$876.glib_autoptr_cleanup_GDrive$MH,"glib_autoptr_cleanup_GDrive");
    }
    public static void glib_autoptr_cleanup_GDrive ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$876.glib_autoptr_cleanup_GDrive$MH, "glib_autoptr_cleanup_GDrive");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDrive$MH() {
        return RuntimeHelper.requireNonNull(constants$876.glib_listautoptr_cleanup_GDrive$MH,"glib_listautoptr_cleanup_GDrive");
    }
    public static void glib_listautoptr_cleanup_GDrive ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$876.glib_listautoptr_cleanup_GDrive$MH, "glib_listautoptr_cleanup_GDrive");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDrive$MH() {
        return RuntimeHelper.requireNonNull(constants$876.glib_slistautoptr_cleanup_GDrive$MH,"glib_slistautoptr_cleanup_GDrive");
    }
    public static void glib_slistautoptr_cleanup_GDrive ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$876.glib_slistautoptr_cleanup_GDrive$MH, "glib_slistautoptr_cleanup_GDrive");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDrive$MH() {
        return RuntimeHelper.requireNonNull(constants$876.glib_queueautoptr_cleanup_GDrive$MH,"glib_queueautoptr_cleanup_GDrive");
    }
    public static void glib_queueautoptr_cleanup_GDrive ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$876.glib_queueautoptr_cleanup_GDrive$MH, "glib_queueautoptr_cleanup_GDrive");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GEmblemedIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEmblemedIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEmblemedIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEmblemedIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GEmblemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$876.glib_autoptr_clear_GEmblemedIcon$MH,"glib_autoptr_clear_GEmblemedIcon");
    }
    public static void glib_autoptr_clear_GEmblemedIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$876.glib_autoptr_clear_GEmblemedIcon$MH, "glib_autoptr_clear_GEmblemedIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GEmblemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$877.glib_autoptr_cleanup_GEmblemedIcon$MH,"glib_autoptr_cleanup_GEmblemedIcon");
    }
    public static void glib_autoptr_cleanup_GEmblemedIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$877.glib_autoptr_cleanup_GEmblemedIcon$MH, "glib_autoptr_cleanup_GEmblemedIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GEmblemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$877.glib_listautoptr_cleanup_GEmblemedIcon$MH,"glib_listautoptr_cleanup_GEmblemedIcon");
    }
    public static void glib_listautoptr_cleanup_GEmblemedIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$877.glib_listautoptr_cleanup_GEmblemedIcon$MH, "glib_listautoptr_cleanup_GEmblemedIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GEmblemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$877.glib_slistautoptr_cleanup_GEmblemedIcon$MH,"glib_slistautoptr_cleanup_GEmblemedIcon");
    }
    public static void glib_slistautoptr_cleanup_GEmblemedIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$877.glib_slistautoptr_cleanup_GEmblemedIcon$MH, "glib_slistautoptr_cleanup_GEmblemedIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GEmblemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$877.glib_queueautoptr_cleanup_GEmblemedIcon$MH,"glib_queueautoptr_cleanup_GEmblemedIcon");
    }
    public static void glib_queueautoptr_cleanup_GEmblemedIcon ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$877.glib_queueautoptr_cleanup_GEmblemedIcon$MH, "glib_queueautoptr_cleanup_GEmblemedIcon");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GEmblem_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEmblem_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEmblem_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEmblem_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GEmblem$MH() {
        return RuntimeHelper.requireNonNull(constants$877.glib_autoptr_clear_GEmblem$MH,"glib_autoptr_clear_GEmblem");
    }
    public static void glib_autoptr_clear_GEmblem ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$877.glib_autoptr_clear_GEmblem$MH, "glib_autoptr_clear_GEmblem");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GEmblem$MH() {
        return RuntimeHelper.requireNonNull(constants$877.glib_autoptr_cleanup_GEmblem$MH,"glib_autoptr_cleanup_GEmblem");
    }
    public static void glib_autoptr_cleanup_GEmblem ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$877.glib_autoptr_cleanup_GEmblem$MH, "glib_autoptr_cleanup_GEmblem");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GEmblem$MH() {
        return RuntimeHelper.requireNonNull(constants$878.glib_listautoptr_cleanup_GEmblem$MH,"glib_listautoptr_cleanup_GEmblem");
    }
    public static void glib_listautoptr_cleanup_GEmblem ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$878.glib_listautoptr_cleanup_GEmblem$MH, "glib_listautoptr_cleanup_GEmblem");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GEmblem$MH() {
        return RuntimeHelper.requireNonNull(constants$878.glib_slistautoptr_cleanup_GEmblem$MH,"glib_slistautoptr_cleanup_GEmblem");
    }
    public static void glib_slistautoptr_cleanup_GEmblem ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$878.glib_slistautoptr_cleanup_GEmblem$MH, "glib_slistautoptr_cleanup_GEmblem");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GEmblem$MH() {
        return RuntimeHelper.requireNonNull(constants$878.glib_queueautoptr_cleanup_GEmblem$MH,"glib_queueautoptr_cleanup_GEmblem");
    }
    public static void glib_queueautoptr_cleanup_GEmblem ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$878.glib_queueautoptr_cleanup_GEmblem$MH, "glib_queueautoptr_cleanup_GEmblem");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileEnumerator_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileEnumerator_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileEnumerator_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileEnumerator_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$878.glib_autoptr_clear_GFileEnumerator$MH,"glib_autoptr_clear_GFileEnumerator");
    }
    public static void glib_autoptr_clear_GFileEnumerator ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$878.glib_autoptr_clear_GFileEnumerator$MH, "glib_autoptr_clear_GFileEnumerator");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$878.glib_autoptr_cleanup_GFileEnumerator$MH,"glib_autoptr_cleanup_GFileEnumerator");
    }
    public static void glib_autoptr_cleanup_GFileEnumerator ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$878.glib_autoptr_cleanup_GFileEnumerator$MH, "glib_autoptr_cleanup_GFileEnumerator");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$878.glib_listautoptr_cleanup_GFileEnumerator$MH,"glib_listautoptr_cleanup_GFileEnumerator");
    }
    public static void glib_listautoptr_cleanup_GFileEnumerator ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$878.glib_listautoptr_cleanup_GFileEnumerator$MH, "glib_listautoptr_cleanup_GFileEnumerator");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$879.glib_slistautoptr_cleanup_GFileEnumerator$MH,"glib_slistautoptr_cleanup_GFileEnumerator");
    }
    public static void glib_slistautoptr_cleanup_GFileEnumerator ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$879.glib_slistautoptr_cleanup_GFileEnumerator$MH, "glib_slistautoptr_cleanup_GFileEnumerator");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$879.glib_queueautoptr_cleanup_GFileEnumerator$MH,"glib_queueautoptr_cleanup_GFileEnumerator");
    }
    public static void glib_queueautoptr_cleanup_GFileEnumerator ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$879.glib_queueautoptr_cleanup_GFileEnumerator$MH, "glib_queueautoptr_cleanup_GFileEnumerator");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFile_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFile_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFile_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFile_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFile$MH() {
        return RuntimeHelper.requireNonNull(constants$879.glib_autoptr_clear_GFile$MH,"glib_autoptr_clear_GFile");
    }
    public static void glib_autoptr_clear_GFile ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$879.glib_autoptr_clear_GFile$MH, "glib_autoptr_clear_GFile");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFile$MH() {
        return RuntimeHelper.requireNonNull(constants$879.glib_autoptr_cleanup_GFile$MH,"glib_autoptr_cleanup_GFile");
    }
    public static void glib_autoptr_cleanup_GFile ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$879.glib_autoptr_cleanup_GFile$MH, "glib_autoptr_cleanup_GFile");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFile$MH() {
        return RuntimeHelper.requireNonNull(constants$879.glib_listautoptr_cleanup_GFile$MH,"glib_listautoptr_cleanup_GFile");
    }
    public static void glib_listautoptr_cleanup_GFile ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$879.glib_listautoptr_cleanup_GFile$MH, "glib_listautoptr_cleanup_GFile");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFile$MH() {
        return RuntimeHelper.requireNonNull(constants$879.glib_slistautoptr_cleanup_GFile$MH,"glib_slistautoptr_cleanup_GFile");
    }
    public static void glib_slistautoptr_cleanup_GFile ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$879.glib_slistautoptr_cleanup_GFile$MH, "glib_slistautoptr_cleanup_GFile");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFile$MH() {
        return RuntimeHelper.requireNonNull(constants$880.glib_queueautoptr_cleanup_GFile$MH,"glib_queueautoptr_cleanup_GFile");
    }
    public static void glib_queueautoptr_cleanup_GFile ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$880.glib_queueautoptr_cleanup_GFile$MH, "glib_queueautoptr_cleanup_GFile");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileAttributeInfoList_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileAttributeInfoList_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileAttributeInfoList_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileAttributeInfoList_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileAttributeInfoList$MH() {
        return RuntimeHelper.requireNonNull(constants$880.glib_autoptr_clear_GFileAttributeInfoList$MH,"glib_autoptr_clear_GFileAttributeInfoList");
    }
    public static void glib_autoptr_clear_GFileAttributeInfoList ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$880.glib_autoptr_clear_GFileAttributeInfoList$MH, "glib_autoptr_clear_GFileAttributeInfoList");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileAttributeInfoList$MH() {
        return RuntimeHelper.requireNonNull(constants$880.glib_autoptr_cleanup_GFileAttributeInfoList$MH,"glib_autoptr_cleanup_GFileAttributeInfoList");
    }
    public static void glib_autoptr_cleanup_GFileAttributeInfoList ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$880.glib_autoptr_cleanup_GFileAttributeInfoList$MH, "glib_autoptr_cleanup_GFileAttributeInfoList");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileAttributeInfoList$MH() {
        return RuntimeHelper.requireNonNull(constants$880.glib_listautoptr_cleanup_GFileAttributeInfoList$MH,"glib_listautoptr_cleanup_GFileAttributeInfoList");
    }
    public static void glib_listautoptr_cleanup_GFileAttributeInfoList ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$880.glib_listautoptr_cleanup_GFileAttributeInfoList$MH, "glib_listautoptr_cleanup_GFileAttributeInfoList");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileAttributeInfoList$MH() {
        return RuntimeHelper.requireNonNull(constants$880.glib_slistautoptr_cleanup_GFileAttributeInfoList$MH,"glib_slistautoptr_cleanup_GFileAttributeInfoList");
    }
    public static void glib_slistautoptr_cleanup_GFileAttributeInfoList ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$880.glib_slistautoptr_cleanup_GFileAttributeInfoList$MH, "glib_slistautoptr_cleanup_GFileAttributeInfoList");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileAttributeInfoList$MH() {
        return RuntimeHelper.requireNonNull(constants$880.glib_queueautoptr_cleanup_GFileAttributeInfoList$MH,"glib_queueautoptr_cleanup_GFileAttributeInfoList");
    }
    public static void glib_queueautoptr_cleanup_GFileAttributeInfoList ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$880.glib_queueautoptr_cleanup_GFileAttributeInfoList$MH, "glib_queueautoptr_cleanup_GFileAttributeInfoList");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$881.glib_autoptr_clear_GFileIcon$MH,"glib_autoptr_clear_GFileIcon");
    }
    public static void glib_autoptr_clear_GFileIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$881.glib_autoptr_clear_GFileIcon$MH, "glib_autoptr_clear_GFileIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$881.glib_autoptr_cleanup_GFileIcon$MH,"glib_autoptr_cleanup_GFileIcon");
    }
    public static void glib_autoptr_cleanup_GFileIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$881.glib_autoptr_cleanup_GFileIcon$MH, "glib_autoptr_cleanup_GFileIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$881.glib_listautoptr_cleanup_GFileIcon$MH,"glib_listautoptr_cleanup_GFileIcon");
    }
    public static void glib_listautoptr_cleanup_GFileIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$881.glib_listautoptr_cleanup_GFileIcon$MH, "glib_listautoptr_cleanup_GFileIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$881.glib_slistautoptr_cleanup_GFileIcon$MH,"glib_slistautoptr_cleanup_GFileIcon");
    }
    public static void glib_slistautoptr_cleanup_GFileIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$881.glib_slistautoptr_cleanup_GFileIcon$MH, "glib_slistautoptr_cleanup_GFileIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$881.glib_queueautoptr_cleanup_GFileIcon$MH,"glib_queueautoptr_cleanup_GFileIcon");
    }
    public static void glib_queueautoptr_cleanup_GFileIcon ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$881.glib_queueautoptr_cleanup_GFileIcon$MH, "glib_queueautoptr_cleanup_GFileIcon");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileInfo_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileInfo_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileInfo_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileInfo_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$881.glib_autoptr_clear_GFileInfo$MH,"glib_autoptr_clear_GFileInfo");
    }
    public static void glib_autoptr_clear_GFileInfo ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$881.glib_autoptr_clear_GFileInfo$MH, "glib_autoptr_clear_GFileInfo");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$882.glib_autoptr_cleanup_GFileInfo$MH,"glib_autoptr_cleanup_GFileInfo");
    }
    public static void glib_autoptr_cleanup_GFileInfo ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$882.glib_autoptr_cleanup_GFileInfo$MH, "glib_autoptr_cleanup_GFileInfo");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$882.glib_listautoptr_cleanup_GFileInfo$MH,"glib_listautoptr_cleanup_GFileInfo");
    }
    public static void glib_listautoptr_cleanup_GFileInfo ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$882.glib_listautoptr_cleanup_GFileInfo$MH, "glib_listautoptr_cleanup_GFileInfo");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$882.glib_slistautoptr_cleanup_GFileInfo$MH,"glib_slistautoptr_cleanup_GFileInfo");
    }
    public static void glib_slistautoptr_cleanup_GFileInfo ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$882.glib_slistautoptr_cleanup_GFileInfo$MH, "glib_slistautoptr_cleanup_GFileInfo");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$882.glib_queueautoptr_cleanup_GFileInfo$MH,"glib_queueautoptr_cleanup_GFileInfo");
    }
    public static void glib_queueautoptr_cleanup_GFileInfo ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$882.glib_queueautoptr_cleanup_GFileInfo$MH, "glib_queueautoptr_cleanup_GFileInfo");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$882.glib_autoptr_clear_GFileInputStream$MH,"glib_autoptr_clear_GFileInputStream");
    }
    public static void glib_autoptr_clear_GFileInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$882.glib_autoptr_clear_GFileInputStream$MH, "glib_autoptr_clear_GFileInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$882.glib_autoptr_cleanup_GFileInputStream$MH,"glib_autoptr_cleanup_GFileInputStream");
    }
    public static void glib_autoptr_cleanup_GFileInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$882.glib_autoptr_cleanup_GFileInputStream$MH, "glib_autoptr_cleanup_GFileInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$883.glib_listautoptr_cleanup_GFileInputStream$MH,"glib_listautoptr_cleanup_GFileInputStream");
    }
    public static void glib_listautoptr_cleanup_GFileInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$883.glib_listautoptr_cleanup_GFileInputStream$MH, "glib_listautoptr_cleanup_GFileInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$883.glib_slistautoptr_cleanup_GFileInputStream$MH,"glib_slistautoptr_cleanup_GFileInputStream");
    }
    public static void glib_slistautoptr_cleanup_GFileInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$883.glib_slistautoptr_cleanup_GFileInputStream$MH, "glib_slistautoptr_cleanup_GFileInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$883.glib_queueautoptr_cleanup_GFileInputStream$MH,"glib_queueautoptr_cleanup_GFileInputStream");
    }
    public static void glib_queueautoptr_cleanup_GFileInputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$883.glib_queueautoptr_cleanup_GFileInputStream$MH, "glib_queueautoptr_cleanup_GFileInputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileIOStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileIOStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileIOStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileIOStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$883.glib_autoptr_clear_GFileIOStream$MH,"glib_autoptr_clear_GFileIOStream");
    }
    public static void glib_autoptr_clear_GFileIOStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$883.glib_autoptr_clear_GFileIOStream$MH, "glib_autoptr_clear_GFileIOStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$883.glib_autoptr_cleanup_GFileIOStream$MH,"glib_autoptr_cleanup_GFileIOStream");
    }
    public static void glib_autoptr_cleanup_GFileIOStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$883.glib_autoptr_cleanup_GFileIOStream$MH, "glib_autoptr_cleanup_GFileIOStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$883.glib_listautoptr_cleanup_GFileIOStream$MH,"glib_listautoptr_cleanup_GFileIOStream");
    }
    public static void glib_listautoptr_cleanup_GFileIOStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$883.glib_listautoptr_cleanup_GFileIOStream$MH, "glib_listautoptr_cleanup_GFileIOStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$884.glib_slistautoptr_cleanup_GFileIOStream$MH,"glib_slistautoptr_cleanup_GFileIOStream");
    }
    public static void glib_slistautoptr_cleanup_GFileIOStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$884.glib_slistautoptr_cleanup_GFileIOStream$MH, "glib_slistautoptr_cleanup_GFileIOStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$884.glib_queueautoptr_cleanup_GFileIOStream$MH,"glib_queueautoptr_cleanup_GFileIOStream");
    }
    public static void glib_queueautoptr_cleanup_GFileIOStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$884.glib_queueautoptr_cleanup_GFileIOStream$MH, "glib_queueautoptr_cleanup_GFileIOStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileMonitor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileMonitor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileMonitor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileMonitor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$884.glib_autoptr_clear_GFileMonitor$MH,"glib_autoptr_clear_GFileMonitor");
    }
    public static void glib_autoptr_clear_GFileMonitor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$884.glib_autoptr_clear_GFileMonitor$MH, "glib_autoptr_clear_GFileMonitor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$884.glib_autoptr_cleanup_GFileMonitor$MH,"glib_autoptr_cleanup_GFileMonitor");
    }
    public static void glib_autoptr_cleanup_GFileMonitor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$884.glib_autoptr_cleanup_GFileMonitor$MH, "glib_autoptr_cleanup_GFileMonitor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$884.glib_listautoptr_cleanup_GFileMonitor$MH,"glib_listautoptr_cleanup_GFileMonitor");
    }
    public static void glib_listautoptr_cleanup_GFileMonitor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$884.glib_listautoptr_cleanup_GFileMonitor$MH, "glib_listautoptr_cleanup_GFileMonitor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$884.glib_slistautoptr_cleanup_GFileMonitor$MH,"glib_slistautoptr_cleanup_GFileMonitor");
    }
    public static void glib_slistautoptr_cleanup_GFileMonitor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$884.glib_slistautoptr_cleanup_GFileMonitor$MH, "glib_slistautoptr_cleanup_GFileMonitor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$885.glib_queueautoptr_cleanup_GFileMonitor$MH,"glib_queueautoptr_cleanup_GFileMonitor");
    }
    public static void glib_queueautoptr_cleanup_GFileMonitor ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$885.glib_queueautoptr_cleanup_GFileMonitor$MH, "glib_queueautoptr_cleanup_GFileMonitor");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFilenameCompleter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilenameCompleter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilenameCompleter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilenameCompleter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFilenameCompleter$MH() {
        return RuntimeHelper.requireNonNull(constants$885.glib_autoptr_clear_GFilenameCompleter$MH,"glib_autoptr_clear_GFilenameCompleter");
    }
    public static void glib_autoptr_clear_GFilenameCompleter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$885.glib_autoptr_clear_GFilenameCompleter$MH, "glib_autoptr_clear_GFilenameCompleter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFilenameCompleter$MH() {
        return RuntimeHelper.requireNonNull(constants$885.glib_autoptr_cleanup_GFilenameCompleter$MH,"glib_autoptr_cleanup_GFilenameCompleter");
    }
    public static void glib_autoptr_cleanup_GFilenameCompleter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$885.glib_autoptr_cleanup_GFilenameCompleter$MH, "glib_autoptr_cleanup_GFilenameCompleter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFilenameCompleter$MH() {
        return RuntimeHelper.requireNonNull(constants$885.glib_listautoptr_cleanup_GFilenameCompleter$MH,"glib_listautoptr_cleanup_GFilenameCompleter");
    }
    public static void glib_listautoptr_cleanup_GFilenameCompleter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$885.glib_listautoptr_cleanup_GFilenameCompleter$MH, "glib_listautoptr_cleanup_GFilenameCompleter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFilenameCompleter$MH() {
        return RuntimeHelper.requireNonNull(constants$885.glib_slistautoptr_cleanup_GFilenameCompleter$MH,"glib_slistautoptr_cleanup_GFilenameCompleter");
    }
    public static void glib_slistautoptr_cleanup_GFilenameCompleter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$885.glib_slistautoptr_cleanup_GFilenameCompleter$MH, "glib_slistautoptr_cleanup_GFilenameCompleter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFilenameCompleter$MH() {
        return RuntimeHelper.requireNonNull(constants$885.glib_queueautoptr_cleanup_GFilenameCompleter$MH,"glib_queueautoptr_cleanup_GFilenameCompleter");
    }
    public static void glib_queueautoptr_cleanup_GFilenameCompleter ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$885.glib_queueautoptr_cleanup_GFilenameCompleter$MH, "glib_queueautoptr_cleanup_GFilenameCompleter");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$886.glib_autoptr_clear_GFileOutputStream$MH,"glib_autoptr_clear_GFileOutputStream");
    }
    public static void glib_autoptr_clear_GFileOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$886.glib_autoptr_clear_GFileOutputStream$MH, "glib_autoptr_clear_GFileOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$886.glib_autoptr_cleanup_GFileOutputStream$MH,"glib_autoptr_cleanup_GFileOutputStream");
    }
    public static void glib_autoptr_cleanup_GFileOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$886.glib_autoptr_cleanup_GFileOutputStream$MH, "glib_autoptr_cleanup_GFileOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$886.glib_listautoptr_cleanup_GFileOutputStream$MH,"glib_listautoptr_cleanup_GFileOutputStream");
    }
    public static void glib_listautoptr_cleanup_GFileOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$886.glib_listautoptr_cleanup_GFileOutputStream$MH, "glib_listautoptr_cleanup_GFileOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$886.glib_slistautoptr_cleanup_GFileOutputStream$MH,"glib_slistautoptr_cleanup_GFileOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GFileOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$886.glib_slistautoptr_cleanup_GFileOutputStream$MH, "glib_slistautoptr_cleanup_GFileOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$886.glib_queueautoptr_cleanup_GFileOutputStream$MH,"glib_queueautoptr_cleanup_GFileOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GFileOutputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$886.glib_queueautoptr_cleanup_GFileOutputStream$MH, "glib_queueautoptr_cleanup_GFileOutputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFilterInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilterInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilterInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilterInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFilterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$886.glib_autoptr_clear_GFilterInputStream$MH,"glib_autoptr_clear_GFilterInputStream");
    }
    public static void glib_autoptr_clear_GFilterInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$886.glib_autoptr_clear_GFilterInputStream$MH, "glib_autoptr_clear_GFilterInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFilterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$887.glib_autoptr_cleanup_GFilterInputStream$MH,"glib_autoptr_cleanup_GFilterInputStream");
    }
    public static void glib_autoptr_cleanup_GFilterInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$887.glib_autoptr_cleanup_GFilterInputStream$MH, "glib_autoptr_cleanup_GFilterInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFilterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$887.glib_listautoptr_cleanup_GFilterInputStream$MH,"glib_listautoptr_cleanup_GFilterInputStream");
    }
    public static void glib_listautoptr_cleanup_GFilterInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$887.glib_listautoptr_cleanup_GFilterInputStream$MH, "glib_listautoptr_cleanup_GFilterInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFilterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$887.glib_slistautoptr_cleanup_GFilterInputStream$MH,"glib_slistautoptr_cleanup_GFilterInputStream");
    }
    public static void glib_slistautoptr_cleanup_GFilterInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$887.glib_slistautoptr_cleanup_GFilterInputStream$MH, "glib_slistautoptr_cleanup_GFilterInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFilterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$887.glib_queueautoptr_cleanup_GFilterInputStream$MH,"glib_queueautoptr_cleanup_GFilterInputStream");
    }
    public static void glib_queueautoptr_cleanup_GFilterInputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$887.glib_queueautoptr_cleanup_GFilterInputStream$MH, "glib_queueautoptr_cleanup_GFilterInputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFilterOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilterOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilterOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilterOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFilterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$887.glib_autoptr_clear_GFilterOutputStream$MH,"glib_autoptr_clear_GFilterOutputStream");
    }
    public static void glib_autoptr_clear_GFilterOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$887.glib_autoptr_clear_GFilterOutputStream$MH, "glib_autoptr_clear_GFilterOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFilterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$887.glib_autoptr_cleanup_GFilterOutputStream$MH,"glib_autoptr_cleanup_GFilterOutputStream");
    }
    public static void glib_autoptr_cleanup_GFilterOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$887.glib_autoptr_cleanup_GFilterOutputStream$MH, "glib_autoptr_cleanup_GFilterOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFilterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$888.glib_listautoptr_cleanup_GFilterOutputStream$MH,"glib_listautoptr_cleanup_GFilterOutputStream");
    }
    public static void glib_listautoptr_cleanup_GFilterOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$888.glib_listautoptr_cleanup_GFilterOutputStream$MH, "glib_listautoptr_cleanup_GFilterOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFilterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$888.glib_slistautoptr_cleanup_GFilterOutputStream$MH,"glib_slistautoptr_cleanup_GFilterOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GFilterOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$888.glib_slistautoptr_cleanup_GFilterOutputStream$MH, "glib_slistautoptr_cleanup_GFilterOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFilterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$888.glib_queueautoptr_cleanup_GFilterOutputStream$MH,"glib_queueautoptr_cleanup_GFilterOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GFilterOutputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$888.glib_queueautoptr_cleanup_GFilterOutputStream$MH, "glib_queueautoptr_cleanup_GFilterOutputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$888.glib_autoptr_clear_GIcon$MH,"glib_autoptr_clear_GIcon");
    }
    public static void glib_autoptr_clear_GIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$888.glib_autoptr_clear_GIcon$MH, "glib_autoptr_clear_GIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$888.glib_autoptr_cleanup_GIcon$MH,"glib_autoptr_cleanup_GIcon");
    }
    public static void glib_autoptr_cleanup_GIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$888.glib_autoptr_cleanup_GIcon$MH, "glib_autoptr_cleanup_GIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$888.glib_listautoptr_cleanup_GIcon$MH,"glib_listautoptr_cleanup_GIcon");
    }
    public static void glib_listautoptr_cleanup_GIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$888.glib_listautoptr_cleanup_GIcon$MH, "glib_listautoptr_cleanup_GIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$889.glib_slistautoptr_cleanup_GIcon$MH,"glib_slistautoptr_cleanup_GIcon");
    }
    public static void glib_slistautoptr_cleanup_GIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$889.glib_slistautoptr_cleanup_GIcon$MH, "glib_slistautoptr_cleanup_GIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$889.glib_queueautoptr_cleanup_GIcon$MH,"glib_queueautoptr_cleanup_GIcon");
    }
    public static void glib_queueautoptr_cleanup_GIcon ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$889.glib_queueautoptr_cleanup_GIcon$MH, "glib_queueautoptr_cleanup_GIcon");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GInetAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GInetAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$889.glib_autoptr_clear_GInetAddress$MH,"glib_autoptr_clear_GInetAddress");
    }
    public static void glib_autoptr_clear_GInetAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$889.glib_autoptr_clear_GInetAddress$MH, "glib_autoptr_clear_GInetAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GInetAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$889.glib_autoptr_cleanup_GInetAddress$MH,"glib_autoptr_cleanup_GInetAddress");
    }
    public static void glib_autoptr_cleanup_GInetAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$889.glib_autoptr_cleanup_GInetAddress$MH, "glib_autoptr_cleanup_GInetAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GInetAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$889.glib_listautoptr_cleanup_GInetAddress$MH,"glib_listautoptr_cleanup_GInetAddress");
    }
    public static void glib_listautoptr_cleanup_GInetAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$889.glib_listautoptr_cleanup_GInetAddress$MH, "glib_listautoptr_cleanup_GInetAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GInetAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$889.glib_slistautoptr_cleanup_GInetAddress$MH,"glib_slistautoptr_cleanup_GInetAddress");
    }
    public static void glib_slistautoptr_cleanup_GInetAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$889.glib_slistautoptr_cleanup_GInetAddress$MH, "glib_slistautoptr_cleanup_GInetAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GInetAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$890.glib_queueautoptr_cleanup_GInetAddress$MH,"glib_queueautoptr_cleanup_GInetAddress");
    }
    public static void glib_queueautoptr_cleanup_GInetAddress ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$890.glib_queueautoptr_cleanup_GInetAddress$MH, "glib_queueautoptr_cleanup_GInetAddress");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GInetAddressMask_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetAddressMask_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetAddressMask_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetAddressMask_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GInetAddressMask$MH() {
        return RuntimeHelper.requireNonNull(constants$890.glib_autoptr_clear_GInetAddressMask$MH,"glib_autoptr_clear_GInetAddressMask");
    }
    public static void glib_autoptr_clear_GInetAddressMask ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$890.glib_autoptr_clear_GInetAddressMask$MH, "glib_autoptr_clear_GInetAddressMask");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GInetAddressMask$MH() {
        return RuntimeHelper.requireNonNull(constants$890.glib_autoptr_cleanup_GInetAddressMask$MH,"glib_autoptr_cleanup_GInetAddressMask");
    }
    public static void glib_autoptr_cleanup_GInetAddressMask ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$890.glib_autoptr_cleanup_GInetAddressMask$MH, "glib_autoptr_cleanup_GInetAddressMask");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GInetAddressMask$MH() {
        return RuntimeHelper.requireNonNull(constants$890.glib_listautoptr_cleanup_GInetAddressMask$MH,"glib_listautoptr_cleanup_GInetAddressMask");
    }
    public static void glib_listautoptr_cleanup_GInetAddressMask ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$890.glib_listautoptr_cleanup_GInetAddressMask$MH, "glib_listautoptr_cleanup_GInetAddressMask");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GInetAddressMask$MH() {
        return RuntimeHelper.requireNonNull(constants$890.glib_slistautoptr_cleanup_GInetAddressMask$MH,"glib_slistautoptr_cleanup_GInetAddressMask");
    }
    public static void glib_slistautoptr_cleanup_GInetAddressMask ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$890.glib_slistautoptr_cleanup_GInetAddressMask$MH, "glib_slistautoptr_cleanup_GInetAddressMask");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GInetAddressMask$MH() {
        return RuntimeHelper.requireNonNull(constants$890.glib_queueautoptr_cleanup_GInetAddressMask$MH,"glib_queueautoptr_cleanup_GInetAddressMask");
    }
    public static void glib_queueautoptr_cleanup_GInetAddressMask ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$890.glib_queueautoptr_cleanup_GInetAddressMask$MH, "glib_queueautoptr_cleanup_GInetAddressMask");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GInetSocketAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetSocketAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetSocketAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetSocketAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GInetSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$891.glib_autoptr_clear_GInetSocketAddress$MH,"glib_autoptr_clear_GInetSocketAddress");
    }
    public static void glib_autoptr_clear_GInetSocketAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$891.glib_autoptr_clear_GInetSocketAddress$MH, "glib_autoptr_clear_GInetSocketAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GInetSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$891.glib_autoptr_cleanup_GInetSocketAddress$MH,"glib_autoptr_cleanup_GInetSocketAddress");
    }
    public static void glib_autoptr_cleanup_GInetSocketAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$891.glib_autoptr_cleanup_GInetSocketAddress$MH, "glib_autoptr_cleanup_GInetSocketAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GInetSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$891.glib_listautoptr_cleanup_GInetSocketAddress$MH,"glib_listautoptr_cleanup_GInetSocketAddress");
    }
    public static void glib_listautoptr_cleanup_GInetSocketAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$891.glib_listautoptr_cleanup_GInetSocketAddress$MH, "glib_listautoptr_cleanup_GInetSocketAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GInetSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$891.glib_slistautoptr_cleanup_GInetSocketAddress$MH,"glib_slistautoptr_cleanup_GInetSocketAddress");
    }
    public static void glib_slistautoptr_cleanup_GInetSocketAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$891.glib_slistautoptr_cleanup_GInetSocketAddress$MH, "glib_slistautoptr_cleanup_GInetSocketAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GInetSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$891.glib_queueautoptr_cleanup_GInetSocketAddress$MH,"glib_queueautoptr_cleanup_GInetSocketAddress");
    }
    public static void glib_queueautoptr_cleanup_GInetSocketAddress ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$891.glib_queueautoptr_cleanup_GInetSocketAddress$MH, "glib_queueautoptr_cleanup_GInetSocketAddress");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GInitable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInitable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInitable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInitable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$891.glib_autoptr_clear_GInitable$MH,"glib_autoptr_clear_GInitable");
    }
    public static void glib_autoptr_clear_GInitable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$891.glib_autoptr_clear_GInitable$MH, "glib_autoptr_clear_GInitable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$892.glib_autoptr_cleanup_GInitable$MH,"glib_autoptr_cleanup_GInitable");
    }
    public static void glib_autoptr_cleanup_GInitable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$892.glib_autoptr_cleanup_GInitable$MH, "glib_autoptr_cleanup_GInitable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$892.glib_listautoptr_cleanup_GInitable$MH,"glib_listautoptr_cleanup_GInitable");
    }
    public static void glib_listautoptr_cleanup_GInitable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$892.glib_listautoptr_cleanup_GInitable$MH, "glib_listautoptr_cleanup_GInitable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$892.glib_slistautoptr_cleanup_GInitable$MH,"glib_slistautoptr_cleanup_GInitable");
    }
    public static void glib_slistautoptr_cleanup_GInitable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$892.glib_slistautoptr_cleanup_GInitable$MH, "glib_slistautoptr_cleanup_GInitable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$892.glib_queueautoptr_cleanup_GInitable$MH,"glib_queueautoptr_cleanup_GInitable");
    }
    public static void glib_queueautoptr_cleanup_GInitable ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$892.glib_queueautoptr_cleanup_GInitable$MH, "glib_queueautoptr_cleanup_GInitable");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$892.glib_autoptr_clear_GInputStream$MH,"glib_autoptr_clear_GInputStream");
    }
    public static void glib_autoptr_clear_GInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$892.glib_autoptr_clear_GInputStream$MH, "glib_autoptr_clear_GInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$892.glib_autoptr_cleanup_GInputStream$MH,"glib_autoptr_cleanup_GInputStream");
    }
    public static void glib_autoptr_cleanup_GInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$892.glib_autoptr_cleanup_GInputStream$MH, "glib_autoptr_cleanup_GInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$893.glib_listautoptr_cleanup_GInputStream$MH,"glib_listautoptr_cleanup_GInputStream");
    }
    public static void glib_listautoptr_cleanup_GInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$893.glib_listautoptr_cleanup_GInputStream$MH, "glib_listautoptr_cleanup_GInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$893.glib_slistautoptr_cleanup_GInputStream$MH,"glib_slistautoptr_cleanup_GInputStream");
    }
    public static void glib_slistautoptr_cleanup_GInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$893.glib_slistautoptr_cleanup_GInputStream$MH, "glib_slistautoptr_cleanup_GInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$893.glib_queueautoptr_cleanup_GInputStream$MH,"glib_queueautoptr_cleanup_GInputStream");
    }
    public static void glib_queueautoptr_cleanup_GInputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$893.glib_queueautoptr_cleanup_GInputStream$MH, "glib_queueautoptr_cleanup_GInputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GIOModule_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOModule_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOModule_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOModule_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GIOModule$MH() {
        return RuntimeHelper.requireNonNull(constants$893.glib_autoptr_clear_GIOModule$MH,"glib_autoptr_clear_GIOModule");
    }
    public static void glib_autoptr_clear_GIOModule ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$893.glib_autoptr_clear_GIOModule$MH, "glib_autoptr_clear_GIOModule");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GIOModule$MH() {
        return RuntimeHelper.requireNonNull(constants$893.glib_autoptr_cleanup_GIOModule$MH,"glib_autoptr_cleanup_GIOModule");
    }
    public static void glib_autoptr_cleanup_GIOModule ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$893.glib_autoptr_cleanup_GIOModule$MH, "glib_autoptr_cleanup_GIOModule");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GIOModule$MH() {
        return RuntimeHelper.requireNonNull(constants$893.glib_listautoptr_cleanup_GIOModule$MH,"glib_listautoptr_cleanup_GIOModule");
    }
    public static void glib_listautoptr_cleanup_GIOModule ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$893.glib_listautoptr_cleanup_GIOModule$MH, "glib_listautoptr_cleanup_GIOModule");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GIOModule$MH() {
        return RuntimeHelper.requireNonNull(constants$894.glib_slistautoptr_cleanup_GIOModule$MH,"glib_slistautoptr_cleanup_GIOModule");
    }
    public static void glib_slistautoptr_cleanup_GIOModule ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$894.glib_slistautoptr_cleanup_GIOModule$MH, "glib_slistautoptr_cleanup_GIOModule");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GIOModule$MH() {
        return RuntimeHelper.requireNonNull(constants$894.glib_queueautoptr_cleanup_GIOModule$MH,"glib_queueautoptr_cleanup_GIOModule");
    }
    public static void glib_queueautoptr_cleanup_GIOModule ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$894.glib_queueautoptr_cleanup_GIOModule$MH, "glib_queueautoptr_cleanup_GIOModule");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GIOStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$894.glib_autoptr_clear_GIOStream$MH,"glib_autoptr_clear_GIOStream");
    }
    public static void glib_autoptr_clear_GIOStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$894.glib_autoptr_clear_GIOStream$MH, "glib_autoptr_clear_GIOStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$894.glib_autoptr_cleanup_GIOStream$MH,"glib_autoptr_cleanup_GIOStream");
    }
    public static void glib_autoptr_cleanup_GIOStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$894.glib_autoptr_cleanup_GIOStream$MH, "glib_autoptr_cleanup_GIOStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$894.glib_listautoptr_cleanup_GIOStream$MH,"glib_listautoptr_cleanup_GIOStream");
    }
    public static void glib_listautoptr_cleanup_GIOStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$894.glib_listautoptr_cleanup_GIOStream$MH, "glib_listautoptr_cleanup_GIOStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$894.glib_slistautoptr_cleanup_GIOStream$MH,"glib_slistautoptr_cleanup_GIOStream");
    }
    public static void glib_slistautoptr_cleanup_GIOStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$894.glib_slistautoptr_cleanup_GIOStream$MH, "glib_slistautoptr_cleanup_GIOStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$895.glib_queueautoptr_cleanup_GIOStream$MH,"glib_queueautoptr_cleanup_GIOStream");
    }
    public static void glib_queueautoptr_cleanup_GIOStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$895.glib_queueautoptr_cleanup_GIOStream$MH, "glib_queueautoptr_cleanup_GIOStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GLoadableIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GLoadableIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GLoadableIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GLoadableIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GLoadableIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$895.glib_autoptr_clear_GLoadableIcon$MH,"glib_autoptr_clear_GLoadableIcon");
    }
    public static void glib_autoptr_clear_GLoadableIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$895.glib_autoptr_clear_GLoadableIcon$MH, "glib_autoptr_clear_GLoadableIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GLoadableIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$895.glib_autoptr_cleanup_GLoadableIcon$MH,"glib_autoptr_cleanup_GLoadableIcon");
    }
    public static void glib_autoptr_cleanup_GLoadableIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$895.glib_autoptr_cleanup_GLoadableIcon$MH, "glib_autoptr_cleanup_GLoadableIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GLoadableIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$895.glib_listautoptr_cleanup_GLoadableIcon$MH,"glib_listautoptr_cleanup_GLoadableIcon");
    }
    public static void glib_listautoptr_cleanup_GLoadableIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$895.glib_listautoptr_cleanup_GLoadableIcon$MH, "glib_listautoptr_cleanup_GLoadableIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GLoadableIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$895.glib_slistautoptr_cleanup_GLoadableIcon$MH,"glib_slistautoptr_cleanup_GLoadableIcon");
    }
    public static void glib_slistautoptr_cleanup_GLoadableIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$895.glib_slistautoptr_cleanup_GLoadableIcon$MH, "glib_slistautoptr_cleanup_GLoadableIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GLoadableIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$895.glib_queueautoptr_cleanup_GLoadableIcon$MH,"glib_queueautoptr_cleanup_GLoadableIcon");
    }
    public static void glib_queueautoptr_cleanup_GLoadableIcon ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$895.glib_queueautoptr_cleanup_GLoadableIcon$MH, "glib_queueautoptr_cleanup_GLoadableIcon");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMemoryInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMemoryInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$896.glib_autoptr_clear_GMemoryInputStream$MH,"glib_autoptr_clear_GMemoryInputStream");
    }
    public static void glib_autoptr_clear_GMemoryInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$896.glib_autoptr_clear_GMemoryInputStream$MH, "glib_autoptr_clear_GMemoryInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMemoryInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$896.glib_autoptr_cleanup_GMemoryInputStream$MH,"glib_autoptr_cleanup_GMemoryInputStream");
    }
    public static void glib_autoptr_cleanup_GMemoryInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$896.glib_autoptr_cleanup_GMemoryInputStream$MH, "glib_autoptr_cleanup_GMemoryInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMemoryInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$896.glib_listautoptr_cleanup_GMemoryInputStream$MH,"glib_listautoptr_cleanup_GMemoryInputStream");
    }
    public static void glib_listautoptr_cleanup_GMemoryInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$896.glib_listautoptr_cleanup_GMemoryInputStream$MH, "glib_listautoptr_cleanup_GMemoryInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMemoryInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$896.glib_slistautoptr_cleanup_GMemoryInputStream$MH,"glib_slistautoptr_cleanup_GMemoryInputStream");
    }
    public static void glib_slistautoptr_cleanup_GMemoryInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$896.glib_slistautoptr_cleanup_GMemoryInputStream$MH, "glib_slistautoptr_cleanup_GMemoryInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMemoryInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$896.glib_queueautoptr_cleanup_GMemoryInputStream$MH,"glib_queueautoptr_cleanup_GMemoryInputStream");
    }
    public static void glib_queueautoptr_cleanup_GMemoryInputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$896.glib_queueautoptr_cleanup_GMemoryInputStream$MH, "glib_queueautoptr_cleanup_GMemoryInputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMemoryOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMemoryOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$896.glib_autoptr_clear_GMemoryOutputStream$MH,"glib_autoptr_clear_GMemoryOutputStream");
    }
    public static void glib_autoptr_clear_GMemoryOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$896.glib_autoptr_clear_GMemoryOutputStream$MH, "glib_autoptr_clear_GMemoryOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMemoryOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$897.glib_autoptr_cleanup_GMemoryOutputStream$MH,"glib_autoptr_cleanup_GMemoryOutputStream");
    }
    public static void glib_autoptr_cleanup_GMemoryOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$897.glib_autoptr_cleanup_GMemoryOutputStream$MH, "glib_autoptr_cleanup_GMemoryOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMemoryOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$897.glib_listautoptr_cleanup_GMemoryOutputStream$MH,"glib_listautoptr_cleanup_GMemoryOutputStream");
    }
    public static void glib_listautoptr_cleanup_GMemoryOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$897.glib_listautoptr_cleanup_GMemoryOutputStream$MH, "glib_listautoptr_cleanup_GMemoryOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMemoryOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$897.glib_slistautoptr_cleanup_GMemoryOutputStream$MH,"glib_slistautoptr_cleanup_GMemoryOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GMemoryOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$897.glib_slistautoptr_cleanup_GMemoryOutputStream$MH, "glib_slistautoptr_cleanup_GMemoryOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMemoryOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$897.glib_queueautoptr_cleanup_GMemoryOutputStream$MH,"glib_queueautoptr_cleanup_GMemoryOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GMemoryOutputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$897.glib_queueautoptr_cleanup_GMemoryOutputStream$MH, "glib_queueautoptr_cleanup_GMemoryOutputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMenu_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenu_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenu_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenu_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$897.glib_autoptr_clear_GMenu$MH,"glib_autoptr_clear_GMenu");
    }
    public static void glib_autoptr_clear_GMenu ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$897.glib_autoptr_clear_GMenu$MH, "glib_autoptr_clear_GMenu");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$897.glib_autoptr_cleanup_GMenu$MH,"glib_autoptr_cleanup_GMenu");
    }
    public static void glib_autoptr_cleanup_GMenu ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$897.glib_autoptr_cleanup_GMenu$MH, "glib_autoptr_cleanup_GMenu");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$898.glib_listautoptr_cleanup_GMenu$MH,"glib_listautoptr_cleanup_GMenu");
    }
    public static void glib_listautoptr_cleanup_GMenu ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$898.glib_listautoptr_cleanup_GMenu$MH, "glib_listautoptr_cleanup_GMenu");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$898.glib_slistautoptr_cleanup_GMenu$MH,"glib_slistautoptr_cleanup_GMenu");
    }
    public static void glib_slistautoptr_cleanup_GMenu ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$898.glib_slistautoptr_cleanup_GMenu$MH, "glib_slistautoptr_cleanup_GMenu");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$898.glib_queueautoptr_cleanup_GMenu$MH,"glib_queueautoptr_cleanup_GMenu");
    }
    public static void glib_queueautoptr_cleanup_GMenu ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$898.glib_queueautoptr_cleanup_GMenu$MH, "glib_queueautoptr_cleanup_GMenu");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMenuItem_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuItem_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuItem_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuItem_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$898.glib_autoptr_clear_GMenuItem$MH,"glib_autoptr_clear_GMenuItem");
    }
    public static void glib_autoptr_clear_GMenuItem ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$898.glib_autoptr_clear_GMenuItem$MH, "glib_autoptr_clear_GMenuItem");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$898.glib_autoptr_cleanup_GMenuItem$MH,"glib_autoptr_cleanup_GMenuItem");
    }
    public static void glib_autoptr_cleanup_GMenuItem ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$898.glib_autoptr_cleanup_GMenuItem$MH, "glib_autoptr_cleanup_GMenuItem");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$898.glib_listautoptr_cleanup_GMenuItem$MH,"glib_listautoptr_cleanup_GMenuItem");
    }
    public static void glib_listautoptr_cleanup_GMenuItem ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$898.glib_listautoptr_cleanup_GMenuItem$MH, "glib_listautoptr_cleanup_GMenuItem");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$899.glib_slistautoptr_cleanup_GMenuItem$MH,"glib_slistautoptr_cleanup_GMenuItem");
    }
    public static void glib_slistautoptr_cleanup_GMenuItem ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$899.glib_slistautoptr_cleanup_GMenuItem$MH, "glib_slistautoptr_cleanup_GMenuItem");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$899.glib_queueautoptr_cleanup_GMenuItem$MH,"glib_queueautoptr_cleanup_GMenuItem");
    }
    public static void glib_queueautoptr_cleanup_GMenuItem ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$899.glib_queueautoptr_cleanup_GMenuItem$MH, "glib_queueautoptr_cleanup_GMenuItem");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMenuModel_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuModel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuModel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuModel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$899.glib_autoptr_clear_GMenuModel$MH,"glib_autoptr_clear_GMenuModel");
    }
    public static void glib_autoptr_clear_GMenuModel ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$899.glib_autoptr_clear_GMenuModel$MH, "glib_autoptr_clear_GMenuModel");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$899.glib_autoptr_cleanup_GMenuModel$MH,"glib_autoptr_cleanup_GMenuModel");
    }
    public static void glib_autoptr_cleanup_GMenuModel ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$899.glib_autoptr_cleanup_GMenuModel$MH, "glib_autoptr_cleanup_GMenuModel");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$899.glib_listautoptr_cleanup_GMenuModel$MH,"glib_listautoptr_cleanup_GMenuModel");
    }
    public static void glib_listautoptr_cleanup_GMenuModel ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$899.glib_listautoptr_cleanup_GMenuModel$MH, "glib_listautoptr_cleanup_GMenuModel");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$899.glib_slistautoptr_cleanup_GMenuModel$MH,"glib_slistautoptr_cleanup_GMenuModel");
    }
    public static void glib_slistautoptr_cleanup_GMenuModel ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$899.glib_slistautoptr_cleanup_GMenuModel$MH, "glib_slistautoptr_cleanup_GMenuModel");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$900.glib_queueautoptr_cleanup_GMenuModel$MH,"glib_queueautoptr_cleanup_GMenuModel");
    }
    public static void glib_queueautoptr_cleanup_GMenuModel ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$900.glib_queueautoptr_cleanup_GMenuModel$MH, "glib_queueautoptr_cleanup_GMenuModel");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMenuAttributeIter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuAttributeIter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuAttributeIter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuAttributeIter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMenuAttributeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$900.glib_autoptr_clear_GMenuAttributeIter$MH,"glib_autoptr_clear_GMenuAttributeIter");
    }
    public static void glib_autoptr_clear_GMenuAttributeIter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$900.glib_autoptr_clear_GMenuAttributeIter$MH, "glib_autoptr_clear_GMenuAttributeIter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMenuAttributeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$900.glib_autoptr_cleanup_GMenuAttributeIter$MH,"glib_autoptr_cleanup_GMenuAttributeIter");
    }
    public static void glib_autoptr_cleanup_GMenuAttributeIter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$900.glib_autoptr_cleanup_GMenuAttributeIter$MH, "glib_autoptr_cleanup_GMenuAttributeIter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMenuAttributeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$900.glib_listautoptr_cleanup_GMenuAttributeIter$MH,"glib_listautoptr_cleanup_GMenuAttributeIter");
    }
    public static void glib_listautoptr_cleanup_GMenuAttributeIter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$900.glib_listautoptr_cleanup_GMenuAttributeIter$MH, "glib_listautoptr_cleanup_GMenuAttributeIter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMenuAttributeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$900.glib_slistautoptr_cleanup_GMenuAttributeIter$MH,"glib_slistautoptr_cleanup_GMenuAttributeIter");
    }
    public static void glib_slistautoptr_cleanup_GMenuAttributeIter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$900.glib_slistautoptr_cleanup_GMenuAttributeIter$MH, "glib_slistautoptr_cleanup_GMenuAttributeIter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMenuAttributeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$900.glib_queueautoptr_cleanup_GMenuAttributeIter$MH,"glib_queueautoptr_cleanup_GMenuAttributeIter");
    }
    public static void glib_queueautoptr_cleanup_GMenuAttributeIter ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$900.glib_queueautoptr_cleanup_GMenuAttributeIter$MH, "glib_queueautoptr_cleanup_GMenuAttributeIter");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMenuLinkIter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuLinkIter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuLinkIter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuLinkIter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMenuLinkIter$MH() {
        return RuntimeHelper.requireNonNull(constants$901.glib_autoptr_clear_GMenuLinkIter$MH,"glib_autoptr_clear_GMenuLinkIter");
    }
    public static void glib_autoptr_clear_GMenuLinkIter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$901.glib_autoptr_clear_GMenuLinkIter$MH, "glib_autoptr_clear_GMenuLinkIter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMenuLinkIter$MH() {
        return RuntimeHelper.requireNonNull(constants$901.glib_autoptr_cleanup_GMenuLinkIter$MH,"glib_autoptr_cleanup_GMenuLinkIter");
    }
    public static void glib_autoptr_cleanup_GMenuLinkIter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$901.glib_autoptr_cleanup_GMenuLinkIter$MH, "glib_autoptr_cleanup_GMenuLinkIter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMenuLinkIter$MH() {
        return RuntimeHelper.requireNonNull(constants$901.glib_listautoptr_cleanup_GMenuLinkIter$MH,"glib_listautoptr_cleanup_GMenuLinkIter");
    }
    public static void glib_listautoptr_cleanup_GMenuLinkIter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$901.glib_listautoptr_cleanup_GMenuLinkIter$MH, "glib_listautoptr_cleanup_GMenuLinkIter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMenuLinkIter$MH() {
        return RuntimeHelper.requireNonNull(constants$901.glib_slistautoptr_cleanup_GMenuLinkIter$MH,"glib_slistautoptr_cleanup_GMenuLinkIter");
    }
    public static void glib_slistautoptr_cleanup_GMenuLinkIter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$901.glib_slistautoptr_cleanup_GMenuLinkIter$MH, "glib_slistautoptr_cleanup_GMenuLinkIter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMenuLinkIter$MH() {
        return RuntimeHelper.requireNonNull(constants$901.glib_queueautoptr_cleanup_GMenuLinkIter$MH,"glib_queueautoptr_cleanup_GMenuLinkIter");
    }
    public static void glib_queueautoptr_cleanup_GMenuLinkIter ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$901.glib_queueautoptr_cleanup_GMenuLinkIter$MH, "glib_queueautoptr_cleanup_GMenuLinkIter");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMount_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMount_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMount_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMount_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMount$MH() {
        return RuntimeHelper.requireNonNull(constants$901.glib_autoptr_clear_GMount$MH,"glib_autoptr_clear_GMount");
    }
    public static void glib_autoptr_clear_GMount ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$901.glib_autoptr_clear_GMount$MH, "glib_autoptr_clear_GMount");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMount$MH() {
        return RuntimeHelper.requireNonNull(constants$902.glib_autoptr_cleanup_GMount$MH,"glib_autoptr_cleanup_GMount");
    }
    public static void glib_autoptr_cleanup_GMount ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$902.glib_autoptr_cleanup_GMount$MH, "glib_autoptr_cleanup_GMount");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMount$MH() {
        return RuntimeHelper.requireNonNull(constants$902.glib_listautoptr_cleanup_GMount$MH,"glib_listautoptr_cleanup_GMount");
    }
    public static void glib_listautoptr_cleanup_GMount ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$902.glib_listautoptr_cleanup_GMount$MH, "glib_listautoptr_cleanup_GMount");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMount$MH() {
        return RuntimeHelper.requireNonNull(constants$902.glib_slistautoptr_cleanup_GMount$MH,"glib_slistautoptr_cleanup_GMount");
    }
    public static void glib_slistautoptr_cleanup_GMount ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$902.glib_slistautoptr_cleanup_GMount$MH, "glib_slistautoptr_cleanup_GMount");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMount$MH() {
        return RuntimeHelper.requireNonNull(constants$902.glib_queueautoptr_cleanup_GMount$MH,"glib_queueautoptr_cleanup_GMount");
    }
    public static void glib_queueautoptr_cleanup_GMount ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$902.glib_queueautoptr_cleanup_GMount$MH, "glib_queueautoptr_cleanup_GMount");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMountOperation_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMountOperation_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMountOperation_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMountOperation_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$902.glib_autoptr_clear_GMountOperation$MH,"glib_autoptr_clear_GMountOperation");
    }
    public static void glib_autoptr_clear_GMountOperation ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$902.glib_autoptr_clear_GMountOperation$MH, "glib_autoptr_clear_GMountOperation");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$902.glib_autoptr_cleanup_GMountOperation$MH,"glib_autoptr_cleanup_GMountOperation");
    }
    public static void glib_autoptr_cleanup_GMountOperation ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$902.glib_autoptr_cleanup_GMountOperation$MH, "glib_autoptr_cleanup_GMountOperation");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$903.glib_listautoptr_cleanup_GMountOperation$MH,"glib_listautoptr_cleanup_GMountOperation");
    }
    public static void glib_listautoptr_cleanup_GMountOperation ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$903.glib_listautoptr_cleanup_GMountOperation$MH, "glib_listautoptr_cleanup_GMountOperation");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$903.glib_slistautoptr_cleanup_GMountOperation$MH,"glib_slistautoptr_cleanup_GMountOperation");
    }
    public static void glib_slistautoptr_cleanup_GMountOperation ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$903.glib_slistautoptr_cleanup_GMountOperation$MH, "glib_slistautoptr_cleanup_GMountOperation");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$903.glib_queueautoptr_cleanup_GMountOperation$MH,"glib_queueautoptr_cleanup_GMountOperation");
    }
    public static void glib_queueautoptr_cleanup_GMountOperation ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$903.glib_queueautoptr_cleanup_GMountOperation$MH, "glib_queueautoptr_cleanup_GMountOperation");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GNativeVolumeMonitor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNativeVolumeMonitor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNativeVolumeMonitor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNativeVolumeMonitor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GNativeVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$903.glib_autoptr_clear_GNativeVolumeMonitor$MH,"glib_autoptr_clear_GNativeVolumeMonitor");
    }
    public static void glib_autoptr_clear_GNativeVolumeMonitor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$903.glib_autoptr_clear_GNativeVolumeMonitor$MH, "glib_autoptr_clear_GNativeVolumeMonitor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GNativeVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$903.glib_autoptr_cleanup_GNativeVolumeMonitor$MH,"glib_autoptr_cleanup_GNativeVolumeMonitor");
    }
    public static void glib_autoptr_cleanup_GNativeVolumeMonitor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$903.glib_autoptr_cleanup_GNativeVolumeMonitor$MH, "glib_autoptr_cleanup_GNativeVolumeMonitor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GNativeVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$903.glib_listautoptr_cleanup_GNativeVolumeMonitor$MH,"glib_listautoptr_cleanup_GNativeVolumeMonitor");
    }
    public static void glib_listautoptr_cleanup_GNativeVolumeMonitor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$903.glib_listautoptr_cleanup_GNativeVolumeMonitor$MH, "glib_listautoptr_cleanup_GNativeVolumeMonitor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GNativeVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$904.glib_slistautoptr_cleanup_GNativeVolumeMonitor$MH,"glib_slistautoptr_cleanup_GNativeVolumeMonitor");
    }
    public static void glib_slistautoptr_cleanup_GNativeVolumeMonitor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$904.glib_slistautoptr_cleanup_GNativeVolumeMonitor$MH, "glib_slistautoptr_cleanup_GNativeVolumeMonitor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GNativeVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$904.glib_queueautoptr_cleanup_GNativeVolumeMonitor$MH,"glib_queueautoptr_cleanup_GNativeVolumeMonitor");
    }
    public static void glib_queueautoptr_cleanup_GNativeVolumeMonitor ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$904.glib_queueautoptr_cleanup_GNativeVolumeMonitor$MH, "glib_queueautoptr_cleanup_GNativeVolumeMonitor");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GNetworkAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GNetworkAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$904.glib_autoptr_clear_GNetworkAddress$MH,"glib_autoptr_clear_GNetworkAddress");
    }
    public static void glib_autoptr_clear_GNetworkAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$904.glib_autoptr_clear_GNetworkAddress$MH, "glib_autoptr_clear_GNetworkAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GNetworkAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$904.glib_autoptr_cleanup_GNetworkAddress$MH,"glib_autoptr_cleanup_GNetworkAddress");
    }
    public static void glib_autoptr_cleanup_GNetworkAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$904.glib_autoptr_cleanup_GNetworkAddress$MH, "glib_autoptr_cleanup_GNetworkAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GNetworkAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$904.glib_listautoptr_cleanup_GNetworkAddress$MH,"glib_listautoptr_cleanup_GNetworkAddress");
    }
    public static void glib_listautoptr_cleanup_GNetworkAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$904.glib_listautoptr_cleanup_GNetworkAddress$MH, "glib_listautoptr_cleanup_GNetworkAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GNetworkAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$904.glib_slistautoptr_cleanup_GNetworkAddress$MH,"glib_slistautoptr_cleanup_GNetworkAddress");
    }
    public static void glib_slistautoptr_cleanup_GNetworkAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$904.glib_slistautoptr_cleanup_GNetworkAddress$MH, "glib_slistautoptr_cleanup_GNetworkAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GNetworkAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$905.glib_queueautoptr_cleanup_GNetworkAddress$MH,"glib_queueautoptr_cleanup_GNetworkAddress");
    }
    public static void glib_queueautoptr_cleanup_GNetworkAddress ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$905.glib_queueautoptr_cleanup_GNetworkAddress$MH, "glib_queueautoptr_cleanup_GNetworkAddress");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GNetworkMonitor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkMonitor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkMonitor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkMonitor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GNetworkMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$905.glib_autoptr_clear_GNetworkMonitor$MH,"glib_autoptr_clear_GNetworkMonitor");
    }
    public static void glib_autoptr_clear_GNetworkMonitor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$905.glib_autoptr_clear_GNetworkMonitor$MH, "glib_autoptr_clear_GNetworkMonitor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GNetworkMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$905.glib_autoptr_cleanup_GNetworkMonitor$MH,"glib_autoptr_cleanup_GNetworkMonitor");
    }
    public static void glib_autoptr_cleanup_GNetworkMonitor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$905.glib_autoptr_cleanup_GNetworkMonitor$MH, "glib_autoptr_cleanup_GNetworkMonitor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GNetworkMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$905.glib_listautoptr_cleanup_GNetworkMonitor$MH,"glib_listautoptr_cleanup_GNetworkMonitor");
    }
    public static void glib_listautoptr_cleanup_GNetworkMonitor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$905.glib_listautoptr_cleanup_GNetworkMonitor$MH, "glib_listautoptr_cleanup_GNetworkMonitor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GNetworkMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$905.glib_slistautoptr_cleanup_GNetworkMonitor$MH,"glib_slistautoptr_cleanup_GNetworkMonitor");
    }
    public static void glib_slistautoptr_cleanup_GNetworkMonitor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$905.glib_slistautoptr_cleanup_GNetworkMonitor$MH, "glib_slistautoptr_cleanup_GNetworkMonitor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GNetworkMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$905.glib_queueautoptr_cleanup_GNetworkMonitor$MH,"glib_queueautoptr_cleanup_GNetworkMonitor");
    }
    public static void glib_queueautoptr_cleanup_GNetworkMonitor ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$905.glib_queueautoptr_cleanup_GNetworkMonitor$MH, "glib_queueautoptr_cleanup_GNetworkMonitor");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GNetworkService_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkService_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkService_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkService_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GNetworkService$MH() {
        return RuntimeHelper.requireNonNull(constants$906.glib_autoptr_clear_GNetworkService$MH,"glib_autoptr_clear_GNetworkService");
    }
    public static void glib_autoptr_clear_GNetworkService ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$906.glib_autoptr_clear_GNetworkService$MH, "glib_autoptr_clear_GNetworkService");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GNetworkService$MH() {
        return RuntimeHelper.requireNonNull(constants$906.glib_autoptr_cleanup_GNetworkService$MH,"glib_autoptr_cleanup_GNetworkService");
    }
    public static void glib_autoptr_cleanup_GNetworkService ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$906.glib_autoptr_cleanup_GNetworkService$MH, "glib_autoptr_cleanup_GNetworkService");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GNetworkService$MH() {
        return RuntimeHelper.requireNonNull(constants$906.glib_listautoptr_cleanup_GNetworkService$MH,"glib_listautoptr_cleanup_GNetworkService");
    }
    public static void glib_listautoptr_cleanup_GNetworkService ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$906.glib_listautoptr_cleanup_GNetworkService$MH, "glib_listautoptr_cleanup_GNetworkService");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GNetworkService$MH() {
        return RuntimeHelper.requireNonNull(constants$906.glib_slistautoptr_cleanup_GNetworkService$MH,"glib_slistautoptr_cleanup_GNetworkService");
    }
    public static void glib_slistautoptr_cleanup_GNetworkService ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$906.glib_slistautoptr_cleanup_GNetworkService$MH, "glib_slistautoptr_cleanup_GNetworkService");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GNetworkService$MH() {
        return RuntimeHelper.requireNonNull(constants$906.glib_queueautoptr_cleanup_GNetworkService$MH,"glib_queueautoptr_cleanup_GNetworkService");
    }
    public static void glib_queueautoptr_cleanup_GNetworkService ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$906.glib_queueautoptr_cleanup_GNetworkService$MH, "glib_queueautoptr_cleanup_GNetworkService");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GNotification_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNotification_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNotification_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNotification_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$906.glib_autoptr_clear_GNotification$MH,"glib_autoptr_clear_GNotification");
    }
    public static void glib_autoptr_clear_GNotification ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$906.glib_autoptr_clear_GNotification$MH, "glib_autoptr_clear_GNotification");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$907.glib_autoptr_cleanup_GNotification$MH,"glib_autoptr_cleanup_GNotification");
    }
    public static void glib_autoptr_cleanup_GNotification ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$907.glib_autoptr_cleanup_GNotification$MH, "glib_autoptr_cleanup_GNotification");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$907.glib_listautoptr_cleanup_GNotification$MH,"glib_listautoptr_cleanup_GNotification");
    }
    public static void glib_listautoptr_cleanup_GNotification ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$907.glib_listautoptr_cleanup_GNotification$MH, "glib_listautoptr_cleanup_GNotification");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$907.glib_slistautoptr_cleanup_GNotification$MH,"glib_slistautoptr_cleanup_GNotification");
    }
    public static void glib_slistautoptr_cleanup_GNotification ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$907.glib_slistautoptr_cleanup_GNotification$MH, "glib_slistautoptr_cleanup_GNotification");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$907.glib_queueautoptr_cleanup_GNotification$MH,"glib_queueautoptr_cleanup_GNotification");
    }
    public static void glib_queueautoptr_cleanup_GNotification ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$907.glib_queueautoptr_cleanup_GNotification$MH, "glib_queueautoptr_cleanup_GNotification");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$907.glib_autoptr_clear_GOutputStream$MH,"glib_autoptr_clear_GOutputStream");
    }
    public static void glib_autoptr_clear_GOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$907.glib_autoptr_clear_GOutputStream$MH, "glib_autoptr_clear_GOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$907.glib_autoptr_cleanup_GOutputStream$MH,"glib_autoptr_cleanup_GOutputStream");
    }
    public static void glib_autoptr_cleanup_GOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$907.glib_autoptr_cleanup_GOutputStream$MH, "glib_autoptr_cleanup_GOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$908.glib_listautoptr_cleanup_GOutputStream$MH,"glib_listautoptr_cleanup_GOutputStream");
    }
    public static void glib_listautoptr_cleanup_GOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$908.glib_listautoptr_cleanup_GOutputStream$MH, "glib_listautoptr_cleanup_GOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$908.glib_slistautoptr_cleanup_GOutputStream$MH,"glib_slistautoptr_cleanup_GOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$908.glib_slistautoptr_cleanup_GOutputStream$MH, "glib_slistautoptr_cleanup_GOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$908.glib_queueautoptr_cleanup_GOutputStream$MH,"glib_queueautoptr_cleanup_GOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GOutputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$908.glib_queueautoptr_cleanup_GOutputStream$MH, "glib_queueautoptr_cleanup_GOutputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GPermission_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPermission_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPermission_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPermission_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GPermission$MH() {
        return RuntimeHelper.requireNonNull(constants$908.glib_autoptr_clear_GPermission$MH,"glib_autoptr_clear_GPermission");
    }
    public static void glib_autoptr_clear_GPermission ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$908.glib_autoptr_clear_GPermission$MH, "glib_autoptr_clear_GPermission");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GPermission$MH() {
        return RuntimeHelper.requireNonNull(constants$908.glib_autoptr_cleanup_GPermission$MH,"glib_autoptr_cleanup_GPermission");
    }
    public static void glib_autoptr_cleanup_GPermission ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$908.glib_autoptr_cleanup_GPermission$MH, "glib_autoptr_cleanup_GPermission");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GPermission$MH() {
        return RuntimeHelper.requireNonNull(constants$908.glib_listautoptr_cleanup_GPermission$MH,"glib_listautoptr_cleanup_GPermission");
    }
    public static void glib_listautoptr_cleanup_GPermission ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$908.glib_listautoptr_cleanup_GPermission$MH, "glib_listautoptr_cleanup_GPermission");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GPermission$MH() {
        return RuntimeHelper.requireNonNull(constants$909.glib_slistautoptr_cleanup_GPermission$MH,"glib_slistautoptr_cleanup_GPermission");
    }
    public static void glib_slistautoptr_cleanup_GPermission ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$909.glib_slistautoptr_cleanup_GPermission$MH, "glib_slistautoptr_cleanup_GPermission");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GPermission$MH() {
        return RuntimeHelper.requireNonNull(constants$909.glib_queueautoptr_cleanup_GPermission$MH,"glib_queueautoptr_cleanup_GPermission");
    }
    public static void glib_queueautoptr_cleanup_GPermission ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$909.glib_queueautoptr_cleanup_GPermission$MH, "glib_queueautoptr_cleanup_GPermission");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GPollableInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GPollableInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$909.glib_autoptr_clear_GPollableInputStream$MH,"glib_autoptr_clear_GPollableInputStream");
    }
    public static void glib_autoptr_clear_GPollableInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$909.glib_autoptr_clear_GPollableInputStream$MH, "glib_autoptr_clear_GPollableInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GPollableInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$909.glib_autoptr_cleanup_GPollableInputStream$MH,"glib_autoptr_cleanup_GPollableInputStream");
    }
    public static void glib_autoptr_cleanup_GPollableInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$909.glib_autoptr_cleanup_GPollableInputStream$MH, "glib_autoptr_cleanup_GPollableInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GPollableInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$909.glib_listautoptr_cleanup_GPollableInputStream$MH,"glib_listautoptr_cleanup_GPollableInputStream");
    }
    public static void glib_listautoptr_cleanup_GPollableInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$909.glib_listautoptr_cleanup_GPollableInputStream$MH, "glib_listautoptr_cleanup_GPollableInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GPollableInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$909.glib_slistautoptr_cleanup_GPollableInputStream$MH,"glib_slistautoptr_cleanup_GPollableInputStream");
    }
    public static void glib_slistautoptr_cleanup_GPollableInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$909.glib_slistautoptr_cleanup_GPollableInputStream$MH, "glib_slistautoptr_cleanup_GPollableInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GPollableInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$910.glib_queueautoptr_cleanup_GPollableInputStream$MH,"glib_queueautoptr_cleanup_GPollableInputStream");
    }
    public static void glib_queueautoptr_cleanup_GPollableInputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$910.glib_queueautoptr_cleanup_GPollableInputStream$MH, "glib_queueautoptr_cleanup_GPollableInputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GPollableOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GPollableOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$910.glib_autoptr_clear_GPollableOutputStream$MH,"glib_autoptr_clear_GPollableOutputStream");
    }
    public static void glib_autoptr_clear_GPollableOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$910.glib_autoptr_clear_GPollableOutputStream$MH, "glib_autoptr_clear_GPollableOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GPollableOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$910.glib_autoptr_cleanup_GPollableOutputStream$MH,"glib_autoptr_cleanup_GPollableOutputStream");
    }
    public static void glib_autoptr_cleanup_GPollableOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$910.glib_autoptr_cleanup_GPollableOutputStream$MH, "glib_autoptr_cleanup_GPollableOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GPollableOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$910.glib_listautoptr_cleanup_GPollableOutputStream$MH,"glib_listautoptr_cleanup_GPollableOutputStream");
    }
    public static void glib_listautoptr_cleanup_GPollableOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$910.glib_listautoptr_cleanup_GPollableOutputStream$MH, "glib_listautoptr_cleanup_GPollableOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GPollableOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$910.glib_slistautoptr_cleanup_GPollableOutputStream$MH,"glib_slistautoptr_cleanup_GPollableOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GPollableOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$910.glib_slistautoptr_cleanup_GPollableOutputStream$MH, "glib_slistautoptr_cleanup_GPollableOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GPollableOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$910.glib_queueautoptr_cleanup_GPollableOutputStream$MH,"glib_queueautoptr_cleanup_GPollableOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GPollableOutputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$910.glib_queueautoptr_cleanup_GPollableOutputStream$MH, "glib_queueautoptr_cleanup_GPollableOutputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GPropertyAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPropertyAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPropertyAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPropertyAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GPropertyAction$MH() {
        return RuntimeHelper.requireNonNull(constants$911.glib_autoptr_clear_GPropertyAction$MH,"glib_autoptr_clear_GPropertyAction");
    }
    public static void glib_autoptr_clear_GPropertyAction ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$911.glib_autoptr_clear_GPropertyAction$MH, "glib_autoptr_clear_GPropertyAction");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GPropertyAction$MH() {
        return RuntimeHelper.requireNonNull(constants$911.glib_autoptr_cleanup_GPropertyAction$MH,"glib_autoptr_cleanup_GPropertyAction");
    }
    public static void glib_autoptr_cleanup_GPropertyAction ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$911.glib_autoptr_cleanup_GPropertyAction$MH, "glib_autoptr_cleanup_GPropertyAction");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GPropertyAction$MH() {
        return RuntimeHelper.requireNonNull(constants$911.glib_listautoptr_cleanup_GPropertyAction$MH,"glib_listautoptr_cleanup_GPropertyAction");
    }
    public static void glib_listautoptr_cleanup_GPropertyAction ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$911.glib_listautoptr_cleanup_GPropertyAction$MH, "glib_listautoptr_cleanup_GPropertyAction");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GPropertyAction$MH() {
        return RuntimeHelper.requireNonNull(constants$911.glib_slistautoptr_cleanup_GPropertyAction$MH,"glib_slistautoptr_cleanup_GPropertyAction");
    }
    public static void glib_slistautoptr_cleanup_GPropertyAction ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$911.glib_slistautoptr_cleanup_GPropertyAction$MH, "glib_slistautoptr_cleanup_GPropertyAction");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GPropertyAction$MH() {
        return RuntimeHelper.requireNonNull(constants$911.glib_queueautoptr_cleanup_GPropertyAction$MH,"glib_queueautoptr_cleanup_GPropertyAction");
    }
    public static void glib_queueautoptr_cleanup_GPropertyAction ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$911.glib_queueautoptr_cleanup_GPropertyAction$MH, "glib_queueautoptr_cleanup_GPropertyAction");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GProxyAddressEnumerator_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddressEnumerator_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddressEnumerator_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddressEnumerator_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GProxyAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$911.glib_autoptr_clear_GProxyAddressEnumerator$MH,"glib_autoptr_clear_GProxyAddressEnumerator");
    }
    public static void glib_autoptr_clear_GProxyAddressEnumerator ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$911.glib_autoptr_clear_GProxyAddressEnumerator$MH, "glib_autoptr_clear_GProxyAddressEnumerator");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GProxyAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$912.glib_autoptr_cleanup_GProxyAddressEnumerator$MH,"glib_autoptr_cleanup_GProxyAddressEnumerator");
    }
    public static void glib_autoptr_cleanup_GProxyAddressEnumerator ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$912.glib_autoptr_cleanup_GProxyAddressEnumerator$MH, "glib_autoptr_cleanup_GProxyAddressEnumerator");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GProxyAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$912.glib_listautoptr_cleanup_GProxyAddressEnumerator$MH,"glib_listautoptr_cleanup_GProxyAddressEnumerator");
    }
    public static void glib_listautoptr_cleanup_GProxyAddressEnumerator ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$912.glib_listautoptr_cleanup_GProxyAddressEnumerator$MH, "glib_listautoptr_cleanup_GProxyAddressEnumerator");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GProxyAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$912.glib_slistautoptr_cleanup_GProxyAddressEnumerator$MH,"glib_slistautoptr_cleanup_GProxyAddressEnumerator");
    }
    public static void glib_slistautoptr_cleanup_GProxyAddressEnumerator ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$912.glib_slistautoptr_cleanup_GProxyAddressEnumerator$MH, "glib_slistautoptr_cleanup_GProxyAddressEnumerator");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GProxyAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$912.glib_queueautoptr_cleanup_GProxyAddressEnumerator$MH,"glib_queueautoptr_cleanup_GProxyAddressEnumerator");
    }
    public static void glib_queueautoptr_cleanup_GProxyAddressEnumerator ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$912.glib_queueautoptr_cleanup_GProxyAddressEnumerator$MH, "glib_queueautoptr_cleanup_GProxyAddressEnumerator");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GProxyAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GProxyAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$912.glib_autoptr_clear_GProxyAddress$MH,"glib_autoptr_clear_GProxyAddress");
    }
    public static void glib_autoptr_clear_GProxyAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$912.glib_autoptr_clear_GProxyAddress$MH, "glib_autoptr_clear_GProxyAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GProxyAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$912.glib_autoptr_cleanup_GProxyAddress$MH,"glib_autoptr_cleanup_GProxyAddress");
    }
    public static void glib_autoptr_cleanup_GProxyAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$912.glib_autoptr_cleanup_GProxyAddress$MH, "glib_autoptr_cleanup_GProxyAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GProxyAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$913.glib_listautoptr_cleanup_GProxyAddress$MH,"glib_listautoptr_cleanup_GProxyAddress");
    }
    public static void glib_listautoptr_cleanup_GProxyAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$913.glib_listautoptr_cleanup_GProxyAddress$MH, "glib_listautoptr_cleanup_GProxyAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GProxyAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$913.glib_slistautoptr_cleanup_GProxyAddress$MH,"glib_slistautoptr_cleanup_GProxyAddress");
    }
    public static void glib_slistautoptr_cleanup_GProxyAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$913.glib_slistautoptr_cleanup_GProxyAddress$MH, "glib_slistautoptr_cleanup_GProxyAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GProxyAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$913.glib_queueautoptr_cleanup_GProxyAddress$MH,"glib_queueautoptr_cleanup_GProxyAddress");
    }
    public static void glib_queueautoptr_cleanup_GProxyAddress ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$913.glib_queueautoptr_cleanup_GProxyAddress$MH, "glib_queueautoptr_cleanup_GProxyAddress");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GProxy_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxy_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxy_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxy_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$913.glib_autoptr_clear_GProxy$MH,"glib_autoptr_clear_GProxy");
    }
    public static void glib_autoptr_clear_GProxy ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$913.glib_autoptr_clear_GProxy$MH, "glib_autoptr_clear_GProxy");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$913.glib_autoptr_cleanup_GProxy$MH,"glib_autoptr_cleanup_GProxy");
    }
    public static void glib_autoptr_cleanup_GProxy ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$913.glib_autoptr_cleanup_GProxy$MH, "glib_autoptr_cleanup_GProxy");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$913.glib_listautoptr_cleanup_GProxy$MH,"glib_listautoptr_cleanup_GProxy");
    }
    public static void glib_listautoptr_cleanup_GProxy ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$913.glib_listautoptr_cleanup_GProxy$MH, "glib_listautoptr_cleanup_GProxy");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$914.glib_slistautoptr_cleanup_GProxy$MH,"glib_slistautoptr_cleanup_GProxy");
    }
    public static void glib_slistautoptr_cleanup_GProxy ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$914.glib_slistautoptr_cleanup_GProxy$MH, "glib_slistautoptr_cleanup_GProxy");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$914.glib_queueautoptr_cleanup_GProxy$MH,"glib_queueautoptr_cleanup_GProxy");
    }
    public static void glib_queueautoptr_cleanup_GProxy ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$914.glib_queueautoptr_cleanup_GProxy$MH, "glib_queueautoptr_cleanup_GProxy");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GProxyResolver_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyResolver_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyResolver_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyResolver_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$914.glib_autoptr_clear_GProxyResolver$MH,"glib_autoptr_clear_GProxyResolver");
    }
    public static void glib_autoptr_clear_GProxyResolver ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$914.glib_autoptr_clear_GProxyResolver$MH, "glib_autoptr_clear_GProxyResolver");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$914.glib_autoptr_cleanup_GProxyResolver$MH,"glib_autoptr_cleanup_GProxyResolver");
    }
    public static void glib_autoptr_cleanup_GProxyResolver ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$914.glib_autoptr_cleanup_GProxyResolver$MH, "glib_autoptr_cleanup_GProxyResolver");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$914.glib_listautoptr_cleanup_GProxyResolver$MH,"glib_listautoptr_cleanup_GProxyResolver");
    }
    public static void glib_listautoptr_cleanup_GProxyResolver ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$914.glib_listautoptr_cleanup_GProxyResolver$MH, "glib_listautoptr_cleanup_GProxyResolver");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$914.glib_slistautoptr_cleanup_GProxyResolver$MH,"glib_slistautoptr_cleanup_GProxyResolver");
    }
    public static void glib_slistautoptr_cleanup_GProxyResolver ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$914.glib_slistautoptr_cleanup_GProxyResolver$MH, "glib_slistautoptr_cleanup_GProxyResolver");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$915.glib_queueautoptr_cleanup_GProxyResolver$MH,"glib_queueautoptr_cleanup_GProxyResolver");
    }
    public static void glib_queueautoptr_cleanup_GProxyResolver ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$915.glib_queueautoptr_cleanup_GProxyResolver$MH, "glib_queueautoptr_cleanup_GProxyResolver");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GRemoteActionGroup_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRemoteActionGroup_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRemoteActionGroup_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRemoteActionGroup_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GRemoteActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$915.glib_autoptr_clear_GRemoteActionGroup$MH,"glib_autoptr_clear_GRemoteActionGroup");
    }
    public static void glib_autoptr_clear_GRemoteActionGroup ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$915.glib_autoptr_clear_GRemoteActionGroup$MH, "glib_autoptr_clear_GRemoteActionGroup");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GRemoteActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$915.glib_autoptr_cleanup_GRemoteActionGroup$MH,"glib_autoptr_cleanup_GRemoteActionGroup");
    }
    public static void glib_autoptr_cleanup_GRemoteActionGroup ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$915.glib_autoptr_cleanup_GRemoteActionGroup$MH, "glib_autoptr_cleanup_GRemoteActionGroup");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GRemoteActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$915.glib_listautoptr_cleanup_GRemoteActionGroup$MH,"glib_listautoptr_cleanup_GRemoteActionGroup");
    }
    public static void glib_listautoptr_cleanup_GRemoteActionGroup ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$915.glib_listautoptr_cleanup_GRemoteActionGroup$MH, "glib_listautoptr_cleanup_GRemoteActionGroup");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GRemoteActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$915.glib_slistautoptr_cleanup_GRemoteActionGroup$MH,"glib_slistautoptr_cleanup_GRemoteActionGroup");
    }
    public static void glib_slistautoptr_cleanup_GRemoteActionGroup ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$915.glib_slistautoptr_cleanup_GRemoteActionGroup$MH, "glib_slistautoptr_cleanup_GRemoteActionGroup");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GRemoteActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$915.glib_queueautoptr_cleanup_GRemoteActionGroup$MH,"glib_queueautoptr_cleanup_GRemoteActionGroup");
    }
    public static void glib_queueautoptr_cleanup_GRemoteActionGroup ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$915.glib_queueautoptr_cleanup_GRemoteActionGroup$MH, "glib_queueautoptr_cleanup_GRemoteActionGroup");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GResolver_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResolver_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResolver_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResolver_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$916.glib_autoptr_clear_GResolver$MH,"glib_autoptr_clear_GResolver");
    }
    public static void glib_autoptr_clear_GResolver ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$916.glib_autoptr_clear_GResolver$MH, "glib_autoptr_clear_GResolver");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$916.glib_autoptr_cleanup_GResolver$MH,"glib_autoptr_cleanup_GResolver");
    }
    public static void glib_autoptr_cleanup_GResolver ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$916.glib_autoptr_cleanup_GResolver$MH, "glib_autoptr_cleanup_GResolver");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$916.glib_listautoptr_cleanup_GResolver$MH,"glib_listautoptr_cleanup_GResolver");
    }
    public static void glib_listautoptr_cleanup_GResolver ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$916.glib_listautoptr_cleanup_GResolver$MH, "glib_listautoptr_cleanup_GResolver");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$916.glib_slistautoptr_cleanup_GResolver$MH,"glib_slistautoptr_cleanup_GResolver");
    }
    public static void glib_slistautoptr_cleanup_GResolver ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$916.glib_slistautoptr_cleanup_GResolver$MH, "glib_slistautoptr_cleanup_GResolver");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$916.glib_queueautoptr_cleanup_GResolver$MH,"glib_queueautoptr_cleanup_GResolver");
    }
    public static void glib_queueautoptr_cleanup_GResolver ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$916.glib_queueautoptr_cleanup_GResolver$MH, "glib_queueautoptr_cleanup_GResolver");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GResource_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResource_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResource_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResource_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GResource$MH() {
        return RuntimeHelper.requireNonNull(constants$916.glib_autoptr_clear_GResource$MH,"glib_autoptr_clear_GResource");
    }
    public static void glib_autoptr_clear_GResource ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$916.glib_autoptr_clear_GResource$MH, "glib_autoptr_clear_GResource");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GResource$MH() {
        return RuntimeHelper.requireNonNull(constants$917.glib_autoptr_cleanup_GResource$MH,"glib_autoptr_cleanup_GResource");
    }
    public static void glib_autoptr_cleanup_GResource ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$917.glib_autoptr_cleanup_GResource$MH, "glib_autoptr_cleanup_GResource");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GResource$MH() {
        return RuntimeHelper.requireNonNull(constants$917.glib_listautoptr_cleanup_GResource$MH,"glib_listautoptr_cleanup_GResource");
    }
    public static void glib_listautoptr_cleanup_GResource ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$917.glib_listautoptr_cleanup_GResource$MH, "glib_listautoptr_cleanup_GResource");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GResource$MH() {
        return RuntimeHelper.requireNonNull(constants$917.glib_slistautoptr_cleanup_GResource$MH,"glib_slistautoptr_cleanup_GResource");
    }
    public static void glib_slistautoptr_cleanup_GResource ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$917.glib_slistautoptr_cleanup_GResource$MH, "glib_slistautoptr_cleanup_GResource");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GResource$MH() {
        return RuntimeHelper.requireNonNull(constants$917.glib_queueautoptr_cleanup_GResource$MH,"glib_queueautoptr_cleanup_GResource");
    }
    public static void glib_queueautoptr_cleanup_GResource ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$917.glib_queueautoptr_cleanup_GResource$MH, "glib_queueautoptr_cleanup_GResource");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSeekable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSeekable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSeekable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSeekable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSeekable$MH() {
        return RuntimeHelper.requireNonNull(constants$917.glib_autoptr_clear_GSeekable$MH,"glib_autoptr_clear_GSeekable");
    }
    public static void glib_autoptr_clear_GSeekable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$917.glib_autoptr_clear_GSeekable$MH, "glib_autoptr_clear_GSeekable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSeekable$MH() {
        return RuntimeHelper.requireNonNull(constants$917.glib_autoptr_cleanup_GSeekable$MH,"glib_autoptr_cleanup_GSeekable");
    }
    public static void glib_autoptr_cleanup_GSeekable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$917.glib_autoptr_cleanup_GSeekable$MH, "glib_autoptr_cleanup_GSeekable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSeekable$MH() {
        return RuntimeHelper.requireNonNull(constants$918.glib_listautoptr_cleanup_GSeekable$MH,"glib_listautoptr_cleanup_GSeekable");
    }
    public static void glib_listautoptr_cleanup_GSeekable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$918.glib_listautoptr_cleanup_GSeekable$MH, "glib_listautoptr_cleanup_GSeekable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSeekable$MH() {
        return RuntimeHelper.requireNonNull(constants$918.glib_slistautoptr_cleanup_GSeekable$MH,"glib_slistautoptr_cleanup_GSeekable");
    }
    public static void glib_slistautoptr_cleanup_GSeekable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$918.glib_slistautoptr_cleanup_GSeekable$MH, "glib_slistautoptr_cleanup_GSeekable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSeekable$MH() {
        return RuntimeHelper.requireNonNull(constants$918.glib_queueautoptr_cleanup_GSeekable$MH,"glib_queueautoptr_cleanup_GSeekable");
    }
    public static void glib_queueautoptr_cleanup_GSeekable ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$918.glib_queueautoptr_cleanup_GSeekable$MH, "glib_queueautoptr_cleanup_GSeekable");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSettingsBackend_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsBackend_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsBackend_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsBackend_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSettingsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$918.glib_autoptr_clear_GSettingsBackend$MH,"glib_autoptr_clear_GSettingsBackend");
    }
    public static void glib_autoptr_clear_GSettingsBackend ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$918.glib_autoptr_clear_GSettingsBackend$MH, "glib_autoptr_clear_GSettingsBackend");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSettingsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$918.glib_autoptr_cleanup_GSettingsBackend$MH,"glib_autoptr_cleanup_GSettingsBackend");
    }
    public static void glib_autoptr_cleanup_GSettingsBackend ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$918.glib_autoptr_cleanup_GSettingsBackend$MH, "glib_autoptr_cleanup_GSettingsBackend");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSettingsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$918.glib_listautoptr_cleanup_GSettingsBackend$MH,"glib_listautoptr_cleanup_GSettingsBackend");
    }
    public static void glib_listautoptr_cleanup_GSettingsBackend ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$918.glib_listautoptr_cleanup_GSettingsBackend$MH, "glib_listautoptr_cleanup_GSettingsBackend");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSettingsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$919.glib_slistautoptr_cleanup_GSettingsBackend$MH,"glib_slistautoptr_cleanup_GSettingsBackend");
    }
    public static void glib_slistautoptr_cleanup_GSettingsBackend ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$919.glib_slistautoptr_cleanup_GSettingsBackend$MH, "glib_slistautoptr_cleanup_GSettingsBackend");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSettingsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$919.glib_queueautoptr_cleanup_GSettingsBackend$MH,"glib_queueautoptr_cleanup_GSettingsBackend");
    }
    public static void glib_queueautoptr_cleanup_GSettingsBackend ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$919.glib_queueautoptr_cleanup_GSettingsBackend$MH, "glib_queueautoptr_cleanup_GSettingsBackend");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSettingsSchema_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchema_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchema_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchema_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSettingsSchema$MH() {
        return RuntimeHelper.requireNonNull(constants$919.glib_autoptr_clear_GSettingsSchema$MH,"glib_autoptr_clear_GSettingsSchema");
    }
    public static void glib_autoptr_clear_GSettingsSchema ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$919.glib_autoptr_clear_GSettingsSchema$MH, "glib_autoptr_clear_GSettingsSchema");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSettingsSchema$MH() {
        return RuntimeHelper.requireNonNull(constants$919.glib_autoptr_cleanup_GSettingsSchema$MH,"glib_autoptr_cleanup_GSettingsSchema");
    }
    public static void glib_autoptr_cleanup_GSettingsSchema ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$919.glib_autoptr_cleanup_GSettingsSchema$MH, "glib_autoptr_cleanup_GSettingsSchema");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSettingsSchema$MH() {
        return RuntimeHelper.requireNonNull(constants$919.glib_listautoptr_cleanup_GSettingsSchema$MH,"glib_listautoptr_cleanup_GSettingsSchema");
    }
    public static void glib_listautoptr_cleanup_GSettingsSchema ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$919.glib_listautoptr_cleanup_GSettingsSchema$MH, "glib_listautoptr_cleanup_GSettingsSchema");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSettingsSchema$MH() {
        return RuntimeHelper.requireNonNull(constants$919.glib_slistautoptr_cleanup_GSettingsSchema$MH,"glib_slistautoptr_cleanup_GSettingsSchema");
    }
    public static void glib_slistautoptr_cleanup_GSettingsSchema ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$919.glib_slistautoptr_cleanup_GSettingsSchema$MH, "glib_slistautoptr_cleanup_GSettingsSchema");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSettingsSchema$MH() {
        return RuntimeHelper.requireNonNull(constants$920.glib_queueautoptr_cleanup_GSettingsSchema$MH,"glib_queueautoptr_cleanup_GSettingsSchema");
    }
    public static void glib_queueautoptr_cleanup_GSettingsSchema ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$920.glib_queueautoptr_cleanup_GSettingsSchema$MH, "glib_queueautoptr_cleanup_GSettingsSchema");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSettingsSchemaKey_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaKey_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaKey_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaKey_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSettingsSchemaKey$MH() {
        return RuntimeHelper.requireNonNull(constants$920.glib_autoptr_clear_GSettingsSchemaKey$MH,"glib_autoptr_clear_GSettingsSchemaKey");
    }
    public static void glib_autoptr_clear_GSettingsSchemaKey ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$920.glib_autoptr_clear_GSettingsSchemaKey$MH, "glib_autoptr_clear_GSettingsSchemaKey");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSettingsSchemaKey$MH() {
        return RuntimeHelper.requireNonNull(constants$920.glib_autoptr_cleanup_GSettingsSchemaKey$MH,"glib_autoptr_cleanup_GSettingsSchemaKey");
    }
    public static void glib_autoptr_cleanup_GSettingsSchemaKey ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$920.glib_autoptr_cleanup_GSettingsSchemaKey$MH, "glib_autoptr_cleanup_GSettingsSchemaKey");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSettingsSchemaKey$MH() {
        return RuntimeHelper.requireNonNull(constants$920.glib_listautoptr_cleanup_GSettingsSchemaKey$MH,"glib_listautoptr_cleanup_GSettingsSchemaKey");
    }
    public static void glib_listautoptr_cleanup_GSettingsSchemaKey ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$920.glib_listautoptr_cleanup_GSettingsSchemaKey$MH, "glib_listautoptr_cleanup_GSettingsSchemaKey");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSettingsSchemaKey$MH() {
        return RuntimeHelper.requireNonNull(constants$920.glib_slistautoptr_cleanup_GSettingsSchemaKey$MH,"glib_slistautoptr_cleanup_GSettingsSchemaKey");
    }
    public static void glib_slistautoptr_cleanup_GSettingsSchemaKey ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$920.glib_slistautoptr_cleanup_GSettingsSchemaKey$MH, "glib_slistautoptr_cleanup_GSettingsSchemaKey");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSettingsSchemaKey$MH() {
        return RuntimeHelper.requireNonNull(constants$920.glib_queueautoptr_cleanup_GSettingsSchemaKey$MH,"glib_queueautoptr_cleanup_GSettingsSchemaKey");
    }
    public static void glib_queueautoptr_cleanup_GSettingsSchemaKey ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$920.glib_queueautoptr_cleanup_GSettingsSchemaKey$MH, "glib_queueautoptr_cleanup_GSettingsSchemaKey");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSettingsSchemaSource_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaSource_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaSource_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaSource_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSettingsSchemaSource$MH() {
        return RuntimeHelper.requireNonNull(constants$921.glib_autoptr_clear_GSettingsSchemaSource$MH,"glib_autoptr_clear_GSettingsSchemaSource");
    }
    public static void glib_autoptr_clear_GSettingsSchemaSource ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$921.glib_autoptr_clear_GSettingsSchemaSource$MH, "glib_autoptr_clear_GSettingsSchemaSource");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSettingsSchemaSource$MH() {
        return RuntimeHelper.requireNonNull(constants$921.glib_autoptr_cleanup_GSettingsSchemaSource$MH,"glib_autoptr_cleanup_GSettingsSchemaSource");
    }
    public static void glib_autoptr_cleanup_GSettingsSchemaSource ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$921.glib_autoptr_cleanup_GSettingsSchemaSource$MH, "glib_autoptr_cleanup_GSettingsSchemaSource");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSettingsSchemaSource$MH() {
        return RuntimeHelper.requireNonNull(constants$921.glib_listautoptr_cleanup_GSettingsSchemaSource$MH,"glib_listautoptr_cleanup_GSettingsSchemaSource");
    }
    public static void glib_listautoptr_cleanup_GSettingsSchemaSource ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$921.glib_listautoptr_cleanup_GSettingsSchemaSource$MH, "glib_listautoptr_cleanup_GSettingsSchemaSource");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSettingsSchemaSource$MH() {
        return RuntimeHelper.requireNonNull(constants$921.glib_slistautoptr_cleanup_GSettingsSchemaSource$MH,"glib_slistautoptr_cleanup_GSettingsSchemaSource");
    }
    public static void glib_slistautoptr_cleanup_GSettingsSchemaSource ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$921.glib_slistautoptr_cleanup_GSettingsSchemaSource$MH, "glib_slistautoptr_cleanup_GSettingsSchemaSource");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSettingsSchemaSource$MH() {
        return RuntimeHelper.requireNonNull(constants$921.glib_queueautoptr_cleanup_GSettingsSchemaSource$MH,"glib_queueautoptr_cleanup_GSettingsSchemaSource");
    }
    public static void glib_queueautoptr_cleanup_GSettingsSchemaSource ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$921.glib_queueautoptr_cleanup_GSettingsSchemaSource$MH, "glib_queueautoptr_cleanup_GSettingsSchemaSource");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSettings_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettings_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettings_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettings_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$921.glib_autoptr_clear_GSettings$MH,"glib_autoptr_clear_GSettings");
    }
    public static void glib_autoptr_clear_GSettings ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$921.glib_autoptr_clear_GSettings$MH, "glib_autoptr_clear_GSettings");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$922.glib_autoptr_cleanup_GSettings$MH,"glib_autoptr_cleanup_GSettings");
    }
    public static void glib_autoptr_cleanup_GSettings ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$922.glib_autoptr_cleanup_GSettings$MH, "glib_autoptr_cleanup_GSettings");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$922.glib_listautoptr_cleanup_GSettings$MH,"glib_listautoptr_cleanup_GSettings");
    }
    public static void glib_listautoptr_cleanup_GSettings ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$922.glib_listautoptr_cleanup_GSettings$MH, "glib_listautoptr_cleanup_GSettings");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$922.glib_slistautoptr_cleanup_GSettings$MH,"glib_slistautoptr_cleanup_GSettings");
    }
    public static void glib_slistautoptr_cleanup_GSettings ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$922.glib_slistautoptr_cleanup_GSettings$MH, "glib_slistautoptr_cleanup_GSettings");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$922.glib_queueautoptr_cleanup_GSettings$MH,"glib_queueautoptr_cleanup_GSettings");
    }
    public static void glib_queueautoptr_cleanup_GSettings ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$922.glib_queueautoptr_cleanup_GSettings$MH, "glib_queueautoptr_cleanup_GSettings");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSimpleActionGroup_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleActionGroup_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleActionGroup_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleActionGroup_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSimpleActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$922.glib_autoptr_clear_GSimpleActionGroup$MH,"glib_autoptr_clear_GSimpleActionGroup");
    }
    public static void glib_autoptr_clear_GSimpleActionGroup ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$922.glib_autoptr_clear_GSimpleActionGroup$MH, "glib_autoptr_clear_GSimpleActionGroup");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSimpleActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$922.glib_autoptr_cleanup_GSimpleActionGroup$MH,"glib_autoptr_cleanup_GSimpleActionGroup");
    }
    public static void glib_autoptr_cleanup_GSimpleActionGroup ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$922.glib_autoptr_cleanup_GSimpleActionGroup$MH, "glib_autoptr_cleanup_GSimpleActionGroup");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSimpleActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$923.glib_listautoptr_cleanup_GSimpleActionGroup$MH,"glib_listautoptr_cleanup_GSimpleActionGroup");
    }
    public static void glib_listautoptr_cleanup_GSimpleActionGroup ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$923.glib_listautoptr_cleanup_GSimpleActionGroup$MH, "glib_listautoptr_cleanup_GSimpleActionGroup");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSimpleActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$923.glib_slistautoptr_cleanup_GSimpleActionGroup$MH,"glib_slistautoptr_cleanup_GSimpleActionGroup");
    }
    public static void glib_slistautoptr_cleanup_GSimpleActionGroup ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$923.glib_slistautoptr_cleanup_GSimpleActionGroup$MH, "glib_slistautoptr_cleanup_GSimpleActionGroup");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSimpleActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$923.glib_queueautoptr_cleanup_GSimpleActionGroup$MH,"glib_queueautoptr_cleanup_GSimpleActionGroup");
    }
    public static void glib_queueautoptr_cleanup_GSimpleActionGroup ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$923.glib_queueautoptr_cleanup_GSimpleActionGroup$MH, "glib_queueautoptr_cleanup_GSimpleActionGroup");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSimpleAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSimpleAction$MH() {
        return RuntimeHelper.requireNonNull(constants$923.glib_autoptr_clear_GSimpleAction$MH,"glib_autoptr_clear_GSimpleAction");
    }
    public static void glib_autoptr_clear_GSimpleAction ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$923.glib_autoptr_clear_GSimpleAction$MH, "glib_autoptr_clear_GSimpleAction");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSimpleAction$MH() {
        return RuntimeHelper.requireNonNull(constants$923.glib_autoptr_cleanup_GSimpleAction$MH,"glib_autoptr_cleanup_GSimpleAction");
    }
    public static void glib_autoptr_cleanup_GSimpleAction ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$923.glib_autoptr_cleanup_GSimpleAction$MH, "glib_autoptr_cleanup_GSimpleAction");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSimpleAction$MH() {
        return RuntimeHelper.requireNonNull(constants$923.glib_listautoptr_cleanup_GSimpleAction$MH,"glib_listautoptr_cleanup_GSimpleAction");
    }
    public static void glib_listautoptr_cleanup_GSimpleAction ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$923.glib_listautoptr_cleanup_GSimpleAction$MH, "glib_listautoptr_cleanup_GSimpleAction");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSimpleAction$MH() {
        return RuntimeHelper.requireNonNull(constants$924.glib_slistautoptr_cleanup_GSimpleAction$MH,"glib_slistautoptr_cleanup_GSimpleAction");
    }
    public static void glib_slistautoptr_cleanup_GSimpleAction ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$924.glib_slistautoptr_cleanup_GSimpleAction$MH, "glib_slistautoptr_cleanup_GSimpleAction");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSimpleAction$MH() {
        return RuntimeHelper.requireNonNull(constants$924.glib_queueautoptr_cleanup_GSimpleAction$MH,"glib_queueautoptr_cleanup_GSimpleAction");
    }
    public static void glib_queueautoptr_cleanup_GSimpleAction ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$924.glib_queueautoptr_cleanup_GSimpleAction$MH, "glib_queueautoptr_cleanup_GSimpleAction");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSimpleAsyncResult_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAsyncResult_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAsyncResult_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAsyncResult_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSimpleAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$924.glib_autoptr_clear_GSimpleAsyncResult$MH,"glib_autoptr_clear_GSimpleAsyncResult");
    }
    public static void glib_autoptr_clear_GSimpleAsyncResult ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$924.glib_autoptr_clear_GSimpleAsyncResult$MH, "glib_autoptr_clear_GSimpleAsyncResult");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSimpleAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$924.glib_autoptr_cleanup_GSimpleAsyncResult$MH,"glib_autoptr_cleanup_GSimpleAsyncResult");
    }
    public static void glib_autoptr_cleanup_GSimpleAsyncResult ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$924.glib_autoptr_cleanup_GSimpleAsyncResult$MH, "glib_autoptr_cleanup_GSimpleAsyncResult");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSimpleAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$924.glib_listautoptr_cleanup_GSimpleAsyncResult$MH,"glib_listautoptr_cleanup_GSimpleAsyncResult");
    }
    public static void glib_listautoptr_cleanup_GSimpleAsyncResult ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$924.glib_listautoptr_cleanup_GSimpleAsyncResult$MH, "glib_listautoptr_cleanup_GSimpleAsyncResult");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSimpleAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$924.glib_slistautoptr_cleanup_GSimpleAsyncResult$MH,"glib_slistautoptr_cleanup_GSimpleAsyncResult");
    }
    public static void glib_slistautoptr_cleanup_GSimpleAsyncResult ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$924.glib_slistautoptr_cleanup_GSimpleAsyncResult$MH, "glib_slistautoptr_cleanup_GSimpleAsyncResult");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSimpleAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$925.glib_queueautoptr_cleanup_GSimpleAsyncResult$MH,"glib_queueautoptr_cleanup_GSimpleAsyncResult");
    }
    public static void glib_queueautoptr_cleanup_GSimpleAsyncResult ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$925.glib_queueautoptr_cleanup_GSimpleAsyncResult$MH, "glib_queueautoptr_cleanup_GSimpleAsyncResult");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSimplePermission_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimplePermission_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimplePermission_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimplePermission_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSimplePermission$MH() {
        return RuntimeHelper.requireNonNull(constants$925.glib_autoptr_clear_GSimplePermission$MH,"glib_autoptr_clear_GSimplePermission");
    }
    public static void glib_autoptr_clear_GSimplePermission ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$925.glib_autoptr_clear_GSimplePermission$MH, "glib_autoptr_clear_GSimplePermission");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSimplePermission$MH() {
        return RuntimeHelper.requireNonNull(constants$925.glib_autoptr_cleanup_GSimplePermission$MH,"glib_autoptr_cleanup_GSimplePermission");
    }
    public static void glib_autoptr_cleanup_GSimplePermission ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$925.glib_autoptr_cleanup_GSimplePermission$MH, "glib_autoptr_cleanup_GSimplePermission");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSimplePermission$MH() {
        return RuntimeHelper.requireNonNull(constants$925.glib_listautoptr_cleanup_GSimplePermission$MH,"glib_listautoptr_cleanup_GSimplePermission");
    }
    public static void glib_listautoptr_cleanup_GSimplePermission ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$925.glib_listautoptr_cleanup_GSimplePermission$MH, "glib_listautoptr_cleanup_GSimplePermission");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSimplePermission$MH() {
        return RuntimeHelper.requireNonNull(constants$925.glib_slistautoptr_cleanup_GSimplePermission$MH,"glib_slistautoptr_cleanup_GSimplePermission");
    }
    public static void glib_slistautoptr_cleanup_GSimplePermission ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$925.glib_slistautoptr_cleanup_GSimplePermission$MH, "glib_slistautoptr_cleanup_GSimplePermission");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSimplePermission$MH() {
        return RuntimeHelper.requireNonNull(constants$925.glib_queueautoptr_cleanup_GSimplePermission$MH,"glib_queueautoptr_cleanup_GSimplePermission");
    }
    public static void glib_queueautoptr_cleanup_GSimplePermission ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$925.glib_queueautoptr_cleanup_GSimplePermission$MH, "glib_queueautoptr_cleanup_GSimplePermission");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSimpleProxyResolver_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleProxyResolver_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleProxyResolver_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleProxyResolver_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSimpleProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$926.glib_autoptr_clear_GSimpleProxyResolver$MH,"glib_autoptr_clear_GSimpleProxyResolver");
    }
    public static void glib_autoptr_clear_GSimpleProxyResolver ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$926.glib_autoptr_clear_GSimpleProxyResolver$MH, "glib_autoptr_clear_GSimpleProxyResolver");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSimpleProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$926.glib_autoptr_cleanup_GSimpleProxyResolver$MH,"glib_autoptr_cleanup_GSimpleProxyResolver");
    }
    public static void glib_autoptr_cleanup_GSimpleProxyResolver ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$926.glib_autoptr_cleanup_GSimpleProxyResolver$MH, "glib_autoptr_cleanup_GSimpleProxyResolver");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSimpleProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$926.glib_listautoptr_cleanup_GSimpleProxyResolver$MH,"glib_listautoptr_cleanup_GSimpleProxyResolver");
    }
    public static void glib_listautoptr_cleanup_GSimpleProxyResolver ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$926.glib_listautoptr_cleanup_GSimpleProxyResolver$MH, "glib_listautoptr_cleanup_GSimpleProxyResolver");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSimpleProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$926.glib_slistautoptr_cleanup_GSimpleProxyResolver$MH,"glib_slistautoptr_cleanup_GSimpleProxyResolver");
    }
    public static void glib_slistautoptr_cleanup_GSimpleProxyResolver ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$926.glib_slistautoptr_cleanup_GSimpleProxyResolver$MH, "glib_slistautoptr_cleanup_GSimpleProxyResolver");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSimpleProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$926.glib_queueautoptr_cleanup_GSimpleProxyResolver$MH,"glib_queueautoptr_cleanup_GSimpleProxyResolver");
    }
    public static void glib_queueautoptr_cleanup_GSimpleProxyResolver ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$926.glib_queueautoptr_cleanup_GSimpleProxyResolver$MH, "glib_queueautoptr_cleanup_GSimpleProxyResolver");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketAddressEnumerator_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddressEnumerator_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddressEnumerator_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddressEnumerator_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$926.glib_autoptr_clear_GSocketAddressEnumerator$MH,"glib_autoptr_clear_GSocketAddressEnumerator");
    }
    public static void glib_autoptr_clear_GSocketAddressEnumerator ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$926.glib_autoptr_clear_GSocketAddressEnumerator$MH, "glib_autoptr_clear_GSocketAddressEnumerator");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$927.glib_autoptr_cleanup_GSocketAddressEnumerator$MH,"glib_autoptr_cleanup_GSocketAddressEnumerator");
    }
    public static void glib_autoptr_cleanup_GSocketAddressEnumerator ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$927.glib_autoptr_cleanup_GSocketAddressEnumerator$MH, "glib_autoptr_cleanup_GSocketAddressEnumerator");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$927.glib_listautoptr_cleanup_GSocketAddressEnumerator$MH,"glib_listautoptr_cleanup_GSocketAddressEnumerator");
    }
    public static void glib_listautoptr_cleanup_GSocketAddressEnumerator ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$927.glib_listautoptr_cleanup_GSocketAddressEnumerator$MH, "glib_listautoptr_cleanup_GSocketAddressEnumerator");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$927.glib_slistautoptr_cleanup_GSocketAddressEnumerator$MH,"glib_slistautoptr_cleanup_GSocketAddressEnumerator");
    }
    public static void glib_slistautoptr_cleanup_GSocketAddressEnumerator ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$927.glib_slistautoptr_cleanup_GSocketAddressEnumerator$MH, "glib_slistautoptr_cleanup_GSocketAddressEnumerator");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$927.glib_queueautoptr_cleanup_GSocketAddressEnumerator$MH,"glib_queueautoptr_cleanup_GSocketAddressEnumerator");
    }
    public static void glib_queueautoptr_cleanup_GSocketAddressEnumerator ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$927.glib_queueautoptr_cleanup_GSocketAddressEnumerator$MH, "glib_queueautoptr_cleanup_GSocketAddressEnumerator");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$927.glib_autoptr_clear_GSocketAddress$MH,"glib_autoptr_clear_GSocketAddress");
    }
    public static void glib_autoptr_clear_GSocketAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$927.glib_autoptr_clear_GSocketAddress$MH, "glib_autoptr_clear_GSocketAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$927.glib_autoptr_cleanup_GSocketAddress$MH,"glib_autoptr_cleanup_GSocketAddress");
    }
    public static void glib_autoptr_cleanup_GSocketAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$927.glib_autoptr_cleanup_GSocketAddress$MH, "glib_autoptr_cleanup_GSocketAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$928.glib_listautoptr_cleanup_GSocketAddress$MH,"glib_listautoptr_cleanup_GSocketAddress");
    }
    public static void glib_listautoptr_cleanup_GSocketAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$928.glib_listautoptr_cleanup_GSocketAddress$MH, "glib_listautoptr_cleanup_GSocketAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$928.glib_slistautoptr_cleanup_GSocketAddress$MH,"glib_slistautoptr_cleanup_GSocketAddress");
    }
    public static void glib_slistautoptr_cleanup_GSocketAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$928.glib_slistautoptr_cleanup_GSocketAddress$MH, "glib_slistautoptr_cleanup_GSocketAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$928.glib_queueautoptr_cleanup_GSocketAddress$MH,"glib_queueautoptr_cleanup_GSocketAddress");
    }
    public static void glib_queueautoptr_cleanup_GSocketAddress ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$928.glib_queueautoptr_cleanup_GSocketAddress$MH, "glib_queueautoptr_cleanup_GSocketAddress");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketClient_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketClient_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketClient_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketClient_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketClient$MH() {
        return RuntimeHelper.requireNonNull(constants$928.glib_autoptr_clear_GSocketClient$MH,"glib_autoptr_clear_GSocketClient");
    }
    public static void glib_autoptr_clear_GSocketClient ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$928.glib_autoptr_clear_GSocketClient$MH, "glib_autoptr_clear_GSocketClient");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketClient$MH() {
        return RuntimeHelper.requireNonNull(constants$928.glib_autoptr_cleanup_GSocketClient$MH,"glib_autoptr_cleanup_GSocketClient");
    }
    public static void glib_autoptr_cleanup_GSocketClient ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$928.glib_autoptr_cleanup_GSocketClient$MH, "glib_autoptr_cleanup_GSocketClient");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketClient$MH() {
        return RuntimeHelper.requireNonNull(constants$928.glib_listautoptr_cleanup_GSocketClient$MH,"glib_listautoptr_cleanup_GSocketClient");
    }
    public static void glib_listautoptr_cleanup_GSocketClient ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$928.glib_listautoptr_cleanup_GSocketClient$MH, "glib_listautoptr_cleanup_GSocketClient");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketClient$MH() {
        return RuntimeHelper.requireNonNull(constants$929.glib_slistautoptr_cleanup_GSocketClient$MH,"glib_slistautoptr_cleanup_GSocketClient");
    }
    public static void glib_slistautoptr_cleanup_GSocketClient ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$929.glib_slistautoptr_cleanup_GSocketClient$MH, "glib_slistautoptr_cleanup_GSocketClient");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketClient$MH() {
        return RuntimeHelper.requireNonNull(constants$929.glib_queueautoptr_cleanup_GSocketClient$MH,"glib_queueautoptr_cleanup_GSocketClient");
    }
    public static void glib_queueautoptr_cleanup_GSocketClient ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$929.glib_queueautoptr_cleanup_GSocketClient$MH, "glib_queueautoptr_cleanup_GSocketClient");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketConnectable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnectable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnectable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnectable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketConnectable$MH() {
        return RuntimeHelper.requireNonNull(constants$929.glib_autoptr_clear_GSocketConnectable$MH,"glib_autoptr_clear_GSocketConnectable");
    }
    public static void glib_autoptr_clear_GSocketConnectable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$929.glib_autoptr_clear_GSocketConnectable$MH, "glib_autoptr_clear_GSocketConnectable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketConnectable$MH() {
        return RuntimeHelper.requireNonNull(constants$929.glib_autoptr_cleanup_GSocketConnectable$MH,"glib_autoptr_cleanup_GSocketConnectable");
    }
    public static void glib_autoptr_cleanup_GSocketConnectable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$929.glib_autoptr_cleanup_GSocketConnectable$MH, "glib_autoptr_cleanup_GSocketConnectable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketConnectable$MH() {
        return RuntimeHelper.requireNonNull(constants$929.glib_listautoptr_cleanup_GSocketConnectable$MH,"glib_listautoptr_cleanup_GSocketConnectable");
    }
    public static void glib_listautoptr_cleanup_GSocketConnectable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$929.glib_listautoptr_cleanup_GSocketConnectable$MH, "glib_listautoptr_cleanup_GSocketConnectable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketConnectable$MH() {
        return RuntimeHelper.requireNonNull(constants$929.glib_slistautoptr_cleanup_GSocketConnectable$MH,"glib_slistautoptr_cleanup_GSocketConnectable");
    }
    public static void glib_slistautoptr_cleanup_GSocketConnectable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$929.glib_slistautoptr_cleanup_GSocketConnectable$MH, "glib_slistautoptr_cleanup_GSocketConnectable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketConnectable$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_queueautoptr_cleanup_GSocketConnectable$MH,"glib_queueautoptr_cleanup_GSocketConnectable");
    }
    public static void glib_queueautoptr_cleanup_GSocketConnectable ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$930.glib_queueautoptr_cleanup_GSocketConnectable$MH, "glib_queueautoptr_cleanup_GSocketConnectable");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_autoptr_clear_GSocketConnection$MH,"glib_autoptr_clear_GSocketConnection");
    }
    public static void glib_autoptr_clear_GSocketConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$930.glib_autoptr_clear_GSocketConnection$MH, "glib_autoptr_clear_GSocketConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_autoptr_cleanup_GSocketConnection$MH,"glib_autoptr_cleanup_GSocketConnection");
    }
    public static void glib_autoptr_cleanup_GSocketConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$930.glib_autoptr_cleanup_GSocketConnection$MH, "glib_autoptr_cleanup_GSocketConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_listautoptr_cleanup_GSocketConnection$MH,"glib_listautoptr_cleanup_GSocketConnection");
    }
    public static void glib_listautoptr_cleanup_GSocketConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$930.glib_listautoptr_cleanup_GSocketConnection$MH, "glib_listautoptr_cleanup_GSocketConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_slistautoptr_cleanup_GSocketConnection$MH,"glib_slistautoptr_cleanup_GSocketConnection");
    }
    public static void glib_slistautoptr_cleanup_GSocketConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$930.glib_slistautoptr_cleanup_GSocketConnection$MH, "glib_slistautoptr_cleanup_GSocketConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_queueautoptr_cleanup_GSocketConnection$MH,"glib_queueautoptr_cleanup_GSocketConnection");
    }
    public static void glib_queueautoptr_cleanup_GSocketConnection ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$930.glib_queueautoptr_cleanup_GSocketConnection$MH, "glib_queueautoptr_cleanup_GSocketConnection");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketControlMessage_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketControlMessage_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketControlMessage_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketControlMessage_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketControlMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_autoptr_clear_GSocketControlMessage$MH,"glib_autoptr_clear_GSocketControlMessage");
    }
    public static void glib_autoptr_clear_GSocketControlMessage ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$931.glib_autoptr_clear_GSocketControlMessage$MH, "glib_autoptr_clear_GSocketControlMessage");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketControlMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_autoptr_cleanup_GSocketControlMessage$MH,"glib_autoptr_cleanup_GSocketControlMessage");
    }
    public static void glib_autoptr_cleanup_GSocketControlMessage ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$931.glib_autoptr_cleanup_GSocketControlMessage$MH, "glib_autoptr_cleanup_GSocketControlMessage");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketControlMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_listautoptr_cleanup_GSocketControlMessage$MH,"glib_listautoptr_cleanup_GSocketControlMessage");
    }
    public static void glib_listautoptr_cleanup_GSocketControlMessage ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$931.glib_listautoptr_cleanup_GSocketControlMessage$MH, "glib_listautoptr_cleanup_GSocketControlMessage");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketControlMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_slistautoptr_cleanup_GSocketControlMessage$MH,"glib_slistautoptr_cleanup_GSocketControlMessage");
    }
    public static void glib_slistautoptr_cleanup_GSocketControlMessage ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$931.glib_slistautoptr_cleanup_GSocketControlMessage$MH, "glib_slistautoptr_cleanup_GSocketControlMessage");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketControlMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_queueautoptr_cleanup_GSocketControlMessage$MH,"glib_queueautoptr_cleanup_GSocketControlMessage");
    }
    public static void glib_queueautoptr_cleanup_GSocketControlMessage ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$931.glib_queueautoptr_cleanup_GSocketControlMessage$MH, "glib_queueautoptr_cleanup_GSocketControlMessage");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocket_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocket_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocket_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocket_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocket$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_autoptr_clear_GSocket$MH,"glib_autoptr_clear_GSocket");
    }
    public static void glib_autoptr_clear_GSocket ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$931.glib_autoptr_clear_GSocket$MH, "glib_autoptr_clear_GSocket");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocket$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_autoptr_cleanup_GSocket$MH,"glib_autoptr_cleanup_GSocket");
    }
    public static void glib_autoptr_cleanup_GSocket ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$932.glib_autoptr_cleanup_GSocket$MH, "glib_autoptr_cleanup_GSocket");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocket$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_listautoptr_cleanup_GSocket$MH,"glib_listautoptr_cleanup_GSocket");
    }
    public static void glib_listautoptr_cleanup_GSocket ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$932.glib_listautoptr_cleanup_GSocket$MH, "glib_listautoptr_cleanup_GSocket");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocket$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_slistautoptr_cleanup_GSocket$MH,"glib_slistautoptr_cleanup_GSocket");
    }
    public static void glib_slistautoptr_cleanup_GSocket ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$932.glib_slistautoptr_cleanup_GSocket$MH, "glib_slistautoptr_cleanup_GSocket");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocket$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_queueautoptr_cleanup_GSocket$MH,"glib_queueautoptr_cleanup_GSocket");
    }
    public static void glib_queueautoptr_cleanup_GSocket ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$932.glib_queueautoptr_cleanup_GSocket$MH, "glib_queueautoptr_cleanup_GSocket");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketListener_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketListener_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketListener_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketListener_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketListener$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_autoptr_clear_GSocketListener$MH,"glib_autoptr_clear_GSocketListener");
    }
    public static void glib_autoptr_clear_GSocketListener ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$932.glib_autoptr_clear_GSocketListener$MH, "glib_autoptr_clear_GSocketListener");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


