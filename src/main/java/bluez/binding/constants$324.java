// Generated by jextract

package bluez.binding;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$324 {

    static final FunctionDescriptor g_allocator_new$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle g_allocator_new$MH = RuntimeHelper.downcallHandle(
        "g_allocator_new",
        constants$324.g_allocator_new$FUNC, false
    );
    static final FunctionDescriptor g_allocator_free$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_allocator_free$MH = RuntimeHelper.downcallHandle(
        "g_allocator_free",
        constants$324.g_allocator_free$FUNC, false
    );
    static final FunctionDescriptor g_list_push_allocator$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_list_push_allocator$MH = RuntimeHelper.downcallHandle(
        "g_list_push_allocator",
        constants$324.g_list_push_allocator$FUNC, false
    );
    static final FunctionDescriptor g_list_pop_allocator$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle g_list_pop_allocator$MH = RuntimeHelper.downcallHandle(
        "g_list_pop_allocator",
        constants$324.g_list_pop_allocator$FUNC, false
    );
    static final FunctionDescriptor g_slist_push_allocator$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_slist_push_allocator$MH = RuntimeHelper.downcallHandle(
        "g_slist_push_allocator",
        constants$324.g_slist_push_allocator$FUNC, false
    );
    static final FunctionDescriptor g_slist_pop_allocator$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle g_slist_pop_allocator$MH = RuntimeHelper.downcallHandle(
        "g_slist_pop_allocator",
        constants$324.g_slist_pop_allocator$FUNC, false
    );
}


