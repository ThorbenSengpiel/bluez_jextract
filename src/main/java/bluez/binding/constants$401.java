// Generated by jextract

package bluez.binding;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$401 {

    static final FunctionDescriptor glib_listautoptr_cleanup_GRefString$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_listautoptr_cleanup_GRefString$MH = RuntimeHelper.downcallHandle(
        "glib_listautoptr_cleanup_GRefString",
        constants$401.glib_listautoptr_cleanup_GRefString$FUNC, false
    );
    static final FunctionDescriptor glib_slistautoptr_cleanup_GRefString$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_slistautoptr_cleanup_GRefString$MH = RuntimeHelper.downcallHandle(
        "glib_slistautoptr_cleanup_GRefString",
        constants$401.glib_slistautoptr_cleanup_GRefString$FUNC, false
    );
    static final FunctionDescriptor glib_queueautoptr_cleanup_GRefString$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_queueautoptr_cleanup_GRefString$MH = RuntimeHelper.downcallHandle(
        "glib_queueautoptr_cleanup_GRefString",
        constants$401.glib_queueautoptr_cleanup_GRefString$FUNC, false
    );
    static final FunctionDescriptor g_type_init$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle g_type_init$MH = RuntimeHelper.downcallHandle(
        "g_type_init",
        constants$401.g_type_init$FUNC, false
    );
    static final FunctionDescriptor g_type_init_with_debug_flags$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle g_type_init_with_debug_flags$MH = RuntimeHelper.downcallHandle(
        "g_type_init_with_debug_flags",
        constants$401.g_type_init_with_debug_flags$FUNC, false
    );
    static final FunctionDescriptor g_type_name$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle g_type_name$MH = RuntimeHelper.downcallHandle(
        "g_type_name",
        constants$401.g_type_name$FUNC, false
    );
}


