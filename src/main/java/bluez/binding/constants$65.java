// Generated by jextract

package bluez.binding;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$65 {

    static final FunctionDescriptor sigsetmask$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle sigsetmask$MH = RuntimeHelper.downcallHandle(
        "sigsetmask",
        constants$65.sigsetmask$FUNC, false
    );
    static final FunctionDescriptor siggetmask$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT);
    static final MethodHandle siggetmask$MH = RuntimeHelper.downcallHandle(
        "siggetmask",
        constants$65.siggetmask$FUNC, false
    );
    static final FunctionDescriptor sig_t$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle sig_t$MH = RuntimeHelper.downcallHandle(
        constants$65.sig_t$FUNC, false
    );
    static final FunctionDescriptor sigemptyset$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle sigemptyset$MH = RuntimeHelper.downcallHandle(
        "sigemptyset",
        constants$65.sigemptyset$FUNC, false
    );
    static final FunctionDescriptor sigfillset$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle sigfillset$MH = RuntimeHelper.downcallHandle(
        "sigfillset",
        constants$65.sigfillset$FUNC, false
    );
}


