// Generated by jextract

package bluez.binding;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$25 {

    static final FunctionDescriptor g_error_matches$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle g_error_matches$MH = RuntimeHelper.downcallHandle(
        "g_error_matches",
        constants$25.g_error_matches$FUNC, false
    );
    static final FunctionDescriptor g_set_error$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_set_error$MH = RuntimeHelper.downcallHandle(
        "g_set_error",
        constants$25.g_set_error$FUNC, true
    );
    static final FunctionDescriptor g_set_error_literal$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_set_error_literal$MH = RuntimeHelper.downcallHandle(
        "g_set_error_literal",
        constants$25.g_set_error_literal$FUNC, false
    );
    static final FunctionDescriptor g_propagate_error$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_propagate_error$MH = RuntimeHelper.downcallHandle(
        "g_propagate_error",
        constants$25.g_propagate_error$FUNC, false
    );
    static final FunctionDescriptor g_clear_error$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_clear_error$MH = RuntimeHelper.downcallHandle(
        "g_clear_error",
        constants$25.g_clear_error$FUNC, false
    );
    static final FunctionDescriptor g_prefix_error$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_prefix_error$MH = RuntimeHelper.downcallHandle(
        "g_prefix_error",
        constants$25.g_prefix_error$FUNC, true
    );
}


