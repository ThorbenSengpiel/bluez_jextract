// Generated by jextract

package bluez.binding;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$26 {

    static final FunctionDescriptor g_propagate_prefixed_error$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_propagate_prefixed_error$MH = RuntimeHelper.downcallHandle(
        "g_propagate_prefixed_error",
        constants$26.g_propagate_prefixed_error$FUNC, true
    );
    static final FunctionDescriptor g_get_user_name$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle g_get_user_name$MH = RuntimeHelper.downcallHandle(
        "g_get_user_name",
        constants$26.g_get_user_name$FUNC, false
    );
    static final FunctionDescriptor g_get_real_name$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle g_get_real_name$MH = RuntimeHelper.downcallHandle(
        "g_get_real_name",
        constants$26.g_get_real_name$FUNC, false
    );
    static final FunctionDescriptor g_get_home_dir$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle g_get_home_dir$MH = RuntimeHelper.downcallHandle(
        "g_get_home_dir",
        constants$26.g_get_home_dir$FUNC, false
    );
    static final FunctionDescriptor g_get_tmp_dir$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle g_get_tmp_dir$MH = RuntimeHelper.downcallHandle(
        "g_get_tmp_dir",
        constants$26.g_get_tmp_dir$FUNC, false
    );
    static final FunctionDescriptor g_get_host_name$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle g_get_host_name$MH = RuntimeHelper.downcallHandle(
        "g_get_host_name",
        constants$26.g_get_host_name$FUNC, false
    );
}


