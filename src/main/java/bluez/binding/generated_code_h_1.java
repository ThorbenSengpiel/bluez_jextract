// Generated by jextract

package bluez.binding;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
 class generated_code_h_1 {

    public static MethodHandle g_checksum_type_get_length$MH() {
        return RuntimeHelper.requireNonNull(constants$81.g_checksum_type_get_length$MH,"g_checksum_type_get_length");
    }
    public static long g_checksum_type_get_length ( int checksum_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$81.g_checksum_type_get_length$MH, "g_checksum_type_get_length");
        try {
            return (long)mh$.invokeExact(checksum_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_checksum_new$MH() {
        return RuntimeHelper.requireNonNull(constants$82.g_checksum_new$MH,"g_checksum_new");
    }
    public static MemoryAddress g_checksum_new ( int checksum_type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$82.g_checksum_new$MH, "g_checksum_new");
        try {
            return (MemoryAddress)mh$.invokeExact(checksum_type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_checksum_reset$MH() {
        return RuntimeHelper.requireNonNull(constants$82.g_checksum_reset$MH,"g_checksum_reset");
    }
    public static void g_checksum_reset ( Addressable checksum) {
        var mh$ = RuntimeHelper.requireNonNull(constants$82.g_checksum_reset$MH, "g_checksum_reset");
        try {
            mh$.invokeExact(checksum);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_checksum_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$82.g_checksum_copy$MH,"g_checksum_copy");
    }
    public static MemoryAddress g_checksum_copy ( Addressable checksum) {
        var mh$ = RuntimeHelper.requireNonNull(constants$82.g_checksum_copy$MH, "g_checksum_copy");
        try {
            return (MemoryAddress)mh$.invokeExact(checksum);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_checksum_free$MH() {
        return RuntimeHelper.requireNonNull(constants$82.g_checksum_free$MH,"g_checksum_free");
    }
    public static void g_checksum_free ( Addressable checksum) {
        var mh$ = RuntimeHelper.requireNonNull(constants$82.g_checksum_free$MH, "g_checksum_free");
        try {
            mh$.invokeExact(checksum);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_checksum_update$MH() {
        return RuntimeHelper.requireNonNull(constants$82.g_checksum_update$MH,"g_checksum_update");
    }
    public static void g_checksum_update ( Addressable checksum,  Addressable data,  long length) {
        var mh$ = RuntimeHelper.requireNonNull(constants$82.g_checksum_update$MH, "g_checksum_update");
        try {
            mh$.invokeExact(checksum, data, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_checksum_get_string$MH() {
        return RuntimeHelper.requireNonNull(constants$82.g_checksum_get_string$MH,"g_checksum_get_string");
    }
    public static MemoryAddress g_checksum_get_string ( Addressable checksum) {
        var mh$ = RuntimeHelper.requireNonNull(constants$82.g_checksum_get_string$MH, "g_checksum_get_string");
        try {
            return (MemoryAddress)mh$.invokeExact(checksum);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_checksum_get_digest$MH() {
        return RuntimeHelper.requireNonNull(constants$83.g_checksum_get_digest$MH,"g_checksum_get_digest");
    }
    public static void g_checksum_get_digest ( Addressable checksum,  Addressable buffer,  Addressable digest_len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$83.g_checksum_get_digest$MH, "g_checksum_get_digest");
        try {
            mh$.invokeExact(checksum, buffer, digest_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_compute_checksum_for_data$MH() {
        return RuntimeHelper.requireNonNull(constants$83.g_compute_checksum_for_data$MH,"g_compute_checksum_for_data");
    }
    public static MemoryAddress g_compute_checksum_for_data ( int checksum_type,  Addressable data,  long length) {
        var mh$ = RuntimeHelper.requireNonNull(constants$83.g_compute_checksum_for_data$MH, "g_compute_checksum_for_data");
        try {
            return (MemoryAddress)mh$.invokeExact(checksum_type, data, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_compute_checksum_for_string$MH() {
        return RuntimeHelper.requireNonNull(constants$83.g_compute_checksum_for_string$MH,"g_compute_checksum_for_string");
    }
    public static MemoryAddress g_compute_checksum_for_string ( int checksum_type,  Addressable str,  long length) {
        var mh$ = RuntimeHelper.requireNonNull(constants$83.g_compute_checksum_for_string$MH, "g_compute_checksum_for_string");
        try {
            return (MemoryAddress)mh$.invokeExact(checksum_type, str, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_compute_checksum_for_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$83.g_compute_checksum_for_bytes$MH,"g_compute_checksum_for_bytes");
    }
    public static MemoryAddress g_compute_checksum_for_bytes ( int checksum_type,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$83.g_compute_checksum_for_bytes$MH, "g_compute_checksum_for_bytes");
        try {
            return (MemoryAddress)mh$.invokeExact(checksum_type, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_CONVERT_ERROR_NO_CONVERSION() {
        return (int)0L;
    }
    public static int G_CONVERT_ERROR_ILLEGAL_SEQUENCE() {
        return (int)1L;
    }
    public static int G_CONVERT_ERROR_FAILED() {
        return (int)2L;
    }
    public static int G_CONVERT_ERROR_PARTIAL_INPUT() {
        return (int)3L;
    }
    public static int G_CONVERT_ERROR_BAD_URI() {
        return (int)4L;
    }
    public static int G_CONVERT_ERROR_NOT_ABSOLUTE_PATH() {
        return (int)5L;
    }
    public static int G_CONVERT_ERROR_NO_MEMORY() {
        return (int)6L;
    }
    public static int G_CONVERT_ERROR_EMBEDDED_NUL() {
        return (int)7L;
    }
    public static MethodHandle g_convert_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$83.g_convert_error_quark$MH,"g_convert_error_quark");
    }
    public static int g_convert_error_quark () {
        var mh$ = RuntimeHelper.requireNonNull(constants$83.g_convert_error_quark$MH, "g_convert_error_quark");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GIConv = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle g_iconv_open$MH() {
        return RuntimeHelper.requireNonNull(constants$83.g_iconv_open$MH,"g_iconv_open");
    }
    public static MemoryAddress g_iconv_open ( Addressable to_codeset,  Addressable from_codeset) {
        var mh$ = RuntimeHelper.requireNonNull(constants$83.g_iconv_open$MH, "g_iconv_open");
        try {
            return (MemoryAddress)mh$.invokeExact(to_codeset, from_codeset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_iconv$MH() {
        return RuntimeHelper.requireNonNull(constants$84.g_iconv$MH,"g_iconv");
    }
    public static long g_iconv ( Addressable converter,  Addressable inbuf,  Addressable inbytes_left,  Addressable outbuf,  Addressable outbytes_left) {
        var mh$ = RuntimeHelper.requireNonNull(constants$84.g_iconv$MH, "g_iconv");
        try {
            return (long)mh$.invokeExact(converter, inbuf, inbytes_left, outbuf, outbytes_left);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_iconv_close$MH() {
        return RuntimeHelper.requireNonNull(constants$84.g_iconv_close$MH,"g_iconv_close");
    }
    public static int g_iconv_close ( Addressable converter) {
        var mh$ = RuntimeHelper.requireNonNull(constants$84.g_iconv_close$MH, "g_iconv_close");
        try {
            return (int)mh$.invokeExact(converter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_convert$MH() {
        return RuntimeHelper.requireNonNull(constants$84.g_convert$MH,"g_convert");
    }
    public static MemoryAddress g_convert ( Addressable str,  long len,  Addressable to_codeset,  Addressable from_codeset,  Addressable bytes_read,  Addressable bytes_written,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$84.g_convert$MH, "g_convert");
        try {
            return (MemoryAddress)mh$.invokeExact(str, len, to_codeset, from_codeset, bytes_read, bytes_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_convert_with_iconv$MH() {
        return RuntimeHelper.requireNonNull(constants$84.g_convert_with_iconv$MH,"g_convert_with_iconv");
    }
    public static MemoryAddress g_convert_with_iconv ( Addressable str,  long len,  Addressable converter,  Addressable bytes_read,  Addressable bytes_written,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$84.g_convert_with_iconv$MH, "g_convert_with_iconv");
        try {
            return (MemoryAddress)mh$.invokeExact(str, len, converter, bytes_read, bytes_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_convert_with_fallback$MH() {
        return RuntimeHelper.requireNonNull(constants$84.g_convert_with_fallback$MH,"g_convert_with_fallback");
    }
    public static MemoryAddress g_convert_with_fallback ( Addressable str,  long len,  Addressable to_codeset,  Addressable from_codeset,  Addressable fallback,  Addressable bytes_read,  Addressable bytes_written,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$84.g_convert_with_fallback$MH, "g_convert_with_fallback");
        try {
            return (MemoryAddress)mh$.invokeExact(str, len, to_codeset, from_codeset, fallback, bytes_read, bytes_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_locale_to_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$84.g_locale_to_utf8$MH,"g_locale_to_utf8");
    }
    public static MemoryAddress g_locale_to_utf8 ( Addressable opsysstring,  long len,  Addressable bytes_read,  Addressable bytes_written,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$84.g_locale_to_utf8$MH, "g_locale_to_utf8");
        try {
            return (MemoryAddress)mh$.invokeExact(opsysstring, len, bytes_read, bytes_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_locale_from_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$85.g_locale_from_utf8$MH,"g_locale_from_utf8");
    }
    public static MemoryAddress g_locale_from_utf8 ( Addressable utf8string,  long len,  Addressable bytes_read,  Addressable bytes_written,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$85.g_locale_from_utf8$MH, "g_locale_from_utf8");
        try {
            return (MemoryAddress)mh$.invokeExact(utf8string, len, bytes_read, bytes_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filename_to_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$85.g_filename_to_utf8$MH,"g_filename_to_utf8");
    }
    public static MemoryAddress g_filename_to_utf8 ( Addressable opsysstring,  long len,  Addressable bytes_read,  Addressable bytes_written,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$85.g_filename_to_utf8$MH, "g_filename_to_utf8");
        try {
            return (MemoryAddress)mh$.invokeExact(opsysstring, len, bytes_read, bytes_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filename_from_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$85.g_filename_from_utf8$MH,"g_filename_from_utf8");
    }
    public static MemoryAddress g_filename_from_utf8 ( Addressable utf8string,  long len,  Addressable bytes_read,  Addressable bytes_written,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$85.g_filename_from_utf8$MH, "g_filename_from_utf8");
        try {
            return (MemoryAddress)mh$.invokeExact(utf8string, len, bytes_read, bytes_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filename_from_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$85.g_filename_from_uri$MH,"g_filename_from_uri");
    }
    public static MemoryAddress g_filename_from_uri ( Addressable uri,  Addressable hostname,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$85.g_filename_from_uri$MH, "g_filename_from_uri");
        try {
            return (MemoryAddress)mh$.invokeExact(uri, hostname, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filename_to_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$85.g_filename_to_uri$MH,"g_filename_to_uri");
    }
    public static MemoryAddress g_filename_to_uri ( Addressable filename,  Addressable hostname,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$85.g_filename_to_uri$MH, "g_filename_to_uri");
        try {
            return (MemoryAddress)mh$.invokeExact(filename, hostname, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filename_display_name$MH() {
        return RuntimeHelper.requireNonNull(constants$85.g_filename_display_name$MH,"g_filename_display_name");
    }
    public static MemoryAddress g_filename_display_name ( Addressable filename) {
        var mh$ = RuntimeHelper.requireNonNull(constants$85.g_filename_display_name$MH, "g_filename_display_name");
        try {
            return (MemoryAddress)mh$.invokeExact(filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_get_filename_charsets$MH() {
        return RuntimeHelper.requireNonNull(constants$86.g_get_filename_charsets$MH,"g_get_filename_charsets");
    }
    public static int g_get_filename_charsets ( Addressable filename_charsets) {
        var mh$ = RuntimeHelper.requireNonNull(constants$86.g_get_filename_charsets$MH, "g_get_filename_charsets");
        try {
            return (int)mh$.invokeExact(filename_charsets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_filename_display_basename$MH() {
        return RuntimeHelper.requireNonNull(constants$86.g_filename_display_basename$MH,"g_filename_display_basename");
    }
    public static MemoryAddress g_filename_display_basename ( Addressable filename) {
        var mh$ = RuntimeHelper.requireNonNull(constants$86.g_filename_display_basename$MH, "g_filename_display_basename");
        try {
            return (MemoryAddress)mh$.invokeExact(filename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_uri_list_extract_uris$MH() {
        return RuntimeHelper.requireNonNull(constants$86.g_uri_list_extract_uris$MH,"g_uri_list_extract_uris");
    }
    public static MemoryAddress g_uri_list_extract_uris ( Addressable uri_list) {
        var mh$ = RuntimeHelper.requireNonNull(constants$86.g_uri_list_extract_uris$MH, "g_uri_list_extract_uris");
        try {
            return (MemoryAddress)mh$.invokeExact(uri_list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_datalist_init$MH() {
        return RuntimeHelper.requireNonNull(constants$86.g_datalist_init$MH,"g_datalist_init");
    }
    public static void g_datalist_init ( Addressable datalist) {
        var mh$ = RuntimeHelper.requireNonNull(constants$86.g_datalist_init$MH, "g_datalist_init");
        try {
            mh$.invokeExact(datalist);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_datalist_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$87.g_datalist_clear$MH,"g_datalist_clear");
    }
    public static void g_datalist_clear ( Addressable datalist) {
        var mh$ = RuntimeHelper.requireNonNull(constants$87.g_datalist_clear$MH, "g_datalist_clear");
        try {
            mh$.invokeExact(datalist);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_datalist_id_get_data$MH() {
        return RuntimeHelper.requireNonNull(constants$87.g_datalist_id_get_data$MH,"g_datalist_id_get_data");
    }
    public static MemoryAddress g_datalist_id_get_data ( Addressable datalist,  int key_id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$87.g_datalist_id_get_data$MH, "g_datalist_id_get_data");
        try {
            return (MemoryAddress)mh$.invokeExact(datalist, key_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_datalist_id_set_data_full$MH() {
        return RuntimeHelper.requireNonNull(constants$87.g_datalist_id_set_data_full$MH,"g_datalist_id_set_data_full");
    }
    public static void g_datalist_id_set_data_full ( Addressable datalist,  int key_id,  Addressable data,  Addressable destroy_func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$87.g_datalist_id_set_data_full$MH, "g_datalist_id_set_data_full");
        try {
            mh$.invokeExact(datalist, key_id, data, destroy_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_datalist_id_dup_data$MH() {
        return RuntimeHelper.requireNonNull(constants$87.g_datalist_id_dup_data$MH,"g_datalist_id_dup_data");
    }
    public static MemoryAddress g_datalist_id_dup_data ( Addressable datalist,  int key_id,  Addressable dup_func,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$87.g_datalist_id_dup_data$MH, "g_datalist_id_dup_data");
        try {
            return (MemoryAddress)mh$.invokeExact(datalist, key_id, dup_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_datalist_id_replace_data$MH() {
        return RuntimeHelper.requireNonNull(constants$88.g_datalist_id_replace_data$MH,"g_datalist_id_replace_data");
    }
    public static int g_datalist_id_replace_data ( Addressable datalist,  int key_id,  Addressable oldval,  Addressable newval,  Addressable destroy,  Addressable old_destroy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$88.g_datalist_id_replace_data$MH, "g_datalist_id_replace_data");
        try {
            return (int)mh$.invokeExact(datalist, key_id, oldval, newval, destroy, old_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_datalist_id_remove_no_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$88.g_datalist_id_remove_no_notify$MH,"g_datalist_id_remove_no_notify");
    }
    public static MemoryAddress g_datalist_id_remove_no_notify ( Addressable datalist,  int key_id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$88.g_datalist_id_remove_no_notify$MH, "g_datalist_id_remove_no_notify");
        try {
            return (MemoryAddress)mh$.invokeExact(datalist, key_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_datalist_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$88.g_datalist_foreach$MH,"g_datalist_foreach");
    }
    public static void g_datalist_foreach ( Addressable datalist,  Addressable func,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$88.g_datalist_foreach$MH, "g_datalist_foreach");
        try {
            mh$.invokeExact(datalist, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_datalist_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$88.g_datalist_set_flags$MH,"g_datalist_set_flags");
    }
    public static void g_datalist_set_flags ( Addressable datalist,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$88.g_datalist_set_flags$MH, "g_datalist_set_flags");
        try {
            mh$.invokeExact(datalist, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_datalist_unset_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$88.g_datalist_unset_flags$MH,"g_datalist_unset_flags");
    }
    public static void g_datalist_unset_flags ( Addressable datalist,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$88.g_datalist_unset_flags$MH, "g_datalist_unset_flags");
        try {
            mh$.invokeExact(datalist, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_datalist_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$88.g_datalist_get_flags$MH,"g_datalist_get_flags");
    }
    public static int g_datalist_get_flags ( Addressable datalist) {
        var mh$ = RuntimeHelper.requireNonNull(constants$88.g_datalist_get_flags$MH, "g_datalist_get_flags");
        try {
            return (int)mh$.invokeExact(datalist);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dataset_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$89.g_dataset_destroy$MH,"g_dataset_destroy");
    }
    public static void g_dataset_destroy ( Addressable dataset_location) {
        var mh$ = RuntimeHelper.requireNonNull(constants$89.g_dataset_destroy$MH, "g_dataset_destroy");
        try {
            mh$.invokeExact(dataset_location);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dataset_id_get_data$MH() {
        return RuntimeHelper.requireNonNull(constants$89.g_dataset_id_get_data$MH,"g_dataset_id_get_data");
    }
    public static MemoryAddress g_dataset_id_get_data ( Addressable dataset_location,  int key_id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$89.g_dataset_id_get_data$MH, "g_dataset_id_get_data");
        try {
            return (MemoryAddress)mh$.invokeExact(dataset_location, key_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_datalist_get_data$MH() {
        return RuntimeHelper.requireNonNull(constants$89.g_datalist_get_data$MH,"g_datalist_get_data");
    }
    public static MemoryAddress g_datalist_get_data ( Addressable datalist,  Addressable key) {
        var mh$ = RuntimeHelper.requireNonNull(constants$89.g_datalist_get_data$MH, "g_datalist_get_data");
        try {
            return (MemoryAddress)mh$.invokeExact(datalist, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dataset_id_set_data_full$MH() {
        return RuntimeHelper.requireNonNull(constants$89.g_dataset_id_set_data_full$MH,"g_dataset_id_set_data_full");
    }
    public static void g_dataset_id_set_data_full ( Addressable dataset_location,  int key_id,  Addressable data,  Addressable destroy_func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$89.g_dataset_id_set_data_full$MH, "g_dataset_id_set_data_full");
        try {
            mh$.invokeExact(dataset_location, key_id, data, destroy_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dataset_id_remove_no_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$89.g_dataset_id_remove_no_notify$MH,"g_dataset_id_remove_no_notify");
    }
    public static MemoryAddress g_dataset_id_remove_no_notify ( Addressable dataset_location,  int key_id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$89.g_dataset_id_remove_no_notify$MH, "g_dataset_id_remove_no_notify");
        try {
            return (MemoryAddress)mh$.invokeExact(dataset_location, key_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dataset_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$89.g_dataset_foreach$MH,"g_dataset_foreach");
    }
    public static void g_dataset_foreach ( Addressable dataset_location,  Addressable func,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$89.g_dataset_foreach$MH, "g_dataset_foreach");
        try {
            mh$.invokeExact(dataset_location, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfInt GTime = Constants$root.C_INT$LAYOUT;
    public static int G_DATE_DAY() {
        return (int)0L;
    }
    public static int G_DATE_MONTH() {
        return (int)1L;
    }
    public static int G_DATE_YEAR() {
        return (int)2L;
    }
    public static int G_DATE_BAD_WEEKDAY() {
        return (int)0L;
    }
    public static int G_DATE_MONDAY() {
        return (int)1L;
    }
    public static int G_DATE_TUESDAY() {
        return (int)2L;
    }
    public static int G_DATE_WEDNESDAY() {
        return (int)3L;
    }
    public static int G_DATE_THURSDAY() {
        return (int)4L;
    }
    public static int G_DATE_FRIDAY() {
        return (int)5L;
    }
    public static int G_DATE_SATURDAY() {
        return (int)6L;
    }
    public static int G_DATE_SUNDAY() {
        return (int)7L;
    }
    public static int G_DATE_BAD_MONTH() {
        return (int)0L;
    }
    public static int G_DATE_JANUARY() {
        return (int)1L;
    }
    public static int G_DATE_FEBRUARY() {
        return (int)2L;
    }
    public static int G_DATE_MARCH() {
        return (int)3L;
    }
    public static int G_DATE_APRIL() {
        return (int)4L;
    }
    public static int G_DATE_MAY() {
        return (int)5L;
    }
    public static int G_DATE_JUNE() {
        return (int)6L;
    }
    public static int G_DATE_JULY() {
        return (int)7L;
    }
    public static int G_DATE_AUGUST() {
        return (int)8L;
    }
    public static int G_DATE_SEPTEMBER() {
        return (int)9L;
    }
    public static int G_DATE_OCTOBER() {
        return (int)10L;
    }
    public static int G_DATE_NOVEMBER() {
        return (int)11L;
    }
    public static int G_DATE_DECEMBER() {
        return (int)12L;
    }
    public static MethodHandle g_date_new$MH() {
        return RuntimeHelper.requireNonNull(constants$90.g_date_new$MH,"g_date_new");
    }
    public static MemoryAddress g_date_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$90.g_date_new$MH, "g_date_new");
        try {
            return (MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_new_dmy$MH() {
        return RuntimeHelper.requireNonNull(constants$90.g_date_new_dmy$MH,"g_date_new_dmy");
    }
    public static MemoryAddress g_date_new_dmy ( byte day,  int month,  short year) {
        var mh$ = RuntimeHelper.requireNonNull(constants$90.g_date_new_dmy$MH, "g_date_new_dmy");
        try {
            return (MemoryAddress)mh$.invokeExact(day, month, year);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_new_julian$MH() {
        return RuntimeHelper.requireNonNull(constants$90.g_date_new_julian$MH,"g_date_new_julian");
    }
    public static MemoryAddress g_date_new_julian ( int julian_day) {
        var mh$ = RuntimeHelper.requireNonNull(constants$90.g_date_new_julian$MH, "g_date_new_julian");
        try {
            return (MemoryAddress)mh$.invokeExact(julian_day);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_free$MH() {
        return RuntimeHelper.requireNonNull(constants$90.g_date_free$MH,"g_date_free");
    }
    public static void g_date_free ( Addressable date) {
        var mh$ = RuntimeHelper.requireNonNull(constants$90.g_date_free$MH, "g_date_free");
        try {
            mh$.invokeExact(date);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$90.g_date_copy$MH,"g_date_copy");
    }
    public static MemoryAddress g_date_copy ( Addressable date) {
        var mh$ = RuntimeHelper.requireNonNull(constants$90.g_date_copy$MH, "g_date_copy");
        try {
            return (MemoryAddress)mh$.invokeExact(date);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$90.g_date_valid$MH,"g_date_valid");
    }
    public static int g_date_valid ( Addressable date) {
        var mh$ = RuntimeHelper.requireNonNull(constants$90.g_date_valid$MH, "g_date_valid");
        try {
            return (int)mh$.invokeExact(date);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_valid_day$MH() {
        return RuntimeHelper.requireNonNull(constants$91.g_date_valid_day$MH,"g_date_valid_day");
    }
    public static int g_date_valid_day ( byte day) {
        var mh$ = RuntimeHelper.requireNonNull(constants$91.g_date_valid_day$MH, "g_date_valid_day");
        try {
            return (int)mh$.invokeExact(day);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_valid_month$MH() {
        return RuntimeHelper.requireNonNull(constants$91.g_date_valid_month$MH,"g_date_valid_month");
    }
    public static int g_date_valid_month ( int month) {
        var mh$ = RuntimeHelper.requireNonNull(constants$91.g_date_valid_month$MH, "g_date_valid_month");
        try {
            return (int)mh$.invokeExact(month);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_valid_year$MH() {
        return RuntimeHelper.requireNonNull(constants$91.g_date_valid_year$MH,"g_date_valid_year");
    }
    public static int g_date_valid_year ( short year) {
        var mh$ = RuntimeHelper.requireNonNull(constants$91.g_date_valid_year$MH, "g_date_valid_year");
        try {
            return (int)mh$.invokeExact(year);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_valid_weekday$MH() {
        return RuntimeHelper.requireNonNull(constants$91.g_date_valid_weekday$MH,"g_date_valid_weekday");
    }
    public static int g_date_valid_weekday ( int weekday) {
        var mh$ = RuntimeHelper.requireNonNull(constants$91.g_date_valid_weekday$MH, "g_date_valid_weekday");
        try {
            return (int)mh$.invokeExact(weekday);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_valid_julian$MH() {
        return RuntimeHelper.requireNonNull(constants$91.g_date_valid_julian$MH,"g_date_valid_julian");
    }
    public static int g_date_valid_julian ( int julian_date) {
        var mh$ = RuntimeHelper.requireNonNull(constants$91.g_date_valid_julian$MH, "g_date_valid_julian");
        try {
            return (int)mh$.invokeExact(julian_date);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_valid_dmy$MH() {
        return RuntimeHelper.requireNonNull(constants$91.g_date_valid_dmy$MH,"g_date_valid_dmy");
    }
    public static int g_date_valid_dmy ( byte day,  int month,  short year) {
        var mh$ = RuntimeHelper.requireNonNull(constants$91.g_date_valid_dmy$MH, "g_date_valid_dmy");
        try {
            return (int)mh$.invokeExact(day, month, year);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_get_weekday$MH() {
        return RuntimeHelper.requireNonNull(constants$92.g_date_get_weekday$MH,"g_date_get_weekday");
    }
    public static int g_date_get_weekday ( Addressable date) {
        var mh$ = RuntimeHelper.requireNonNull(constants$92.g_date_get_weekday$MH, "g_date_get_weekday");
        try {
            return (int)mh$.invokeExact(date);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_get_month$MH() {
        return RuntimeHelper.requireNonNull(constants$92.g_date_get_month$MH,"g_date_get_month");
    }
    public static int g_date_get_month ( Addressable date) {
        var mh$ = RuntimeHelper.requireNonNull(constants$92.g_date_get_month$MH, "g_date_get_month");
        try {
            return (int)mh$.invokeExact(date);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_get_year$MH() {
        return RuntimeHelper.requireNonNull(constants$92.g_date_get_year$MH,"g_date_get_year");
    }
    public static short g_date_get_year ( Addressable date) {
        var mh$ = RuntimeHelper.requireNonNull(constants$92.g_date_get_year$MH, "g_date_get_year");
        try {
            return (short)mh$.invokeExact(date);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_get_day$MH() {
        return RuntimeHelper.requireNonNull(constants$92.g_date_get_day$MH,"g_date_get_day");
    }
    public static byte g_date_get_day ( Addressable date) {
        var mh$ = RuntimeHelper.requireNonNull(constants$92.g_date_get_day$MH, "g_date_get_day");
        try {
            return (byte)mh$.invokeExact(date);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_get_julian$MH() {
        return RuntimeHelper.requireNonNull(constants$92.g_date_get_julian$MH,"g_date_get_julian");
    }
    public static int g_date_get_julian ( Addressable date) {
        var mh$ = RuntimeHelper.requireNonNull(constants$92.g_date_get_julian$MH, "g_date_get_julian");
        try {
            return (int)mh$.invokeExact(date);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_get_day_of_year$MH() {
        return RuntimeHelper.requireNonNull(constants$92.g_date_get_day_of_year$MH,"g_date_get_day_of_year");
    }
    public static int g_date_get_day_of_year ( Addressable date) {
        var mh$ = RuntimeHelper.requireNonNull(constants$92.g_date_get_day_of_year$MH, "g_date_get_day_of_year");
        try {
            return (int)mh$.invokeExact(date);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_get_monday_week_of_year$MH() {
        return RuntimeHelper.requireNonNull(constants$93.g_date_get_monday_week_of_year$MH,"g_date_get_monday_week_of_year");
    }
    public static int g_date_get_monday_week_of_year ( Addressable date) {
        var mh$ = RuntimeHelper.requireNonNull(constants$93.g_date_get_monday_week_of_year$MH, "g_date_get_monday_week_of_year");
        try {
            return (int)mh$.invokeExact(date);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_get_sunday_week_of_year$MH() {
        return RuntimeHelper.requireNonNull(constants$93.g_date_get_sunday_week_of_year$MH,"g_date_get_sunday_week_of_year");
    }
    public static int g_date_get_sunday_week_of_year ( Addressable date) {
        var mh$ = RuntimeHelper.requireNonNull(constants$93.g_date_get_sunday_week_of_year$MH, "g_date_get_sunday_week_of_year");
        try {
            return (int)mh$.invokeExact(date);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_get_iso8601_week_of_year$MH() {
        return RuntimeHelper.requireNonNull(constants$93.g_date_get_iso8601_week_of_year$MH,"g_date_get_iso8601_week_of_year");
    }
    public static int g_date_get_iso8601_week_of_year ( Addressable date) {
        var mh$ = RuntimeHelper.requireNonNull(constants$93.g_date_get_iso8601_week_of_year$MH, "g_date_get_iso8601_week_of_year");
        try {
            return (int)mh$.invokeExact(date);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$93.g_date_clear$MH,"g_date_clear");
    }
    public static void g_date_clear ( Addressable date,  int n_dates) {
        var mh$ = RuntimeHelper.requireNonNull(constants$93.g_date_clear$MH, "g_date_clear");
        try {
            mh$.invokeExact(date, n_dates);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_set_parse$MH() {
        return RuntimeHelper.requireNonNull(constants$93.g_date_set_parse$MH,"g_date_set_parse");
    }
    public static void g_date_set_parse ( Addressable date,  Addressable str) {
        var mh$ = RuntimeHelper.requireNonNull(constants$93.g_date_set_parse$MH, "g_date_set_parse");
        try {
            mh$.invokeExact(date, str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_set_time_t$MH() {
        return RuntimeHelper.requireNonNull(constants$93.g_date_set_time_t$MH,"g_date_set_time_t");
    }
    public static void g_date_set_time_t ( Addressable date,  long timet) {
        var mh$ = RuntimeHelper.requireNonNull(constants$93.g_date_set_time_t$MH, "g_date_set_time_t");
        try {
            mh$.invokeExact(date, timet);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_set_time_val$MH() {
        return RuntimeHelper.requireNonNull(constants$94.g_date_set_time_val$MH,"g_date_set_time_val");
    }
    public static void g_date_set_time_val ( Addressable date,  Addressable timeval) {
        var mh$ = RuntimeHelper.requireNonNull(constants$94.g_date_set_time_val$MH, "g_date_set_time_val");
        try {
            mh$.invokeExact(date, timeval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_set_time$MH() {
        return RuntimeHelper.requireNonNull(constants$94.g_date_set_time$MH,"g_date_set_time");
    }
    public static void g_date_set_time ( Addressable date,  int time_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$94.g_date_set_time$MH, "g_date_set_time");
        try {
            mh$.invokeExact(date, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_set_month$MH() {
        return RuntimeHelper.requireNonNull(constants$94.g_date_set_month$MH,"g_date_set_month");
    }
    public static void g_date_set_month ( Addressable date,  int month) {
        var mh$ = RuntimeHelper.requireNonNull(constants$94.g_date_set_month$MH, "g_date_set_month");
        try {
            mh$.invokeExact(date, month);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_set_day$MH() {
        return RuntimeHelper.requireNonNull(constants$94.g_date_set_day$MH,"g_date_set_day");
    }
    public static void g_date_set_day ( Addressable date,  byte day) {
        var mh$ = RuntimeHelper.requireNonNull(constants$94.g_date_set_day$MH, "g_date_set_day");
        try {
            mh$.invokeExact(date, day);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_set_year$MH() {
        return RuntimeHelper.requireNonNull(constants$94.g_date_set_year$MH,"g_date_set_year");
    }
    public static void g_date_set_year ( Addressable date,  short year) {
        var mh$ = RuntimeHelper.requireNonNull(constants$94.g_date_set_year$MH, "g_date_set_year");
        try {
            mh$.invokeExact(date, year);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_set_dmy$MH() {
        return RuntimeHelper.requireNonNull(constants$94.g_date_set_dmy$MH,"g_date_set_dmy");
    }
    public static void g_date_set_dmy ( Addressable date,  byte day,  int month,  short y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$94.g_date_set_dmy$MH, "g_date_set_dmy");
        try {
            mh$.invokeExact(date, day, month, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_set_julian$MH() {
        return RuntimeHelper.requireNonNull(constants$95.g_date_set_julian$MH,"g_date_set_julian");
    }
    public static void g_date_set_julian ( Addressable date,  int julian_date) {
        var mh$ = RuntimeHelper.requireNonNull(constants$95.g_date_set_julian$MH, "g_date_set_julian");
        try {
            mh$.invokeExact(date, julian_date);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_is_first_of_month$MH() {
        return RuntimeHelper.requireNonNull(constants$95.g_date_is_first_of_month$MH,"g_date_is_first_of_month");
    }
    public static int g_date_is_first_of_month ( Addressable date) {
        var mh$ = RuntimeHelper.requireNonNull(constants$95.g_date_is_first_of_month$MH, "g_date_is_first_of_month");
        try {
            return (int)mh$.invokeExact(date);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_is_last_of_month$MH() {
        return RuntimeHelper.requireNonNull(constants$95.g_date_is_last_of_month$MH,"g_date_is_last_of_month");
    }
    public static int g_date_is_last_of_month ( Addressable date) {
        var mh$ = RuntimeHelper.requireNonNull(constants$95.g_date_is_last_of_month$MH, "g_date_is_last_of_month");
        try {
            return (int)mh$.invokeExact(date);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_add_days$MH() {
        return RuntimeHelper.requireNonNull(constants$95.g_date_add_days$MH,"g_date_add_days");
    }
    public static void g_date_add_days ( Addressable date,  int n_days) {
        var mh$ = RuntimeHelper.requireNonNull(constants$95.g_date_add_days$MH, "g_date_add_days");
        try {
            mh$.invokeExact(date, n_days);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_subtract_days$MH() {
        return RuntimeHelper.requireNonNull(constants$95.g_date_subtract_days$MH,"g_date_subtract_days");
    }
    public static void g_date_subtract_days ( Addressable date,  int n_days) {
        var mh$ = RuntimeHelper.requireNonNull(constants$95.g_date_subtract_days$MH, "g_date_subtract_days");
        try {
            mh$.invokeExact(date, n_days);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_add_months$MH() {
        return RuntimeHelper.requireNonNull(constants$95.g_date_add_months$MH,"g_date_add_months");
    }
    public static void g_date_add_months ( Addressable date,  int n_months) {
        var mh$ = RuntimeHelper.requireNonNull(constants$95.g_date_add_months$MH, "g_date_add_months");
        try {
            mh$.invokeExact(date, n_months);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_subtract_months$MH() {
        return RuntimeHelper.requireNonNull(constants$96.g_date_subtract_months$MH,"g_date_subtract_months");
    }
    public static void g_date_subtract_months ( Addressable date,  int n_months) {
        var mh$ = RuntimeHelper.requireNonNull(constants$96.g_date_subtract_months$MH, "g_date_subtract_months");
        try {
            mh$.invokeExact(date, n_months);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_add_years$MH() {
        return RuntimeHelper.requireNonNull(constants$96.g_date_add_years$MH,"g_date_add_years");
    }
    public static void g_date_add_years ( Addressable date,  int n_years) {
        var mh$ = RuntimeHelper.requireNonNull(constants$96.g_date_add_years$MH, "g_date_add_years");
        try {
            mh$.invokeExact(date, n_years);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_subtract_years$MH() {
        return RuntimeHelper.requireNonNull(constants$96.g_date_subtract_years$MH,"g_date_subtract_years");
    }
    public static void g_date_subtract_years ( Addressable date,  int n_years) {
        var mh$ = RuntimeHelper.requireNonNull(constants$96.g_date_subtract_years$MH, "g_date_subtract_years");
        try {
            mh$.invokeExact(date, n_years);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_is_leap_year$MH() {
        return RuntimeHelper.requireNonNull(constants$96.g_date_is_leap_year$MH,"g_date_is_leap_year");
    }
    public static int g_date_is_leap_year ( short year) {
        var mh$ = RuntimeHelper.requireNonNull(constants$96.g_date_is_leap_year$MH, "g_date_is_leap_year");
        try {
            return (int)mh$.invokeExact(year);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_get_days_in_month$MH() {
        return RuntimeHelper.requireNonNull(constants$96.g_date_get_days_in_month$MH,"g_date_get_days_in_month");
    }
    public static byte g_date_get_days_in_month ( int month,  short year) {
        var mh$ = RuntimeHelper.requireNonNull(constants$96.g_date_get_days_in_month$MH, "g_date_get_days_in_month");
        try {
            return (byte)mh$.invokeExact(month, year);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_get_monday_weeks_in_year$MH() {
        return RuntimeHelper.requireNonNull(constants$96.g_date_get_monday_weeks_in_year$MH,"g_date_get_monday_weeks_in_year");
    }
    public static byte g_date_get_monday_weeks_in_year ( short year) {
        var mh$ = RuntimeHelper.requireNonNull(constants$96.g_date_get_monday_weeks_in_year$MH, "g_date_get_monday_weeks_in_year");
        try {
            return (byte)mh$.invokeExact(year);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_get_sunday_weeks_in_year$MH() {
        return RuntimeHelper.requireNonNull(constants$97.g_date_get_sunday_weeks_in_year$MH,"g_date_get_sunday_weeks_in_year");
    }
    public static byte g_date_get_sunday_weeks_in_year ( short year) {
        var mh$ = RuntimeHelper.requireNonNull(constants$97.g_date_get_sunday_weeks_in_year$MH, "g_date_get_sunday_weeks_in_year");
        try {
            return (byte)mh$.invokeExact(year);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_days_between$MH() {
        return RuntimeHelper.requireNonNull(constants$97.g_date_days_between$MH,"g_date_days_between");
    }
    public static int g_date_days_between ( Addressable date1,  Addressable date2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$97.g_date_days_between$MH, "g_date_days_between");
        try {
            return (int)mh$.invokeExact(date1, date2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_compare$MH() {
        return RuntimeHelper.requireNonNull(constants$97.g_date_compare$MH,"g_date_compare");
    }
    public static int g_date_compare ( Addressable lhs,  Addressable rhs) {
        var mh$ = RuntimeHelper.requireNonNull(constants$97.g_date_compare$MH, "g_date_compare");
        try {
            return (int)mh$.invokeExact(lhs, rhs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_to_struct_tm$MH() {
        return RuntimeHelper.requireNonNull(constants$97.g_date_to_struct_tm$MH,"g_date_to_struct_tm");
    }
    public static void g_date_to_struct_tm ( Addressable date,  Addressable tm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$97.g_date_to_struct_tm$MH, "g_date_to_struct_tm");
        try {
            mh$.invokeExact(date, tm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_clamp$MH() {
        return RuntimeHelper.requireNonNull(constants$97.g_date_clamp$MH,"g_date_clamp");
    }
    public static void g_date_clamp ( Addressable date,  Addressable min_date,  Addressable max_date) {
        var mh$ = RuntimeHelper.requireNonNull(constants$97.g_date_clamp$MH, "g_date_clamp");
        try {
            mh$.invokeExact(date, min_date, max_date);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_order$MH() {
        return RuntimeHelper.requireNonNull(constants$97.g_date_order$MH,"g_date_order");
    }
    public static void g_date_order ( Addressable date1,  Addressable date2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$97.g_date_order$MH, "g_date_order");
        try {
            mh$.invokeExact(date1, date2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_strftime$MH() {
        return RuntimeHelper.requireNonNull(constants$98.g_date_strftime$MH,"g_date_strftime");
    }
    public static long g_date_strftime ( Addressable s,  long slen,  Addressable format,  Addressable date) {
        var mh$ = RuntimeHelper.requireNonNull(constants$98.g_date_strftime$MH, "g_date_strftime");
        try {
            return (long)mh$.invokeExact(s, slen, format, date);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_TIME_TYPE_STANDARD() {
        return (int)0L;
    }
    public static int G_TIME_TYPE_DAYLIGHT() {
        return (int)1L;
    }
    public static int G_TIME_TYPE_UNIVERSAL() {
        return (int)2L;
    }
    public static MethodHandle g_time_zone_new$MH() {
        return RuntimeHelper.requireNonNull(constants$98.g_time_zone_new$MH,"g_time_zone_new");
    }
    public static MemoryAddress g_time_zone_new ( Addressable identifier) {
        var mh$ = RuntimeHelper.requireNonNull(constants$98.g_time_zone_new$MH, "g_time_zone_new");
        try {
            return (MemoryAddress)mh$.invokeExact(identifier);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_time_zone_new_utc$MH() {
        return RuntimeHelper.requireNonNull(constants$98.g_time_zone_new_utc$MH,"g_time_zone_new_utc");
    }
    public static MemoryAddress g_time_zone_new_utc () {
        var mh$ = RuntimeHelper.requireNonNull(constants$98.g_time_zone_new_utc$MH, "g_time_zone_new_utc");
        try {
            return (MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_time_zone_new_local$MH() {
        return RuntimeHelper.requireNonNull(constants$98.g_time_zone_new_local$MH,"g_time_zone_new_local");
    }
    public static MemoryAddress g_time_zone_new_local () {
        var mh$ = RuntimeHelper.requireNonNull(constants$98.g_time_zone_new_local$MH, "g_time_zone_new_local");
        try {
            return (MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_time_zone_new_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$98.g_time_zone_new_offset$MH,"g_time_zone_new_offset");
    }
    public static MemoryAddress g_time_zone_new_offset ( int seconds) {
        var mh$ = RuntimeHelper.requireNonNull(constants$98.g_time_zone_new_offset$MH, "g_time_zone_new_offset");
        try {
            return (MemoryAddress)mh$.invokeExact(seconds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_time_zone_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$98.g_time_zone_ref$MH,"g_time_zone_ref");
    }
    public static MemoryAddress g_time_zone_ref ( Addressable tz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$98.g_time_zone_ref$MH, "g_time_zone_ref");
        try {
            return (MemoryAddress)mh$.invokeExact(tz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_time_zone_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$99.g_time_zone_unref$MH,"g_time_zone_unref");
    }
    public static void g_time_zone_unref ( Addressable tz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$99.g_time_zone_unref$MH, "g_time_zone_unref");
        try {
            mh$.invokeExact(tz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_time_zone_find_interval$MH() {
        return RuntimeHelper.requireNonNull(constants$99.g_time_zone_find_interval$MH,"g_time_zone_find_interval");
    }
    public static int g_time_zone_find_interval ( Addressable tz,  int type,  long time_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$99.g_time_zone_find_interval$MH, "g_time_zone_find_interval");
        try {
            return (int)mh$.invokeExact(tz, type, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_time_zone_adjust_time$MH() {
        return RuntimeHelper.requireNonNull(constants$99.g_time_zone_adjust_time$MH,"g_time_zone_adjust_time");
    }
    public static int g_time_zone_adjust_time ( Addressable tz,  int type,  Addressable time_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$99.g_time_zone_adjust_time$MH, "g_time_zone_adjust_time");
        try {
            return (int)mh$.invokeExact(tz, type, time_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_time_zone_get_abbreviation$MH() {
        return RuntimeHelper.requireNonNull(constants$99.g_time_zone_get_abbreviation$MH,"g_time_zone_get_abbreviation");
    }
    public static MemoryAddress g_time_zone_get_abbreviation ( Addressable tz,  int interval) {
        var mh$ = RuntimeHelper.requireNonNull(constants$99.g_time_zone_get_abbreviation$MH, "g_time_zone_get_abbreviation");
        try {
            return (MemoryAddress)mh$.invokeExact(tz, interval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_time_zone_get_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$99.g_time_zone_get_offset$MH,"g_time_zone_get_offset");
    }
    public static int g_time_zone_get_offset ( Addressable tz,  int interval) {
        var mh$ = RuntimeHelper.requireNonNull(constants$99.g_time_zone_get_offset$MH, "g_time_zone_get_offset");
        try {
            return (int)mh$.invokeExact(tz, interval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_time_zone_is_dst$MH() {
        return RuntimeHelper.requireNonNull(constants$99.g_time_zone_is_dst$MH,"g_time_zone_is_dst");
    }
    public static int g_time_zone_is_dst ( Addressable tz,  int interval) {
        var mh$ = RuntimeHelper.requireNonNull(constants$99.g_time_zone_is_dst$MH, "g_time_zone_is_dst");
        try {
            return (int)mh$.invokeExact(tz, interval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_time_zone_get_identifier$MH() {
        return RuntimeHelper.requireNonNull(constants$100.g_time_zone_get_identifier$MH,"g_time_zone_get_identifier");
    }
    public static MemoryAddress g_time_zone_get_identifier ( Addressable tz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$100.g_time_zone_get_identifier$MH, "g_time_zone_get_identifier");
        try {
            return (MemoryAddress)mh$.invokeExact(tz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfLong GTimeSpan = Constants$root.C_LONG_LONG$LAYOUT;
    public static MethodHandle g_date_time_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$100.g_date_time_unref$MH,"g_date_time_unref");
    }
    public static void g_date_time_unref ( Addressable datetime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$100.g_date_time_unref$MH, "g_date_time_unref");
        try {
            mh$.invokeExact(datetime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$100.g_date_time_ref$MH,"g_date_time_ref");
    }
    public static MemoryAddress g_date_time_ref ( Addressable datetime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$100.g_date_time_ref$MH, "g_date_time_ref");
        try {
            return (MemoryAddress)mh$.invokeExact(datetime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_new_now$MH() {
        return RuntimeHelper.requireNonNull(constants$100.g_date_time_new_now$MH,"g_date_time_new_now");
    }
    public static MemoryAddress g_date_time_new_now ( Addressable tz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$100.g_date_time_new_now$MH, "g_date_time_new_now");
        try {
            return (MemoryAddress)mh$.invokeExact(tz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_new_now_local$MH() {
        return RuntimeHelper.requireNonNull(constants$100.g_date_time_new_now_local$MH,"g_date_time_new_now_local");
    }
    public static MemoryAddress g_date_time_new_now_local () {
        var mh$ = RuntimeHelper.requireNonNull(constants$100.g_date_time_new_now_local$MH, "g_date_time_new_now_local");
        try {
            return (MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_new_now_utc$MH() {
        return RuntimeHelper.requireNonNull(constants$100.g_date_time_new_now_utc$MH,"g_date_time_new_now_utc");
    }
    public static MemoryAddress g_date_time_new_now_utc () {
        var mh$ = RuntimeHelper.requireNonNull(constants$100.g_date_time_new_now_utc$MH, "g_date_time_new_now_utc");
        try {
            return (MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_new_from_unix_local$MH() {
        return RuntimeHelper.requireNonNull(constants$101.g_date_time_new_from_unix_local$MH,"g_date_time_new_from_unix_local");
    }
    public static MemoryAddress g_date_time_new_from_unix_local ( long t) {
        var mh$ = RuntimeHelper.requireNonNull(constants$101.g_date_time_new_from_unix_local$MH, "g_date_time_new_from_unix_local");
        try {
            return (MemoryAddress)mh$.invokeExact(t);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_new_from_unix_utc$MH() {
        return RuntimeHelper.requireNonNull(constants$101.g_date_time_new_from_unix_utc$MH,"g_date_time_new_from_unix_utc");
    }
    public static MemoryAddress g_date_time_new_from_unix_utc ( long t) {
        var mh$ = RuntimeHelper.requireNonNull(constants$101.g_date_time_new_from_unix_utc$MH, "g_date_time_new_from_unix_utc");
        try {
            return (MemoryAddress)mh$.invokeExact(t);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_new_from_timeval_local$MH() {
        return RuntimeHelper.requireNonNull(constants$101.g_date_time_new_from_timeval_local$MH,"g_date_time_new_from_timeval_local");
    }
    public static MemoryAddress g_date_time_new_from_timeval_local ( Addressable tv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$101.g_date_time_new_from_timeval_local$MH, "g_date_time_new_from_timeval_local");
        try {
            return (MemoryAddress)mh$.invokeExact(tv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_new_from_timeval_utc$MH() {
        return RuntimeHelper.requireNonNull(constants$101.g_date_time_new_from_timeval_utc$MH,"g_date_time_new_from_timeval_utc");
    }
    public static MemoryAddress g_date_time_new_from_timeval_utc ( Addressable tv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$101.g_date_time_new_from_timeval_utc$MH, "g_date_time_new_from_timeval_utc");
        try {
            return (MemoryAddress)mh$.invokeExact(tv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_new_from_iso8601$MH() {
        return RuntimeHelper.requireNonNull(constants$101.g_date_time_new_from_iso8601$MH,"g_date_time_new_from_iso8601");
    }
    public static MemoryAddress g_date_time_new_from_iso8601 ( Addressable text,  Addressable default_tz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$101.g_date_time_new_from_iso8601$MH, "g_date_time_new_from_iso8601");
        try {
            return (MemoryAddress)mh$.invokeExact(text, default_tz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_new$MH() {
        return RuntimeHelper.requireNonNull(constants$101.g_date_time_new$MH,"g_date_time_new");
    }
    public static MemoryAddress g_date_time_new ( Addressable tz,  int year,  int month,  int day,  int hour,  int minute,  double seconds) {
        var mh$ = RuntimeHelper.requireNonNull(constants$101.g_date_time_new$MH, "g_date_time_new");
        try {
            return (MemoryAddress)mh$.invokeExact(tz, year, month, day, hour, minute, seconds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_new_local$MH() {
        return RuntimeHelper.requireNonNull(constants$102.g_date_time_new_local$MH,"g_date_time_new_local");
    }
    public static MemoryAddress g_date_time_new_local ( int year,  int month,  int day,  int hour,  int minute,  double seconds) {
        var mh$ = RuntimeHelper.requireNonNull(constants$102.g_date_time_new_local$MH, "g_date_time_new_local");
        try {
            return (MemoryAddress)mh$.invokeExact(year, month, day, hour, minute, seconds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_new_utc$MH() {
        return RuntimeHelper.requireNonNull(constants$102.g_date_time_new_utc$MH,"g_date_time_new_utc");
    }
    public static MemoryAddress g_date_time_new_utc ( int year,  int month,  int day,  int hour,  int minute,  double seconds) {
        var mh$ = RuntimeHelper.requireNonNull(constants$102.g_date_time_new_utc$MH, "g_date_time_new_utc");
        try {
            return (MemoryAddress)mh$.invokeExact(year, month, day, hour, minute, seconds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_add$MH() {
        return RuntimeHelper.requireNonNull(constants$102.g_date_time_add$MH,"g_date_time_add");
    }
    public static MemoryAddress g_date_time_add ( Addressable datetime,  long timespan) {
        var mh$ = RuntimeHelper.requireNonNull(constants$102.g_date_time_add$MH, "g_date_time_add");
        try {
            return (MemoryAddress)mh$.invokeExact(datetime, timespan);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_add_years$MH() {
        return RuntimeHelper.requireNonNull(constants$102.g_date_time_add_years$MH,"g_date_time_add_years");
    }
    public static MemoryAddress g_date_time_add_years ( Addressable datetime,  int years) {
        var mh$ = RuntimeHelper.requireNonNull(constants$102.g_date_time_add_years$MH, "g_date_time_add_years");
        try {
            return (MemoryAddress)mh$.invokeExact(datetime, years);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_add_months$MH() {
        return RuntimeHelper.requireNonNull(constants$102.g_date_time_add_months$MH,"g_date_time_add_months");
    }
    public static MemoryAddress g_date_time_add_months ( Addressable datetime,  int months) {
        var mh$ = RuntimeHelper.requireNonNull(constants$102.g_date_time_add_months$MH, "g_date_time_add_months");
        try {
            return (MemoryAddress)mh$.invokeExact(datetime, months);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_add_weeks$MH() {
        return RuntimeHelper.requireNonNull(constants$102.g_date_time_add_weeks$MH,"g_date_time_add_weeks");
    }
    public static MemoryAddress g_date_time_add_weeks ( Addressable datetime,  int weeks) {
        var mh$ = RuntimeHelper.requireNonNull(constants$102.g_date_time_add_weeks$MH, "g_date_time_add_weeks");
        try {
            return (MemoryAddress)mh$.invokeExact(datetime, weeks);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_add_days$MH() {
        return RuntimeHelper.requireNonNull(constants$103.g_date_time_add_days$MH,"g_date_time_add_days");
    }
    public static MemoryAddress g_date_time_add_days ( Addressable datetime,  int days) {
        var mh$ = RuntimeHelper.requireNonNull(constants$103.g_date_time_add_days$MH, "g_date_time_add_days");
        try {
            return (MemoryAddress)mh$.invokeExact(datetime, days);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_add_hours$MH() {
        return RuntimeHelper.requireNonNull(constants$103.g_date_time_add_hours$MH,"g_date_time_add_hours");
    }
    public static MemoryAddress g_date_time_add_hours ( Addressable datetime,  int hours) {
        var mh$ = RuntimeHelper.requireNonNull(constants$103.g_date_time_add_hours$MH, "g_date_time_add_hours");
        try {
            return (MemoryAddress)mh$.invokeExact(datetime, hours);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_add_minutes$MH() {
        return RuntimeHelper.requireNonNull(constants$103.g_date_time_add_minutes$MH,"g_date_time_add_minutes");
    }
    public static MemoryAddress g_date_time_add_minutes ( Addressable datetime,  int minutes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$103.g_date_time_add_minutes$MH, "g_date_time_add_minutes");
        try {
            return (MemoryAddress)mh$.invokeExact(datetime, minutes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_add_seconds$MH() {
        return RuntimeHelper.requireNonNull(constants$103.g_date_time_add_seconds$MH,"g_date_time_add_seconds");
    }
    public static MemoryAddress g_date_time_add_seconds ( Addressable datetime,  double seconds) {
        var mh$ = RuntimeHelper.requireNonNull(constants$103.g_date_time_add_seconds$MH, "g_date_time_add_seconds");
        try {
            return (MemoryAddress)mh$.invokeExact(datetime, seconds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_add_full$MH() {
        return RuntimeHelper.requireNonNull(constants$103.g_date_time_add_full$MH,"g_date_time_add_full");
    }
    public static MemoryAddress g_date_time_add_full ( Addressable datetime,  int years,  int months,  int days,  int hours,  int minutes,  double seconds) {
        var mh$ = RuntimeHelper.requireNonNull(constants$103.g_date_time_add_full$MH, "g_date_time_add_full");
        try {
            return (MemoryAddress)mh$.invokeExact(datetime, years, months, days, hours, minutes, seconds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_compare$MH() {
        return RuntimeHelper.requireNonNull(constants$103.g_date_time_compare$MH,"g_date_time_compare");
    }
    public static int g_date_time_compare ( Addressable dt1,  Addressable dt2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$103.g_date_time_compare$MH, "g_date_time_compare");
        try {
            return (int)mh$.invokeExact(dt1, dt2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_difference$MH() {
        return RuntimeHelper.requireNonNull(constants$104.g_date_time_difference$MH,"g_date_time_difference");
    }
    public static long g_date_time_difference ( Addressable end,  Addressable begin) {
        var mh$ = RuntimeHelper.requireNonNull(constants$104.g_date_time_difference$MH, "g_date_time_difference");
        try {
            return (long)mh$.invokeExact(end, begin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$104.g_date_time_hash$MH,"g_date_time_hash");
    }
    public static int g_date_time_hash ( Addressable datetime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$104.g_date_time_hash$MH, "g_date_time_hash");
        try {
            return (int)mh$.invokeExact(datetime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$104.g_date_time_equal$MH,"g_date_time_equal");
    }
    public static int g_date_time_equal ( Addressable dt1,  Addressable dt2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$104.g_date_time_equal$MH, "g_date_time_equal");
        try {
            return (int)mh$.invokeExact(dt1, dt2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_get_ymd$MH() {
        return RuntimeHelper.requireNonNull(constants$104.g_date_time_get_ymd$MH,"g_date_time_get_ymd");
    }
    public static void g_date_time_get_ymd ( Addressable datetime,  Addressable year,  Addressable month,  Addressable day) {
        var mh$ = RuntimeHelper.requireNonNull(constants$104.g_date_time_get_ymd$MH, "g_date_time_get_ymd");
        try {
            mh$.invokeExact(datetime, year, month, day);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_get_year$MH() {
        return RuntimeHelper.requireNonNull(constants$104.g_date_time_get_year$MH,"g_date_time_get_year");
    }
    public static int g_date_time_get_year ( Addressable datetime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$104.g_date_time_get_year$MH, "g_date_time_get_year");
        try {
            return (int)mh$.invokeExact(datetime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_get_month$MH() {
        return RuntimeHelper.requireNonNull(constants$104.g_date_time_get_month$MH,"g_date_time_get_month");
    }
    public static int g_date_time_get_month ( Addressable datetime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$104.g_date_time_get_month$MH, "g_date_time_get_month");
        try {
            return (int)mh$.invokeExact(datetime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_get_day_of_month$MH() {
        return RuntimeHelper.requireNonNull(constants$105.g_date_time_get_day_of_month$MH,"g_date_time_get_day_of_month");
    }
    public static int g_date_time_get_day_of_month ( Addressable datetime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$105.g_date_time_get_day_of_month$MH, "g_date_time_get_day_of_month");
        try {
            return (int)mh$.invokeExact(datetime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_get_week_numbering_year$MH() {
        return RuntimeHelper.requireNonNull(constants$105.g_date_time_get_week_numbering_year$MH,"g_date_time_get_week_numbering_year");
    }
    public static int g_date_time_get_week_numbering_year ( Addressable datetime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$105.g_date_time_get_week_numbering_year$MH, "g_date_time_get_week_numbering_year");
        try {
            return (int)mh$.invokeExact(datetime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_get_week_of_year$MH() {
        return RuntimeHelper.requireNonNull(constants$105.g_date_time_get_week_of_year$MH,"g_date_time_get_week_of_year");
    }
    public static int g_date_time_get_week_of_year ( Addressable datetime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$105.g_date_time_get_week_of_year$MH, "g_date_time_get_week_of_year");
        try {
            return (int)mh$.invokeExact(datetime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_get_day_of_week$MH() {
        return RuntimeHelper.requireNonNull(constants$105.g_date_time_get_day_of_week$MH,"g_date_time_get_day_of_week");
    }
    public static int g_date_time_get_day_of_week ( Addressable datetime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$105.g_date_time_get_day_of_week$MH, "g_date_time_get_day_of_week");
        try {
            return (int)mh$.invokeExact(datetime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_get_day_of_year$MH() {
        return RuntimeHelper.requireNonNull(constants$105.g_date_time_get_day_of_year$MH,"g_date_time_get_day_of_year");
    }
    public static int g_date_time_get_day_of_year ( Addressable datetime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$105.g_date_time_get_day_of_year$MH, "g_date_time_get_day_of_year");
        try {
            return (int)mh$.invokeExact(datetime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_get_hour$MH() {
        return RuntimeHelper.requireNonNull(constants$105.g_date_time_get_hour$MH,"g_date_time_get_hour");
    }
    public static int g_date_time_get_hour ( Addressable datetime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$105.g_date_time_get_hour$MH, "g_date_time_get_hour");
        try {
            return (int)mh$.invokeExact(datetime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_get_minute$MH() {
        return RuntimeHelper.requireNonNull(constants$106.g_date_time_get_minute$MH,"g_date_time_get_minute");
    }
    public static int g_date_time_get_minute ( Addressable datetime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$106.g_date_time_get_minute$MH, "g_date_time_get_minute");
        try {
            return (int)mh$.invokeExact(datetime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_get_second$MH() {
        return RuntimeHelper.requireNonNull(constants$106.g_date_time_get_second$MH,"g_date_time_get_second");
    }
    public static int g_date_time_get_second ( Addressable datetime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$106.g_date_time_get_second$MH, "g_date_time_get_second");
        try {
            return (int)mh$.invokeExact(datetime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_get_microsecond$MH() {
        return RuntimeHelper.requireNonNull(constants$106.g_date_time_get_microsecond$MH,"g_date_time_get_microsecond");
    }
    public static int g_date_time_get_microsecond ( Addressable datetime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$106.g_date_time_get_microsecond$MH, "g_date_time_get_microsecond");
        try {
            return (int)mh$.invokeExact(datetime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_get_seconds$MH() {
        return RuntimeHelper.requireNonNull(constants$106.g_date_time_get_seconds$MH,"g_date_time_get_seconds");
    }
    public static double g_date_time_get_seconds ( Addressable datetime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$106.g_date_time_get_seconds$MH, "g_date_time_get_seconds");
        try {
            return (double)mh$.invokeExact(datetime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_to_unix$MH() {
        return RuntimeHelper.requireNonNull(constants$106.g_date_time_to_unix$MH,"g_date_time_to_unix");
    }
    public static long g_date_time_to_unix ( Addressable datetime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$106.g_date_time_to_unix$MH, "g_date_time_to_unix");
        try {
            return (long)mh$.invokeExact(datetime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_to_timeval$MH() {
        return RuntimeHelper.requireNonNull(constants$106.g_date_time_to_timeval$MH,"g_date_time_to_timeval");
    }
    public static int g_date_time_to_timeval ( Addressable datetime,  Addressable tv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$106.g_date_time_to_timeval$MH, "g_date_time_to_timeval");
        try {
            return (int)mh$.invokeExact(datetime, tv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_get_utc_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$107.g_date_time_get_utc_offset$MH,"g_date_time_get_utc_offset");
    }
    public static long g_date_time_get_utc_offset ( Addressable datetime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$107.g_date_time_get_utc_offset$MH, "g_date_time_get_utc_offset");
        try {
            return (long)mh$.invokeExact(datetime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_get_timezone$MH() {
        return RuntimeHelper.requireNonNull(constants$107.g_date_time_get_timezone$MH,"g_date_time_get_timezone");
    }
    public static MemoryAddress g_date_time_get_timezone ( Addressable datetime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$107.g_date_time_get_timezone$MH, "g_date_time_get_timezone");
        try {
            return (MemoryAddress)mh$.invokeExact(datetime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_get_timezone_abbreviation$MH() {
        return RuntimeHelper.requireNonNull(constants$107.g_date_time_get_timezone_abbreviation$MH,"g_date_time_get_timezone_abbreviation");
    }
    public static MemoryAddress g_date_time_get_timezone_abbreviation ( Addressable datetime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$107.g_date_time_get_timezone_abbreviation$MH, "g_date_time_get_timezone_abbreviation");
        try {
            return (MemoryAddress)mh$.invokeExact(datetime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_is_daylight_savings$MH() {
        return RuntimeHelper.requireNonNull(constants$107.g_date_time_is_daylight_savings$MH,"g_date_time_is_daylight_savings");
    }
    public static int g_date_time_is_daylight_savings ( Addressable datetime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$107.g_date_time_is_daylight_savings$MH, "g_date_time_is_daylight_savings");
        try {
            return (int)mh$.invokeExact(datetime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_to_timezone$MH() {
        return RuntimeHelper.requireNonNull(constants$107.g_date_time_to_timezone$MH,"g_date_time_to_timezone");
    }
    public static MemoryAddress g_date_time_to_timezone ( Addressable datetime,  Addressable tz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$107.g_date_time_to_timezone$MH, "g_date_time_to_timezone");
        try {
            return (MemoryAddress)mh$.invokeExact(datetime, tz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_to_local$MH() {
        return RuntimeHelper.requireNonNull(constants$107.g_date_time_to_local$MH,"g_date_time_to_local");
    }
    public static MemoryAddress g_date_time_to_local ( Addressable datetime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$107.g_date_time_to_local$MH, "g_date_time_to_local");
        try {
            return (MemoryAddress)mh$.invokeExact(datetime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_to_utc$MH() {
        return RuntimeHelper.requireNonNull(constants$108.g_date_time_to_utc$MH,"g_date_time_to_utc");
    }
    public static MemoryAddress g_date_time_to_utc ( Addressable datetime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$108.g_date_time_to_utc$MH, "g_date_time_to_utc");
        try {
            return (MemoryAddress)mh$.invokeExact(datetime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_format$MH() {
        return RuntimeHelper.requireNonNull(constants$108.g_date_time_format$MH,"g_date_time_format");
    }
    public static MemoryAddress g_date_time_format ( Addressable datetime,  Addressable format) {
        var mh$ = RuntimeHelper.requireNonNull(constants$108.g_date_time_format$MH, "g_date_time_format");
        try {
            return (MemoryAddress)mh$.invokeExact(datetime, format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_date_time_format_iso8601$MH() {
        return RuntimeHelper.requireNonNull(constants$108.g_date_time_format_iso8601$MH,"g_date_time_format_iso8601");
    }
    public static MemoryAddress g_date_time_format_iso8601 ( Addressable datetime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$108.g_date_time_format_iso8601$MH, "g_date_time_format_iso8601");
        try {
            return (MemoryAddress)mh$.invokeExact(datetime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int DT_UNKNOWN() {
        return (int)0L;
    }
    public static int DT_FIFO() {
        return (int)1L;
    }
    public static int DT_CHR() {
        return (int)2L;
    }
    public static int DT_DIR() {
        return (int)4L;
    }
    public static int DT_BLK() {
        return (int)6L;
    }
    public static int DT_REG() {
        return (int)8L;
    }
    public static int DT_LNK() {
        return (int)10L;
    }
    public static int DT_SOCK() {
        return (int)12L;
    }
    public static int DT_WHT() {
        return (int)14L;
    }
    public static MethodHandle opendir$MH() {
        return RuntimeHelper.requireNonNull(constants$108.opendir$MH,"opendir");
    }
    public static MemoryAddress opendir ( Addressable __name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$108.opendir$MH, "opendir");
        try {
            return (MemoryAddress)mh$.invokeExact(__name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fdopendir$MH() {
        return RuntimeHelper.requireNonNull(constants$108.fdopendir$MH,"fdopendir");
    }
    public static MemoryAddress fdopendir ( int __fd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$108.fdopendir$MH, "fdopendir");
        try {
            return (MemoryAddress)mh$.invokeExact(__fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle closedir$MH() {
        return RuntimeHelper.requireNonNull(constants$108.closedir$MH,"closedir");
    }
    public static int closedir ( Addressable __dirp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$108.closedir$MH, "closedir");
        try {
            return (int)mh$.invokeExact(__dirp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle readdir$MH() {
        return RuntimeHelper.requireNonNull(constants$109.readdir$MH,"readdir");
    }
    public static MemoryAddress readdir ( Addressable __dirp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$109.readdir$MH, "readdir");
        try {
            return (MemoryAddress)mh$.invokeExact(__dirp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle readdir_r$MH() {
        return RuntimeHelper.requireNonNull(constants$109.readdir_r$MH,"readdir_r");
    }
    public static int readdir_r ( Addressable __dirp,  Addressable __entry,  Addressable __result) {
        var mh$ = RuntimeHelper.requireNonNull(constants$109.readdir_r$MH, "readdir_r");
        try {
            return (int)mh$.invokeExact(__dirp, __entry, __result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rewinddir$MH() {
        return RuntimeHelper.requireNonNull(constants$109.rewinddir$MH,"rewinddir");
    }
    public static void rewinddir ( Addressable __dirp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$109.rewinddir$MH, "rewinddir");
        try {
            mh$.invokeExact(__dirp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle seekdir$MH() {
        return RuntimeHelper.requireNonNull(constants$109.seekdir$MH,"seekdir");
    }
    public static void seekdir ( Addressable __dirp,  long __pos) {
        var mh$ = RuntimeHelper.requireNonNull(constants$109.seekdir$MH, "seekdir");
        try {
            mh$.invokeExact(__dirp, __pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle telldir$MH() {
        return RuntimeHelper.requireNonNull(constants$109.telldir$MH,"telldir");
    }
    public static long telldir ( Addressable __dirp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$109.telldir$MH, "telldir");
        try {
            return (long)mh$.invokeExact(__dirp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle dirfd$MH() {
        return RuntimeHelper.requireNonNull(constants$109.dirfd$MH,"dirfd");
    }
    public static int dirfd ( Addressable __dirp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$109.dirfd$MH, "dirfd");
        try {
            return (int)mh$.invokeExact(__dirp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle scandir$MH() {
        return RuntimeHelper.requireNonNull(constants$110.scandir$MH,"scandir");
    }
    public static int scandir ( Addressable __dir,  Addressable __namelist,  Addressable __selector,  Addressable __cmp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$110.scandir$MH, "scandir");
        try {
            return (int)mh$.invokeExact(__dir, __namelist, __selector, __cmp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle alphasort$MH() {
        return RuntimeHelper.requireNonNull(constants$110.alphasort$MH,"alphasort");
    }
    public static int alphasort ( Addressable __e1,  Addressable __e2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$110.alphasort$MH, "alphasort");
        try {
            return (int)mh$.invokeExact(__e1, __e2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getdirentries$MH() {
        return RuntimeHelper.requireNonNull(constants$111.getdirentries$MH,"getdirentries");
    }
    public static long getdirentries ( int __fd,  Addressable __buf,  long __nbytes,  Addressable __basep) {
        var mh$ = RuntimeHelper.requireNonNull(constants$111.getdirentries$MH, "getdirentries");
        try {
            return (long)mh$.invokeExact(__fd, __buf, __nbytes, __basep);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dir_open$MH() {
        return RuntimeHelper.requireNonNull(constants$111.g_dir_open$MH,"g_dir_open");
    }
    public static MemoryAddress g_dir_open ( Addressable path,  int flags,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$111.g_dir_open$MH, "g_dir_open");
        try {
            return (MemoryAddress)mh$.invokeExact(path, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dir_read_name$MH() {
        return RuntimeHelper.requireNonNull(constants$111.g_dir_read_name$MH,"g_dir_read_name");
    }
    public static MemoryAddress g_dir_read_name ( Addressable dir) {
        var mh$ = RuntimeHelper.requireNonNull(constants$111.g_dir_read_name$MH, "g_dir_read_name");
        try {
            return (MemoryAddress)mh$.invokeExact(dir);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dir_rewind$MH() {
        return RuntimeHelper.requireNonNull(constants$111.g_dir_rewind$MH,"g_dir_rewind");
    }
    public static void g_dir_rewind ( Addressable dir) {
        var mh$ = RuntimeHelper.requireNonNull(constants$111.g_dir_rewind$MH, "g_dir_rewind");
        try {
            mh$.invokeExact(dir);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dir_close$MH() {
        return RuntimeHelper.requireNonNull(constants$111.g_dir_close$MH,"g_dir_close");
    }
    public static void g_dir_close ( Addressable dir) {
        var mh$ = RuntimeHelper.requireNonNull(constants$111.g_dir_close$MH, "g_dir_close");
        try {
            mh$.invokeExact(dir);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_getenv$MH() {
        return RuntimeHelper.requireNonNull(constants$111.g_getenv$MH,"g_getenv");
    }
    public static MemoryAddress g_getenv ( Addressable variable) {
        var mh$ = RuntimeHelper.requireNonNull(constants$111.g_getenv$MH, "g_getenv");
        try {
            return (MemoryAddress)mh$.invokeExact(variable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_setenv$MH() {
        return RuntimeHelper.requireNonNull(constants$112.g_setenv$MH,"g_setenv");
    }
    public static int g_setenv ( Addressable variable,  Addressable value,  int overwrite) {
        var mh$ = RuntimeHelper.requireNonNull(constants$112.g_setenv$MH, "g_setenv");
        try {
            return (int)mh$.invokeExact(variable, value, overwrite);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unsetenv$MH() {
        return RuntimeHelper.requireNonNull(constants$112.g_unsetenv$MH,"g_unsetenv");
    }
    public static void g_unsetenv ( Addressable variable) {
        var mh$ = RuntimeHelper.requireNonNull(constants$112.g_unsetenv$MH, "g_unsetenv");
        try {
            mh$.invokeExact(variable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_listenv$MH() {
        return RuntimeHelper.requireNonNull(constants$112.g_listenv$MH,"g_listenv");
    }
    public static MemoryAddress g_listenv () {
        var mh$ = RuntimeHelper.requireNonNull(constants$112.g_listenv$MH, "g_listenv");
        try {
            return (MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_get_environ$MH() {
        return RuntimeHelper.requireNonNull(constants$112.g_get_environ$MH,"g_get_environ");
    }
    public static MemoryAddress g_get_environ () {
        var mh$ = RuntimeHelper.requireNonNull(constants$112.g_get_environ$MH, "g_get_environ");
        try {
            return (MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_environ_getenv$MH() {
        return RuntimeHelper.requireNonNull(constants$112.g_environ_getenv$MH,"g_environ_getenv");
    }
    public static MemoryAddress g_environ_getenv ( Addressable envp,  Addressable variable) {
        var mh$ = RuntimeHelper.requireNonNull(constants$112.g_environ_getenv$MH, "g_environ_getenv");
        try {
            return (MemoryAddress)mh$.invokeExact(envp, variable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_environ_setenv$MH() {
        return RuntimeHelper.requireNonNull(constants$112.g_environ_setenv$MH,"g_environ_setenv");
    }
    public static MemoryAddress g_environ_setenv ( Addressable envp,  Addressable variable,  Addressable value,  int overwrite) {
        var mh$ = RuntimeHelper.requireNonNull(constants$112.g_environ_setenv$MH, "g_environ_setenv");
        try {
            return (MemoryAddress)mh$.invokeExact(envp, variable, value, overwrite);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_environ_unsetenv$MH() {
        return RuntimeHelper.requireNonNull(constants$113.g_environ_unsetenv$MH,"g_environ_unsetenv");
    }
    public static MemoryAddress g_environ_unsetenv ( Addressable envp,  Addressable variable) {
        var mh$ = RuntimeHelper.requireNonNull(constants$113.g_environ_unsetenv$MH, "g_environ_unsetenv");
        try {
            return (MemoryAddress)mh$.invokeExact(envp, variable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_FILE_ERROR_EXIST() {
        return (int)0L;
    }
    public static int G_FILE_ERROR_ISDIR() {
        return (int)1L;
    }
    public static int G_FILE_ERROR_ACCES() {
        return (int)2L;
    }
    public static int G_FILE_ERROR_NAMETOOLONG() {
        return (int)3L;
    }
    public static int G_FILE_ERROR_NOENT() {
        return (int)4L;
    }
    public static int G_FILE_ERROR_NOTDIR() {
        return (int)5L;
    }
    public static int G_FILE_ERROR_NXIO() {
        return (int)6L;
    }
    public static int G_FILE_ERROR_NODEV() {
        return (int)7L;
    }
    public static int G_FILE_ERROR_ROFS() {
        return (int)8L;
    }
    public static int G_FILE_ERROR_TXTBSY() {
        return (int)9L;
    }
    public static int G_FILE_ERROR_FAULT() {
        return (int)10L;
    }
    public static int G_FILE_ERROR_LOOP() {
        return (int)11L;
    }
    public static int G_FILE_ERROR_NOSPC() {
        return (int)12L;
    }
    public static int G_FILE_ERROR_NOMEM() {
        return (int)13L;
    }
    public static int G_FILE_ERROR_MFILE() {
        return (int)14L;
    }
    public static int G_FILE_ERROR_NFILE() {
        return (int)15L;
    }
    public static int G_FILE_ERROR_BADF() {
        return (int)16L;
    }
    public static int G_FILE_ERROR_INVAL() {
        return (int)17L;
    }
    public static int G_FILE_ERROR_PIPE() {
        return (int)18L;
    }
    public static int G_FILE_ERROR_AGAIN() {
        return (int)19L;
    }
    public static int G_FILE_ERROR_INTR() {
        return (int)20L;
    }
    public static int G_FILE_ERROR_IO() {
        return (int)21L;
    }
    public static int G_FILE_ERROR_PERM() {
        return (int)22L;
    }
    public static int G_FILE_ERROR_NOSYS() {
        return (int)23L;
    }
    public static int G_FILE_ERROR_FAILED() {
        return (int)24L;
    }
    public static int G_FILE_TEST_IS_REGULAR() {
        return (int)1L;
    }
    public static int G_FILE_TEST_IS_SYMLINK() {
        return (int)2L;
    }
    public static int G_FILE_TEST_IS_DIR() {
        return (int)4L;
    }
    public static int G_FILE_TEST_IS_EXECUTABLE() {
        return (int)8L;
    }
    public static int G_FILE_TEST_EXISTS() {
        return (int)16L;
    }
    public static MethodHandle g_file_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$113.g_file_error_quark$MH,"g_file_error_quark");
    }
    public static int g_file_error_quark () {
        var mh$ = RuntimeHelper.requireNonNull(constants$113.g_file_error_quark$MH, "g_file_error_quark");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_error_from_errno$MH() {
        return RuntimeHelper.requireNonNull(constants$113.g_file_error_from_errno$MH,"g_file_error_from_errno");
    }
    public static int g_file_error_from_errno ( int err_no) {
        var mh$ = RuntimeHelper.requireNonNull(constants$113.g_file_error_from_errno$MH, "g_file_error_from_errno");
        try {
            return (int)mh$.invokeExact(err_no);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_test$MH() {
        return RuntimeHelper.requireNonNull(constants$113.g_file_test$MH,"g_file_test");
    }
    public static int g_file_test ( Addressable filename,  int test) {
        var mh$ = RuntimeHelper.requireNonNull(constants$113.g_file_test$MH, "g_file_test");
        try {
            return (int)mh$.invokeExact(filename, test);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_get_contents$MH() {
        return RuntimeHelper.requireNonNull(constants$113.g_file_get_contents$MH,"g_file_get_contents");
    }
    public static int g_file_get_contents ( Addressable filename,  Addressable contents,  Addressable length,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$113.g_file_get_contents$MH, "g_file_get_contents");
        try {
            return (int)mh$.invokeExact(filename, contents, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_set_contents$MH() {
        return RuntimeHelper.requireNonNull(constants$113.g_file_set_contents$MH,"g_file_set_contents");
    }
    public static int g_file_set_contents ( Addressable filename,  Addressable contents,  long length,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$113.g_file_set_contents$MH, "g_file_set_contents");
        try {
            return (int)mh$.invokeExact(filename, contents, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_read_link$MH() {
        return RuntimeHelper.requireNonNull(constants$114.g_file_read_link$MH,"g_file_read_link");
    }
    public static MemoryAddress g_file_read_link ( Addressable filename,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$114.g_file_read_link$MH, "g_file_read_link");
        try {
            return (MemoryAddress)mh$.invokeExact(filename, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mkdtemp$MH() {
        return RuntimeHelper.requireNonNull(constants$114.g_mkdtemp$MH,"g_mkdtemp");
    }
    public static MemoryAddress g_mkdtemp ( Addressable tmpl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$114.g_mkdtemp$MH, "g_mkdtemp");
        try {
            return (MemoryAddress)mh$.invokeExact(tmpl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mkdtemp_full$MH() {
        return RuntimeHelper.requireNonNull(constants$114.g_mkdtemp_full$MH,"g_mkdtemp_full");
    }
    public static MemoryAddress g_mkdtemp_full ( Addressable tmpl,  int mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$114.g_mkdtemp_full$MH, "g_mkdtemp_full");
        try {
            return (MemoryAddress)mh$.invokeExact(tmpl, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mkstemp$MH() {
        return RuntimeHelper.requireNonNull(constants$114.g_mkstemp$MH,"g_mkstemp");
    }
    public static int g_mkstemp ( Addressable tmpl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$114.g_mkstemp$MH, "g_mkstemp");
        try {
            return (int)mh$.invokeExact(tmpl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mkstemp_full$MH() {
        return RuntimeHelper.requireNonNull(constants$114.g_mkstemp_full$MH,"g_mkstemp_full");
    }
    public static int g_mkstemp_full ( Addressable tmpl,  int flags,  int mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$114.g_mkstemp_full$MH, "g_mkstemp_full");
        try {
            return (int)mh$.invokeExact(tmpl, flags, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_file_open_tmp$MH() {
        return RuntimeHelper.requireNonNull(constants$114.g_file_open_tmp$MH,"g_file_open_tmp");
    }
    public static int g_file_open_tmp ( Addressable tmpl,  Addressable name_used,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$114.g_file_open_tmp$MH, "g_file_open_tmp");
        try {
            return (int)mh$.invokeExact(tmpl, name_used, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dir_make_tmp$MH() {
        return RuntimeHelper.requireNonNull(constants$115.g_dir_make_tmp$MH,"g_dir_make_tmp");
    }
    public static MemoryAddress g_dir_make_tmp ( Addressable tmpl,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$115.g_dir_make_tmp$MH, "g_dir_make_tmp");
        try {
            return (MemoryAddress)mh$.invokeExact(tmpl, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_build_path$MH() {
        return RuntimeHelper.requireNonNull(constants$115.g_build_path$MH,"g_build_path");
    }
    public static MemoryAddress g_build_path ( Addressable separator,  Addressable first_element, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$115.g_build_path$MH, "g_build_path");
        try {
            return (MemoryAddress)mh$.invokeExact(separator, first_element, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_build_pathv$MH() {
        return RuntimeHelper.requireNonNull(constants$115.g_build_pathv$MH,"g_build_pathv");
    }
    public static MemoryAddress g_build_pathv ( Addressable separator,  Addressable args) {
        var mh$ = RuntimeHelper.requireNonNull(constants$115.g_build_pathv$MH, "g_build_pathv");
        try {
            return (MemoryAddress)mh$.invokeExact(separator, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_build_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$115.g_build_filename$MH,"g_build_filename");
    }
    public static MemoryAddress g_build_filename ( Addressable first_element, Object... x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$115.g_build_filename$MH, "g_build_filename");
        try {
            return (MemoryAddress)mh$.invokeExact(first_element, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_build_filenamev$MH() {
        return RuntimeHelper.requireNonNull(constants$115.g_build_filenamev$MH,"g_build_filenamev");
    }
    public static MemoryAddress g_build_filenamev ( Addressable args) {
        var mh$ = RuntimeHelper.requireNonNull(constants$115.g_build_filenamev$MH, "g_build_filenamev");
        try {
            return (MemoryAddress)mh$.invokeExact(args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_build_filename_valist$MH() {
        return RuntimeHelper.requireNonNull(constants$115.g_build_filename_valist$MH,"g_build_filename_valist");
    }
    public static MemoryAddress g_build_filename_valist ( Addressable first_element,  Addressable args) {
        var mh$ = RuntimeHelper.requireNonNull(constants$115.g_build_filename_valist$MH, "g_build_filename_valist");
        try {
            return (MemoryAddress)mh$.invokeExact(first_element, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mkdir_with_parents$MH() {
        return RuntimeHelper.requireNonNull(constants$116.g_mkdir_with_parents$MH,"g_mkdir_with_parents");
    }
    public static int g_mkdir_with_parents ( Addressable pathname,  int mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$116.g_mkdir_with_parents$MH, "g_mkdir_with_parents");
        try {
            return (int)mh$.invokeExact(pathname, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_path_is_absolute$MH() {
        return RuntimeHelper.requireNonNull(constants$116.g_path_is_absolute$MH,"g_path_is_absolute");
    }
    public static int g_path_is_absolute ( Addressable file_name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$116.g_path_is_absolute$MH, "g_path_is_absolute");
        try {
            return (int)mh$.invokeExact(file_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_path_skip_root$MH() {
        return RuntimeHelper.requireNonNull(constants$116.g_path_skip_root$MH,"g_path_skip_root");
    }
    public static MemoryAddress g_path_skip_root ( Addressable file_name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$116.g_path_skip_root$MH, "g_path_skip_root");
        try {
            return (MemoryAddress)mh$.invokeExact(file_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_basename$MH() {
        return RuntimeHelper.requireNonNull(constants$116.g_basename$MH,"g_basename");
    }
    public static MemoryAddress g_basename ( Addressable file_name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$116.g_basename$MH, "g_basename");
        try {
            return (MemoryAddress)mh$.invokeExact(file_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_get_current_dir$MH() {
        return RuntimeHelper.requireNonNull(constants$116.g_get_current_dir$MH,"g_get_current_dir");
    }
    public static MemoryAddress g_get_current_dir () {
        var mh$ = RuntimeHelper.requireNonNull(constants$116.g_get_current_dir$MH, "g_get_current_dir");
        try {
            return (MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_path_get_basename$MH() {
        return RuntimeHelper.requireNonNull(constants$116.g_path_get_basename$MH,"g_path_get_basename");
    }
    public static MemoryAddress g_path_get_basename ( Addressable file_name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$116.g_path_get_basename$MH, "g_path_get_basename");
        try {
            return (MemoryAddress)mh$.invokeExact(file_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_path_get_dirname$MH() {
        return RuntimeHelper.requireNonNull(constants$117.g_path_get_dirname$MH,"g_path_get_dirname");
    }
    public static MemoryAddress g_path_get_dirname ( Addressable file_name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$117.g_path_get_dirname$MH, "g_path_get_dirname");
        try {
            return (MemoryAddress)mh$.invokeExact(file_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_canonicalize_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$117.g_canonicalize_filename$MH,"g_canonicalize_filename");
    }
    public static MemoryAddress g_canonicalize_filename ( Addressable filename,  Addressable relative_to) {
        var mh$ = RuntimeHelper.requireNonNull(constants$117.g_canonicalize_filename$MH, "g_canonicalize_filename");
        try {
            return (MemoryAddress)mh$.invokeExact(filename, relative_to);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_strip_context$MH() {
        return RuntimeHelper.requireNonNull(constants$117.g_strip_context$MH,"g_strip_context");
    }
    public static MemoryAddress g_strip_context ( Addressable msgid,  Addressable msgval) {
        var mh$ = RuntimeHelper.requireNonNull(constants$117.g_strip_context$MH, "g_strip_context");
        try {
            return (MemoryAddress)mh$.invokeExact(msgid, msgval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dgettext$MH() {
        return RuntimeHelper.requireNonNull(constants$117.g_dgettext$MH,"g_dgettext");
    }
    public static MemoryAddress g_dgettext ( Addressable domain,  Addressable msgid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$117.g_dgettext$MH, "g_dgettext");
        try {
            return (MemoryAddress)mh$.invokeExact(domain, msgid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dcgettext$MH() {
        return RuntimeHelper.requireNonNull(constants$117.g_dcgettext$MH,"g_dcgettext");
    }
    public static MemoryAddress g_dcgettext ( Addressable domain,  Addressable msgid,  int category) {
        var mh$ = RuntimeHelper.requireNonNull(constants$117.g_dcgettext$MH, "g_dcgettext");
        try {
            return (MemoryAddress)mh$.invokeExact(domain, msgid, category);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dngettext$MH() {
        return RuntimeHelper.requireNonNull(constants$117.g_dngettext$MH,"g_dngettext");
    }
    public static MemoryAddress g_dngettext ( Addressable domain,  Addressable msgid,  Addressable msgid_plural,  long n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$117.g_dngettext$MH, "g_dngettext");
        try {
            return (MemoryAddress)mh$.invokeExact(domain, msgid, msgid_plural, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dpgettext$MH() {
        return RuntimeHelper.requireNonNull(constants$118.g_dpgettext$MH,"g_dpgettext");
    }
    public static MemoryAddress g_dpgettext ( Addressable domain,  Addressable msgctxtid,  long msgidoffset) {
        var mh$ = RuntimeHelper.requireNonNull(constants$118.g_dpgettext$MH, "g_dpgettext");
        try {
            return (MemoryAddress)mh$.invokeExact(domain, msgctxtid, msgidoffset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_dpgettext2$MH() {
        return RuntimeHelper.requireNonNull(constants$118.g_dpgettext2$MH,"g_dpgettext2");
    }
    public static MemoryAddress g_dpgettext2 ( Addressable domain,  Addressable context,  Addressable msgid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$118.g_dpgettext2$MH, "g_dpgettext2");
        try {
            return (MemoryAddress)mh$.invokeExact(domain, context, msgid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_free$MH() {
        return RuntimeHelper.requireNonNull(constants$118.g_free$MH,"g_free");
    }
    public static void g_free ( Addressable mem) {
        var mh$ = RuntimeHelper.requireNonNull(constants$118.g_free$MH, "g_free");
        try {
            mh$.invokeExact(mem);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_clear_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$118.g_clear_pointer$MH,"g_clear_pointer");
    }
    public static void g_clear_pointer ( Addressable pp,  Addressable destroy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$118.g_clear_pointer$MH, "g_clear_pointer");
        try {
            mh$.invokeExact(pp, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_malloc$MH() {
        return RuntimeHelper.requireNonNull(constants$118.g_malloc$MH,"g_malloc");
    }
    public static MemoryAddress g_malloc ( long n_bytes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$118.g_malloc$MH, "g_malloc");
        try {
            return (MemoryAddress)mh$.invokeExact(n_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_malloc0$MH() {
        return RuntimeHelper.requireNonNull(constants$118.g_malloc0$MH,"g_malloc0");
    }
    public static MemoryAddress g_malloc0 ( long n_bytes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$118.g_malloc0$MH, "g_malloc0");
        try {
            return (MemoryAddress)mh$.invokeExact(n_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_realloc$MH() {
        return RuntimeHelper.requireNonNull(constants$119.g_realloc$MH,"g_realloc");
    }
    public static MemoryAddress g_realloc ( Addressable mem,  long n_bytes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$119.g_realloc$MH, "g_realloc");
        try {
            return (MemoryAddress)mh$.invokeExact(mem, n_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_try_malloc$MH() {
        return RuntimeHelper.requireNonNull(constants$119.g_try_malloc$MH,"g_try_malloc");
    }
    public static MemoryAddress g_try_malloc ( long n_bytes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$119.g_try_malloc$MH, "g_try_malloc");
        try {
            return (MemoryAddress)mh$.invokeExact(n_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_try_malloc0$MH() {
        return RuntimeHelper.requireNonNull(constants$119.g_try_malloc0$MH,"g_try_malloc0");
    }
    public static MemoryAddress g_try_malloc0 ( long n_bytes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$119.g_try_malloc0$MH, "g_try_malloc0");
        try {
            return (MemoryAddress)mh$.invokeExact(n_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_try_realloc$MH() {
        return RuntimeHelper.requireNonNull(constants$119.g_try_realloc$MH,"g_try_realloc");
    }
    public static MemoryAddress g_try_realloc ( Addressable mem,  long n_bytes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$119.g_try_realloc$MH, "g_try_realloc");
        try {
            return (MemoryAddress)mh$.invokeExact(mem, n_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_malloc_n$MH() {
        return RuntimeHelper.requireNonNull(constants$119.g_malloc_n$MH,"g_malloc_n");
    }
    public static MemoryAddress g_malloc_n ( long n_blocks,  long n_block_bytes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$119.g_malloc_n$MH, "g_malloc_n");
        try {
            return (MemoryAddress)mh$.invokeExact(n_blocks, n_block_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_malloc0_n$MH() {
        return RuntimeHelper.requireNonNull(constants$119.g_malloc0_n$MH,"g_malloc0_n");
    }
    public static MemoryAddress g_malloc0_n ( long n_blocks,  long n_block_bytes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$119.g_malloc0_n$MH, "g_malloc0_n");
        try {
            return (MemoryAddress)mh$.invokeExact(n_blocks, n_block_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_realloc_n$MH() {
        return RuntimeHelper.requireNonNull(constants$120.g_realloc_n$MH,"g_realloc_n");
    }
    public static MemoryAddress g_realloc_n ( Addressable mem,  long n_blocks,  long n_block_bytes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$120.g_realloc_n$MH, "g_realloc_n");
        try {
            return (MemoryAddress)mh$.invokeExact(mem, n_blocks, n_block_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_try_malloc_n$MH() {
        return RuntimeHelper.requireNonNull(constants$120.g_try_malloc_n$MH,"g_try_malloc_n");
    }
    public static MemoryAddress g_try_malloc_n ( long n_blocks,  long n_block_bytes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$120.g_try_malloc_n$MH, "g_try_malloc_n");
        try {
            return (MemoryAddress)mh$.invokeExact(n_blocks, n_block_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_try_malloc0_n$MH() {
        return RuntimeHelper.requireNonNull(constants$120.g_try_malloc0_n$MH,"g_try_malloc0_n");
    }
    public static MemoryAddress g_try_malloc0_n ( long n_blocks,  long n_block_bytes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$120.g_try_malloc0_n$MH, "g_try_malloc0_n");
        try {
            return (MemoryAddress)mh$.invokeExact(n_blocks, n_block_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_try_realloc_n$MH() {
        return RuntimeHelper.requireNonNull(constants$120.g_try_realloc_n$MH,"g_try_realloc_n");
    }
    public static MemoryAddress g_try_realloc_n ( Addressable mem,  long n_blocks,  long n_block_bytes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$120.g_try_realloc_n$MH, "g_try_realloc_n");
        try {
            return (MemoryAddress)mh$.invokeExact(mem, n_blocks, n_block_bytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_steal_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$120.g_steal_pointer$MH,"g_steal_pointer");
    }
    public static MemoryAddress g_steal_pointer ( Addressable pp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$120.g_steal_pointer$MH, "g_steal_pointer");
        try {
            return (MemoryAddress)mh$.invokeExact(pp);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mem_set_vtable$MH() {
        return RuntimeHelper.requireNonNull(constants$120.g_mem_set_vtable$MH,"g_mem_set_vtable");
    }
    public static void g_mem_set_vtable ( Addressable vtable) {
        var mh$ = RuntimeHelper.requireNonNull(constants$120.g_mem_set_vtable$MH, "g_mem_set_vtable");
        try {
            mh$.invokeExact(vtable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_mem_is_system_malloc$MH() {
        return RuntimeHelper.requireNonNull(constants$121.g_mem_is_system_malloc$MH,"g_mem_is_system_malloc");
    }
    public static int g_mem_is_system_malloc () {
        var mh$ = RuntimeHelper.requireNonNull(constants$121.g_mem_is_system_malloc$MH, "g_mem_is_system_malloc");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout g_mem_gc_friendly$LAYOUT() {
        return constants$121.g_mem_gc_friendly$LAYOUT;
    }
    public static VarHandle g_mem_gc_friendly$VH() {
        return constants$121.g_mem_gc_friendly$VH;
    }
    public static MemorySegment g_mem_gc_friendly$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$121.g_mem_gc_friendly$SEGMENT,"g_mem_gc_friendly");
    }
    public static int g_mem_gc_friendly$get() {
        return (int) constants$121.g_mem_gc_friendly$VH.get(RuntimeHelper.requireNonNull(constants$121.g_mem_gc_friendly$SEGMENT, "g_mem_gc_friendly"));
    }
    public static void g_mem_gc_friendly$set( int x) {
        constants$121.g_mem_gc_friendly$VH.set(RuntimeHelper.requireNonNull(constants$121.g_mem_gc_friendly$SEGMENT, "g_mem_gc_friendly"), x);
    }
    public static MemoryLayout glib_mem_profiler_table$LAYOUT() {
        return constants$121.glib_mem_profiler_table$LAYOUT;
    }
    public static VarHandle glib_mem_profiler_table$VH() {
        return constants$121.glib_mem_profiler_table$VH;
    }
    public static MemorySegment glib_mem_profiler_table$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$121.glib_mem_profiler_table$SEGMENT,"glib_mem_profiler_table");
    }
    public static MemoryAddress glib_mem_profiler_table$get() {
        return (MemoryAddress) constants$121.glib_mem_profiler_table$VH.get(RuntimeHelper.requireNonNull(constants$121.glib_mem_profiler_table$SEGMENT, "glib_mem_profiler_table"));
    }
    public static void glib_mem_profiler_table$set( MemoryAddress x) {
        constants$121.glib_mem_profiler_table$VH.set(RuntimeHelper.requireNonNull(constants$121.glib_mem_profiler_table$SEGMENT, "glib_mem_profiler_table"), x);
    }
    public static MethodHandle g_mem_profile$MH() {
        return RuntimeHelper.requireNonNull(constants$121.g_mem_profile$MH,"g_mem_profile");
    }
    public static void g_mem_profile () {
        var mh$ = RuntimeHelper.requireNonNull(constants$121.g_mem_profile$MH, "g_mem_profile");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_TRAVERSE_LEAVES() {
        return (int)1L;
    }
    public static int G_TRAVERSE_NON_LEAVES() {
        return (int)2L;
    }
    public static int G_TRAVERSE_ALL() {
        return (int)3L;
    }
    public static int G_TRAVERSE_MASK() {
        return (int)3L;
    }
    public static int G_TRAVERSE_LEAFS() {
        return (int)1L;
    }
    public static int G_TRAVERSE_NON_LEAFS() {
        return (int)2L;
    }
    public static int G_IN_ORDER() {
        return (int)0L;
    }
    public static int G_PRE_ORDER() {
        return (int)1L;
    }
    public static int G_POST_ORDER() {
        return (int)2L;
    }
    public static int G_LEVEL_ORDER() {
        return (int)3L;
    }
    public static MethodHandle g_node_new$MH() {
        return RuntimeHelper.requireNonNull(constants$122.g_node_new$MH,"g_node_new");
    }
    public static MemoryAddress g_node_new ( Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$122.g_node_new$MH, "g_node_new");
        try {
            return (MemoryAddress)mh$.invokeExact(data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$122.g_node_destroy$MH,"g_node_destroy");
    }
    public static void g_node_destroy ( Addressable root) {
        var mh$ = RuntimeHelper.requireNonNull(constants$122.g_node_destroy$MH, "g_node_destroy");
        try {
            mh$.invokeExact(root);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_unlink$MH() {
        return RuntimeHelper.requireNonNull(constants$122.g_node_unlink$MH,"g_node_unlink");
    }
    public static void g_node_unlink ( Addressable node) {
        var mh$ = RuntimeHelper.requireNonNull(constants$122.g_node_unlink$MH, "g_node_unlink");
        try {
            mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_copy_deep$MH() {
        return RuntimeHelper.requireNonNull(constants$122.g_node_copy_deep$MH,"g_node_copy_deep");
    }
    public static MemoryAddress g_node_copy_deep ( Addressable node,  Addressable copy_func,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$122.g_node_copy_deep$MH, "g_node_copy_deep");
        try {
            return (MemoryAddress)mh$.invokeExact(node, copy_func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$123.g_node_copy$MH,"g_node_copy");
    }
    public static MemoryAddress g_node_copy ( Addressable node) {
        var mh$ = RuntimeHelper.requireNonNull(constants$123.g_node_copy$MH, "g_node_copy");
        try {
            return (MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$123.g_node_insert$MH,"g_node_insert");
    }
    public static MemoryAddress g_node_insert ( Addressable parent,  int position,  Addressable node) {
        var mh$ = RuntimeHelper.requireNonNull(constants$123.g_node_insert$MH, "g_node_insert");
        try {
            return (MemoryAddress)mh$.invokeExact(parent, position, node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_insert_before$MH() {
        return RuntimeHelper.requireNonNull(constants$123.g_node_insert_before$MH,"g_node_insert_before");
    }
    public static MemoryAddress g_node_insert_before ( Addressable parent,  Addressable sibling,  Addressable node) {
        var mh$ = RuntimeHelper.requireNonNull(constants$123.g_node_insert_before$MH, "g_node_insert_before");
        try {
            return (MemoryAddress)mh$.invokeExact(parent, sibling, node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_insert_after$MH() {
        return RuntimeHelper.requireNonNull(constants$123.g_node_insert_after$MH,"g_node_insert_after");
    }
    public static MemoryAddress g_node_insert_after ( Addressable parent,  Addressable sibling,  Addressable node) {
        var mh$ = RuntimeHelper.requireNonNull(constants$123.g_node_insert_after$MH, "g_node_insert_after");
        try {
            return (MemoryAddress)mh$.invokeExact(parent, sibling, node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$123.g_node_prepend$MH,"g_node_prepend");
    }
    public static MemoryAddress g_node_prepend ( Addressable parent,  Addressable node) {
        var mh$ = RuntimeHelper.requireNonNull(constants$123.g_node_prepend$MH, "g_node_prepend");
        try {
            return (MemoryAddress)mh$.invokeExact(parent, node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_n_nodes$MH() {
        return RuntimeHelper.requireNonNull(constants$123.g_node_n_nodes$MH,"g_node_n_nodes");
    }
    public static int g_node_n_nodes ( Addressable root,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$123.g_node_n_nodes$MH, "g_node_n_nodes");
        try {
            return (int)mh$.invokeExact(root, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_get_root$MH() {
        return RuntimeHelper.requireNonNull(constants$124.g_node_get_root$MH,"g_node_get_root");
    }
    public static MemoryAddress g_node_get_root ( Addressable node) {
        var mh$ = RuntimeHelper.requireNonNull(constants$124.g_node_get_root$MH, "g_node_get_root");
        try {
            return (MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_is_ancestor$MH() {
        return RuntimeHelper.requireNonNull(constants$124.g_node_is_ancestor$MH,"g_node_is_ancestor");
    }
    public static int g_node_is_ancestor ( Addressable node,  Addressable descendant) {
        var mh$ = RuntimeHelper.requireNonNull(constants$124.g_node_is_ancestor$MH, "g_node_is_ancestor");
        try {
            return (int)mh$.invokeExact(node, descendant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$124.g_node_depth$MH,"g_node_depth");
    }
    public static int g_node_depth ( Addressable node) {
        var mh$ = RuntimeHelper.requireNonNull(constants$124.g_node_depth$MH, "g_node_depth");
        try {
            return (int)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_find$MH() {
        return RuntimeHelper.requireNonNull(constants$124.g_node_find$MH,"g_node_find");
    }
    public static MemoryAddress g_node_find ( Addressable root,  int order,  int flags,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$124.g_node_find$MH, "g_node_find");
        try {
            return (MemoryAddress)mh$.invokeExact(root, order, flags, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_traverse$MH() {
        return RuntimeHelper.requireNonNull(constants$124.g_node_traverse$MH,"g_node_traverse");
    }
    public static void g_node_traverse ( Addressable root,  int order,  int flags,  int max_depth,  Addressable func,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$124.g_node_traverse$MH, "g_node_traverse");
        try {
            mh$.invokeExact(root, order, flags, max_depth, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_max_height$MH() {
        return RuntimeHelper.requireNonNull(constants$124.g_node_max_height$MH,"g_node_max_height");
    }
    public static int g_node_max_height ( Addressable root) {
        var mh$ = RuntimeHelper.requireNonNull(constants$124.g_node_max_height$MH, "g_node_max_height");
        try {
            return (int)mh$.invokeExact(root);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_children_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$125.g_node_children_foreach$MH,"g_node_children_foreach");
    }
    public static void g_node_children_foreach ( Addressable node,  int flags,  Addressable func,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$125.g_node_children_foreach$MH, "g_node_children_foreach");
        try {
            mh$.invokeExact(node, flags, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_reverse_children$MH() {
        return RuntimeHelper.requireNonNull(constants$125.g_node_reverse_children$MH,"g_node_reverse_children");
    }
    public static void g_node_reverse_children ( Addressable node) {
        var mh$ = RuntimeHelper.requireNonNull(constants$125.g_node_reverse_children$MH, "g_node_reverse_children");
        try {
            mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_n_children$MH() {
        return RuntimeHelper.requireNonNull(constants$125.g_node_n_children$MH,"g_node_n_children");
    }
    public static int g_node_n_children ( Addressable node) {
        var mh$ = RuntimeHelper.requireNonNull(constants$125.g_node_n_children$MH, "g_node_n_children");
        try {
            return (int)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_nth_child$MH() {
        return RuntimeHelper.requireNonNull(constants$125.g_node_nth_child$MH,"g_node_nth_child");
    }
    public static MemoryAddress g_node_nth_child ( Addressable node,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$125.g_node_nth_child$MH, "g_node_nth_child");
        try {
            return (MemoryAddress)mh$.invokeExact(node, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_last_child$MH() {
        return RuntimeHelper.requireNonNull(constants$125.g_node_last_child$MH,"g_node_last_child");
    }
    public static MemoryAddress g_node_last_child ( Addressable node) {
        var mh$ = RuntimeHelper.requireNonNull(constants$125.g_node_last_child$MH, "g_node_last_child");
        try {
            return (MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_find_child$MH() {
        return RuntimeHelper.requireNonNull(constants$125.g_node_find_child$MH,"g_node_find_child");
    }
    public static MemoryAddress g_node_find_child ( Addressable node,  int flags,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$125.g_node_find_child$MH, "g_node_find_child");
        try {
            return (MemoryAddress)mh$.invokeExact(node, flags, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_child_position$MH() {
        return RuntimeHelper.requireNonNull(constants$126.g_node_child_position$MH,"g_node_child_position");
    }
    public static int g_node_child_position ( Addressable node,  Addressable child) {
        var mh$ = RuntimeHelper.requireNonNull(constants$126.g_node_child_position$MH, "g_node_child_position");
        try {
            return (int)mh$.invokeExact(node, child);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_child_index$MH() {
        return RuntimeHelper.requireNonNull(constants$126.g_node_child_index$MH,"g_node_child_index");
    }
    public static int g_node_child_index ( Addressable node,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$126.g_node_child_index$MH, "g_node_child_index");
        try {
            return (int)mh$.invokeExact(node, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_first_sibling$MH() {
        return RuntimeHelper.requireNonNull(constants$126.g_node_first_sibling$MH,"g_node_first_sibling");
    }
    public static MemoryAddress g_node_first_sibling ( Addressable node) {
        var mh$ = RuntimeHelper.requireNonNull(constants$126.g_node_first_sibling$MH, "g_node_first_sibling");
        try {
            return (MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_node_last_sibling$MH() {
        return RuntimeHelper.requireNonNull(constants$126.g_node_last_sibling$MH,"g_node_last_sibling");
    }
    public static MemoryAddress g_node_last_sibling ( Addressable node) {
        var mh$ = RuntimeHelper.requireNonNull(constants$126.g_node_last_sibling$MH, "g_node_last_sibling");
        try {
            return (MemoryAddress)mh$.invokeExact(node);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$126.g_list_alloc$MH,"g_list_alloc");
    }
    public static MemoryAddress g_list_alloc () {
        var mh$ = RuntimeHelper.requireNonNull(constants$126.g_list_alloc$MH, "g_list_alloc");
        try {
            return (MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_free$MH() {
        return RuntimeHelper.requireNonNull(constants$126.g_list_free$MH,"g_list_free");
    }
    public static void g_list_free ( Addressable list) {
        var mh$ = RuntimeHelper.requireNonNull(constants$126.g_list_free$MH, "g_list_free");
        try {
            mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_free_1$MH() {
        return RuntimeHelper.requireNonNull(constants$127.g_list_free_1$MH,"g_list_free_1");
    }
    public static void g_list_free_1 ( Addressable list) {
        var mh$ = RuntimeHelper.requireNonNull(constants$127.g_list_free_1$MH, "g_list_free_1");
        try {
            mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_free_full$MH() {
        return RuntimeHelper.requireNonNull(constants$127.g_list_free_full$MH,"g_list_free_full");
    }
    public static void g_list_free_full ( Addressable list,  Addressable free_func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$127.g_list_free_full$MH, "g_list_free_full");
        try {
            mh$.invokeExact(list, free_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_append$MH() {
        return RuntimeHelper.requireNonNull(constants$127.g_list_append$MH,"g_list_append");
    }
    public static MemoryAddress g_list_append ( Addressable list,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$127.g_list_append$MH, "g_list_append");
        try {
            return (MemoryAddress)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$127.g_list_prepend$MH,"g_list_prepend");
    }
    public static MemoryAddress g_list_prepend ( Addressable list,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$127.g_list_prepend$MH, "g_list_prepend");
        try {
            return (MemoryAddress)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$127.g_list_insert$MH,"g_list_insert");
    }
    public static MemoryAddress g_list_insert ( Addressable list,  Addressable data,  int position) {
        var mh$ = RuntimeHelper.requireNonNull(constants$127.g_list_insert$MH, "g_list_insert");
        try {
            return (MemoryAddress)mh$.invokeExact(list, data, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_insert_sorted$MH() {
        return RuntimeHelper.requireNonNull(constants$127.g_list_insert_sorted$MH,"g_list_insert_sorted");
    }
    public static MemoryAddress g_list_insert_sorted ( Addressable list,  Addressable data,  Addressable func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$127.g_list_insert_sorted$MH, "g_list_insert_sorted");
        try {
            return (MemoryAddress)mh$.invokeExact(list, data, func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_insert_sorted_with_data$MH() {
        return RuntimeHelper.requireNonNull(constants$128.g_list_insert_sorted_with_data$MH,"g_list_insert_sorted_with_data");
    }
    public static MemoryAddress g_list_insert_sorted_with_data ( Addressable list,  Addressable data,  Addressable func,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$128.g_list_insert_sorted_with_data$MH, "g_list_insert_sorted_with_data");
        try {
            return (MemoryAddress)mh$.invokeExact(list, data, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_insert_before$MH() {
        return RuntimeHelper.requireNonNull(constants$128.g_list_insert_before$MH,"g_list_insert_before");
    }
    public static MemoryAddress g_list_insert_before ( Addressable list,  Addressable sibling,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$128.g_list_insert_before$MH, "g_list_insert_before");
        try {
            return (MemoryAddress)mh$.invokeExact(list, sibling, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_insert_before_link$MH() {
        return RuntimeHelper.requireNonNull(constants$128.g_list_insert_before_link$MH,"g_list_insert_before_link");
    }
    public static MemoryAddress g_list_insert_before_link ( Addressable list,  Addressable sibling,  Addressable link_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$128.g_list_insert_before_link$MH, "g_list_insert_before_link");
        try {
            return (MemoryAddress)mh$.invokeExact(list, sibling, link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_concat$MH() {
        return RuntimeHelper.requireNonNull(constants$128.g_list_concat$MH,"g_list_concat");
    }
    public static MemoryAddress g_list_concat ( Addressable list1,  Addressable list2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$128.g_list_concat$MH, "g_list_concat");
        try {
            return (MemoryAddress)mh$.invokeExact(list1, list2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$128.g_list_remove$MH,"g_list_remove");
    }
    public static MemoryAddress g_list_remove ( Addressable list,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$128.g_list_remove$MH, "g_list_remove");
        try {
            return (MemoryAddress)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_remove_all$MH() {
        return RuntimeHelper.requireNonNull(constants$128.g_list_remove_all$MH,"g_list_remove_all");
    }
    public static MemoryAddress g_list_remove_all ( Addressable list,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$128.g_list_remove_all$MH, "g_list_remove_all");
        try {
            return (MemoryAddress)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_remove_link$MH() {
        return RuntimeHelper.requireNonNull(constants$129.g_list_remove_link$MH,"g_list_remove_link");
    }
    public static MemoryAddress g_list_remove_link ( Addressable list,  Addressable llink) {
        var mh$ = RuntimeHelper.requireNonNull(constants$129.g_list_remove_link$MH, "g_list_remove_link");
        try {
            return (MemoryAddress)mh$.invokeExact(list, llink);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_delete_link$MH() {
        return RuntimeHelper.requireNonNull(constants$129.g_list_delete_link$MH,"g_list_delete_link");
    }
    public static MemoryAddress g_list_delete_link ( Addressable list,  Addressable link_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$129.g_list_delete_link$MH, "g_list_delete_link");
        try {
            return (MemoryAddress)mh$.invokeExact(list, link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_reverse$MH() {
        return RuntimeHelper.requireNonNull(constants$129.g_list_reverse$MH,"g_list_reverse");
    }
    public static MemoryAddress g_list_reverse ( Addressable list) {
        var mh$ = RuntimeHelper.requireNonNull(constants$129.g_list_reverse$MH, "g_list_reverse");
        try {
            return (MemoryAddress)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$129.g_list_copy$MH,"g_list_copy");
    }
    public static MemoryAddress g_list_copy ( Addressable list) {
        var mh$ = RuntimeHelper.requireNonNull(constants$129.g_list_copy$MH, "g_list_copy");
        try {
            return (MemoryAddress)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_copy_deep$MH() {
        return RuntimeHelper.requireNonNull(constants$129.g_list_copy_deep$MH,"g_list_copy_deep");
    }
    public static MemoryAddress g_list_copy_deep ( Addressable list,  Addressable func,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$129.g_list_copy_deep$MH, "g_list_copy_deep");
        try {
            return (MemoryAddress)mh$.invokeExact(list, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_nth$MH() {
        return RuntimeHelper.requireNonNull(constants$129.g_list_nth$MH,"g_list_nth");
    }
    public static MemoryAddress g_list_nth ( Addressable list,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$129.g_list_nth$MH, "g_list_nth");
        try {
            return (MemoryAddress)mh$.invokeExact(list, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_nth_prev$MH() {
        return RuntimeHelper.requireNonNull(constants$130.g_list_nth_prev$MH,"g_list_nth_prev");
    }
    public static MemoryAddress g_list_nth_prev ( Addressable list,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$130.g_list_nth_prev$MH, "g_list_nth_prev");
        try {
            return (MemoryAddress)mh$.invokeExact(list, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_find$MH() {
        return RuntimeHelper.requireNonNull(constants$130.g_list_find$MH,"g_list_find");
    }
    public static MemoryAddress g_list_find ( Addressable list,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$130.g_list_find$MH, "g_list_find");
        try {
            return (MemoryAddress)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_find_custom$MH() {
        return RuntimeHelper.requireNonNull(constants$130.g_list_find_custom$MH,"g_list_find_custom");
    }
    public static MemoryAddress g_list_find_custom ( Addressable list,  Addressable data,  Addressable func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$130.g_list_find_custom$MH, "g_list_find_custom");
        try {
            return (MemoryAddress)mh$.invokeExact(list, data, func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_position$MH() {
        return RuntimeHelper.requireNonNull(constants$130.g_list_position$MH,"g_list_position");
    }
    public static int g_list_position ( Addressable list,  Addressable llink) {
        var mh$ = RuntimeHelper.requireNonNull(constants$130.g_list_position$MH, "g_list_position");
        try {
            return (int)mh$.invokeExact(list, llink);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_index$MH() {
        return RuntimeHelper.requireNonNull(constants$130.g_list_index$MH,"g_list_index");
    }
    public static int g_list_index ( Addressable list,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$130.g_list_index$MH, "g_list_index");
        try {
            return (int)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_last$MH() {
        return RuntimeHelper.requireNonNull(constants$130.g_list_last$MH,"g_list_last");
    }
    public static MemoryAddress g_list_last ( Addressable list) {
        var mh$ = RuntimeHelper.requireNonNull(constants$130.g_list_last$MH, "g_list_last");
        try {
            return (MemoryAddress)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_first$MH() {
        return RuntimeHelper.requireNonNull(constants$131.g_list_first$MH,"g_list_first");
    }
    public static MemoryAddress g_list_first ( Addressable list) {
        var mh$ = RuntimeHelper.requireNonNull(constants$131.g_list_first$MH, "g_list_first");
        try {
            return (MemoryAddress)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_length$MH() {
        return RuntimeHelper.requireNonNull(constants$131.g_list_length$MH,"g_list_length");
    }
    public static int g_list_length ( Addressable list) {
        var mh$ = RuntimeHelper.requireNonNull(constants$131.g_list_length$MH, "g_list_length");
        try {
            return (int)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$131.g_list_foreach$MH,"g_list_foreach");
    }
    public static void g_list_foreach ( Addressable list,  Addressable func,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$131.g_list_foreach$MH, "g_list_foreach");
        try {
            mh$.invokeExact(list, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$131.g_list_sort$MH,"g_list_sort");
    }
    public static MemoryAddress g_list_sort ( Addressable list,  Addressable compare_func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$131.g_list_sort$MH, "g_list_sort");
        try {
            return (MemoryAddress)mh$.invokeExact(list, compare_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_sort_with_data$MH() {
        return RuntimeHelper.requireNonNull(constants$131.g_list_sort_with_data$MH,"g_list_sort_with_data");
    }
    public static MemoryAddress g_list_sort_with_data ( Addressable list,  Addressable compare_func,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$131.g_list_sort_with_data$MH, "g_list_sort_with_data");
        try {
            return (MemoryAddress)mh$.invokeExact(list, compare_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_list_nth_data$MH() {
        return RuntimeHelper.requireNonNull(constants$131.g_list_nth_data$MH,"g_list_nth_data");
    }
    public static MemoryAddress g_list_nth_data ( Addressable list,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$131.g_list_nth_data$MH, "g_list_nth_data");
        try {
            return (MemoryAddress)mh$.invokeExact(list, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_clear_list$MH() {
        return RuntimeHelper.requireNonNull(constants$132.g_clear_list$MH,"g_clear_list");
    }
    public static void g_clear_list ( Addressable list_ptr,  Addressable destroy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$132.g_clear_list$MH, "g_clear_list");
        try {
            mh$.invokeExact(list_ptr, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_new$MH() {
        return RuntimeHelper.requireNonNull(constants$132.g_hash_table_new$MH,"g_hash_table_new");
    }
    public static MemoryAddress g_hash_table_new ( Addressable hash_func,  Addressable key_equal_func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$132.g_hash_table_new$MH, "g_hash_table_new");
        try {
            return (MemoryAddress)mh$.invokeExact(hash_func, key_equal_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_new_full$MH() {
        return RuntimeHelper.requireNonNull(constants$132.g_hash_table_new_full$MH,"g_hash_table_new_full");
    }
    public static MemoryAddress g_hash_table_new_full ( Addressable hash_func,  Addressable key_equal_func,  Addressable key_destroy_func,  Addressable value_destroy_func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$132.g_hash_table_new_full$MH, "g_hash_table_new_full");
        try {
            return (MemoryAddress)mh$.invokeExact(hash_func, key_equal_func, key_destroy_func, value_destroy_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$132.g_hash_table_destroy$MH,"g_hash_table_destroy");
    }
    public static void g_hash_table_destroy ( Addressable hash_table) {
        var mh$ = RuntimeHelper.requireNonNull(constants$132.g_hash_table_destroy$MH, "g_hash_table_destroy");
        try {
            mh$.invokeExact(hash_table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$133.g_hash_table_insert$MH,"g_hash_table_insert");
    }
    public static int g_hash_table_insert ( Addressable hash_table,  Addressable key,  Addressable value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$133.g_hash_table_insert$MH, "g_hash_table_insert");
        try {
            return (int)mh$.invokeExact(hash_table, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_replace$MH() {
        return RuntimeHelper.requireNonNull(constants$133.g_hash_table_replace$MH,"g_hash_table_replace");
    }
    public static int g_hash_table_replace ( Addressable hash_table,  Addressable key,  Addressable value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$133.g_hash_table_replace$MH, "g_hash_table_replace");
        try {
            return (int)mh$.invokeExact(hash_table, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_add$MH() {
        return RuntimeHelper.requireNonNull(constants$133.g_hash_table_add$MH,"g_hash_table_add");
    }
    public static int g_hash_table_add ( Addressable hash_table,  Addressable key) {
        var mh$ = RuntimeHelper.requireNonNull(constants$133.g_hash_table_add$MH, "g_hash_table_add");
        try {
            return (int)mh$.invokeExact(hash_table, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$133.g_hash_table_remove$MH,"g_hash_table_remove");
    }
    public static int g_hash_table_remove ( Addressable hash_table,  Addressable key) {
        var mh$ = RuntimeHelper.requireNonNull(constants$133.g_hash_table_remove$MH, "g_hash_table_remove");
        try {
            return (int)mh$.invokeExact(hash_table, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_remove_all$MH() {
        return RuntimeHelper.requireNonNull(constants$133.g_hash_table_remove_all$MH,"g_hash_table_remove_all");
    }
    public static void g_hash_table_remove_all ( Addressable hash_table) {
        var mh$ = RuntimeHelper.requireNonNull(constants$133.g_hash_table_remove_all$MH, "g_hash_table_remove_all");
        try {
            mh$.invokeExact(hash_table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_steal$MH() {
        return RuntimeHelper.requireNonNull(constants$133.g_hash_table_steal$MH,"g_hash_table_steal");
    }
    public static int g_hash_table_steal ( Addressable hash_table,  Addressable key) {
        var mh$ = RuntimeHelper.requireNonNull(constants$133.g_hash_table_steal$MH, "g_hash_table_steal");
        try {
            return (int)mh$.invokeExact(hash_table, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_steal_extended$MH() {
        return RuntimeHelper.requireNonNull(constants$134.g_hash_table_steal_extended$MH,"g_hash_table_steal_extended");
    }
    public static int g_hash_table_steal_extended ( Addressable hash_table,  Addressable lookup_key,  Addressable stolen_key,  Addressable stolen_value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$134.g_hash_table_steal_extended$MH, "g_hash_table_steal_extended");
        try {
            return (int)mh$.invokeExact(hash_table, lookup_key, stolen_key, stolen_value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_steal_all$MH() {
        return RuntimeHelper.requireNonNull(constants$134.g_hash_table_steal_all$MH,"g_hash_table_steal_all");
    }
    public static void g_hash_table_steal_all ( Addressable hash_table) {
        var mh$ = RuntimeHelper.requireNonNull(constants$134.g_hash_table_steal_all$MH, "g_hash_table_steal_all");
        try {
            mh$.invokeExact(hash_table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_lookup$MH() {
        return RuntimeHelper.requireNonNull(constants$134.g_hash_table_lookup$MH,"g_hash_table_lookup");
    }
    public static MemoryAddress g_hash_table_lookup ( Addressable hash_table,  Addressable key) {
        var mh$ = RuntimeHelper.requireNonNull(constants$134.g_hash_table_lookup$MH, "g_hash_table_lookup");
        try {
            return (MemoryAddress)mh$.invokeExact(hash_table, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_contains$MH() {
        return RuntimeHelper.requireNonNull(constants$134.g_hash_table_contains$MH,"g_hash_table_contains");
    }
    public static int g_hash_table_contains ( Addressable hash_table,  Addressable key) {
        var mh$ = RuntimeHelper.requireNonNull(constants$134.g_hash_table_contains$MH, "g_hash_table_contains");
        try {
            return (int)mh$.invokeExact(hash_table, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_lookup_extended$MH() {
        return RuntimeHelper.requireNonNull(constants$134.g_hash_table_lookup_extended$MH,"g_hash_table_lookup_extended");
    }
    public static int g_hash_table_lookup_extended ( Addressable hash_table,  Addressable lookup_key,  Addressable orig_key,  Addressable value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$134.g_hash_table_lookup_extended$MH, "g_hash_table_lookup_extended");
        try {
            return (int)mh$.invokeExact(hash_table, lookup_key, orig_key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$134.g_hash_table_foreach$MH,"g_hash_table_foreach");
    }
    public static void g_hash_table_foreach ( Addressable hash_table,  Addressable func,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$134.g_hash_table_foreach$MH, "g_hash_table_foreach");
        try {
            mh$.invokeExact(hash_table, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_find$MH() {
        return RuntimeHelper.requireNonNull(constants$135.g_hash_table_find$MH,"g_hash_table_find");
    }
    public static MemoryAddress g_hash_table_find ( Addressable hash_table,  Addressable predicate,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$135.g_hash_table_find$MH, "g_hash_table_find");
        try {
            return (MemoryAddress)mh$.invokeExact(hash_table, predicate, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_foreach_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$135.g_hash_table_foreach_remove$MH,"g_hash_table_foreach_remove");
    }
    public static int g_hash_table_foreach_remove ( Addressable hash_table,  Addressable func,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$135.g_hash_table_foreach_remove$MH, "g_hash_table_foreach_remove");
        try {
            return (int)mh$.invokeExact(hash_table, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_foreach_steal$MH() {
        return RuntimeHelper.requireNonNull(constants$135.g_hash_table_foreach_steal$MH,"g_hash_table_foreach_steal");
    }
    public static int g_hash_table_foreach_steal ( Addressable hash_table,  Addressable func,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$135.g_hash_table_foreach_steal$MH, "g_hash_table_foreach_steal");
        try {
            return (int)mh$.invokeExact(hash_table, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_size$MH() {
        return RuntimeHelper.requireNonNull(constants$135.g_hash_table_size$MH,"g_hash_table_size");
    }
    public static int g_hash_table_size ( Addressable hash_table) {
        var mh$ = RuntimeHelper.requireNonNull(constants$135.g_hash_table_size$MH, "g_hash_table_size");
        try {
            return (int)mh$.invokeExact(hash_table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_get_keys$MH() {
        return RuntimeHelper.requireNonNull(constants$135.g_hash_table_get_keys$MH,"g_hash_table_get_keys");
    }
    public static MemoryAddress g_hash_table_get_keys ( Addressable hash_table) {
        var mh$ = RuntimeHelper.requireNonNull(constants$135.g_hash_table_get_keys$MH, "g_hash_table_get_keys");
        try {
            return (MemoryAddress)mh$.invokeExact(hash_table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_get_values$MH() {
        return RuntimeHelper.requireNonNull(constants$135.g_hash_table_get_values$MH,"g_hash_table_get_values");
    }
    public static MemoryAddress g_hash_table_get_values ( Addressable hash_table) {
        var mh$ = RuntimeHelper.requireNonNull(constants$135.g_hash_table_get_values$MH, "g_hash_table_get_values");
        try {
            return (MemoryAddress)mh$.invokeExact(hash_table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_get_keys_as_array$MH() {
        return RuntimeHelper.requireNonNull(constants$136.g_hash_table_get_keys_as_array$MH,"g_hash_table_get_keys_as_array");
    }
    public static MemoryAddress g_hash_table_get_keys_as_array ( Addressable hash_table,  Addressable length) {
        var mh$ = RuntimeHelper.requireNonNull(constants$136.g_hash_table_get_keys_as_array$MH, "g_hash_table_get_keys_as_array");
        try {
            return (MemoryAddress)mh$.invokeExact(hash_table, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_iter_init$MH() {
        return RuntimeHelper.requireNonNull(constants$136.g_hash_table_iter_init$MH,"g_hash_table_iter_init");
    }
    public static void g_hash_table_iter_init ( Addressable iter,  Addressable hash_table) {
        var mh$ = RuntimeHelper.requireNonNull(constants$136.g_hash_table_iter_init$MH, "g_hash_table_iter_init");
        try {
            mh$.invokeExact(iter, hash_table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_iter_next$MH() {
        return RuntimeHelper.requireNonNull(constants$136.g_hash_table_iter_next$MH,"g_hash_table_iter_next");
    }
    public static int g_hash_table_iter_next ( Addressable iter,  Addressable key,  Addressable value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$136.g_hash_table_iter_next$MH, "g_hash_table_iter_next");
        try {
            return (int)mh$.invokeExact(iter, key, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_iter_get_hash_table$MH() {
        return RuntimeHelper.requireNonNull(constants$136.g_hash_table_iter_get_hash_table$MH,"g_hash_table_iter_get_hash_table");
    }
    public static MemoryAddress g_hash_table_iter_get_hash_table ( Addressable iter) {
        var mh$ = RuntimeHelper.requireNonNull(constants$136.g_hash_table_iter_get_hash_table$MH, "g_hash_table_iter_get_hash_table");
        try {
            return (MemoryAddress)mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_iter_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$136.g_hash_table_iter_remove$MH,"g_hash_table_iter_remove");
    }
    public static void g_hash_table_iter_remove ( Addressable iter) {
        var mh$ = RuntimeHelper.requireNonNull(constants$136.g_hash_table_iter_remove$MH, "g_hash_table_iter_remove");
        try {
            mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_iter_replace$MH() {
        return RuntimeHelper.requireNonNull(constants$136.g_hash_table_iter_replace$MH,"g_hash_table_iter_replace");
    }
    public static void g_hash_table_iter_replace ( Addressable iter,  Addressable value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$136.g_hash_table_iter_replace$MH, "g_hash_table_iter_replace");
        try {
            mh$.invokeExact(iter, value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_iter_steal$MH() {
        return RuntimeHelper.requireNonNull(constants$137.g_hash_table_iter_steal$MH,"g_hash_table_iter_steal");
    }
    public static void g_hash_table_iter_steal ( Addressable iter) {
        var mh$ = RuntimeHelper.requireNonNull(constants$137.g_hash_table_iter_steal$MH, "g_hash_table_iter_steal");
        try {
            mh$.invokeExact(iter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$137.g_hash_table_ref$MH,"g_hash_table_ref");
    }
    public static MemoryAddress g_hash_table_ref ( Addressable hash_table) {
        var mh$ = RuntimeHelper.requireNonNull(constants$137.g_hash_table_ref$MH, "g_hash_table_ref");
        try {
            return (MemoryAddress)mh$.invokeExact(hash_table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hash_table_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$137.g_hash_table_unref$MH,"g_hash_table_unref");
    }
    public static void g_hash_table_unref ( Addressable hash_table) {
        var mh$ = RuntimeHelper.requireNonNull(constants$137.g_hash_table_unref$MH, "g_hash_table_unref");
        try {
            mh$.invokeExact(hash_table);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_str_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$137.g_str_equal$MH,"g_str_equal");
    }
    public static int g_str_equal ( Addressable v1,  Addressable v2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$137.g_str_equal$MH, "g_str_equal");
        try {
            return (int)mh$.invokeExact(v1, v2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_str_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$137.g_str_hash$MH,"g_str_hash");
    }
    public static int g_str_hash ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$137.g_str_hash$MH, "g_str_hash");
        try {
            return (int)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_int_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$137.g_int_equal$MH,"g_int_equal");
    }
    public static int g_int_equal ( Addressable v1,  Addressable v2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$137.g_int_equal$MH, "g_int_equal");
        try {
            return (int)mh$.invokeExact(v1, v2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_int_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$138.g_int_hash$MH,"g_int_hash");
    }
    public static int g_int_hash ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$138.g_int_hash$MH, "g_int_hash");
        try {
            return (int)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_int64_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$138.g_int64_equal$MH,"g_int64_equal");
    }
    public static int g_int64_equal ( Addressable v1,  Addressable v2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$138.g_int64_equal$MH, "g_int64_equal");
        try {
            return (int)mh$.invokeExact(v1, v2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_int64_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$138.g_int64_hash$MH,"g_int64_hash");
    }
    public static int g_int64_hash ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$138.g_int64_hash$MH, "g_int64_hash");
        try {
            return (int)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_double_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$138.g_double_equal$MH,"g_double_equal");
    }
    public static int g_double_equal ( Addressable v1,  Addressable v2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$138.g_double_equal$MH, "g_double_equal");
        try {
            return (int)mh$.invokeExact(v1, v2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_double_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$138.g_double_hash$MH,"g_double_hash");
    }
    public static int g_double_hash ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$138.g_double_hash$MH, "g_double_hash");
        try {
            return (int)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_direct_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$138.g_direct_hash$MH,"g_direct_hash");
    }
    public static int g_direct_hash ( Addressable v) {
        var mh$ = RuntimeHelper.requireNonNull(constants$138.g_direct_hash$MH, "g_direct_hash");
        try {
            return (int)mh$.invokeExact(v);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_direct_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$139.g_direct_equal$MH,"g_direct_equal");
    }
    public static int g_direct_equal ( Addressable v1,  Addressable v2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$139.g_direct_equal$MH, "g_direct_equal");
        try {
            return (int)mh$.invokeExact(v1, v2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hmac_new$MH() {
        return RuntimeHelper.requireNonNull(constants$139.g_hmac_new$MH,"g_hmac_new");
    }
    public static MemoryAddress g_hmac_new ( int digest_type,  Addressable key,  long key_len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$139.g_hmac_new$MH, "g_hmac_new");
        try {
            return (MemoryAddress)mh$.invokeExact(digest_type, key, key_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hmac_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$139.g_hmac_copy$MH,"g_hmac_copy");
    }
    public static MemoryAddress g_hmac_copy ( Addressable hmac) {
        var mh$ = RuntimeHelper.requireNonNull(constants$139.g_hmac_copy$MH, "g_hmac_copy");
        try {
            return (MemoryAddress)mh$.invokeExact(hmac);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hmac_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$139.g_hmac_ref$MH,"g_hmac_ref");
    }
    public static MemoryAddress g_hmac_ref ( Addressable hmac) {
        var mh$ = RuntimeHelper.requireNonNull(constants$139.g_hmac_ref$MH, "g_hmac_ref");
        try {
            return (MemoryAddress)mh$.invokeExact(hmac);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hmac_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$139.g_hmac_unref$MH,"g_hmac_unref");
    }
    public static void g_hmac_unref ( Addressable hmac) {
        var mh$ = RuntimeHelper.requireNonNull(constants$139.g_hmac_unref$MH, "g_hmac_unref");
        try {
            mh$.invokeExact(hmac);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hmac_update$MH() {
        return RuntimeHelper.requireNonNull(constants$139.g_hmac_update$MH,"g_hmac_update");
    }
    public static void g_hmac_update ( Addressable hmac,  Addressable data,  long length) {
        var mh$ = RuntimeHelper.requireNonNull(constants$139.g_hmac_update$MH, "g_hmac_update");
        try {
            mh$.invokeExact(hmac, data, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hmac_get_string$MH() {
        return RuntimeHelper.requireNonNull(constants$140.g_hmac_get_string$MH,"g_hmac_get_string");
    }
    public static MemoryAddress g_hmac_get_string ( Addressable hmac) {
        var mh$ = RuntimeHelper.requireNonNull(constants$140.g_hmac_get_string$MH, "g_hmac_get_string");
        try {
            return (MemoryAddress)mh$.invokeExact(hmac);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hmac_get_digest$MH() {
        return RuntimeHelper.requireNonNull(constants$140.g_hmac_get_digest$MH,"g_hmac_get_digest");
    }
    public static void g_hmac_get_digest ( Addressable hmac,  Addressable buffer,  Addressable digest_len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$140.g_hmac_get_digest$MH, "g_hmac_get_digest");
        try {
            mh$.invokeExact(hmac, buffer, digest_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_compute_hmac_for_data$MH() {
        return RuntimeHelper.requireNonNull(constants$140.g_compute_hmac_for_data$MH,"g_compute_hmac_for_data");
    }
    public static MemoryAddress g_compute_hmac_for_data ( int digest_type,  Addressable key,  long key_len,  Addressable data,  long length) {
        var mh$ = RuntimeHelper.requireNonNull(constants$140.g_compute_hmac_for_data$MH, "g_compute_hmac_for_data");
        try {
            return (MemoryAddress)mh$.invokeExact(digest_type, key, key_len, data, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_compute_hmac_for_string$MH() {
        return RuntimeHelper.requireNonNull(constants$140.g_compute_hmac_for_string$MH,"g_compute_hmac_for_string");
    }
    public static MemoryAddress g_compute_hmac_for_string ( int digest_type,  Addressable key,  long key_len,  Addressable str,  long length) {
        var mh$ = RuntimeHelper.requireNonNull(constants$140.g_compute_hmac_for_string$MH, "g_compute_hmac_for_string");
        try {
            return (MemoryAddress)mh$.invokeExact(digest_type, key, key_len, str, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_compute_hmac_for_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$140.g_compute_hmac_for_bytes$MH,"g_compute_hmac_for_bytes");
    }
    public static MemoryAddress g_compute_hmac_for_bytes ( int digest_type,  Addressable key,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$140.g_compute_hmac_for_bytes$MH, "g_compute_hmac_for_bytes");
        try {
            return (MemoryAddress)mh$.invokeExact(digest_type, key, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_HOOK_FLAG_ACTIVE() {
        return (int)1L;
    }
    public static int G_HOOK_FLAG_IN_CALL() {
        return (int)2L;
    }
    public static int G_HOOK_FLAG_MASK() {
        return (int)15L;
    }
    public static MethodHandle g_hook_list_init$MH() {
        return RuntimeHelper.requireNonNull(constants$143.g_hook_list_init$MH,"g_hook_list_init");
    }
    public static void g_hook_list_init ( Addressable hook_list,  int hook_size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$143.g_hook_list_init$MH, "g_hook_list_init");
        try {
            mh$.invokeExact(hook_list, hook_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_list_clear$MH() {
        return RuntimeHelper.requireNonNull(constants$143.g_hook_list_clear$MH,"g_hook_list_clear");
    }
    public static void g_hook_list_clear ( Addressable hook_list) {
        var mh$ = RuntimeHelper.requireNonNull(constants$143.g_hook_list_clear$MH, "g_hook_list_clear");
        try {
            mh$.invokeExact(hook_list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$143.g_hook_alloc$MH,"g_hook_alloc");
    }
    public static MemoryAddress g_hook_alloc ( Addressable hook_list) {
        var mh$ = RuntimeHelper.requireNonNull(constants$143.g_hook_alloc$MH, "g_hook_alloc");
        try {
            return (MemoryAddress)mh$.invokeExact(hook_list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_free$MH() {
        return RuntimeHelper.requireNonNull(constants$143.g_hook_free$MH,"g_hook_free");
    }
    public static void g_hook_free ( Addressable hook_list,  Addressable hook) {
        var mh$ = RuntimeHelper.requireNonNull(constants$143.g_hook_free$MH, "g_hook_free");
        try {
            mh$.invokeExact(hook_list, hook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$143.g_hook_ref$MH,"g_hook_ref");
    }
    public static MemoryAddress g_hook_ref ( Addressable hook_list,  Addressable hook) {
        var mh$ = RuntimeHelper.requireNonNull(constants$143.g_hook_ref$MH, "g_hook_ref");
        try {
            return (MemoryAddress)mh$.invokeExact(hook_list, hook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$144.g_hook_unref$MH,"g_hook_unref");
    }
    public static void g_hook_unref ( Addressable hook_list,  Addressable hook) {
        var mh$ = RuntimeHelper.requireNonNull(constants$144.g_hook_unref$MH, "g_hook_unref");
        try {
            mh$.invokeExact(hook_list, hook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$144.g_hook_destroy$MH,"g_hook_destroy");
    }
    public static int g_hook_destroy ( Addressable hook_list,  long hook_id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$144.g_hook_destroy$MH, "g_hook_destroy");
        try {
            return (int)mh$.invokeExact(hook_list, hook_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_destroy_link$MH() {
        return RuntimeHelper.requireNonNull(constants$144.g_hook_destroy_link$MH,"g_hook_destroy_link");
    }
    public static void g_hook_destroy_link ( Addressable hook_list,  Addressable hook) {
        var mh$ = RuntimeHelper.requireNonNull(constants$144.g_hook_destroy_link$MH, "g_hook_destroy_link");
        try {
            mh$.invokeExact(hook_list, hook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$144.g_hook_prepend$MH,"g_hook_prepend");
    }
    public static void g_hook_prepend ( Addressable hook_list,  Addressable hook) {
        var mh$ = RuntimeHelper.requireNonNull(constants$144.g_hook_prepend$MH, "g_hook_prepend");
        try {
            mh$.invokeExact(hook_list, hook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_insert_before$MH() {
        return RuntimeHelper.requireNonNull(constants$144.g_hook_insert_before$MH,"g_hook_insert_before");
    }
    public static void g_hook_insert_before ( Addressable hook_list,  Addressable sibling,  Addressable hook) {
        var mh$ = RuntimeHelper.requireNonNull(constants$144.g_hook_insert_before$MH, "g_hook_insert_before");
        try {
            mh$.invokeExact(hook_list, sibling, hook);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_insert_sorted$MH() {
        return RuntimeHelper.requireNonNull(constants$144.g_hook_insert_sorted$MH,"g_hook_insert_sorted");
    }
    public static void g_hook_insert_sorted ( Addressable hook_list,  Addressable hook,  Addressable func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$144.g_hook_insert_sorted$MH, "g_hook_insert_sorted");
        try {
            mh$.invokeExact(hook_list, hook, func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_get$MH() {
        return RuntimeHelper.requireNonNull(constants$145.g_hook_get$MH,"g_hook_get");
    }
    public static MemoryAddress g_hook_get ( Addressable hook_list,  long hook_id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$145.g_hook_get$MH, "g_hook_get");
        try {
            return (MemoryAddress)mh$.invokeExact(hook_list, hook_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_find$MH() {
        return RuntimeHelper.requireNonNull(constants$145.g_hook_find$MH,"g_hook_find");
    }
    public static MemoryAddress g_hook_find ( Addressable hook_list,  int need_valids,  Addressable func,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$145.g_hook_find$MH, "g_hook_find");
        try {
            return (MemoryAddress)mh$.invokeExact(hook_list, need_valids, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_find_data$MH() {
        return RuntimeHelper.requireNonNull(constants$145.g_hook_find_data$MH,"g_hook_find_data");
    }
    public static MemoryAddress g_hook_find_data ( Addressable hook_list,  int need_valids,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$145.g_hook_find_data$MH, "g_hook_find_data");
        try {
            return (MemoryAddress)mh$.invokeExact(hook_list, need_valids, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_find_func$MH() {
        return RuntimeHelper.requireNonNull(constants$145.g_hook_find_func$MH,"g_hook_find_func");
    }
    public static MemoryAddress g_hook_find_func ( Addressable hook_list,  int need_valids,  Addressable func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$145.g_hook_find_func$MH, "g_hook_find_func");
        try {
            return (MemoryAddress)mh$.invokeExact(hook_list, need_valids, func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_find_func_data$MH() {
        return RuntimeHelper.requireNonNull(constants$145.g_hook_find_func_data$MH,"g_hook_find_func_data");
    }
    public static MemoryAddress g_hook_find_func_data ( Addressable hook_list,  int need_valids,  Addressable func,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$145.g_hook_find_func_data$MH, "g_hook_find_func_data");
        try {
            return (MemoryAddress)mh$.invokeExact(hook_list, need_valids, func, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_first_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$145.g_hook_first_valid$MH,"g_hook_first_valid");
    }
    public static MemoryAddress g_hook_first_valid ( Addressable hook_list,  int may_be_in_call) {
        var mh$ = RuntimeHelper.requireNonNull(constants$145.g_hook_first_valid$MH, "g_hook_first_valid");
        try {
            return (MemoryAddress)mh$.invokeExact(hook_list, may_be_in_call);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_next_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$146.g_hook_next_valid$MH,"g_hook_next_valid");
    }
    public static MemoryAddress g_hook_next_valid ( Addressable hook_list,  Addressable hook,  int may_be_in_call) {
        var mh$ = RuntimeHelper.requireNonNull(constants$146.g_hook_next_valid$MH, "g_hook_next_valid");
        try {
            return (MemoryAddress)mh$.invokeExact(hook_list, hook, may_be_in_call);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_compare_ids$MH() {
        return RuntimeHelper.requireNonNull(constants$146.g_hook_compare_ids$MH,"g_hook_compare_ids");
    }
    public static int g_hook_compare_ids ( Addressable new_hook,  Addressable sibling) {
        var mh$ = RuntimeHelper.requireNonNull(constants$146.g_hook_compare_ids$MH, "g_hook_compare_ids");
        try {
            return (int)mh$.invokeExact(new_hook, sibling);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_list_invoke$MH() {
        return RuntimeHelper.requireNonNull(constants$146.g_hook_list_invoke$MH,"g_hook_list_invoke");
    }
    public static void g_hook_list_invoke ( Addressable hook_list,  int may_recurse) {
        var mh$ = RuntimeHelper.requireNonNull(constants$146.g_hook_list_invoke$MH, "g_hook_list_invoke");
        try {
            mh$.invokeExact(hook_list, may_recurse);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_list_invoke_check$MH() {
        return RuntimeHelper.requireNonNull(constants$146.g_hook_list_invoke_check$MH,"g_hook_list_invoke_check");
    }
    public static void g_hook_list_invoke_check ( Addressable hook_list,  int may_recurse) {
        var mh$ = RuntimeHelper.requireNonNull(constants$146.g_hook_list_invoke_check$MH, "g_hook_list_invoke_check");
        try {
            mh$.invokeExact(hook_list, may_recurse);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_list_marshal$MH() {
        return RuntimeHelper.requireNonNull(constants$146.g_hook_list_marshal$MH,"g_hook_list_marshal");
    }
    public static void g_hook_list_marshal ( Addressable hook_list,  int may_recurse,  Addressable marshaller,  Addressable marshal_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$146.g_hook_list_marshal$MH, "g_hook_list_marshal");
        try {
            mh$.invokeExact(hook_list, may_recurse, marshaller, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hook_list_marshal_check$MH() {
        return RuntimeHelper.requireNonNull(constants$146.g_hook_list_marshal_check$MH,"g_hook_list_marshal_check");
    }
    public static void g_hook_list_marshal_check ( Addressable hook_list,  int may_recurse,  Addressable marshaller,  Addressable marshal_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$146.g_hook_list_marshal_check$MH, "g_hook_list_marshal_check");
        try {
            mh$.invokeExact(hook_list, may_recurse, marshaller, marshal_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hostname_is_non_ascii$MH() {
        return RuntimeHelper.requireNonNull(constants$147.g_hostname_is_non_ascii$MH,"g_hostname_is_non_ascii");
    }
    public static int g_hostname_is_non_ascii ( Addressable hostname) {
        var mh$ = RuntimeHelper.requireNonNull(constants$147.g_hostname_is_non_ascii$MH, "g_hostname_is_non_ascii");
        try {
            return (int)mh$.invokeExact(hostname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hostname_is_ascii_encoded$MH() {
        return RuntimeHelper.requireNonNull(constants$147.g_hostname_is_ascii_encoded$MH,"g_hostname_is_ascii_encoded");
    }
    public static int g_hostname_is_ascii_encoded ( Addressable hostname) {
        var mh$ = RuntimeHelper.requireNonNull(constants$147.g_hostname_is_ascii_encoded$MH, "g_hostname_is_ascii_encoded");
        try {
            return (int)mh$.invokeExact(hostname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hostname_is_ip_address$MH() {
        return RuntimeHelper.requireNonNull(constants$147.g_hostname_is_ip_address$MH,"g_hostname_is_ip_address");
    }
    public static int g_hostname_is_ip_address ( Addressable hostname) {
        var mh$ = RuntimeHelper.requireNonNull(constants$147.g_hostname_is_ip_address$MH, "g_hostname_is_ip_address");
        try {
            return (int)mh$.invokeExact(hostname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hostname_to_ascii$MH() {
        return RuntimeHelper.requireNonNull(constants$147.g_hostname_to_ascii$MH,"g_hostname_to_ascii");
    }
    public static MemoryAddress g_hostname_to_ascii ( Addressable hostname) {
        var mh$ = RuntimeHelper.requireNonNull(constants$147.g_hostname_to_ascii$MH, "g_hostname_to_ascii");
        try {
            return (MemoryAddress)mh$.invokeExact(hostname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_hostname_to_unicode$MH() {
        return RuntimeHelper.requireNonNull(constants$147.g_hostname_to_unicode$MH,"g_hostname_to_unicode");
    }
    public static MemoryAddress g_hostname_to_unicode ( Addressable hostname) {
        var mh$ = RuntimeHelper.requireNonNull(constants$147.g_hostname_to_unicode$MH, "g_hostname_to_unicode");
        try {
            return (MemoryAddress)mh$.invokeExact(hostname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_poll$MH() {
        return RuntimeHelper.requireNonNull(constants$148.g_poll$MH,"g_poll");
    }
    public static int g_poll ( Addressable fds,  int nfds,  int timeout) {
        var mh$ = RuntimeHelper.requireNonNull(constants$148.g_poll$MH, "g_poll");
        try {
            return (int)mh$.invokeExact(fds, nfds, timeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$148.g_slist_alloc$MH,"g_slist_alloc");
    }
    public static MemoryAddress g_slist_alloc () {
        var mh$ = RuntimeHelper.requireNonNull(constants$148.g_slist_alloc$MH, "g_slist_alloc");
        try {
            return (MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_free$MH() {
        return RuntimeHelper.requireNonNull(constants$148.g_slist_free$MH,"g_slist_free");
    }
    public static void g_slist_free ( Addressable list) {
        var mh$ = RuntimeHelper.requireNonNull(constants$148.g_slist_free$MH, "g_slist_free");
        try {
            mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_free_1$MH() {
        return RuntimeHelper.requireNonNull(constants$148.g_slist_free_1$MH,"g_slist_free_1");
    }
    public static void g_slist_free_1 ( Addressable list) {
        var mh$ = RuntimeHelper.requireNonNull(constants$148.g_slist_free_1$MH, "g_slist_free_1");
        try {
            mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_free_full$MH() {
        return RuntimeHelper.requireNonNull(constants$148.g_slist_free_full$MH,"g_slist_free_full");
    }
    public static void g_slist_free_full ( Addressable list,  Addressable free_func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$148.g_slist_free_full$MH, "g_slist_free_full");
        try {
            mh$.invokeExact(list, free_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_append$MH() {
        return RuntimeHelper.requireNonNull(constants$149.g_slist_append$MH,"g_slist_append");
    }
    public static MemoryAddress g_slist_append ( Addressable list,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$149.g_slist_append$MH, "g_slist_append");
        try {
            return (MemoryAddress)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$149.g_slist_prepend$MH,"g_slist_prepend");
    }
    public static MemoryAddress g_slist_prepend ( Addressable list,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$149.g_slist_prepend$MH, "g_slist_prepend");
        try {
            return (MemoryAddress)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$149.g_slist_insert$MH,"g_slist_insert");
    }
    public static MemoryAddress g_slist_insert ( Addressable list,  Addressable data,  int position) {
        var mh$ = RuntimeHelper.requireNonNull(constants$149.g_slist_insert$MH, "g_slist_insert");
        try {
            return (MemoryAddress)mh$.invokeExact(list, data, position);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_insert_sorted$MH() {
        return RuntimeHelper.requireNonNull(constants$149.g_slist_insert_sorted$MH,"g_slist_insert_sorted");
    }
    public static MemoryAddress g_slist_insert_sorted ( Addressable list,  Addressable data,  Addressable func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$149.g_slist_insert_sorted$MH, "g_slist_insert_sorted");
        try {
            return (MemoryAddress)mh$.invokeExact(list, data, func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_insert_sorted_with_data$MH() {
        return RuntimeHelper.requireNonNull(constants$149.g_slist_insert_sorted_with_data$MH,"g_slist_insert_sorted_with_data");
    }
    public static MemoryAddress g_slist_insert_sorted_with_data ( Addressable list,  Addressable data,  Addressable func,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$149.g_slist_insert_sorted_with_data$MH, "g_slist_insert_sorted_with_data");
        try {
            return (MemoryAddress)mh$.invokeExact(list, data, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_insert_before$MH() {
        return RuntimeHelper.requireNonNull(constants$149.g_slist_insert_before$MH,"g_slist_insert_before");
    }
    public static MemoryAddress g_slist_insert_before ( Addressable slist,  Addressable sibling,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$149.g_slist_insert_before$MH, "g_slist_insert_before");
        try {
            return (MemoryAddress)mh$.invokeExact(slist, sibling, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_concat$MH() {
        return RuntimeHelper.requireNonNull(constants$150.g_slist_concat$MH,"g_slist_concat");
    }
    public static MemoryAddress g_slist_concat ( Addressable list1,  Addressable list2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$150.g_slist_concat$MH, "g_slist_concat");
        try {
            return (MemoryAddress)mh$.invokeExact(list1, list2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$150.g_slist_remove$MH,"g_slist_remove");
    }
    public static MemoryAddress g_slist_remove ( Addressable list,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$150.g_slist_remove$MH, "g_slist_remove");
        try {
            return (MemoryAddress)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_remove_all$MH() {
        return RuntimeHelper.requireNonNull(constants$150.g_slist_remove_all$MH,"g_slist_remove_all");
    }
    public static MemoryAddress g_slist_remove_all ( Addressable list,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$150.g_slist_remove_all$MH, "g_slist_remove_all");
        try {
            return (MemoryAddress)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_remove_link$MH() {
        return RuntimeHelper.requireNonNull(constants$150.g_slist_remove_link$MH,"g_slist_remove_link");
    }
    public static MemoryAddress g_slist_remove_link ( Addressable list,  Addressable link_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$150.g_slist_remove_link$MH, "g_slist_remove_link");
        try {
            return (MemoryAddress)mh$.invokeExact(list, link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_delete_link$MH() {
        return RuntimeHelper.requireNonNull(constants$150.g_slist_delete_link$MH,"g_slist_delete_link");
    }
    public static MemoryAddress g_slist_delete_link ( Addressable list,  Addressable link_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$150.g_slist_delete_link$MH, "g_slist_delete_link");
        try {
            return (MemoryAddress)mh$.invokeExact(list, link_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_reverse$MH() {
        return RuntimeHelper.requireNonNull(constants$150.g_slist_reverse$MH,"g_slist_reverse");
    }
    public static MemoryAddress g_slist_reverse ( Addressable list) {
        var mh$ = RuntimeHelper.requireNonNull(constants$150.g_slist_reverse$MH, "g_slist_reverse");
        try {
            return (MemoryAddress)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$151.g_slist_copy$MH,"g_slist_copy");
    }
    public static MemoryAddress g_slist_copy ( Addressable list) {
        var mh$ = RuntimeHelper.requireNonNull(constants$151.g_slist_copy$MH, "g_slist_copy");
        try {
            return (MemoryAddress)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_copy_deep$MH() {
        return RuntimeHelper.requireNonNull(constants$151.g_slist_copy_deep$MH,"g_slist_copy_deep");
    }
    public static MemoryAddress g_slist_copy_deep ( Addressable list,  Addressable func,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$151.g_slist_copy_deep$MH, "g_slist_copy_deep");
        try {
            return (MemoryAddress)mh$.invokeExact(list, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_nth$MH() {
        return RuntimeHelper.requireNonNull(constants$151.g_slist_nth$MH,"g_slist_nth");
    }
    public static MemoryAddress g_slist_nth ( Addressable list,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$151.g_slist_nth$MH, "g_slist_nth");
        try {
            return (MemoryAddress)mh$.invokeExact(list, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_find$MH() {
        return RuntimeHelper.requireNonNull(constants$151.g_slist_find$MH,"g_slist_find");
    }
    public static MemoryAddress g_slist_find ( Addressable list,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$151.g_slist_find$MH, "g_slist_find");
        try {
            return (MemoryAddress)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_find_custom$MH() {
        return RuntimeHelper.requireNonNull(constants$151.g_slist_find_custom$MH,"g_slist_find_custom");
    }
    public static MemoryAddress g_slist_find_custom ( Addressable list,  Addressable data,  Addressable func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$151.g_slist_find_custom$MH, "g_slist_find_custom");
        try {
            return (MemoryAddress)mh$.invokeExact(list, data, func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_position$MH() {
        return RuntimeHelper.requireNonNull(constants$151.g_slist_position$MH,"g_slist_position");
    }
    public static int g_slist_position ( Addressable list,  Addressable llink) {
        var mh$ = RuntimeHelper.requireNonNull(constants$151.g_slist_position$MH, "g_slist_position");
        try {
            return (int)mh$.invokeExact(list, llink);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_index$MH() {
        return RuntimeHelper.requireNonNull(constants$152.g_slist_index$MH,"g_slist_index");
    }
    public static int g_slist_index ( Addressable list,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$152.g_slist_index$MH, "g_slist_index");
        try {
            return (int)mh$.invokeExact(list, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_last$MH() {
        return RuntimeHelper.requireNonNull(constants$152.g_slist_last$MH,"g_slist_last");
    }
    public static MemoryAddress g_slist_last ( Addressable list) {
        var mh$ = RuntimeHelper.requireNonNull(constants$152.g_slist_last$MH, "g_slist_last");
        try {
            return (MemoryAddress)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_length$MH() {
        return RuntimeHelper.requireNonNull(constants$152.g_slist_length$MH,"g_slist_length");
    }
    public static int g_slist_length ( Addressable list) {
        var mh$ = RuntimeHelper.requireNonNull(constants$152.g_slist_length$MH, "g_slist_length");
        try {
            return (int)mh$.invokeExact(list);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_foreach$MH() {
        return RuntimeHelper.requireNonNull(constants$152.g_slist_foreach$MH,"g_slist_foreach");
    }
    public static void g_slist_foreach ( Addressable list,  Addressable func,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$152.g_slist_foreach$MH, "g_slist_foreach");
        try {
            mh$.invokeExact(list, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$152.g_slist_sort$MH,"g_slist_sort");
    }
    public static MemoryAddress g_slist_sort ( Addressable list,  Addressable compare_func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$152.g_slist_sort$MH, "g_slist_sort");
        try {
            return (MemoryAddress)mh$.invokeExact(list, compare_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_sort_with_data$MH() {
        return RuntimeHelper.requireNonNull(constants$152.g_slist_sort_with_data$MH,"g_slist_sort_with_data");
    }
    public static MemoryAddress g_slist_sort_with_data ( Addressable list,  Addressable compare_func,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$152.g_slist_sort_with_data$MH, "g_slist_sort_with_data");
        try {
            return (MemoryAddress)mh$.invokeExact(list, compare_func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_slist_nth_data$MH() {
        return RuntimeHelper.requireNonNull(constants$153.g_slist_nth_data$MH,"g_slist_nth_data");
    }
    public static MemoryAddress g_slist_nth_data ( Addressable list,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$153.g_slist_nth_data$MH, "g_slist_nth_data");
        try {
            return (MemoryAddress)mh$.invokeExact(list, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_clear_slist$MH() {
        return RuntimeHelper.requireNonNull(constants$153.g_clear_slist$MH,"g_clear_slist");
    }
    public static void g_clear_slist ( Addressable slist_ptr,  Addressable destroy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$153.g_clear_slist$MH, "g_clear_slist");
        try {
            mh$.invokeExact(slist_ptr, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_IO_IN() {
        return (int)1L;
    }
    public static int G_IO_OUT() {
        return (int)4L;
    }
    public static int G_IO_PRI() {
        return (int)2L;
    }
    public static int G_IO_ERR() {
        return (int)8L;
    }
    public static int G_IO_HUP() {
        return (int)16L;
    }
    public static int G_IO_NVAL() {
        return (int)32L;
    }
    public static MethodHandle g_main_context_new$MH() {
        return RuntimeHelper.requireNonNull(constants$154.g_main_context_new$MH,"g_main_context_new");
    }
    public static MemoryAddress g_main_context_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$154.g_main_context_new$MH, "g_main_context_new");
        try {
            return (MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$154.g_main_context_ref$MH,"g_main_context_ref");
    }
    public static MemoryAddress g_main_context_ref ( Addressable context) {
        var mh$ = RuntimeHelper.requireNonNull(constants$154.g_main_context_ref$MH, "g_main_context_ref");
        try {
            return (MemoryAddress)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$155.g_main_context_unref$MH,"g_main_context_unref");
    }
    public static void g_main_context_unref ( Addressable context) {
        var mh$ = RuntimeHelper.requireNonNull(constants$155.g_main_context_unref$MH, "g_main_context_unref");
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_default$MH() {
        return RuntimeHelper.requireNonNull(constants$155.g_main_context_default$MH,"g_main_context_default");
    }
    public static MemoryAddress g_main_context_default () {
        var mh$ = RuntimeHelper.requireNonNull(constants$155.g_main_context_default$MH, "g_main_context_default");
        try {
            return (MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_iteration$MH() {
        return RuntimeHelper.requireNonNull(constants$155.g_main_context_iteration$MH,"g_main_context_iteration");
    }
    public static int g_main_context_iteration ( Addressable context,  int may_block) {
        var mh$ = RuntimeHelper.requireNonNull(constants$155.g_main_context_iteration$MH, "g_main_context_iteration");
        try {
            return (int)mh$.invokeExact(context, may_block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_pending$MH() {
        return RuntimeHelper.requireNonNull(constants$155.g_main_context_pending$MH,"g_main_context_pending");
    }
    public static int g_main_context_pending ( Addressable context) {
        var mh$ = RuntimeHelper.requireNonNull(constants$155.g_main_context_pending$MH, "g_main_context_pending");
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_find_source_by_id$MH() {
        return RuntimeHelper.requireNonNull(constants$155.g_main_context_find_source_by_id$MH,"g_main_context_find_source_by_id");
    }
    public static MemoryAddress g_main_context_find_source_by_id ( Addressable context,  int source_id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$155.g_main_context_find_source_by_id$MH, "g_main_context_find_source_by_id");
        try {
            return (MemoryAddress)mh$.invokeExact(context, source_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_find_source_by_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$155.g_main_context_find_source_by_user_data$MH,"g_main_context_find_source_by_user_data");
    }
    public static MemoryAddress g_main_context_find_source_by_user_data ( Addressable context,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$155.g_main_context_find_source_by_user_data$MH, "g_main_context_find_source_by_user_data");
        try {
            return (MemoryAddress)mh$.invokeExact(context, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_find_source_by_funcs_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$156.g_main_context_find_source_by_funcs_user_data$MH,"g_main_context_find_source_by_funcs_user_data");
    }
    public static MemoryAddress g_main_context_find_source_by_funcs_user_data ( Addressable context,  Addressable funcs,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$156.g_main_context_find_source_by_funcs_user_data$MH, "g_main_context_find_source_by_funcs_user_data");
        try {
            return (MemoryAddress)mh$.invokeExact(context, funcs, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_wakeup$MH() {
        return RuntimeHelper.requireNonNull(constants$156.g_main_context_wakeup$MH,"g_main_context_wakeup");
    }
    public static void g_main_context_wakeup ( Addressable context) {
        var mh$ = RuntimeHelper.requireNonNull(constants$156.g_main_context_wakeup$MH, "g_main_context_wakeup");
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_acquire$MH() {
        return RuntimeHelper.requireNonNull(constants$156.g_main_context_acquire$MH,"g_main_context_acquire");
    }
    public static int g_main_context_acquire ( Addressable context) {
        var mh$ = RuntimeHelper.requireNonNull(constants$156.g_main_context_acquire$MH, "g_main_context_acquire");
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_release$MH() {
        return RuntimeHelper.requireNonNull(constants$156.g_main_context_release$MH,"g_main_context_release");
    }
    public static void g_main_context_release ( Addressable context) {
        var mh$ = RuntimeHelper.requireNonNull(constants$156.g_main_context_release$MH, "g_main_context_release");
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_is_owner$MH() {
        return RuntimeHelper.requireNonNull(constants$156.g_main_context_is_owner$MH,"g_main_context_is_owner");
    }
    public static int g_main_context_is_owner ( Addressable context) {
        var mh$ = RuntimeHelper.requireNonNull(constants$156.g_main_context_is_owner$MH, "g_main_context_is_owner");
        try {
            return (int)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_wait$MH() {
        return RuntimeHelper.requireNonNull(constants$156.g_main_context_wait$MH,"g_main_context_wait");
    }
    public static int g_main_context_wait ( Addressable context,  Addressable cond,  Addressable mutex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$156.g_main_context_wait$MH, "g_main_context_wait");
        try {
            return (int)mh$.invokeExact(context, cond, mutex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_prepare$MH() {
        return RuntimeHelper.requireNonNull(constants$157.g_main_context_prepare$MH,"g_main_context_prepare");
    }
    public static int g_main_context_prepare ( Addressable context,  Addressable priority) {
        var mh$ = RuntimeHelper.requireNonNull(constants$157.g_main_context_prepare$MH, "g_main_context_prepare");
        try {
            return (int)mh$.invokeExact(context, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_query$MH() {
        return RuntimeHelper.requireNonNull(constants$157.g_main_context_query$MH,"g_main_context_query");
    }
    public static int g_main_context_query ( Addressable context,  int max_priority,  Addressable timeout_,  Addressable fds,  int n_fds) {
        var mh$ = RuntimeHelper.requireNonNull(constants$157.g_main_context_query$MH, "g_main_context_query");
        try {
            return (int)mh$.invokeExact(context, max_priority, timeout_, fds, n_fds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_check$MH() {
        return RuntimeHelper.requireNonNull(constants$157.g_main_context_check$MH,"g_main_context_check");
    }
    public static int g_main_context_check ( Addressable context,  int max_priority,  Addressable fds,  int n_fds) {
        var mh$ = RuntimeHelper.requireNonNull(constants$157.g_main_context_check$MH, "g_main_context_check");
        try {
            return (int)mh$.invokeExact(context, max_priority, fds, n_fds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_dispatch$MH() {
        return RuntimeHelper.requireNonNull(constants$157.g_main_context_dispatch$MH,"g_main_context_dispatch");
    }
    public static void g_main_context_dispatch ( Addressable context) {
        var mh$ = RuntimeHelper.requireNonNull(constants$157.g_main_context_dispatch$MH, "g_main_context_dispatch");
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_set_poll_func$MH() {
        return RuntimeHelper.requireNonNull(constants$157.g_main_context_set_poll_func$MH,"g_main_context_set_poll_func");
    }
    public static void g_main_context_set_poll_func ( Addressable context,  Addressable func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$157.g_main_context_set_poll_func$MH, "g_main_context_set_poll_func");
        try {
            mh$.invokeExact(context, func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_get_poll_func$MH() {
        return RuntimeHelper.requireNonNull(constants$157.g_main_context_get_poll_func$MH,"g_main_context_get_poll_func");
    }
    public static MemoryAddress g_main_context_get_poll_func ( Addressable context) {
        var mh$ = RuntimeHelper.requireNonNull(constants$157.g_main_context_get_poll_func$MH, "g_main_context_get_poll_func");
        try {
            return (MemoryAddress)mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_add_poll$MH() {
        return RuntimeHelper.requireNonNull(constants$158.g_main_context_add_poll$MH,"g_main_context_add_poll");
    }
    public static void g_main_context_add_poll ( Addressable context,  Addressable fd,  int priority) {
        var mh$ = RuntimeHelper.requireNonNull(constants$158.g_main_context_add_poll$MH, "g_main_context_add_poll");
        try {
            mh$.invokeExact(context, fd, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_remove_poll$MH() {
        return RuntimeHelper.requireNonNull(constants$158.g_main_context_remove_poll$MH,"g_main_context_remove_poll");
    }
    public static void g_main_context_remove_poll ( Addressable context,  Addressable fd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$158.g_main_context_remove_poll$MH, "g_main_context_remove_poll");
        try {
            mh$.invokeExact(context, fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_depth$MH() {
        return RuntimeHelper.requireNonNull(constants$158.g_main_depth$MH,"g_main_depth");
    }
    public static int g_main_depth () {
        var mh$ = RuntimeHelper.requireNonNull(constants$158.g_main_depth$MH, "g_main_depth");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_current_source$MH() {
        return RuntimeHelper.requireNonNull(constants$158.g_main_current_source$MH,"g_main_current_source");
    }
    public static MemoryAddress g_main_current_source () {
        var mh$ = RuntimeHelper.requireNonNull(constants$158.g_main_current_source$MH, "g_main_current_source");
        try {
            return (MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_push_thread_default$MH() {
        return RuntimeHelper.requireNonNull(constants$158.g_main_context_push_thread_default$MH,"g_main_context_push_thread_default");
    }
    public static void g_main_context_push_thread_default ( Addressable context) {
        var mh$ = RuntimeHelper.requireNonNull(constants$158.g_main_context_push_thread_default$MH, "g_main_context_push_thread_default");
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_pop_thread_default$MH() {
        return RuntimeHelper.requireNonNull(constants$158.g_main_context_pop_thread_default$MH,"g_main_context_pop_thread_default");
    }
    public static void g_main_context_pop_thread_default ( Addressable context) {
        var mh$ = RuntimeHelper.requireNonNull(constants$158.g_main_context_pop_thread_default$MH, "g_main_context_pop_thread_default");
        try {
            mh$.invokeExact(context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_get_thread_default$MH() {
        return RuntimeHelper.requireNonNull(constants$159.g_main_context_get_thread_default$MH,"g_main_context_get_thread_default");
    }
    public static MemoryAddress g_main_context_get_thread_default () {
        var mh$ = RuntimeHelper.requireNonNull(constants$159.g_main_context_get_thread_default$MH, "g_main_context_get_thread_default");
        try {
            return (MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_ref_thread_default$MH() {
        return RuntimeHelper.requireNonNull(constants$159.g_main_context_ref_thread_default$MH,"g_main_context_ref_thread_default");
    }
    public static MemoryAddress g_main_context_ref_thread_default () {
        var mh$ = RuntimeHelper.requireNonNull(constants$159.g_main_context_ref_thread_default$MH, "g_main_context_ref_thread_default");
        try {
            return (MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_pusher_new$MH() {
        return RuntimeHelper.requireNonNull(constants$159.g_main_context_pusher_new$MH,"g_main_context_pusher_new");
    }
    public static MemoryAddress g_main_context_pusher_new ( Addressable main_context) {
        var mh$ = RuntimeHelper.requireNonNull(constants$159.g_main_context_pusher_new$MH, "g_main_context_pusher_new");
        try {
            return (MemoryAddress)mh$.invokeExact(main_context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_pusher_free$MH() {
        return RuntimeHelper.requireNonNull(constants$159.g_main_context_pusher_free$MH,"g_main_context_pusher_free");
    }
    public static void g_main_context_pusher_free ( Addressable pusher) {
        var mh$ = RuntimeHelper.requireNonNull(constants$159.g_main_context_pusher_free$MH, "g_main_context_pusher_free");
        try {
            mh$.invokeExact(pusher);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_loop_new$MH() {
        return RuntimeHelper.requireNonNull(constants$159.g_main_loop_new$MH,"g_main_loop_new");
    }
    public static MemoryAddress g_main_loop_new ( Addressable context,  int is_running) {
        var mh$ = RuntimeHelper.requireNonNull(constants$159.g_main_loop_new$MH, "g_main_loop_new");
        try {
            return (MemoryAddress)mh$.invokeExact(context, is_running);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_loop_run$MH() {
        return RuntimeHelper.requireNonNull(constants$159.g_main_loop_run$MH,"g_main_loop_run");
    }
    public static void g_main_loop_run ( Addressable loop) {
        var mh$ = RuntimeHelper.requireNonNull(constants$159.g_main_loop_run$MH, "g_main_loop_run");
        try {
            mh$.invokeExact(loop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_loop_quit$MH() {
        return RuntimeHelper.requireNonNull(constants$160.g_main_loop_quit$MH,"g_main_loop_quit");
    }
    public static void g_main_loop_quit ( Addressable loop) {
        var mh$ = RuntimeHelper.requireNonNull(constants$160.g_main_loop_quit$MH, "g_main_loop_quit");
        try {
            mh$.invokeExact(loop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_loop_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$160.g_main_loop_ref$MH,"g_main_loop_ref");
    }
    public static MemoryAddress g_main_loop_ref ( Addressable loop) {
        var mh$ = RuntimeHelper.requireNonNull(constants$160.g_main_loop_ref$MH, "g_main_loop_ref");
        try {
            return (MemoryAddress)mh$.invokeExact(loop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_loop_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$160.g_main_loop_unref$MH,"g_main_loop_unref");
    }
    public static void g_main_loop_unref ( Addressable loop) {
        var mh$ = RuntimeHelper.requireNonNull(constants$160.g_main_loop_unref$MH, "g_main_loop_unref");
        try {
            mh$.invokeExact(loop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_loop_is_running$MH() {
        return RuntimeHelper.requireNonNull(constants$160.g_main_loop_is_running$MH,"g_main_loop_is_running");
    }
    public static int g_main_loop_is_running ( Addressable loop) {
        var mh$ = RuntimeHelper.requireNonNull(constants$160.g_main_loop_is_running$MH, "g_main_loop_is_running");
        try {
            return (int)mh$.invokeExact(loop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_loop_get_context$MH() {
        return RuntimeHelper.requireNonNull(constants$160.g_main_loop_get_context$MH,"g_main_loop_get_context");
    }
    public static MemoryAddress g_main_loop_get_context ( Addressable loop) {
        var mh$ = RuntimeHelper.requireNonNull(constants$160.g_main_loop_get_context$MH, "g_main_loop_get_context");
        try {
            return (MemoryAddress)mh$.invokeExact(loop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_new$MH() {
        return RuntimeHelper.requireNonNull(constants$160.g_source_new$MH,"g_source_new");
    }
    public static MemoryAddress g_source_new ( Addressable source_funcs,  int struct_size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$160.g_source_new$MH, "g_source_new");
        try {
            return (MemoryAddress)mh$.invokeExact(source_funcs, struct_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_dispose_function$MH() {
        return RuntimeHelper.requireNonNull(constants$161.g_source_set_dispose_function$MH,"g_source_set_dispose_function");
    }
    public static void g_source_set_dispose_function ( Addressable source,  Addressable dispose) {
        var mh$ = RuntimeHelper.requireNonNull(constants$161.g_source_set_dispose_function$MH, "g_source_set_dispose_function");
        try {
            mh$.invokeExact(source, dispose);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$161.g_source_ref$MH,"g_source_ref");
    }
    public static MemoryAddress g_source_ref ( Addressable source) {
        var mh$ = RuntimeHelper.requireNonNull(constants$161.g_source_ref$MH, "g_source_ref");
        try {
            return (MemoryAddress)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$161.g_source_unref$MH,"g_source_unref");
    }
    public static void g_source_unref ( Addressable source) {
        var mh$ = RuntimeHelper.requireNonNull(constants$161.g_source_unref$MH, "g_source_unref");
        try {
            mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_attach$MH() {
        return RuntimeHelper.requireNonNull(constants$161.g_source_attach$MH,"g_source_attach");
    }
    public static int g_source_attach ( Addressable source,  Addressable context) {
        var mh$ = RuntimeHelper.requireNonNull(constants$161.g_source_attach$MH, "g_source_attach");
        try {
            return (int)mh$.invokeExact(source, context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_destroy$MH() {
        return RuntimeHelper.requireNonNull(constants$161.g_source_destroy$MH,"g_source_destroy");
    }
    public static void g_source_destroy ( Addressable source) {
        var mh$ = RuntimeHelper.requireNonNull(constants$161.g_source_destroy$MH, "g_source_destroy");
        try {
            mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$161.g_source_set_priority$MH,"g_source_set_priority");
    }
    public static void g_source_set_priority ( Addressable source,  int priority) {
        var mh$ = RuntimeHelper.requireNonNull(constants$161.g_source_set_priority$MH, "g_source_set_priority");
        try {
            mh$.invokeExact(source, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$162.g_source_get_priority$MH,"g_source_get_priority");
    }
    public static int g_source_get_priority ( Addressable source) {
        var mh$ = RuntimeHelper.requireNonNull(constants$162.g_source_get_priority$MH, "g_source_get_priority");
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_can_recurse$MH() {
        return RuntimeHelper.requireNonNull(constants$162.g_source_set_can_recurse$MH,"g_source_set_can_recurse");
    }
    public static void g_source_set_can_recurse ( Addressable source,  int can_recurse) {
        var mh$ = RuntimeHelper.requireNonNull(constants$162.g_source_set_can_recurse$MH, "g_source_set_can_recurse");
        try {
            mh$.invokeExact(source, can_recurse);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_can_recurse$MH() {
        return RuntimeHelper.requireNonNull(constants$162.g_source_get_can_recurse$MH,"g_source_get_can_recurse");
    }
    public static int g_source_get_can_recurse ( Addressable source) {
        var mh$ = RuntimeHelper.requireNonNull(constants$162.g_source_get_can_recurse$MH, "g_source_get_can_recurse");
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_id$MH() {
        return RuntimeHelper.requireNonNull(constants$162.g_source_get_id$MH,"g_source_get_id");
    }
    public static int g_source_get_id ( Addressable source) {
        var mh$ = RuntimeHelper.requireNonNull(constants$162.g_source_get_id$MH, "g_source_get_id");
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_context$MH() {
        return RuntimeHelper.requireNonNull(constants$162.g_source_get_context$MH,"g_source_get_context");
    }
    public static MemoryAddress g_source_get_context ( Addressable source) {
        var mh$ = RuntimeHelper.requireNonNull(constants$162.g_source_get_context$MH, "g_source_get_context");
        try {
            return (MemoryAddress)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$162.g_source_set_callback$MH,"g_source_set_callback");
    }
    public static void g_source_set_callback ( Addressable source,  Addressable func,  Addressable data,  Addressable notify) {
        var mh$ = RuntimeHelper.requireNonNull(constants$162.g_source_set_callback$MH, "g_source_set_callback");
        try {
            mh$.invokeExact(source, func, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_funcs$MH() {
        return RuntimeHelper.requireNonNull(constants$163.g_source_set_funcs$MH,"g_source_set_funcs");
    }
    public static void g_source_set_funcs ( Addressable source,  Addressable funcs) {
        var mh$ = RuntimeHelper.requireNonNull(constants$163.g_source_set_funcs$MH, "g_source_set_funcs");
        try {
            mh$.invokeExact(source, funcs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_is_destroyed$MH() {
        return RuntimeHelper.requireNonNull(constants$163.g_source_is_destroyed$MH,"g_source_is_destroyed");
    }
    public static int g_source_is_destroyed ( Addressable source) {
        var mh$ = RuntimeHelper.requireNonNull(constants$163.g_source_is_destroyed$MH, "g_source_is_destroyed");
        try {
            return (int)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$163.g_source_set_name$MH,"g_source_set_name");
    }
    public static void g_source_set_name ( Addressable source,  Addressable name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$163.g_source_set_name$MH, "g_source_set_name");
        try {
            mh$.invokeExact(source, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$163.g_source_get_name$MH,"g_source_get_name");
    }
    public static MemoryAddress g_source_get_name ( Addressable source) {
        var mh$ = RuntimeHelper.requireNonNull(constants$163.g_source_get_name$MH, "g_source_get_name");
        try {
            return (MemoryAddress)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_name_by_id$MH() {
        return RuntimeHelper.requireNonNull(constants$163.g_source_set_name_by_id$MH,"g_source_set_name_by_id");
    }
    public static void g_source_set_name_by_id ( int tag,  Addressable name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$163.g_source_set_name_by_id$MH, "g_source_set_name_by_id");
        try {
            mh$.invokeExact(tag, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_ready_time$MH() {
        return RuntimeHelper.requireNonNull(constants$163.g_source_set_ready_time$MH,"g_source_set_ready_time");
    }
    public static void g_source_set_ready_time ( Addressable source,  long ready_time) {
        var mh$ = RuntimeHelper.requireNonNull(constants$163.g_source_set_ready_time$MH, "g_source_set_ready_time");
        try {
            mh$.invokeExact(source, ready_time);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_ready_time$MH() {
        return RuntimeHelper.requireNonNull(constants$164.g_source_get_ready_time$MH,"g_source_get_ready_time");
    }
    public static long g_source_get_ready_time ( Addressable source) {
        var mh$ = RuntimeHelper.requireNonNull(constants$164.g_source_get_ready_time$MH, "g_source_get_ready_time");
        try {
            return (long)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_add_unix_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$164.g_source_add_unix_fd$MH,"g_source_add_unix_fd");
    }
    public static MemoryAddress g_source_add_unix_fd ( Addressable source,  int fd,  int events) {
        var mh$ = RuntimeHelper.requireNonNull(constants$164.g_source_add_unix_fd$MH, "g_source_add_unix_fd");
        try {
            return (MemoryAddress)mh$.invokeExact(source, fd, events);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_modify_unix_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$164.g_source_modify_unix_fd$MH,"g_source_modify_unix_fd");
    }
    public static void g_source_modify_unix_fd ( Addressable source,  Addressable tag,  int new_events) {
        var mh$ = RuntimeHelper.requireNonNull(constants$164.g_source_modify_unix_fd$MH, "g_source_modify_unix_fd");
        try {
            mh$.invokeExact(source, tag, new_events);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_remove_unix_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$164.g_source_remove_unix_fd$MH,"g_source_remove_unix_fd");
    }
    public static void g_source_remove_unix_fd ( Addressable source,  Addressable tag) {
        var mh$ = RuntimeHelper.requireNonNull(constants$164.g_source_remove_unix_fd$MH, "g_source_remove_unix_fd");
        try {
            mh$.invokeExact(source, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_query_unix_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$164.g_source_query_unix_fd$MH,"g_source_query_unix_fd");
    }
    public static int g_source_query_unix_fd ( Addressable source,  Addressable tag) {
        var mh$ = RuntimeHelper.requireNonNull(constants$164.g_source_query_unix_fd$MH, "g_source_query_unix_fd");
        try {
            return (int)mh$.invokeExact(source, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_set_callback_indirect$MH() {
        return RuntimeHelper.requireNonNull(constants$164.g_source_set_callback_indirect$MH,"g_source_set_callback_indirect");
    }
    public static void g_source_set_callback_indirect ( Addressable source,  Addressable callback_data,  Addressable callback_funcs) {
        var mh$ = RuntimeHelper.requireNonNull(constants$164.g_source_set_callback_indirect$MH, "g_source_set_callback_indirect");
        try {
            mh$.invokeExact(source, callback_data, callback_funcs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_add_poll$MH() {
        return RuntimeHelper.requireNonNull(constants$165.g_source_add_poll$MH,"g_source_add_poll");
    }
    public static void g_source_add_poll ( Addressable source,  Addressable fd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$165.g_source_add_poll$MH, "g_source_add_poll");
        try {
            mh$.invokeExact(source, fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_remove_poll$MH() {
        return RuntimeHelper.requireNonNull(constants$165.g_source_remove_poll$MH,"g_source_remove_poll");
    }
    public static void g_source_remove_poll ( Addressable source,  Addressable fd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$165.g_source_remove_poll$MH, "g_source_remove_poll");
        try {
            mh$.invokeExact(source, fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_add_child_source$MH() {
        return RuntimeHelper.requireNonNull(constants$165.g_source_add_child_source$MH,"g_source_add_child_source");
    }
    public static void g_source_add_child_source ( Addressable source,  Addressable child_source) {
        var mh$ = RuntimeHelper.requireNonNull(constants$165.g_source_add_child_source$MH, "g_source_add_child_source");
        try {
            mh$.invokeExact(source, child_source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_remove_child_source$MH() {
        return RuntimeHelper.requireNonNull(constants$165.g_source_remove_child_source$MH,"g_source_remove_child_source");
    }
    public static void g_source_remove_child_source ( Addressable source,  Addressable child_source) {
        var mh$ = RuntimeHelper.requireNonNull(constants$165.g_source_remove_child_source$MH, "g_source_remove_child_source");
        try {
            mh$.invokeExact(source, child_source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_current_time$MH() {
        return RuntimeHelper.requireNonNull(constants$165.g_source_get_current_time$MH,"g_source_get_current_time");
    }
    public static void g_source_get_current_time ( Addressable source,  Addressable timeval) {
        var mh$ = RuntimeHelper.requireNonNull(constants$165.g_source_get_current_time$MH, "g_source_get_current_time");
        try {
            mh$.invokeExact(source, timeval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_get_time$MH() {
        return RuntimeHelper.requireNonNull(constants$165.g_source_get_time$MH,"g_source_get_time");
    }
    public static long g_source_get_time ( Addressable source) {
        var mh$ = RuntimeHelper.requireNonNull(constants$165.g_source_get_time$MH, "g_source_get_time");
        try {
            return (long)mh$.invokeExact(source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_idle_source_new$MH() {
        return RuntimeHelper.requireNonNull(constants$166.g_idle_source_new$MH,"g_idle_source_new");
    }
    public static MemoryAddress g_idle_source_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$166.g_idle_source_new$MH, "g_idle_source_new");
        try {
            return (MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_child_watch_source_new$MH() {
        return RuntimeHelper.requireNonNull(constants$166.g_child_watch_source_new$MH,"g_child_watch_source_new");
    }
    public static MemoryAddress g_child_watch_source_new ( int pid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$166.g_child_watch_source_new$MH, "g_child_watch_source_new");
        try {
            return (MemoryAddress)mh$.invokeExact(pid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_timeout_source_new$MH() {
        return RuntimeHelper.requireNonNull(constants$166.g_timeout_source_new$MH,"g_timeout_source_new");
    }
    public static MemoryAddress g_timeout_source_new ( int interval) {
        var mh$ = RuntimeHelper.requireNonNull(constants$166.g_timeout_source_new$MH, "g_timeout_source_new");
        try {
            return (MemoryAddress)mh$.invokeExact(interval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_timeout_source_new_seconds$MH() {
        return RuntimeHelper.requireNonNull(constants$166.g_timeout_source_new_seconds$MH,"g_timeout_source_new_seconds");
    }
    public static MemoryAddress g_timeout_source_new_seconds ( int interval) {
        var mh$ = RuntimeHelper.requireNonNull(constants$166.g_timeout_source_new_seconds$MH, "g_timeout_source_new_seconds");
        try {
            return (MemoryAddress)mh$.invokeExact(interval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_get_current_time$MH() {
        return RuntimeHelper.requireNonNull(constants$166.g_get_current_time$MH,"g_get_current_time");
    }
    public static void g_get_current_time ( Addressable result) {
        var mh$ = RuntimeHelper.requireNonNull(constants$166.g_get_current_time$MH, "g_get_current_time");
        try {
            mh$.invokeExact(result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_get_monotonic_time$MH() {
        return RuntimeHelper.requireNonNull(constants$166.g_get_monotonic_time$MH,"g_get_monotonic_time");
    }
    public static long g_get_monotonic_time () {
        var mh$ = RuntimeHelper.requireNonNull(constants$166.g_get_monotonic_time$MH, "g_get_monotonic_time");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_get_real_time$MH() {
        return RuntimeHelper.requireNonNull(constants$167.g_get_real_time$MH,"g_get_real_time");
    }
    public static long g_get_real_time () {
        var mh$ = RuntimeHelper.requireNonNull(constants$167.g_get_real_time$MH, "g_get_real_time");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$167.g_source_remove$MH,"g_source_remove");
    }
    public static int g_source_remove ( int tag) {
        var mh$ = RuntimeHelper.requireNonNull(constants$167.g_source_remove$MH, "g_source_remove");
        try {
            return (int)mh$.invokeExact(tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_remove_by_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$167.g_source_remove_by_user_data$MH,"g_source_remove_by_user_data");
    }
    public static int g_source_remove_by_user_data ( Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$167.g_source_remove_by_user_data$MH, "g_source_remove_by_user_data");
        try {
            return (int)mh$.invokeExact(user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_source_remove_by_funcs_user_data$MH() {
        return RuntimeHelper.requireNonNull(constants$167.g_source_remove_by_funcs_user_data$MH,"g_source_remove_by_funcs_user_data");
    }
    public static int g_source_remove_by_funcs_user_data ( Addressable funcs,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$167.g_source_remove_by_funcs_user_data$MH, "g_source_remove_by_funcs_user_data");
        try {
            return (int)mh$.invokeExact(funcs, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_clear_handle_id$MH() {
        return RuntimeHelper.requireNonNull(constants$168.g_clear_handle_id$MH,"g_clear_handle_id");
    }
    public static void g_clear_handle_id ( Addressable tag_ptr,  Addressable clear_func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$168.g_clear_handle_id$MH, "g_clear_handle_id");
        try {
            mh$.invokeExact(tag_ptr, clear_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_timeout_add_full$MH() {
        return RuntimeHelper.requireNonNull(constants$168.g_timeout_add_full$MH,"g_timeout_add_full");
    }
    public static int g_timeout_add_full ( int priority,  int interval,  Addressable function,  Addressable data,  Addressable notify) {
        var mh$ = RuntimeHelper.requireNonNull(constants$168.g_timeout_add_full$MH, "g_timeout_add_full");
        try {
            return (int)mh$.invokeExact(priority, interval, function, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_timeout_add$MH() {
        return RuntimeHelper.requireNonNull(constants$168.g_timeout_add$MH,"g_timeout_add");
    }
    public static int g_timeout_add ( int interval,  Addressable function,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$168.g_timeout_add$MH, "g_timeout_add");
        try {
            return (int)mh$.invokeExact(interval, function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_timeout_add_seconds_full$MH() {
        return RuntimeHelper.requireNonNull(constants$168.g_timeout_add_seconds_full$MH,"g_timeout_add_seconds_full");
    }
    public static int g_timeout_add_seconds_full ( int priority,  int interval,  Addressable function,  Addressable data,  Addressable notify) {
        var mh$ = RuntimeHelper.requireNonNull(constants$168.g_timeout_add_seconds_full$MH, "g_timeout_add_seconds_full");
        try {
            return (int)mh$.invokeExact(priority, interval, function, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_timeout_add_seconds$MH() {
        return RuntimeHelper.requireNonNull(constants$168.g_timeout_add_seconds$MH,"g_timeout_add_seconds");
    }
    public static int g_timeout_add_seconds ( int interval,  Addressable function,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$168.g_timeout_add_seconds$MH, "g_timeout_add_seconds");
        try {
            return (int)mh$.invokeExact(interval, function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_child_watch_add_full$MH() {
        return RuntimeHelper.requireNonNull(constants$168.g_child_watch_add_full$MH,"g_child_watch_add_full");
    }
    public static int g_child_watch_add_full ( int priority,  int pid,  Addressable function,  Addressable data,  Addressable notify) {
        var mh$ = RuntimeHelper.requireNonNull(constants$168.g_child_watch_add_full$MH, "g_child_watch_add_full");
        try {
            return (int)mh$.invokeExact(priority, pid, function, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_child_watch_add$MH() {
        return RuntimeHelper.requireNonNull(constants$169.g_child_watch_add$MH,"g_child_watch_add");
    }
    public static int g_child_watch_add ( int pid,  Addressable function,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$169.g_child_watch_add$MH, "g_child_watch_add");
        try {
            return (int)mh$.invokeExact(pid, function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_idle_add$MH() {
        return RuntimeHelper.requireNonNull(constants$169.g_idle_add$MH,"g_idle_add");
    }
    public static int g_idle_add ( Addressable function,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$169.g_idle_add$MH, "g_idle_add");
        try {
            return (int)mh$.invokeExact(function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_idle_add_full$MH() {
        return RuntimeHelper.requireNonNull(constants$169.g_idle_add_full$MH,"g_idle_add_full");
    }
    public static int g_idle_add_full ( int priority,  Addressable function,  Addressable data,  Addressable notify) {
        var mh$ = RuntimeHelper.requireNonNull(constants$169.g_idle_add_full$MH, "g_idle_add_full");
        try {
            return (int)mh$.invokeExact(priority, function, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_idle_remove_by_data$MH() {
        return RuntimeHelper.requireNonNull(constants$169.g_idle_remove_by_data$MH,"g_idle_remove_by_data");
    }
    public static int g_idle_remove_by_data ( Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$169.g_idle_remove_by_data$MH, "g_idle_remove_by_data");
        try {
            return (int)mh$.invokeExact(data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_invoke_full$MH() {
        return RuntimeHelper.requireNonNull(constants$169.g_main_context_invoke_full$MH,"g_main_context_invoke_full");
    }
    public static void g_main_context_invoke_full ( Addressable context,  int priority,  Addressable function,  Addressable data,  Addressable notify) {
        var mh$ = RuntimeHelper.requireNonNull(constants$169.g_main_context_invoke_full$MH, "g_main_context_invoke_full");
        try {
            mh$.invokeExact(context, priority, function, data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_main_context_invoke$MH() {
        return RuntimeHelper.requireNonNull(constants$169.g_main_context_invoke$MH,"g_main_context_invoke");
    }
    public static void g_main_context_invoke ( Addressable context,  Addressable function,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$169.g_main_context_invoke$MH, "g_main_context_invoke");
        try {
            mh$.invokeExact(context, function, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemorySegment g_timeout_funcs$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$170.g_timeout_funcs$SEGMENT,"g_timeout_funcs");
    }
    public static MemorySegment g_child_watch_funcs$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$170.g_child_watch_funcs$SEGMENT,"g_child_watch_funcs");
    }
    public static MemorySegment g_idle_funcs$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$170.g_idle_funcs$SEGMENT,"g_idle_funcs");
    }
    public static MemorySegment g_unix_signal_funcs$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$170.g_unix_signal_funcs$SEGMENT,"g_unix_signal_funcs");
    }
    public static MemorySegment g_unix_fd_source_funcs$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$170.g_unix_fd_source_funcs$SEGMENT,"g_unix_fd_source_funcs");
    }
    public static int G_UNICODE_CONTROL() {
        return (int)0L;
    }
    public static int G_UNICODE_FORMAT() {
        return (int)1L;
    }
    public static int G_UNICODE_UNASSIGNED() {
        return (int)2L;
    }
    public static int G_UNICODE_PRIVATE_USE() {
        return (int)3L;
    }
    public static int G_UNICODE_SURROGATE() {
        return (int)4L;
    }
    public static int G_UNICODE_LOWERCASE_LETTER() {
        return (int)5L;
    }
    public static int G_UNICODE_MODIFIER_LETTER() {
        return (int)6L;
    }
    public static int G_UNICODE_OTHER_LETTER() {
        return (int)7L;
    }
    public static int G_UNICODE_TITLECASE_LETTER() {
        return (int)8L;
    }
    public static int G_UNICODE_UPPERCASE_LETTER() {
        return (int)9L;
    }
    public static int G_UNICODE_SPACING_MARK() {
        return (int)10L;
    }
    public static int G_UNICODE_ENCLOSING_MARK() {
        return (int)11L;
    }
    public static int G_UNICODE_NON_SPACING_MARK() {
        return (int)12L;
    }
    public static int G_UNICODE_DECIMAL_NUMBER() {
        return (int)13L;
    }
    public static int G_UNICODE_LETTER_NUMBER() {
        return (int)14L;
    }
    public static int G_UNICODE_OTHER_NUMBER() {
        return (int)15L;
    }
    public static int G_UNICODE_CONNECT_PUNCTUATION() {
        return (int)16L;
    }
    public static int G_UNICODE_DASH_PUNCTUATION() {
        return (int)17L;
    }
    public static int G_UNICODE_CLOSE_PUNCTUATION() {
        return (int)18L;
    }
    public static int G_UNICODE_FINAL_PUNCTUATION() {
        return (int)19L;
    }
    public static int G_UNICODE_INITIAL_PUNCTUATION() {
        return (int)20L;
    }
    public static int G_UNICODE_OTHER_PUNCTUATION() {
        return (int)21L;
    }
    public static int G_UNICODE_OPEN_PUNCTUATION() {
        return (int)22L;
    }
    public static int G_UNICODE_CURRENCY_SYMBOL() {
        return (int)23L;
    }
    public static int G_UNICODE_MODIFIER_SYMBOL() {
        return (int)24L;
    }
    public static int G_UNICODE_MATH_SYMBOL() {
        return (int)25L;
    }
    public static int G_UNICODE_OTHER_SYMBOL() {
        return (int)26L;
    }
    public static int G_UNICODE_LINE_SEPARATOR() {
        return (int)27L;
    }
    public static int G_UNICODE_PARAGRAPH_SEPARATOR() {
        return (int)28L;
    }
    public static int G_UNICODE_SPACE_SEPARATOR() {
        return (int)29L;
    }
    public static int G_UNICODE_BREAK_MANDATORY() {
        return (int)0L;
    }
    public static int G_UNICODE_BREAK_CARRIAGE_RETURN() {
        return (int)1L;
    }
    public static int G_UNICODE_BREAK_LINE_FEED() {
        return (int)2L;
    }
    public static int G_UNICODE_BREAK_COMBINING_MARK() {
        return (int)3L;
    }
    public static int G_UNICODE_BREAK_SURROGATE() {
        return (int)4L;
    }
    public static int G_UNICODE_BREAK_ZERO_WIDTH_SPACE() {
        return (int)5L;
    }
    public static int G_UNICODE_BREAK_INSEPARABLE() {
        return (int)6L;
    }
    public static int G_UNICODE_BREAK_NON_BREAKING_GLUE() {
        return (int)7L;
    }
    public static int G_UNICODE_BREAK_CONTINGENT() {
        return (int)8L;
    }
    public static int G_UNICODE_BREAK_SPACE() {
        return (int)9L;
    }
    public static int G_UNICODE_BREAK_AFTER() {
        return (int)10L;
    }
    public static int G_UNICODE_BREAK_BEFORE() {
        return (int)11L;
    }
    public static int G_UNICODE_BREAK_BEFORE_AND_AFTER() {
        return (int)12L;
    }
    public static int G_UNICODE_BREAK_HYPHEN() {
        return (int)13L;
    }
    public static int G_UNICODE_BREAK_NON_STARTER() {
        return (int)14L;
    }
    public static int G_UNICODE_BREAK_OPEN_PUNCTUATION() {
        return (int)15L;
    }
    public static int G_UNICODE_BREAK_CLOSE_PUNCTUATION() {
        return (int)16L;
    }
    public static int G_UNICODE_BREAK_QUOTATION() {
        return (int)17L;
    }
    public static int G_UNICODE_BREAK_EXCLAMATION() {
        return (int)18L;
    }
    public static int G_UNICODE_BREAK_IDEOGRAPHIC() {
        return (int)19L;
    }
    public static int G_UNICODE_BREAK_NUMERIC() {
        return (int)20L;
    }
    public static int G_UNICODE_BREAK_INFIX_SEPARATOR() {
        return (int)21L;
    }
    public static int G_UNICODE_BREAK_SYMBOL() {
        return (int)22L;
    }
    public static int G_UNICODE_BREAK_ALPHABETIC() {
        return (int)23L;
    }
    public static int G_UNICODE_BREAK_PREFIX() {
        return (int)24L;
    }
    public static int G_UNICODE_BREAK_POSTFIX() {
        return (int)25L;
    }
    public static int G_UNICODE_BREAK_COMPLEX_CONTEXT() {
        return (int)26L;
    }
    public static int G_UNICODE_BREAK_AMBIGUOUS() {
        return (int)27L;
    }
    public static int G_UNICODE_BREAK_UNKNOWN() {
        return (int)28L;
    }
    public static int G_UNICODE_BREAK_NEXT_LINE() {
        return (int)29L;
    }
    public static int G_UNICODE_BREAK_WORD_JOINER() {
        return (int)30L;
    }
    public static int G_UNICODE_BREAK_HANGUL_L_JAMO() {
        return (int)31L;
    }
    public static int G_UNICODE_BREAK_HANGUL_V_JAMO() {
        return (int)32L;
    }
    public static int G_UNICODE_BREAK_HANGUL_T_JAMO() {
        return (int)33L;
    }
    public static int G_UNICODE_BREAK_HANGUL_LV_SYLLABLE() {
        return (int)34L;
    }
    public static int G_UNICODE_BREAK_HANGUL_LVT_SYLLABLE() {
        return (int)35L;
    }
    public static int G_UNICODE_BREAK_CLOSE_PARANTHESIS() {
        return (int)36L;
    }
    public static int G_UNICODE_BREAK_CONDITIONAL_JAPANESE_STARTER() {
        return (int)37L;
    }
    public static int G_UNICODE_BREAK_HEBREW_LETTER() {
        return (int)38L;
    }
    public static int G_UNICODE_BREAK_REGIONAL_INDICATOR() {
        return (int)39L;
    }
    public static int G_UNICODE_BREAK_EMOJI_BASE() {
        return (int)40L;
    }
    public static int G_UNICODE_BREAK_EMOJI_MODIFIER() {
        return (int)41L;
    }
    public static int G_UNICODE_BREAK_ZERO_WIDTH_JOINER() {
        return (int)42L;
    }
    public static int G_UNICODE_SCRIPT_INVALID_CODE() {
        return (int)-1L;
    }
    public static int G_UNICODE_SCRIPT_COMMON() {
        return (int)0L;
    }
    public static int G_UNICODE_SCRIPT_INHERITED() {
        return (int)1L;
    }
    public static int G_UNICODE_SCRIPT_ARABIC() {
        return (int)2L;
    }
    public static int G_UNICODE_SCRIPT_ARMENIAN() {
        return (int)3L;
    }
    public static int G_UNICODE_SCRIPT_BENGALI() {
        return (int)4L;
    }
    public static int G_UNICODE_SCRIPT_BOPOMOFO() {
        return (int)5L;
    }
    public static int G_UNICODE_SCRIPT_CHEROKEE() {
        return (int)6L;
    }
    public static int G_UNICODE_SCRIPT_COPTIC() {
        return (int)7L;
    }
    public static int G_UNICODE_SCRIPT_CYRILLIC() {
        return (int)8L;
    }
    public static int G_UNICODE_SCRIPT_DESERET() {
        return (int)9L;
    }
    public static int G_UNICODE_SCRIPT_DEVANAGARI() {
        return (int)10L;
    }
    public static int G_UNICODE_SCRIPT_ETHIOPIC() {
        return (int)11L;
    }
    public static int G_UNICODE_SCRIPT_GEORGIAN() {
        return (int)12L;
    }
    public static int G_UNICODE_SCRIPT_GOTHIC() {
        return (int)13L;
    }
    public static int G_UNICODE_SCRIPT_GREEK() {
        return (int)14L;
    }
    public static int G_UNICODE_SCRIPT_GUJARATI() {
        return (int)15L;
    }
    public static int G_UNICODE_SCRIPT_GURMUKHI() {
        return (int)16L;
    }
    public static int G_UNICODE_SCRIPT_HAN() {
        return (int)17L;
    }
    public static int G_UNICODE_SCRIPT_HANGUL() {
        return (int)18L;
    }
    public static int G_UNICODE_SCRIPT_HEBREW() {
        return (int)19L;
    }
    public static int G_UNICODE_SCRIPT_HIRAGANA() {
        return (int)20L;
    }
    public static int G_UNICODE_SCRIPT_KANNADA() {
        return (int)21L;
    }
    public static int G_UNICODE_SCRIPT_KATAKANA() {
        return (int)22L;
    }
    public static int G_UNICODE_SCRIPT_KHMER() {
        return (int)23L;
    }
    public static int G_UNICODE_SCRIPT_LAO() {
        return (int)24L;
    }
    public static int G_UNICODE_SCRIPT_LATIN() {
        return (int)25L;
    }
    public static int G_UNICODE_SCRIPT_MALAYALAM() {
        return (int)26L;
    }
    public static int G_UNICODE_SCRIPT_MONGOLIAN() {
        return (int)27L;
    }
    public static int G_UNICODE_SCRIPT_MYANMAR() {
        return (int)28L;
    }
    public static int G_UNICODE_SCRIPT_OGHAM() {
        return (int)29L;
    }
    public static int G_UNICODE_SCRIPT_OLD_ITALIC() {
        return (int)30L;
    }
    public static int G_UNICODE_SCRIPT_ORIYA() {
        return (int)31L;
    }
    public static int G_UNICODE_SCRIPT_RUNIC() {
        return (int)32L;
    }
    public static int G_UNICODE_SCRIPT_SINHALA() {
        return (int)33L;
    }
    public static int G_UNICODE_SCRIPT_SYRIAC() {
        return (int)34L;
    }
    public static int G_UNICODE_SCRIPT_TAMIL() {
        return (int)35L;
    }
    public static int G_UNICODE_SCRIPT_TELUGU() {
        return (int)36L;
    }
    public static int G_UNICODE_SCRIPT_THAANA() {
        return (int)37L;
    }
    public static int G_UNICODE_SCRIPT_THAI() {
        return (int)38L;
    }
    public static int G_UNICODE_SCRIPT_TIBETAN() {
        return (int)39L;
    }
    public static int G_UNICODE_SCRIPT_CANADIAN_ABORIGINAL() {
        return (int)40L;
    }
    public static int G_UNICODE_SCRIPT_YI() {
        return (int)41L;
    }
    public static int G_UNICODE_SCRIPT_TAGALOG() {
        return (int)42L;
    }
    public static int G_UNICODE_SCRIPT_HANUNOO() {
        return (int)43L;
    }
    public static int G_UNICODE_SCRIPT_BUHID() {
        return (int)44L;
    }
    public static int G_UNICODE_SCRIPT_TAGBANWA() {
        return (int)45L;
    }
    public static int G_UNICODE_SCRIPT_BRAILLE() {
        return (int)46L;
    }
    public static int G_UNICODE_SCRIPT_CYPRIOT() {
        return (int)47L;
    }
    public static int G_UNICODE_SCRIPT_LIMBU() {
        return (int)48L;
    }
    public static int G_UNICODE_SCRIPT_OSMANYA() {
        return (int)49L;
    }
    public static int G_UNICODE_SCRIPT_SHAVIAN() {
        return (int)50L;
    }
    public static int G_UNICODE_SCRIPT_LINEAR_B() {
        return (int)51L;
    }
    public static int G_UNICODE_SCRIPT_TAI_LE() {
        return (int)52L;
    }
    public static int G_UNICODE_SCRIPT_UGARITIC() {
        return (int)53L;
    }
    public static int G_UNICODE_SCRIPT_NEW_TAI_LUE() {
        return (int)54L;
    }
    public static int G_UNICODE_SCRIPT_BUGINESE() {
        return (int)55L;
    }
    public static int G_UNICODE_SCRIPT_GLAGOLITIC() {
        return (int)56L;
    }
    public static int G_UNICODE_SCRIPT_TIFINAGH() {
        return (int)57L;
    }
    public static int G_UNICODE_SCRIPT_SYLOTI_NAGRI() {
        return (int)58L;
    }
    public static int G_UNICODE_SCRIPT_OLD_PERSIAN() {
        return (int)59L;
    }
    public static int G_UNICODE_SCRIPT_KHAROSHTHI() {
        return (int)60L;
    }
    public static int G_UNICODE_SCRIPT_UNKNOWN() {
        return (int)61L;
    }
    public static int G_UNICODE_SCRIPT_BALINESE() {
        return (int)62L;
    }
    public static int G_UNICODE_SCRIPT_CUNEIFORM() {
        return (int)63L;
    }
    public static int G_UNICODE_SCRIPT_PHOENICIAN() {
        return (int)64L;
    }
    public static int G_UNICODE_SCRIPT_PHAGS_PA() {
        return (int)65L;
    }
    public static int G_UNICODE_SCRIPT_NKO() {
        return (int)66L;
    }
    public static int G_UNICODE_SCRIPT_KAYAH_LI() {
        return (int)67L;
    }
    public static int G_UNICODE_SCRIPT_LEPCHA() {
        return (int)68L;
    }
    public static int G_UNICODE_SCRIPT_REJANG() {
        return (int)69L;
    }
    public static int G_UNICODE_SCRIPT_SUNDANESE() {
        return (int)70L;
    }
    public static int G_UNICODE_SCRIPT_SAURASHTRA() {
        return (int)71L;
    }
    public static int G_UNICODE_SCRIPT_CHAM() {
        return (int)72L;
    }
    public static int G_UNICODE_SCRIPT_OL_CHIKI() {
        return (int)73L;
    }
    public static int G_UNICODE_SCRIPT_VAI() {
        return (int)74L;
    }
    public static int G_UNICODE_SCRIPT_CARIAN() {
        return (int)75L;
    }
    public static int G_UNICODE_SCRIPT_LYCIAN() {
        return (int)76L;
    }
    public static int G_UNICODE_SCRIPT_LYDIAN() {
        return (int)77L;
    }
    public static int G_UNICODE_SCRIPT_AVESTAN() {
        return (int)78L;
    }
    public static int G_UNICODE_SCRIPT_BAMUM() {
        return (int)79L;
    }
    public static int G_UNICODE_SCRIPT_EGYPTIAN_HIEROGLYPHS() {
        return (int)80L;
    }
    public static int G_UNICODE_SCRIPT_IMPERIAL_ARAMAIC() {
        return (int)81L;
    }
    public static int G_UNICODE_SCRIPT_INSCRIPTIONAL_PAHLAVI() {
        return (int)82L;
    }
    public static int G_UNICODE_SCRIPT_INSCRIPTIONAL_PARTHIAN() {
        return (int)83L;
    }
    public static int G_UNICODE_SCRIPT_JAVANESE() {
        return (int)84L;
    }
    public static int G_UNICODE_SCRIPT_KAITHI() {
        return (int)85L;
    }
    public static int G_UNICODE_SCRIPT_LISU() {
        return (int)86L;
    }
    public static int G_UNICODE_SCRIPT_MEETEI_MAYEK() {
        return (int)87L;
    }
    public static int G_UNICODE_SCRIPT_OLD_SOUTH_ARABIAN() {
        return (int)88L;
    }
    public static int G_UNICODE_SCRIPT_OLD_TURKIC() {
        return (int)89L;
    }
    public static int G_UNICODE_SCRIPT_SAMARITAN() {
        return (int)90L;
    }
    public static int G_UNICODE_SCRIPT_TAI_THAM() {
        return (int)91L;
    }
    public static int G_UNICODE_SCRIPT_TAI_VIET() {
        return (int)92L;
    }
    public static int G_UNICODE_SCRIPT_BATAK() {
        return (int)93L;
    }
    public static int G_UNICODE_SCRIPT_BRAHMI() {
        return (int)94L;
    }
    public static int G_UNICODE_SCRIPT_MANDAIC() {
        return (int)95L;
    }
    public static int G_UNICODE_SCRIPT_CHAKMA() {
        return (int)96L;
    }
    public static int G_UNICODE_SCRIPT_MEROITIC_CURSIVE() {
        return (int)97L;
    }
    public static int G_UNICODE_SCRIPT_MEROITIC_HIEROGLYPHS() {
        return (int)98L;
    }
    public static int G_UNICODE_SCRIPT_MIAO() {
        return (int)99L;
    }
    public static int G_UNICODE_SCRIPT_SHARADA() {
        return (int)100L;
    }
    public static int G_UNICODE_SCRIPT_SORA_SOMPENG() {
        return (int)101L;
    }
    public static int G_UNICODE_SCRIPT_TAKRI() {
        return (int)102L;
    }
    public static int G_UNICODE_SCRIPT_BASSA_VAH() {
        return (int)103L;
    }
    public static int G_UNICODE_SCRIPT_CAUCASIAN_ALBANIAN() {
        return (int)104L;
    }
    public static int G_UNICODE_SCRIPT_DUPLOYAN() {
        return (int)105L;
    }
    public static int G_UNICODE_SCRIPT_ELBASAN() {
        return (int)106L;
    }
    public static int G_UNICODE_SCRIPT_GRANTHA() {
        return (int)107L;
    }
    public static int G_UNICODE_SCRIPT_KHOJKI() {
        return (int)108L;
    }
    public static int G_UNICODE_SCRIPT_KHUDAWADI() {
        return (int)109L;
    }
    public static int G_UNICODE_SCRIPT_LINEAR_A() {
        return (int)110L;
    }
    public static int G_UNICODE_SCRIPT_MAHAJANI() {
        return (int)111L;
    }
    public static int G_UNICODE_SCRIPT_MANICHAEAN() {
        return (int)112L;
    }
    public static int G_UNICODE_SCRIPT_MENDE_KIKAKUI() {
        return (int)113L;
    }
    public static int G_UNICODE_SCRIPT_MODI() {
        return (int)114L;
    }
    public static int G_UNICODE_SCRIPT_MRO() {
        return (int)115L;
    }
    public static int G_UNICODE_SCRIPT_NABATAEAN() {
        return (int)116L;
    }
    public static int G_UNICODE_SCRIPT_OLD_NORTH_ARABIAN() {
        return (int)117L;
    }
    public static int G_UNICODE_SCRIPT_OLD_PERMIC() {
        return (int)118L;
    }
    public static int G_UNICODE_SCRIPT_PAHAWH_HMONG() {
        return (int)119L;
    }
    public static int G_UNICODE_SCRIPT_PALMYRENE() {
        return (int)120L;
    }
    public static int G_UNICODE_SCRIPT_PAU_CIN_HAU() {
        return (int)121L;
    }
    public static int G_UNICODE_SCRIPT_PSALTER_PAHLAVI() {
        return (int)122L;
    }
    public static int G_UNICODE_SCRIPT_SIDDHAM() {
        return (int)123L;
    }
    public static int G_UNICODE_SCRIPT_TIRHUTA() {
        return (int)124L;
    }
    public static int G_UNICODE_SCRIPT_WARANG_CITI() {
        return (int)125L;
    }
    public static int G_UNICODE_SCRIPT_AHOM() {
        return (int)126L;
    }
    public static int G_UNICODE_SCRIPT_ANATOLIAN_HIEROGLYPHS() {
        return (int)127L;
    }
    public static int G_UNICODE_SCRIPT_HATRAN() {
        return (int)128L;
    }
    public static int G_UNICODE_SCRIPT_MULTANI() {
        return (int)129L;
    }
    public static int G_UNICODE_SCRIPT_OLD_HUNGARIAN() {
        return (int)130L;
    }
    public static int G_UNICODE_SCRIPT_SIGNWRITING() {
        return (int)131L;
    }
    public static int G_UNICODE_SCRIPT_ADLAM() {
        return (int)132L;
    }
    public static int G_UNICODE_SCRIPT_BHAIKSUKI() {
        return (int)133L;
    }
    public static int G_UNICODE_SCRIPT_MARCHEN() {
        return (int)134L;
    }
    public static int G_UNICODE_SCRIPT_NEWA() {
        return (int)135L;
    }
    public static int G_UNICODE_SCRIPT_OSAGE() {
        return (int)136L;
    }
    public static int G_UNICODE_SCRIPT_TANGUT() {
        return (int)137L;
    }
    public static int G_UNICODE_SCRIPT_MASARAM_GONDI() {
        return (int)138L;
    }
    public static int G_UNICODE_SCRIPT_NUSHU() {
        return (int)139L;
    }
    public static int G_UNICODE_SCRIPT_SOYOMBO() {
        return (int)140L;
    }
    public static int G_UNICODE_SCRIPT_ZANABAZAR_SQUARE() {
        return (int)141L;
    }
    public static int G_UNICODE_SCRIPT_DOGRA() {
        return (int)142L;
    }
    public static int G_UNICODE_SCRIPT_GUNJALA_GONDI() {
        return (int)143L;
    }
    public static int G_UNICODE_SCRIPT_HANIFI_ROHINGYA() {
        return (int)144L;
    }
    public static int G_UNICODE_SCRIPT_MAKASAR() {
        return (int)145L;
    }
    public static int G_UNICODE_SCRIPT_MEDEFAIDRIN() {
        return (int)146L;
    }
    public static int G_UNICODE_SCRIPT_OLD_SOGDIAN() {
        return (int)147L;
    }
    public static int G_UNICODE_SCRIPT_SOGDIAN() {
        return (int)148L;
    }
    public static int G_UNICODE_SCRIPT_ELYMAIC() {
        return (int)149L;
    }
    public static int G_UNICODE_SCRIPT_NANDINAGARI() {
        return (int)150L;
    }
    public static int G_UNICODE_SCRIPT_NYIAKENG_PUACHUE_HMONG() {
        return (int)151L;
    }
    public static int G_UNICODE_SCRIPT_WANCHO() {
        return (int)152L;
    }
    public static MethodHandle g_unicode_script_to_iso15924$MH() {
        return RuntimeHelper.requireNonNull(constants$170.g_unicode_script_to_iso15924$MH,"g_unicode_script_to_iso15924");
    }
    public static int g_unicode_script_to_iso15924 ( int script) {
        var mh$ = RuntimeHelper.requireNonNull(constants$170.g_unicode_script_to_iso15924$MH, "g_unicode_script_to_iso15924");
        try {
            return (int)mh$.invokeExact(script);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unicode_script_from_iso15924$MH() {
        return RuntimeHelper.requireNonNull(constants$171.g_unicode_script_from_iso15924$MH,"g_unicode_script_from_iso15924");
    }
    public static int g_unicode_script_from_iso15924 ( int iso15924) {
        var mh$ = RuntimeHelper.requireNonNull(constants$171.g_unicode_script_from_iso15924$MH, "g_unicode_script_from_iso15924");
        try {
            return (int)mh$.invokeExact(iso15924);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isalnum$MH() {
        return RuntimeHelper.requireNonNull(constants$171.g_unichar_isalnum$MH,"g_unichar_isalnum");
    }
    public static int g_unichar_isalnum ( int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$171.g_unichar_isalnum$MH, "g_unichar_isalnum");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isalpha$MH() {
        return RuntimeHelper.requireNonNull(constants$171.g_unichar_isalpha$MH,"g_unichar_isalpha");
    }
    public static int g_unichar_isalpha ( int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$171.g_unichar_isalpha$MH, "g_unichar_isalpha");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_iscntrl$MH() {
        return RuntimeHelper.requireNonNull(constants$171.g_unichar_iscntrl$MH,"g_unichar_iscntrl");
    }
    public static int g_unichar_iscntrl ( int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$171.g_unichar_iscntrl$MH, "g_unichar_iscntrl");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isdigit$MH() {
        return RuntimeHelper.requireNonNull(constants$171.g_unichar_isdigit$MH,"g_unichar_isdigit");
    }
    public static int g_unichar_isdigit ( int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$171.g_unichar_isdigit$MH, "g_unichar_isdigit");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isgraph$MH() {
        return RuntimeHelper.requireNonNull(constants$171.g_unichar_isgraph$MH,"g_unichar_isgraph");
    }
    public static int g_unichar_isgraph ( int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$171.g_unichar_isgraph$MH, "g_unichar_isgraph");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_islower$MH() {
        return RuntimeHelper.requireNonNull(constants$172.g_unichar_islower$MH,"g_unichar_islower");
    }
    public static int g_unichar_islower ( int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$172.g_unichar_islower$MH, "g_unichar_islower");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isprint$MH() {
        return RuntimeHelper.requireNonNull(constants$172.g_unichar_isprint$MH,"g_unichar_isprint");
    }
    public static int g_unichar_isprint ( int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$172.g_unichar_isprint$MH, "g_unichar_isprint");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_ispunct$MH() {
        return RuntimeHelper.requireNonNull(constants$172.g_unichar_ispunct$MH,"g_unichar_ispunct");
    }
    public static int g_unichar_ispunct ( int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$172.g_unichar_ispunct$MH, "g_unichar_ispunct");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isspace$MH() {
        return RuntimeHelper.requireNonNull(constants$172.g_unichar_isspace$MH,"g_unichar_isspace");
    }
    public static int g_unichar_isspace ( int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$172.g_unichar_isspace$MH, "g_unichar_isspace");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isupper$MH() {
        return RuntimeHelper.requireNonNull(constants$172.g_unichar_isupper$MH,"g_unichar_isupper");
    }
    public static int g_unichar_isupper ( int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$172.g_unichar_isupper$MH, "g_unichar_isupper");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isxdigit$MH() {
        return RuntimeHelper.requireNonNull(constants$172.g_unichar_isxdigit$MH,"g_unichar_isxdigit");
    }
    public static int g_unichar_isxdigit ( int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$172.g_unichar_isxdigit$MH, "g_unichar_isxdigit");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_istitle$MH() {
        return RuntimeHelper.requireNonNull(constants$173.g_unichar_istitle$MH,"g_unichar_istitle");
    }
    public static int g_unichar_istitle ( int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$173.g_unichar_istitle$MH, "g_unichar_istitle");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_isdefined$MH() {
        return RuntimeHelper.requireNonNull(constants$173.g_unichar_isdefined$MH,"g_unichar_isdefined");
    }
    public static int g_unichar_isdefined ( int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$173.g_unichar_isdefined$MH, "g_unichar_isdefined");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_iswide$MH() {
        return RuntimeHelper.requireNonNull(constants$173.g_unichar_iswide$MH,"g_unichar_iswide");
    }
    public static int g_unichar_iswide ( int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$173.g_unichar_iswide$MH, "g_unichar_iswide");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_iswide_cjk$MH() {
        return RuntimeHelper.requireNonNull(constants$173.g_unichar_iswide_cjk$MH,"g_unichar_iswide_cjk");
    }
    public static int g_unichar_iswide_cjk ( int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$173.g_unichar_iswide_cjk$MH, "g_unichar_iswide_cjk");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_iszerowidth$MH() {
        return RuntimeHelper.requireNonNull(constants$173.g_unichar_iszerowidth$MH,"g_unichar_iszerowidth");
    }
    public static int g_unichar_iszerowidth ( int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$173.g_unichar_iszerowidth$MH, "g_unichar_iszerowidth");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_ismark$MH() {
        return RuntimeHelper.requireNonNull(constants$173.g_unichar_ismark$MH,"g_unichar_ismark");
    }
    public static int g_unichar_ismark ( int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$173.g_unichar_ismark$MH, "g_unichar_ismark");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_toupper$MH() {
        return RuntimeHelper.requireNonNull(constants$174.g_unichar_toupper$MH,"g_unichar_toupper");
    }
    public static int g_unichar_toupper ( int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$174.g_unichar_toupper$MH, "g_unichar_toupper");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_tolower$MH() {
        return RuntimeHelper.requireNonNull(constants$174.g_unichar_tolower$MH,"g_unichar_tolower");
    }
    public static int g_unichar_tolower ( int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$174.g_unichar_tolower$MH, "g_unichar_tolower");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_totitle$MH() {
        return RuntimeHelper.requireNonNull(constants$174.g_unichar_totitle$MH,"g_unichar_totitle");
    }
    public static int g_unichar_totitle ( int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$174.g_unichar_totitle$MH, "g_unichar_totitle");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_digit_value$MH() {
        return RuntimeHelper.requireNonNull(constants$174.g_unichar_digit_value$MH,"g_unichar_digit_value");
    }
    public static int g_unichar_digit_value ( int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$174.g_unichar_digit_value$MH, "g_unichar_digit_value");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_xdigit_value$MH() {
        return RuntimeHelper.requireNonNull(constants$174.g_unichar_xdigit_value$MH,"g_unichar_xdigit_value");
    }
    public static int g_unichar_xdigit_value ( int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$174.g_unichar_xdigit_value$MH, "g_unichar_xdigit_value");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_type$MH() {
        return RuntimeHelper.requireNonNull(constants$174.g_unichar_type$MH,"g_unichar_type");
    }
    public static int g_unichar_type ( int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$174.g_unichar_type$MH, "g_unichar_type");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_break_type$MH() {
        return RuntimeHelper.requireNonNull(constants$175.g_unichar_break_type$MH,"g_unichar_break_type");
    }
    public static int g_unichar_break_type ( int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$175.g_unichar_break_type$MH, "g_unichar_break_type");
        try {
            return (int)mh$.invokeExact(c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_combining_class$MH() {
        return RuntimeHelper.requireNonNull(constants$175.g_unichar_combining_class$MH,"g_unichar_combining_class");
    }
    public static int g_unichar_combining_class ( int uc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$175.g_unichar_combining_class$MH, "g_unichar_combining_class");
        try {
            return (int)mh$.invokeExact(uc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_get_mirror_char$MH() {
        return RuntimeHelper.requireNonNull(constants$175.g_unichar_get_mirror_char$MH,"g_unichar_get_mirror_char");
    }
    public static int g_unichar_get_mirror_char ( int ch,  Addressable mirrored_ch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$175.g_unichar_get_mirror_char$MH, "g_unichar_get_mirror_char");
        try {
            return (int)mh$.invokeExact(ch, mirrored_ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_get_script$MH() {
        return RuntimeHelper.requireNonNull(constants$175.g_unichar_get_script$MH,"g_unichar_get_script");
    }
    public static int g_unichar_get_script ( int ch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$175.g_unichar_get_script$MH, "g_unichar_get_script");
        try {
            return (int)mh$.invokeExact(ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_validate$MH() {
        return RuntimeHelper.requireNonNull(constants$175.g_unichar_validate$MH,"g_unichar_validate");
    }
    public static int g_unichar_validate ( int ch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$175.g_unichar_validate$MH, "g_unichar_validate");
        try {
            return (int)mh$.invokeExact(ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_compose$MH() {
        return RuntimeHelper.requireNonNull(constants$175.g_unichar_compose$MH,"g_unichar_compose");
    }
    public static int g_unichar_compose ( int a,  int b,  Addressable ch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$175.g_unichar_compose$MH, "g_unichar_compose");
        try {
            return (int)mh$.invokeExact(a, b, ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_decompose$MH() {
        return RuntimeHelper.requireNonNull(constants$176.g_unichar_decompose$MH,"g_unichar_decompose");
    }
    public static int g_unichar_decompose ( int ch,  Addressable a,  Addressable b) {
        var mh$ = RuntimeHelper.requireNonNull(constants$176.g_unichar_decompose$MH, "g_unichar_decompose");
        try {
            return (int)mh$.invokeExact(ch, a, b);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_fully_decompose$MH() {
        return RuntimeHelper.requireNonNull(constants$176.g_unichar_fully_decompose$MH,"g_unichar_fully_decompose");
    }
    public static long g_unichar_fully_decompose ( int ch,  int compat,  Addressable result,  long result_len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$176.g_unichar_fully_decompose$MH, "g_unichar_fully_decompose");
        try {
            return (long)mh$.invokeExact(ch, compat, result, result_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unicode_canonical_ordering$MH() {
        return RuntimeHelper.requireNonNull(constants$176.g_unicode_canonical_ordering$MH,"g_unicode_canonical_ordering");
    }
    public static void g_unicode_canonical_ordering ( Addressable string,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$176.g_unicode_canonical_ordering$MH, "g_unicode_canonical_ordering");
        try {
            mh$.invokeExact(string, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unicode_canonical_decomposition$MH() {
        return RuntimeHelper.requireNonNull(constants$176.g_unicode_canonical_decomposition$MH,"g_unicode_canonical_decomposition");
    }
    public static MemoryAddress g_unicode_canonical_decomposition ( int ch,  Addressable result_len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$176.g_unicode_canonical_decomposition$MH, "g_unicode_canonical_decomposition");
        try {
            return (MemoryAddress)mh$.invokeExact(ch, result_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout g_utf8_skip$LAYOUT() {
        return constants$176.g_utf8_skip$LAYOUT;
    }
    public static VarHandle g_utf8_skip$VH() {
        return constants$176.g_utf8_skip$VH;
    }
    public static MemorySegment g_utf8_skip$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$176.g_utf8_skip$SEGMENT,"g_utf8_skip");
    }
    public static MemoryAddress g_utf8_skip$get() {
        return (MemoryAddress) constants$176.g_utf8_skip$VH.get(RuntimeHelper.requireNonNull(constants$176.g_utf8_skip$SEGMENT, "g_utf8_skip"));
    }
    public static void g_utf8_skip$set( MemoryAddress x) {
        constants$176.g_utf8_skip$VH.set(RuntimeHelper.requireNonNull(constants$176.g_utf8_skip$SEGMENT, "g_utf8_skip"), x);
    }
    public static MethodHandle g_utf8_get_char$MH() {
        return RuntimeHelper.requireNonNull(constants$176.g_utf8_get_char$MH,"g_utf8_get_char");
    }
    public static int g_utf8_get_char ( Addressable p) {
        var mh$ = RuntimeHelper.requireNonNull(constants$176.g_utf8_get_char$MH, "g_utf8_get_char");
        try {
            return (int)mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_get_char_validated$MH() {
        return RuntimeHelper.requireNonNull(constants$177.g_utf8_get_char_validated$MH,"g_utf8_get_char_validated");
    }
    public static int g_utf8_get_char_validated ( Addressable p,  long max_len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$177.g_utf8_get_char_validated$MH, "g_utf8_get_char_validated");
        try {
            return (int)mh$.invokeExact(p, max_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_offset_to_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$177.g_utf8_offset_to_pointer$MH,"g_utf8_offset_to_pointer");
    }
    public static MemoryAddress g_utf8_offset_to_pointer ( Addressable str,  long offset) {
        var mh$ = RuntimeHelper.requireNonNull(constants$177.g_utf8_offset_to_pointer$MH, "g_utf8_offset_to_pointer");
        try {
            return (MemoryAddress)mh$.invokeExact(str, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_pointer_to_offset$MH() {
        return RuntimeHelper.requireNonNull(constants$177.g_utf8_pointer_to_offset$MH,"g_utf8_pointer_to_offset");
    }
    public static long g_utf8_pointer_to_offset ( Addressable str,  Addressable pos) {
        var mh$ = RuntimeHelper.requireNonNull(constants$177.g_utf8_pointer_to_offset$MH, "g_utf8_pointer_to_offset");
        try {
            return (long)mh$.invokeExact(str, pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_prev_char$MH() {
        return RuntimeHelper.requireNonNull(constants$177.g_utf8_prev_char$MH,"g_utf8_prev_char");
    }
    public static MemoryAddress g_utf8_prev_char ( Addressable p) {
        var mh$ = RuntimeHelper.requireNonNull(constants$177.g_utf8_prev_char$MH, "g_utf8_prev_char");
        try {
            return (MemoryAddress)mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_find_next_char$MH() {
        return RuntimeHelper.requireNonNull(constants$177.g_utf8_find_next_char$MH,"g_utf8_find_next_char");
    }
    public static MemoryAddress g_utf8_find_next_char ( Addressable p,  Addressable end) {
        var mh$ = RuntimeHelper.requireNonNull(constants$177.g_utf8_find_next_char$MH, "g_utf8_find_next_char");
        try {
            return (MemoryAddress)mh$.invokeExact(p, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_find_prev_char$MH() {
        return RuntimeHelper.requireNonNull(constants$177.g_utf8_find_prev_char$MH,"g_utf8_find_prev_char");
    }
    public static MemoryAddress g_utf8_find_prev_char ( Addressable str,  Addressable p) {
        var mh$ = RuntimeHelper.requireNonNull(constants$177.g_utf8_find_prev_char$MH, "g_utf8_find_prev_char");
        try {
            return (MemoryAddress)mh$.invokeExact(str, p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_strlen$MH() {
        return RuntimeHelper.requireNonNull(constants$178.g_utf8_strlen$MH,"g_utf8_strlen");
    }
    public static long g_utf8_strlen ( Addressable p,  long max) {
        var mh$ = RuntimeHelper.requireNonNull(constants$178.g_utf8_strlen$MH, "g_utf8_strlen");
        try {
            return (long)mh$.invokeExact(p, max);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_substring$MH() {
        return RuntimeHelper.requireNonNull(constants$178.g_utf8_substring$MH,"g_utf8_substring");
    }
    public static MemoryAddress g_utf8_substring ( Addressable str,  long start_pos,  long end_pos) {
        var mh$ = RuntimeHelper.requireNonNull(constants$178.g_utf8_substring$MH, "g_utf8_substring");
        try {
            return (MemoryAddress)mh$.invokeExact(str, start_pos, end_pos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_strncpy$MH() {
        return RuntimeHelper.requireNonNull(constants$178.g_utf8_strncpy$MH,"g_utf8_strncpy");
    }
    public static MemoryAddress g_utf8_strncpy ( Addressable dest,  Addressable src,  long n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$178.g_utf8_strncpy$MH, "g_utf8_strncpy");
        try {
            return (MemoryAddress)mh$.invokeExact(dest, src, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_strchr$MH() {
        return RuntimeHelper.requireNonNull(constants$178.g_utf8_strchr$MH,"g_utf8_strchr");
    }
    public static MemoryAddress g_utf8_strchr ( Addressable p,  long len,  int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$178.g_utf8_strchr$MH, "g_utf8_strchr");
        try {
            return (MemoryAddress)mh$.invokeExact(p, len, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_strrchr$MH() {
        return RuntimeHelper.requireNonNull(constants$178.g_utf8_strrchr$MH,"g_utf8_strrchr");
    }
    public static MemoryAddress g_utf8_strrchr ( Addressable p,  long len,  int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$178.g_utf8_strrchr$MH, "g_utf8_strrchr");
        try {
            return (MemoryAddress)mh$.invokeExact(p, len, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_strreverse$MH() {
        return RuntimeHelper.requireNonNull(constants$178.g_utf8_strreverse$MH,"g_utf8_strreverse");
    }
    public static MemoryAddress g_utf8_strreverse ( Addressable str,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$178.g_utf8_strreverse$MH, "g_utf8_strreverse");
        try {
            return (MemoryAddress)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_to_utf16$MH() {
        return RuntimeHelper.requireNonNull(constants$179.g_utf8_to_utf16$MH,"g_utf8_to_utf16");
    }
    public static MemoryAddress g_utf8_to_utf16 ( Addressable str,  long len,  Addressable items_read,  Addressable items_written,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$179.g_utf8_to_utf16$MH, "g_utf8_to_utf16");
        try {
            return (MemoryAddress)mh$.invokeExact(str, len, items_read, items_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_to_ucs4$MH() {
        return RuntimeHelper.requireNonNull(constants$179.g_utf8_to_ucs4$MH,"g_utf8_to_ucs4");
    }
    public static MemoryAddress g_utf8_to_ucs4 ( Addressable str,  long len,  Addressable items_read,  Addressable items_written,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$179.g_utf8_to_ucs4$MH, "g_utf8_to_ucs4");
        try {
            return (MemoryAddress)mh$.invokeExact(str, len, items_read, items_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_to_ucs4_fast$MH() {
        return RuntimeHelper.requireNonNull(constants$179.g_utf8_to_ucs4_fast$MH,"g_utf8_to_ucs4_fast");
    }
    public static MemoryAddress g_utf8_to_ucs4_fast ( Addressable str,  long len,  Addressable items_written) {
        var mh$ = RuntimeHelper.requireNonNull(constants$179.g_utf8_to_ucs4_fast$MH, "g_utf8_to_ucs4_fast");
        try {
            return (MemoryAddress)mh$.invokeExact(str, len, items_written);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf16_to_ucs4$MH() {
        return RuntimeHelper.requireNonNull(constants$179.g_utf16_to_ucs4$MH,"g_utf16_to_ucs4");
    }
    public static MemoryAddress g_utf16_to_ucs4 ( Addressable str,  long len,  Addressable items_read,  Addressable items_written,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$179.g_utf16_to_ucs4$MH, "g_utf16_to_ucs4");
        try {
            return (MemoryAddress)mh$.invokeExact(str, len, items_read, items_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf16_to_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$179.g_utf16_to_utf8$MH,"g_utf16_to_utf8");
    }
    public static MemoryAddress g_utf16_to_utf8 ( Addressable str,  long len,  Addressable items_read,  Addressable items_written,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$179.g_utf16_to_utf8$MH, "g_utf16_to_utf8");
        try {
            return (MemoryAddress)mh$.invokeExact(str, len, items_read, items_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_ucs4_to_utf16$MH() {
        return RuntimeHelper.requireNonNull(constants$179.g_ucs4_to_utf16$MH,"g_ucs4_to_utf16");
    }
    public static MemoryAddress g_ucs4_to_utf16 ( Addressable str,  long len,  Addressable items_read,  Addressable items_written,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$179.g_ucs4_to_utf16$MH, "g_ucs4_to_utf16");
        try {
            return (MemoryAddress)mh$.invokeExact(str, len, items_read, items_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_ucs4_to_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$180.g_ucs4_to_utf8$MH,"g_ucs4_to_utf8");
    }
    public static MemoryAddress g_ucs4_to_utf8 ( Addressable str,  long len,  Addressable items_read,  Addressable items_written,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$180.g_ucs4_to_utf8$MH, "g_ucs4_to_utf8");
        try {
            return (MemoryAddress)mh$.invokeExact(str, len, items_read, items_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_unichar_to_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$180.g_unichar_to_utf8$MH,"g_unichar_to_utf8");
    }
    public static int g_unichar_to_utf8 ( int c,  Addressable outbuf) {
        var mh$ = RuntimeHelper.requireNonNull(constants$180.g_unichar_to_utf8$MH, "g_unichar_to_utf8");
        try {
            return (int)mh$.invokeExact(c, outbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_validate$MH() {
        return RuntimeHelper.requireNonNull(constants$180.g_utf8_validate$MH,"g_utf8_validate");
    }
    public static int g_utf8_validate ( Addressable str,  long max_len,  Addressable end) {
        var mh$ = RuntimeHelper.requireNonNull(constants$180.g_utf8_validate$MH, "g_utf8_validate");
        try {
            return (int)mh$.invokeExact(str, max_len, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_validate_len$MH() {
        return RuntimeHelper.requireNonNull(constants$180.g_utf8_validate_len$MH,"g_utf8_validate_len");
    }
    public static int g_utf8_validate_len ( Addressable str,  long max_len,  Addressable end) {
        var mh$ = RuntimeHelper.requireNonNull(constants$180.g_utf8_validate_len$MH, "g_utf8_validate_len");
        try {
            return (int)mh$.invokeExact(str, max_len, end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_strup$MH() {
        return RuntimeHelper.requireNonNull(constants$180.g_utf8_strup$MH,"g_utf8_strup");
    }
    public static MemoryAddress g_utf8_strup ( Addressable str,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$180.g_utf8_strup$MH, "g_utf8_strup");
        try {
            return (MemoryAddress)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_strdown$MH() {
        return RuntimeHelper.requireNonNull(constants$180.g_utf8_strdown$MH,"g_utf8_strdown");
    }
    public static MemoryAddress g_utf8_strdown ( Addressable str,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$180.g_utf8_strdown$MH, "g_utf8_strdown");
        try {
            return (MemoryAddress)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_casefold$MH() {
        return RuntimeHelper.requireNonNull(constants$181.g_utf8_casefold$MH,"g_utf8_casefold");
    }
    public static MemoryAddress g_utf8_casefold ( Addressable str,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$181.g_utf8_casefold$MH, "g_utf8_casefold");
        try {
            return (MemoryAddress)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_NORMALIZE_DEFAULT() {
        return (int)0L;
    }
    public static int G_NORMALIZE_NFD() {
        return (int)0L;
    }
    public static int G_NORMALIZE_DEFAULT_COMPOSE() {
        return (int)1L;
    }
    public static int G_NORMALIZE_NFC() {
        return (int)1L;
    }
    public static int G_NORMALIZE_ALL() {
        return (int)2L;
    }
    public static int G_NORMALIZE_NFKD() {
        return (int)2L;
    }
    public static int G_NORMALIZE_ALL_COMPOSE() {
        return (int)3L;
    }
    public static int G_NORMALIZE_NFKC() {
        return (int)3L;
    }
    public static MethodHandle g_utf8_normalize$MH() {
        return RuntimeHelper.requireNonNull(constants$181.g_utf8_normalize$MH,"g_utf8_normalize");
    }
    public static MemoryAddress g_utf8_normalize ( Addressable str,  long len,  int mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$181.g_utf8_normalize$MH, "g_utf8_normalize");
        try {
            return (MemoryAddress)mh$.invokeExact(str, len, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_collate$MH() {
        return RuntimeHelper.requireNonNull(constants$181.g_utf8_collate$MH,"g_utf8_collate");
    }
    public static int g_utf8_collate ( Addressable str1,  Addressable str2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$181.g_utf8_collate$MH, "g_utf8_collate");
        try {
            return (int)mh$.invokeExact(str1, str2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_collate_key$MH() {
        return RuntimeHelper.requireNonNull(constants$181.g_utf8_collate_key$MH,"g_utf8_collate_key");
    }
    public static MemoryAddress g_utf8_collate_key ( Addressable str,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$181.g_utf8_collate_key$MH, "g_utf8_collate_key");
        try {
            return (MemoryAddress)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_collate_key_for_filename$MH() {
        return RuntimeHelper.requireNonNull(constants$181.g_utf8_collate_key_for_filename$MH,"g_utf8_collate_key_for_filename");
    }
    public static MemoryAddress g_utf8_collate_key_for_filename ( Addressable str,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$181.g_utf8_collate_key_for_filename$MH, "g_utf8_collate_key_for_filename");
        try {
            return (MemoryAddress)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_utf8_make_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$181.g_utf8_make_valid$MH,"g_utf8_make_valid");
    }
    public static MemoryAddress g_utf8_make_valid ( Addressable str,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$181.g_utf8_make_valid$MH, "g_utf8_make_valid");
        try {
            return (MemoryAddress)mh$.invokeExact(str, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_new$MH() {
        return RuntimeHelper.requireNonNull(constants$182.g_string_new$MH,"g_string_new");
    }
    public static MemoryAddress g_string_new ( Addressable init) {
        var mh$ = RuntimeHelper.requireNonNull(constants$182.g_string_new$MH, "g_string_new");
        try {
            return (MemoryAddress)mh$.invokeExact(init);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_new_len$MH() {
        return RuntimeHelper.requireNonNull(constants$182.g_string_new_len$MH,"g_string_new_len");
    }
    public static MemoryAddress g_string_new_len ( Addressable init,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$182.g_string_new_len$MH, "g_string_new_len");
        try {
            return (MemoryAddress)mh$.invokeExact(init, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_sized_new$MH() {
        return RuntimeHelper.requireNonNull(constants$182.g_string_sized_new$MH,"g_string_sized_new");
    }
    public static MemoryAddress g_string_sized_new ( long dfl_size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$182.g_string_sized_new$MH, "g_string_sized_new");
        try {
            return (MemoryAddress)mh$.invokeExact(dfl_size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_free$MH() {
        return RuntimeHelper.requireNonNull(constants$182.g_string_free$MH,"g_string_free");
    }
    public static MemoryAddress g_string_free ( Addressable string,  int free_segment) {
        var mh$ = RuntimeHelper.requireNonNull(constants$182.g_string_free$MH, "g_string_free");
        try {
            return (MemoryAddress)mh$.invokeExact(string, free_segment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_free_to_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$182.g_string_free_to_bytes$MH,"g_string_free_to_bytes");
    }
    public static MemoryAddress g_string_free_to_bytes ( Addressable string) {
        var mh$ = RuntimeHelper.requireNonNull(constants$182.g_string_free_to_bytes$MH, "g_string_free_to_bytes");
        try {
            return (MemoryAddress)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_equal$MH() {
        return RuntimeHelper.requireNonNull(constants$182.g_string_equal$MH,"g_string_equal");
    }
    public static int g_string_equal ( Addressable v,  Addressable v2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$182.g_string_equal$MH, "g_string_equal");
        try {
            return (int)mh$.invokeExact(v, v2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$183.g_string_hash$MH,"g_string_hash");
    }
    public static int g_string_hash ( Addressable str) {
        var mh$ = RuntimeHelper.requireNonNull(constants$183.g_string_hash$MH, "g_string_hash");
        try {
            return (int)mh$.invokeExact(str);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_assign$MH() {
        return RuntimeHelper.requireNonNull(constants$183.g_string_assign$MH,"g_string_assign");
    }
    public static MemoryAddress g_string_assign ( Addressable string,  Addressable rval) {
        var mh$ = RuntimeHelper.requireNonNull(constants$183.g_string_assign$MH, "g_string_assign");
        try {
            return (MemoryAddress)mh$.invokeExact(string, rval);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_truncate$MH() {
        return RuntimeHelper.requireNonNull(constants$183.g_string_truncate$MH,"g_string_truncate");
    }
    public static MemoryAddress g_string_truncate ( Addressable string,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$183.g_string_truncate$MH, "g_string_truncate");
        try {
            return (MemoryAddress)mh$.invokeExact(string, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_set_size$MH() {
        return RuntimeHelper.requireNonNull(constants$183.g_string_set_size$MH,"g_string_set_size");
    }
    public static MemoryAddress g_string_set_size ( Addressable string,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$183.g_string_set_size$MH, "g_string_set_size");
        try {
            return (MemoryAddress)mh$.invokeExact(string, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_insert_len$MH() {
        return RuntimeHelper.requireNonNull(constants$183.g_string_insert_len$MH,"g_string_insert_len");
    }
    public static MemoryAddress g_string_insert_len ( Addressable string,  long pos,  Addressable val,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$183.g_string_insert_len$MH, "g_string_insert_len");
        try {
            return (MemoryAddress)mh$.invokeExact(string, pos, val, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_append$MH() {
        return RuntimeHelper.requireNonNull(constants$183.g_string_append$MH,"g_string_append");
    }
    public static MemoryAddress g_string_append ( Addressable string,  Addressable val) {
        var mh$ = RuntimeHelper.requireNonNull(constants$183.g_string_append$MH, "g_string_append");
        try {
            return (MemoryAddress)mh$.invokeExact(string, val);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_append_len$MH() {
        return RuntimeHelper.requireNonNull(constants$184.g_string_append_len$MH,"g_string_append_len");
    }
    public static MemoryAddress g_string_append_len ( Addressable string,  Addressable val,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$184.g_string_append_len$MH, "g_string_append_len");
        try {
            return (MemoryAddress)mh$.invokeExact(string, val, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_append_c$MH() {
        return RuntimeHelper.requireNonNull(constants$184.g_string_append_c$MH,"g_string_append_c");
    }
    public static MemoryAddress g_string_append_c ( Addressable string,  byte c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$184.g_string_append_c$MH, "g_string_append_c");
        try {
            return (MemoryAddress)mh$.invokeExact(string, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_append_unichar$MH() {
        return RuntimeHelper.requireNonNull(constants$184.g_string_append_unichar$MH,"g_string_append_unichar");
    }
    public static MemoryAddress g_string_append_unichar ( Addressable string,  int wc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$184.g_string_append_unichar$MH, "g_string_append_unichar");
        try {
            return (MemoryAddress)mh$.invokeExact(string, wc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_prepend$MH() {
        return RuntimeHelper.requireNonNull(constants$184.g_string_prepend$MH,"g_string_prepend");
    }
    public static MemoryAddress g_string_prepend ( Addressable string,  Addressable val) {
        var mh$ = RuntimeHelper.requireNonNull(constants$184.g_string_prepend$MH, "g_string_prepend");
        try {
            return (MemoryAddress)mh$.invokeExact(string, val);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_prepend_c$MH() {
        return RuntimeHelper.requireNonNull(constants$184.g_string_prepend_c$MH,"g_string_prepend_c");
    }
    public static MemoryAddress g_string_prepend_c ( Addressable string,  byte c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$184.g_string_prepend_c$MH, "g_string_prepend_c");
        try {
            return (MemoryAddress)mh$.invokeExact(string, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_prepend_unichar$MH() {
        return RuntimeHelper.requireNonNull(constants$184.g_string_prepend_unichar$MH,"g_string_prepend_unichar");
    }
    public static MemoryAddress g_string_prepend_unichar ( Addressable string,  int wc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$184.g_string_prepend_unichar$MH, "g_string_prepend_unichar");
        try {
            return (MemoryAddress)mh$.invokeExact(string, wc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_prepend_len$MH() {
        return RuntimeHelper.requireNonNull(constants$185.g_string_prepend_len$MH,"g_string_prepend_len");
    }
    public static MemoryAddress g_string_prepend_len ( Addressable string,  Addressable val,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$185.g_string_prepend_len$MH, "g_string_prepend_len");
        try {
            return (MemoryAddress)mh$.invokeExact(string, val, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_insert$MH() {
        return RuntimeHelper.requireNonNull(constants$185.g_string_insert$MH,"g_string_insert");
    }
    public static MemoryAddress g_string_insert ( Addressable string,  long pos,  Addressable val) {
        var mh$ = RuntimeHelper.requireNonNull(constants$185.g_string_insert$MH, "g_string_insert");
        try {
            return (MemoryAddress)mh$.invokeExact(string, pos, val);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_insert_c$MH() {
        return RuntimeHelper.requireNonNull(constants$185.g_string_insert_c$MH,"g_string_insert_c");
    }
    public static MemoryAddress g_string_insert_c ( Addressable string,  long pos,  byte c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$185.g_string_insert_c$MH, "g_string_insert_c");
        try {
            return (MemoryAddress)mh$.invokeExact(string, pos, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_insert_unichar$MH() {
        return RuntimeHelper.requireNonNull(constants$185.g_string_insert_unichar$MH,"g_string_insert_unichar");
    }
    public static MemoryAddress g_string_insert_unichar ( Addressable string,  long pos,  int wc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$185.g_string_insert_unichar$MH, "g_string_insert_unichar");
        try {
            return (MemoryAddress)mh$.invokeExact(string, pos, wc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_overwrite$MH() {
        return RuntimeHelper.requireNonNull(constants$185.g_string_overwrite$MH,"g_string_overwrite");
    }
    public static MemoryAddress g_string_overwrite ( Addressable string,  long pos,  Addressable val) {
        var mh$ = RuntimeHelper.requireNonNull(constants$185.g_string_overwrite$MH, "g_string_overwrite");
        try {
            return (MemoryAddress)mh$.invokeExact(string, pos, val);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_overwrite_len$MH() {
        return RuntimeHelper.requireNonNull(constants$185.g_string_overwrite_len$MH,"g_string_overwrite_len");
    }
    public static MemoryAddress g_string_overwrite_len ( Addressable string,  long pos,  Addressable val,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$185.g_string_overwrite_len$MH, "g_string_overwrite_len");
        try {
            return (MemoryAddress)mh$.invokeExact(string, pos, val, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_erase$MH() {
        return RuntimeHelper.requireNonNull(constants$186.g_string_erase$MH,"g_string_erase");
    }
    public static MemoryAddress g_string_erase ( Addressable string,  long pos,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$186.g_string_erase$MH, "g_string_erase");
        try {
            return (MemoryAddress)mh$.invokeExact(string, pos, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_ascii_down$MH() {
        return RuntimeHelper.requireNonNull(constants$186.g_string_ascii_down$MH,"g_string_ascii_down");
    }
    public static MemoryAddress g_string_ascii_down ( Addressable string) {
        var mh$ = RuntimeHelper.requireNonNull(constants$186.g_string_ascii_down$MH, "g_string_ascii_down");
        try {
            return (MemoryAddress)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_ascii_up$MH() {
        return RuntimeHelper.requireNonNull(constants$186.g_string_ascii_up$MH,"g_string_ascii_up");
    }
    public static MemoryAddress g_string_ascii_up ( Addressable string) {
        var mh$ = RuntimeHelper.requireNonNull(constants$186.g_string_ascii_up$MH, "g_string_ascii_up");
        try {
            return (MemoryAddress)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_vprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$186.g_string_vprintf$MH,"g_string_vprintf");
    }
    public static void g_string_vprintf ( Addressable string,  Addressable format,  Addressable args) {
        var mh$ = RuntimeHelper.requireNonNull(constants$186.g_string_vprintf$MH, "g_string_vprintf");
        try {
            mh$.invokeExact(string, format, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_printf$MH() {
        return RuntimeHelper.requireNonNull(constants$186.g_string_printf$MH,"g_string_printf");
    }
    public static void g_string_printf ( Addressable string,  Addressable format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$186.g_string_printf$MH, "g_string_printf");
        try {
            mh$.invokeExact(string, format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_append_vprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$186.g_string_append_vprintf$MH,"g_string_append_vprintf");
    }
    public static void g_string_append_vprintf ( Addressable string,  Addressable format,  Addressable args) {
        var mh$ = RuntimeHelper.requireNonNull(constants$186.g_string_append_vprintf$MH, "g_string_append_vprintf");
        try {
            mh$.invokeExact(string, format, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_append_printf$MH() {
        return RuntimeHelper.requireNonNull(constants$187.g_string_append_printf$MH,"g_string_append_printf");
    }
    public static void g_string_append_printf ( Addressable string,  Addressable format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$187.g_string_append_printf$MH, "g_string_append_printf");
        try {
            mh$.invokeExact(string, format, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_append_uri_escaped$MH() {
        return RuntimeHelper.requireNonNull(constants$187.g_string_append_uri_escaped$MH,"g_string_append_uri_escaped");
    }
    public static MemoryAddress g_string_append_uri_escaped ( Addressable string,  Addressable unescaped,  Addressable reserved_chars_allowed,  int allow_utf8) {
        var mh$ = RuntimeHelper.requireNonNull(constants$187.g_string_append_uri_escaped$MH, "g_string_append_uri_escaped");
        try {
            return (MemoryAddress)mh$.invokeExact(string, unescaped, reserved_chars_allowed, allow_utf8);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_append_c_inline$MH() {
        return RuntimeHelper.requireNonNull(constants$187.g_string_append_c_inline$MH,"g_string_append_c_inline");
    }
    public static MemoryAddress g_string_append_c_inline ( Addressable gstring,  byte c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$187.g_string_append_c_inline$MH, "g_string_append_c_inline");
        try {
            return (MemoryAddress)mh$.invokeExact(gstring, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_down$MH() {
        return RuntimeHelper.requireNonNull(constants$187.g_string_down$MH,"g_string_down");
    }
    public static MemoryAddress g_string_down ( Addressable string) {
        var mh$ = RuntimeHelper.requireNonNull(constants$187.g_string_down$MH, "g_string_down");
        try {
            return (MemoryAddress)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_string_up$MH() {
        return RuntimeHelper.requireNonNull(constants$187.g_string_up$MH,"g_string_up");
    }
    public static MemoryAddress g_string_up ( Addressable string) {
        var mh$ = RuntimeHelper.requireNonNull(constants$187.g_string_up$MH, "g_string_up");
        try {
            return (MemoryAddress)mh$.invokeExact(string);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int G_IO_ERROR_NONE() {
        return (int)0L;
    }
    public static int G_IO_ERROR_AGAIN() {
        return (int)1L;
    }
    public static int G_IO_ERROR_INVAL() {
        return (int)2L;
    }
    public static int G_IO_ERROR_UNKNOWN() {
        return (int)3L;
    }
    public static int G_IO_CHANNEL_ERROR_FBIG() {
        return (int)0L;
    }
    public static int G_IO_CHANNEL_ERROR_INVAL() {
        return (int)1L;
    }
    public static int G_IO_CHANNEL_ERROR_IO() {
        return (int)2L;
    }
    public static int G_IO_CHANNEL_ERROR_ISDIR() {
        return (int)3L;
    }
    public static int G_IO_CHANNEL_ERROR_NOSPC() {
        return (int)4L;
    }
    public static int G_IO_CHANNEL_ERROR_NXIO() {
        return (int)5L;
    }
    public static int G_IO_CHANNEL_ERROR_OVERFLOW() {
        return (int)6L;
    }
    public static int G_IO_CHANNEL_ERROR_PIPE() {
        return (int)7L;
    }
    public static int G_IO_CHANNEL_ERROR_FAILED() {
        return (int)8L;
    }
    public static int G_IO_STATUS_ERROR() {
        return (int)0L;
    }
    public static int G_IO_STATUS_NORMAL() {
        return (int)1L;
    }
    public static int G_IO_STATUS_EOF() {
        return (int)2L;
    }
    public static int G_IO_STATUS_AGAIN() {
        return (int)3L;
    }
    public static int G_SEEK_CUR() {
        return (int)0L;
    }
    public static int G_SEEK_SET() {
        return (int)1L;
    }
    public static int G_SEEK_END() {
        return (int)2L;
    }
    public static int G_IO_FLAG_APPEND() {
        return (int)1L;
    }
    public static int G_IO_FLAG_NONBLOCK() {
        return (int)2L;
    }
    public static int G_IO_FLAG_IS_READABLE() {
        return (int)4L;
    }
    public static int G_IO_FLAG_IS_WRITABLE() {
        return (int)8L;
    }
    public static int G_IO_FLAG_IS_WRITEABLE() {
        return (int)8L;
    }
    public static int G_IO_FLAG_IS_SEEKABLE() {
        return (int)16L;
    }
    public static int G_IO_FLAG_MASK() {
        return (int)31L;
    }
    public static int G_IO_FLAG_GET_MASK() {
        return (int)31L;
    }
    public static int G_IO_FLAG_SET_MASK() {
        return (int)3L;
    }
    public static MethodHandle g_io_channel_init$MH() {
        return RuntimeHelper.requireNonNull(constants$188.g_io_channel_init$MH,"g_io_channel_init");
    }
    public static void g_io_channel_init ( Addressable channel) {
        var mh$ = RuntimeHelper.requireNonNull(constants$188.g_io_channel_init$MH, "g_io_channel_init");
        try {
            mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_ref$MH() {
        return RuntimeHelper.requireNonNull(constants$188.g_io_channel_ref$MH,"g_io_channel_ref");
    }
    public static MemoryAddress g_io_channel_ref ( Addressable channel) {
        var mh$ = RuntimeHelper.requireNonNull(constants$188.g_io_channel_ref$MH, "g_io_channel_ref");
        try {
            return (MemoryAddress)mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$188.g_io_channel_unref$MH,"g_io_channel_unref");
    }
    public static void g_io_channel_unref ( Addressable channel) {
        var mh$ = RuntimeHelper.requireNonNull(constants$188.g_io_channel_unref$MH, "g_io_channel_unref");
        try {
            mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_read$MH() {
        return RuntimeHelper.requireNonNull(constants$188.g_io_channel_read$MH,"g_io_channel_read");
    }
    public static int g_io_channel_read ( Addressable channel,  Addressable buf,  long count,  Addressable bytes_read) {
        var mh$ = RuntimeHelper.requireNonNull(constants$188.g_io_channel_read$MH, "g_io_channel_read");
        try {
            return (int)mh$.invokeExact(channel, buf, count, bytes_read);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_write$MH() {
        return RuntimeHelper.requireNonNull(constants$188.g_io_channel_write$MH,"g_io_channel_write");
    }
    public static int g_io_channel_write ( Addressable channel,  Addressable buf,  long count,  Addressable bytes_written) {
        var mh$ = RuntimeHelper.requireNonNull(constants$188.g_io_channel_write$MH, "g_io_channel_write");
        try {
            return (int)mh$.invokeExact(channel, buf, count, bytes_written);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_seek$MH() {
        return RuntimeHelper.requireNonNull(constants$189.g_io_channel_seek$MH,"g_io_channel_seek");
    }
    public static int g_io_channel_seek ( Addressable channel,  long offset,  int type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$189.g_io_channel_seek$MH, "g_io_channel_seek");
        try {
            return (int)mh$.invokeExact(channel, offset, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_close$MH() {
        return RuntimeHelper.requireNonNull(constants$189.g_io_channel_close$MH,"g_io_channel_close");
    }
    public static void g_io_channel_close ( Addressable channel) {
        var mh$ = RuntimeHelper.requireNonNull(constants$189.g_io_channel_close$MH, "g_io_channel_close");
        try {
            mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_shutdown$MH() {
        return RuntimeHelper.requireNonNull(constants$189.g_io_channel_shutdown$MH,"g_io_channel_shutdown");
    }
    public static int g_io_channel_shutdown ( Addressable channel,  int flush,  Addressable err) {
        var mh$ = RuntimeHelper.requireNonNull(constants$189.g_io_channel_shutdown$MH, "g_io_channel_shutdown");
        try {
            return (int)mh$.invokeExact(channel, flush, err);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_add_watch_full$MH() {
        return RuntimeHelper.requireNonNull(constants$189.g_io_add_watch_full$MH,"g_io_add_watch_full");
    }
    public static int g_io_add_watch_full ( Addressable channel,  int priority,  int condition,  Addressable func,  Addressable user_data,  Addressable notify) {
        var mh$ = RuntimeHelper.requireNonNull(constants$189.g_io_add_watch_full$MH, "g_io_add_watch_full");
        try {
            return (int)mh$.invokeExact(channel, priority, condition, func, user_data, notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_create_watch$MH() {
        return RuntimeHelper.requireNonNull(constants$189.g_io_create_watch$MH,"g_io_create_watch");
    }
    public static MemoryAddress g_io_create_watch ( Addressable channel,  int condition) {
        var mh$ = RuntimeHelper.requireNonNull(constants$189.g_io_create_watch$MH, "g_io_create_watch");
        try {
            return (MemoryAddress)mh$.invokeExact(channel, condition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_add_watch$MH() {
        return RuntimeHelper.requireNonNull(constants$189.g_io_add_watch$MH,"g_io_add_watch");
    }
    public static int g_io_add_watch ( Addressable channel,  int condition,  Addressable func,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$189.g_io_add_watch$MH, "g_io_add_watch");
        try {
            return (int)mh$.invokeExact(channel, condition, func, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_set_buffer_size$MH() {
        return RuntimeHelper.requireNonNull(constants$190.g_io_channel_set_buffer_size$MH,"g_io_channel_set_buffer_size");
    }
    public static void g_io_channel_set_buffer_size ( Addressable channel,  long size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$190.g_io_channel_set_buffer_size$MH, "g_io_channel_set_buffer_size");
        try {
            mh$.invokeExact(channel, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_get_buffer_size$MH() {
        return RuntimeHelper.requireNonNull(constants$190.g_io_channel_get_buffer_size$MH,"g_io_channel_get_buffer_size");
    }
    public static long g_io_channel_get_buffer_size ( Addressable channel) {
        var mh$ = RuntimeHelper.requireNonNull(constants$190.g_io_channel_get_buffer_size$MH, "g_io_channel_get_buffer_size");
        try {
            return (long)mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_get_buffer_condition$MH() {
        return RuntimeHelper.requireNonNull(constants$190.g_io_channel_get_buffer_condition$MH,"g_io_channel_get_buffer_condition");
    }
    public static int g_io_channel_get_buffer_condition ( Addressable channel) {
        var mh$ = RuntimeHelper.requireNonNull(constants$190.g_io_channel_get_buffer_condition$MH, "g_io_channel_get_buffer_condition");
        try {
            return (int)mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$190.g_io_channel_set_flags$MH,"g_io_channel_set_flags");
    }
    public static int g_io_channel_set_flags ( Addressable channel,  int flags,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$190.g_io_channel_set_flags$MH, "g_io_channel_set_flags");
        try {
            return (int)mh$.invokeExact(channel, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$190.g_io_channel_get_flags$MH,"g_io_channel_get_flags");
    }
    public static int g_io_channel_get_flags ( Addressable channel) {
        var mh$ = RuntimeHelper.requireNonNull(constants$190.g_io_channel_get_flags$MH, "g_io_channel_get_flags");
        try {
            return (int)mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_set_line_term$MH() {
        return RuntimeHelper.requireNonNull(constants$190.g_io_channel_set_line_term$MH,"g_io_channel_set_line_term");
    }
    public static void g_io_channel_set_line_term ( Addressable channel,  Addressable line_term,  int length) {
        var mh$ = RuntimeHelper.requireNonNull(constants$190.g_io_channel_set_line_term$MH, "g_io_channel_set_line_term");
        try {
            mh$.invokeExact(channel, line_term, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_get_line_term$MH() {
        return RuntimeHelper.requireNonNull(constants$191.g_io_channel_get_line_term$MH,"g_io_channel_get_line_term");
    }
    public static MemoryAddress g_io_channel_get_line_term ( Addressable channel,  Addressable length) {
        var mh$ = RuntimeHelper.requireNonNull(constants$191.g_io_channel_get_line_term$MH, "g_io_channel_get_line_term");
        try {
            return (MemoryAddress)mh$.invokeExact(channel, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_set_buffered$MH() {
        return RuntimeHelper.requireNonNull(constants$191.g_io_channel_set_buffered$MH,"g_io_channel_set_buffered");
    }
    public static void g_io_channel_set_buffered ( Addressable channel,  int buffered) {
        var mh$ = RuntimeHelper.requireNonNull(constants$191.g_io_channel_set_buffered$MH, "g_io_channel_set_buffered");
        try {
            mh$.invokeExact(channel, buffered);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_get_buffered$MH() {
        return RuntimeHelper.requireNonNull(constants$191.g_io_channel_get_buffered$MH,"g_io_channel_get_buffered");
    }
    public static int g_io_channel_get_buffered ( Addressable channel) {
        var mh$ = RuntimeHelper.requireNonNull(constants$191.g_io_channel_get_buffered$MH, "g_io_channel_get_buffered");
        try {
            return (int)mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_set_encoding$MH() {
        return RuntimeHelper.requireNonNull(constants$191.g_io_channel_set_encoding$MH,"g_io_channel_set_encoding");
    }
    public static int g_io_channel_set_encoding ( Addressable channel,  Addressable encoding,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$191.g_io_channel_set_encoding$MH, "g_io_channel_set_encoding");
        try {
            return (int)mh$.invokeExact(channel, encoding, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_get_encoding$MH() {
        return RuntimeHelper.requireNonNull(constants$191.g_io_channel_get_encoding$MH,"g_io_channel_get_encoding");
    }
    public static MemoryAddress g_io_channel_get_encoding ( Addressable channel) {
        var mh$ = RuntimeHelper.requireNonNull(constants$191.g_io_channel_get_encoding$MH, "g_io_channel_get_encoding");
        try {
            return (MemoryAddress)mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_set_close_on_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$191.g_io_channel_set_close_on_unref$MH,"g_io_channel_set_close_on_unref");
    }
    public static void g_io_channel_set_close_on_unref ( Addressable channel,  int do_close) {
        var mh$ = RuntimeHelper.requireNonNull(constants$191.g_io_channel_set_close_on_unref$MH, "g_io_channel_set_close_on_unref");
        try {
            mh$.invokeExact(channel, do_close);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_get_close_on_unref$MH() {
        return RuntimeHelper.requireNonNull(constants$192.g_io_channel_get_close_on_unref$MH,"g_io_channel_get_close_on_unref");
    }
    public static int g_io_channel_get_close_on_unref ( Addressable channel) {
        var mh$ = RuntimeHelper.requireNonNull(constants$192.g_io_channel_get_close_on_unref$MH, "g_io_channel_get_close_on_unref");
        try {
            return (int)mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_flush$MH() {
        return RuntimeHelper.requireNonNull(constants$192.g_io_channel_flush$MH,"g_io_channel_flush");
    }
    public static int g_io_channel_flush ( Addressable channel,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$192.g_io_channel_flush$MH, "g_io_channel_flush");
        try {
            return (int)mh$.invokeExact(channel, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_read_line$MH() {
        return RuntimeHelper.requireNonNull(constants$192.g_io_channel_read_line$MH,"g_io_channel_read_line");
    }
    public static int g_io_channel_read_line ( Addressable channel,  Addressable str_return,  Addressable length,  Addressable terminator_pos,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$192.g_io_channel_read_line$MH, "g_io_channel_read_line");
        try {
            return (int)mh$.invokeExact(channel, str_return, length, terminator_pos, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_read_line_string$MH() {
        return RuntimeHelper.requireNonNull(constants$192.g_io_channel_read_line_string$MH,"g_io_channel_read_line_string");
    }
    public static int g_io_channel_read_line_string ( Addressable channel,  Addressable buffer,  Addressable terminator_pos,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$192.g_io_channel_read_line_string$MH, "g_io_channel_read_line_string");
        try {
            return (int)mh$.invokeExact(channel, buffer, terminator_pos, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_read_to_end$MH() {
        return RuntimeHelper.requireNonNull(constants$192.g_io_channel_read_to_end$MH,"g_io_channel_read_to_end");
    }
    public static int g_io_channel_read_to_end ( Addressable channel,  Addressable str_return,  Addressable length,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$192.g_io_channel_read_to_end$MH, "g_io_channel_read_to_end");
        try {
            return (int)mh$.invokeExact(channel, str_return, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_read_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$192.g_io_channel_read_chars$MH,"g_io_channel_read_chars");
    }
    public static int g_io_channel_read_chars ( Addressable channel,  Addressable buf,  long count,  Addressable bytes_read,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$192.g_io_channel_read_chars$MH, "g_io_channel_read_chars");
        try {
            return (int)mh$.invokeExact(channel, buf, count, bytes_read, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_read_unichar$MH() {
        return RuntimeHelper.requireNonNull(constants$193.g_io_channel_read_unichar$MH,"g_io_channel_read_unichar");
    }
    public static int g_io_channel_read_unichar ( Addressable channel,  Addressable thechar,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$193.g_io_channel_read_unichar$MH, "g_io_channel_read_unichar");
        try {
            return (int)mh$.invokeExact(channel, thechar, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_write_chars$MH() {
        return RuntimeHelper.requireNonNull(constants$193.g_io_channel_write_chars$MH,"g_io_channel_write_chars");
    }
    public static int g_io_channel_write_chars ( Addressable channel,  Addressable buf,  long count,  Addressable bytes_written,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$193.g_io_channel_write_chars$MH, "g_io_channel_write_chars");
        try {
            return (int)mh$.invokeExact(channel, buf, count, bytes_written, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_write_unichar$MH() {
        return RuntimeHelper.requireNonNull(constants$193.g_io_channel_write_unichar$MH,"g_io_channel_write_unichar");
    }
    public static int g_io_channel_write_unichar ( Addressable channel,  int thechar,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$193.g_io_channel_write_unichar$MH, "g_io_channel_write_unichar");
        try {
            return (int)mh$.invokeExact(channel, thechar, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_seek_position$MH() {
        return RuntimeHelper.requireNonNull(constants$193.g_io_channel_seek_position$MH,"g_io_channel_seek_position");
    }
    public static int g_io_channel_seek_position ( Addressable channel,  long offset,  int type,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$193.g_io_channel_seek_position$MH, "g_io_channel_seek_position");
        try {
            return (int)mh$.invokeExact(channel, offset, type, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_new_file$MH() {
        return RuntimeHelper.requireNonNull(constants$193.g_io_channel_new_file$MH,"g_io_channel_new_file");
    }
    public static MemoryAddress g_io_channel_new_file ( Addressable filename,  Addressable mode,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$193.g_io_channel_new_file$MH, "g_io_channel_new_file");
        try {
            return (MemoryAddress)mh$.invokeExact(filename, mode, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$193.g_io_channel_error_quark$MH,"g_io_channel_error_quark");
    }
    public static int g_io_channel_error_quark () {
        var mh$ = RuntimeHelper.requireNonNull(constants$193.g_io_channel_error_quark$MH, "g_io_channel_error_quark");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_error_from_errno$MH() {
        return RuntimeHelper.requireNonNull(constants$194.g_io_channel_error_from_errno$MH,"g_io_channel_error_from_errno");
    }
    public static int g_io_channel_error_from_errno ( int en) {
        var mh$ = RuntimeHelper.requireNonNull(constants$194.g_io_channel_error_from_errno$MH, "g_io_channel_error_from_errno");
        try {
            return (int)mh$.invokeExact(en);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_unix_new$MH() {
        return RuntimeHelper.requireNonNull(constants$194.g_io_channel_unix_new$MH,"g_io_channel_unix_new");
    }
    public static MemoryAddress g_io_channel_unix_new ( int fd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$194.g_io_channel_unix_new$MH, "g_io_channel_unix_new");
        try {
            return (MemoryAddress)mh$.invokeExact(fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_io_channel_unix_get_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$194.g_io_channel_unix_get_fd$MH,"g_io_channel_unix_get_fd");
    }
    public static int g_io_channel_unix_get_fd ( Addressable channel) {
        var mh$ = RuntimeHelper.requireNonNull(constants$194.g_io_channel_unix_get_fd$MH, "g_io_channel_unix_get_fd");
        try {
            return (int)mh$.invokeExact(channel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemorySegment g_io_watch_funcs$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$194.g_io_watch_funcs$SEGMENT,"g_io_watch_funcs");
    }
    public static int G_KEY_FILE_ERROR_UNKNOWN_ENCODING() {
        return (int)0L;
    }
    public static int G_KEY_FILE_ERROR_PARSE() {
        return (int)1L;
    }
    public static int G_KEY_FILE_ERROR_NOT_FOUND() {
        return (int)2L;
    }
    public static int G_KEY_FILE_ERROR_KEY_NOT_FOUND() {
        return (int)3L;
    }
}


