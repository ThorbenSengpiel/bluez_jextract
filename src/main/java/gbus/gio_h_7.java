// Generated by jextract

package gbus;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
 class gio_h_7 extends gio_h_6 {

    public static MethodHandle g_simple_async_result_set_from_error$MH() {
        return RuntimeHelper.requireNonNull(constants$802.g_simple_async_result_set_from_error$MH,"g_simple_async_result_set_from_error");
    }
    public static void g_simple_async_result_set_from_error ( Addressable simple,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$802.g_simple_async_result_set_from_error$MH, "g_simple_async_result_set_from_error");
        try {
            mh$.invokeExact(simple, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_take_error$MH() {
        return RuntimeHelper.requireNonNull(constants$802.g_simple_async_result_take_error$MH,"g_simple_async_result_take_error");
    }
    public static void g_simple_async_result_take_error ( Addressable simple,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$802.g_simple_async_result_take_error$MH, "g_simple_async_result_take_error");
        try {
            mh$.invokeExact(simple, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_propagate_error$MH() {
        return RuntimeHelper.requireNonNull(constants$803.g_simple_async_result_propagate_error$MH,"g_simple_async_result_propagate_error");
    }
    public static int g_simple_async_result_propagate_error ( Addressable simple,  Addressable dest) {
        var mh$ = RuntimeHelper.requireNonNull(constants$803.g_simple_async_result_propagate_error$MH, "g_simple_async_result_propagate_error");
        try {
            return (int)mh$.invokeExact(simple, dest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_set_error$MH() {
        return RuntimeHelper.requireNonNull(constants$803.g_simple_async_result_set_error$MH,"g_simple_async_result_set_error");
    }
    public static void g_simple_async_result_set_error ( Addressable simple,  int domain,  int code,  Addressable format, Object... x4) {
        var mh$ = RuntimeHelper.requireNonNull(constants$803.g_simple_async_result_set_error$MH, "g_simple_async_result_set_error");
        try {
            mh$.invokeExact(simple, domain, code, format, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_set_error_va$MH() {
        return RuntimeHelper.requireNonNull(constants$803.g_simple_async_result_set_error_va$MH,"g_simple_async_result_set_error_va");
    }
    public static void g_simple_async_result_set_error_va ( Addressable simple,  int domain,  int code,  Addressable format,  Addressable args) {
        var mh$ = RuntimeHelper.requireNonNull(constants$803.g_simple_async_result_set_error_va$MH, "g_simple_async_result_set_error_va");
        try {
            mh$.invokeExact(simple, domain, code, format, args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_result_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$803.g_simple_async_result_is_valid$MH,"g_simple_async_result_is_valid");
    }
    public static int g_simple_async_result_is_valid ( Addressable result,  Addressable source,  Addressable source_tag) {
        var mh$ = RuntimeHelper.requireNonNull(constants$803.g_simple_async_result_is_valid$MH, "g_simple_async_result_is_valid");
        try {
            return (int)mh$.invokeExact(result, source, source_tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_report_error_in_idle$MH() {
        return RuntimeHelper.requireNonNull(constants$803.g_simple_async_report_error_in_idle$MH,"g_simple_async_report_error_in_idle");
    }
    public static void g_simple_async_report_error_in_idle ( Addressable object,  Addressable callback,  Addressable user_data,  int domain,  int code,  Addressable format, Object... x6) {
        var mh$ = RuntimeHelper.requireNonNull(constants$803.g_simple_async_report_error_in_idle$MH, "g_simple_async_report_error_in_idle");
        try {
            mh$.invokeExact(object, callback, user_data, domain, code, format, x6);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_report_gerror_in_idle$MH() {
        return RuntimeHelper.requireNonNull(constants$803.g_simple_async_report_gerror_in_idle$MH,"g_simple_async_report_gerror_in_idle");
    }
    public static void g_simple_async_report_gerror_in_idle ( Addressable object,  Addressable callback,  Addressable user_data,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$803.g_simple_async_report_gerror_in_idle$MH, "g_simple_async_report_gerror_in_idle");
        try {
            mh$.invokeExact(object, callback, user_data, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_async_report_take_gerror_in_idle$MH() {
        return RuntimeHelper.requireNonNull(constants$804.g_simple_async_report_take_gerror_in_idle$MH,"g_simple_async_report_take_gerror_in_idle");
    }
    public static void g_simple_async_report_take_gerror_in_idle ( Addressable object,  Addressable callback,  Addressable user_data,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$804.g_simple_async_report_take_gerror_in_idle$MH, "g_simple_async_report_take_gerror_in_idle");
        try {
            mh$.invokeExact(object, callback, user_data, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_io_stream_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$804.g_simple_io_stream_get_type$MH,"g_simple_io_stream_get_type");
    }
    public static long g_simple_io_stream_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$804.g_simple_io_stream_get_type$MH, "g_simple_io_stream_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_io_stream_new$MH() {
        return RuntimeHelper.requireNonNull(constants$804.g_simple_io_stream_new$MH,"g_simple_io_stream_new");
    }
    public static MemoryAddress g_simple_io_stream_new ( Addressable input_stream,  Addressable output_stream) {
        var mh$ = RuntimeHelper.requireNonNull(constants$804.g_simple_io_stream_new$MH, "g_simple_io_stream_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(input_stream, output_stream);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_permission_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$804.g_simple_permission_get_type$MH,"g_simple_permission_get_type");
    }
    public static long g_simple_permission_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$804.g_simple_permission_get_type$MH, "g_simple_permission_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_permission_new$MH() {
        return RuntimeHelper.requireNonNull(constants$804.g_simple_permission_new$MH,"g_simple_permission_new");
    }
    public static MemoryAddress g_simple_permission_new ( int allowed) {
        var mh$ = RuntimeHelper.requireNonNull(constants$804.g_simple_permission_new$MH, "g_simple_permission_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(allowed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_proxy_resolver_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$804.g_simple_proxy_resolver_get_type$MH,"g_simple_proxy_resolver_get_type");
    }
    public static long g_simple_proxy_resolver_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$804.g_simple_proxy_resolver_get_type$MH, "g_simple_proxy_resolver_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_proxy_resolver_new$MH() {
        return RuntimeHelper.requireNonNull(constants$805.g_simple_proxy_resolver_new$MH,"g_simple_proxy_resolver_new");
    }
    public static MemoryAddress g_simple_proxy_resolver_new ( Addressable default_proxy,  Addressable ignore_hosts) {
        var mh$ = RuntimeHelper.requireNonNull(constants$805.g_simple_proxy_resolver_new$MH, "g_simple_proxy_resolver_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(default_proxy, ignore_hosts);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_proxy_resolver_set_default_proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$805.g_simple_proxy_resolver_set_default_proxy$MH,"g_simple_proxy_resolver_set_default_proxy");
    }
    public static void g_simple_proxy_resolver_set_default_proxy ( Addressable resolver,  Addressable default_proxy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$805.g_simple_proxy_resolver_set_default_proxy$MH, "g_simple_proxy_resolver_set_default_proxy");
        try {
            mh$.invokeExact(resolver, default_proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_proxy_resolver_set_ignore_hosts$MH() {
        return RuntimeHelper.requireNonNull(constants$805.g_simple_proxy_resolver_set_ignore_hosts$MH,"g_simple_proxy_resolver_set_ignore_hosts");
    }
    public static void g_simple_proxy_resolver_set_ignore_hosts ( Addressable resolver,  Addressable ignore_hosts) {
        var mh$ = RuntimeHelper.requireNonNull(constants$805.g_simple_proxy_resolver_set_ignore_hosts$MH, "g_simple_proxy_resolver_set_ignore_hosts");
        try {
            mh$.invokeExact(resolver, ignore_hosts);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_simple_proxy_resolver_set_uri_proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$805.g_simple_proxy_resolver_set_uri_proxy$MH,"g_simple_proxy_resolver_set_uri_proxy");
    }
    public static void g_simple_proxy_resolver_set_uri_proxy ( Addressable resolver,  Addressable uri_scheme,  Addressable proxy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$805.g_simple_proxy_resolver_set_uri_proxy$MH, "g_simple_proxy_resolver_set_uri_proxy");
        try {
            mh$.invokeExact(resolver, uri_scheme, proxy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$805.g_socket_get_type$MH,"g_socket_get_type");
    }
    public static long g_socket_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$805.g_socket_get_type$MH, "g_socket_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_new$MH() {
        return RuntimeHelper.requireNonNull(constants$805.g_socket_new$MH,"g_socket_new");
    }
    public static MemoryAddress g_socket_new ( int family,  int type,  int protocol,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$805.g_socket_new$MH, "g_socket_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(family, type, protocol, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_new_from_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$806.g_socket_new_from_fd$MH,"g_socket_new_from_fd");
    }
    public static MemoryAddress g_socket_new_from_fd ( int fd,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$806.g_socket_new_from_fd$MH, "g_socket_new_from_fd");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(fd, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$806.g_socket_get_fd$MH,"g_socket_get_fd");
    }
    public static int g_socket_get_fd ( Addressable socket) {
        var mh$ = RuntimeHelper.requireNonNull(constants$806.g_socket_get_fd$MH, "g_socket_get_fd");
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_family$MH() {
        return RuntimeHelper.requireNonNull(constants$806.g_socket_get_family$MH,"g_socket_get_family");
    }
    public static int g_socket_get_family ( Addressable socket) {
        var mh$ = RuntimeHelper.requireNonNull(constants$806.g_socket_get_family$MH, "g_socket_get_family");
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_socket_type$MH() {
        return RuntimeHelper.requireNonNull(constants$806.g_socket_get_socket_type$MH,"g_socket_get_socket_type");
    }
    public static int g_socket_get_socket_type ( Addressable socket) {
        var mh$ = RuntimeHelper.requireNonNull(constants$806.g_socket_get_socket_type$MH, "g_socket_get_socket_type");
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_protocol$MH() {
        return RuntimeHelper.requireNonNull(constants$806.g_socket_get_protocol$MH,"g_socket_get_protocol");
    }
    public static int g_socket_get_protocol ( Addressable socket) {
        var mh$ = RuntimeHelper.requireNonNull(constants$806.g_socket_get_protocol$MH, "g_socket_get_protocol");
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_local_address$MH() {
        return RuntimeHelper.requireNonNull(constants$806.g_socket_get_local_address$MH,"g_socket_get_local_address");
    }
    public static MemoryAddress g_socket_get_local_address ( Addressable socket,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$806.g_socket_get_local_address$MH, "g_socket_get_local_address");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(socket, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_remote_address$MH() {
        return RuntimeHelper.requireNonNull(constants$807.g_socket_get_remote_address$MH,"g_socket_get_remote_address");
    }
    public static MemoryAddress g_socket_get_remote_address ( Addressable socket,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$807.g_socket_get_remote_address$MH, "g_socket_get_remote_address");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(socket, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_blocking$MH() {
        return RuntimeHelper.requireNonNull(constants$807.g_socket_set_blocking$MH,"g_socket_set_blocking");
    }
    public static void g_socket_set_blocking ( Addressable socket,  int blocking) {
        var mh$ = RuntimeHelper.requireNonNull(constants$807.g_socket_set_blocking$MH, "g_socket_set_blocking");
        try {
            mh$.invokeExact(socket, blocking);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_blocking$MH() {
        return RuntimeHelper.requireNonNull(constants$807.g_socket_get_blocking$MH,"g_socket_get_blocking");
    }
    public static int g_socket_get_blocking ( Addressable socket) {
        var mh$ = RuntimeHelper.requireNonNull(constants$807.g_socket_get_blocking$MH, "g_socket_get_blocking");
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_keepalive$MH() {
        return RuntimeHelper.requireNonNull(constants$807.g_socket_set_keepalive$MH,"g_socket_set_keepalive");
    }
    public static void g_socket_set_keepalive ( Addressable socket,  int keepalive) {
        var mh$ = RuntimeHelper.requireNonNull(constants$807.g_socket_set_keepalive$MH, "g_socket_set_keepalive");
        try {
            mh$.invokeExact(socket, keepalive);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_keepalive$MH() {
        return RuntimeHelper.requireNonNull(constants$807.g_socket_get_keepalive$MH,"g_socket_get_keepalive");
    }
    public static int g_socket_get_keepalive ( Addressable socket) {
        var mh$ = RuntimeHelper.requireNonNull(constants$807.g_socket_get_keepalive$MH, "g_socket_get_keepalive");
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_listen_backlog$MH() {
        return RuntimeHelper.requireNonNull(constants$807.g_socket_get_listen_backlog$MH,"g_socket_get_listen_backlog");
    }
    public static int g_socket_get_listen_backlog ( Addressable socket) {
        var mh$ = RuntimeHelper.requireNonNull(constants$807.g_socket_get_listen_backlog$MH, "g_socket_get_listen_backlog");
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_listen_backlog$MH() {
        return RuntimeHelper.requireNonNull(constants$808.g_socket_set_listen_backlog$MH,"g_socket_set_listen_backlog");
    }
    public static void g_socket_set_listen_backlog ( Addressable socket,  int backlog) {
        var mh$ = RuntimeHelper.requireNonNull(constants$808.g_socket_set_listen_backlog$MH, "g_socket_set_listen_backlog");
        try {
            mh$.invokeExact(socket, backlog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$808.g_socket_get_timeout$MH,"g_socket_get_timeout");
    }
    public static int g_socket_get_timeout ( Addressable socket) {
        var mh$ = RuntimeHelper.requireNonNull(constants$808.g_socket_get_timeout$MH, "g_socket_get_timeout");
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$808.g_socket_set_timeout$MH,"g_socket_set_timeout");
    }
    public static void g_socket_set_timeout ( Addressable socket,  int timeout) {
        var mh$ = RuntimeHelper.requireNonNull(constants$808.g_socket_set_timeout$MH, "g_socket_set_timeout");
        try {
            mh$.invokeExact(socket, timeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_ttl$MH() {
        return RuntimeHelper.requireNonNull(constants$808.g_socket_get_ttl$MH,"g_socket_get_ttl");
    }
    public static int g_socket_get_ttl ( Addressable socket) {
        var mh$ = RuntimeHelper.requireNonNull(constants$808.g_socket_get_ttl$MH, "g_socket_get_ttl");
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_ttl$MH() {
        return RuntimeHelper.requireNonNull(constants$808.g_socket_set_ttl$MH,"g_socket_set_ttl");
    }
    public static void g_socket_set_ttl ( Addressable socket,  int ttl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$808.g_socket_set_ttl$MH, "g_socket_set_ttl");
        try {
            mh$.invokeExact(socket, ttl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_broadcast$MH() {
        return RuntimeHelper.requireNonNull(constants$808.g_socket_get_broadcast$MH,"g_socket_get_broadcast");
    }
    public static int g_socket_get_broadcast ( Addressable socket) {
        var mh$ = RuntimeHelper.requireNonNull(constants$808.g_socket_get_broadcast$MH, "g_socket_get_broadcast");
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_broadcast$MH() {
        return RuntimeHelper.requireNonNull(constants$809.g_socket_set_broadcast$MH,"g_socket_set_broadcast");
    }
    public static void g_socket_set_broadcast ( Addressable socket,  int broadcast) {
        var mh$ = RuntimeHelper.requireNonNull(constants$809.g_socket_set_broadcast$MH, "g_socket_set_broadcast");
        try {
            mh$.invokeExact(socket, broadcast);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_multicast_loopback$MH() {
        return RuntimeHelper.requireNonNull(constants$809.g_socket_get_multicast_loopback$MH,"g_socket_get_multicast_loopback");
    }
    public static int g_socket_get_multicast_loopback ( Addressable socket) {
        var mh$ = RuntimeHelper.requireNonNull(constants$809.g_socket_get_multicast_loopback$MH, "g_socket_get_multicast_loopback");
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_multicast_loopback$MH() {
        return RuntimeHelper.requireNonNull(constants$809.g_socket_set_multicast_loopback$MH,"g_socket_set_multicast_loopback");
    }
    public static void g_socket_set_multicast_loopback ( Addressable socket,  int loopback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$809.g_socket_set_multicast_loopback$MH, "g_socket_set_multicast_loopback");
        try {
            mh$.invokeExact(socket, loopback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_multicast_ttl$MH() {
        return RuntimeHelper.requireNonNull(constants$809.g_socket_get_multicast_ttl$MH,"g_socket_get_multicast_ttl");
    }
    public static int g_socket_get_multicast_ttl ( Addressable socket) {
        var mh$ = RuntimeHelper.requireNonNull(constants$809.g_socket_get_multicast_ttl$MH, "g_socket_get_multicast_ttl");
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_multicast_ttl$MH() {
        return RuntimeHelper.requireNonNull(constants$809.g_socket_set_multicast_ttl$MH,"g_socket_set_multicast_ttl");
    }
    public static void g_socket_set_multicast_ttl ( Addressable socket,  int ttl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$809.g_socket_set_multicast_ttl$MH, "g_socket_set_multicast_ttl");
        try {
            mh$.invokeExact(socket, ttl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_is_connected$MH() {
        return RuntimeHelper.requireNonNull(constants$809.g_socket_is_connected$MH,"g_socket_is_connected");
    }
    public static int g_socket_is_connected ( Addressable socket) {
        var mh$ = RuntimeHelper.requireNonNull(constants$809.g_socket_is_connected$MH, "g_socket_is_connected");
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_bind$MH() {
        return RuntimeHelper.requireNonNull(constants$810.g_socket_bind$MH,"g_socket_bind");
    }
    public static int g_socket_bind ( Addressable socket,  Addressable address,  int allow_reuse,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$810.g_socket_bind$MH, "g_socket_bind");
        try {
            return (int)mh$.invokeExact(socket, address, allow_reuse, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_join_multicast_group$MH() {
        return RuntimeHelper.requireNonNull(constants$810.g_socket_join_multicast_group$MH,"g_socket_join_multicast_group");
    }
    public static int g_socket_join_multicast_group ( Addressable socket,  Addressable group,  int source_specific,  Addressable iface,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$810.g_socket_join_multicast_group$MH, "g_socket_join_multicast_group");
        try {
            return (int)mh$.invokeExact(socket, group, source_specific, iface, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_leave_multicast_group$MH() {
        return RuntimeHelper.requireNonNull(constants$810.g_socket_leave_multicast_group$MH,"g_socket_leave_multicast_group");
    }
    public static int g_socket_leave_multicast_group ( Addressable socket,  Addressable group,  int source_specific,  Addressable iface,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$810.g_socket_leave_multicast_group$MH, "g_socket_leave_multicast_group");
        try {
            return (int)mh$.invokeExact(socket, group, source_specific, iface, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_join_multicast_group_ssm$MH() {
        return RuntimeHelper.requireNonNull(constants$810.g_socket_join_multicast_group_ssm$MH,"g_socket_join_multicast_group_ssm");
    }
    public static int g_socket_join_multicast_group_ssm ( Addressable socket,  Addressable group,  Addressable source_specific,  Addressable iface,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$810.g_socket_join_multicast_group_ssm$MH, "g_socket_join_multicast_group_ssm");
        try {
            return (int)mh$.invokeExact(socket, group, source_specific, iface, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_leave_multicast_group_ssm$MH() {
        return RuntimeHelper.requireNonNull(constants$810.g_socket_leave_multicast_group_ssm$MH,"g_socket_leave_multicast_group_ssm");
    }
    public static int g_socket_leave_multicast_group_ssm ( Addressable socket,  Addressable group,  Addressable source_specific,  Addressable iface,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$810.g_socket_leave_multicast_group_ssm$MH, "g_socket_leave_multicast_group_ssm");
        try {
            return (int)mh$.invokeExact(socket, group, source_specific, iface, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connect$MH() {
        return RuntimeHelper.requireNonNull(constants$810.g_socket_connect$MH,"g_socket_connect");
    }
    public static int g_socket_connect ( Addressable socket,  Addressable address,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$810.g_socket_connect$MH, "g_socket_connect");
        try {
            return (int)mh$.invokeExact(socket, address, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_check_connect_result$MH() {
        return RuntimeHelper.requireNonNull(constants$811.g_socket_check_connect_result$MH,"g_socket_check_connect_result");
    }
    public static int g_socket_check_connect_result ( Addressable socket,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$811.g_socket_check_connect_result$MH, "g_socket_check_connect_result");
        try {
            return (int)mh$.invokeExact(socket, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_available_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$811.g_socket_get_available_bytes$MH,"g_socket_get_available_bytes");
    }
    public static long g_socket_get_available_bytes ( Addressable socket) {
        var mh$ = RuntimeHelper.requireNonNull(constants$811.g_socket_get_available_bytes$MH, "g_socket_get_available_bytes");
        try {
            return (long)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_condition_check$MH() {
        return RuntimeHelper.requireNonNull(constants$811.g_socket_condition_check$MH,"g_socket_condition_check");
    }
    public static int g_socket_condition_check ( Addressable socket,  int condition) {
        var mh$ = RuntimeHelper.requireNonNull(constants$811.g_socket_condition_check$MH, "g_socket_condition_check");
        try {
            return (int)mh$.invokeExact(socket, condition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_condition_wait$MH() {
        return RuntimeHelper.requireNonNull(constants$811.g_socket_condition_wait$MH,"g_socket_condition_wait");
    }
    public static int g_socket_condition_wait ( Addressable socket,  int condition,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$811.g_socket_condition_wait$MH, "g_socket_condition_wait");
        try {
            return (int)mh$.invokeExact(socket, condition, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_condition_timed_wait$MH() {
        return RuntimeHelper.requireNonNull(constants$811.g_socket_condition_timed_wait$MH,"g_socket_condition_timed_wait");
    }
    public static int g_socket_condition_timed_wait ( Addressable socket,  int condition,  long timeout_us,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$811.g_socket_condition_timed_wait$MH, "g_socket_condition_timed_wait");
        try {
            return (int)mh$.invokeExact(socket, condition, timeout_us, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_accept$MH() {
        return RuntimeHelper.requireNonNull(constants$811.g_socket_accept$MH,"g_socket_accept");
    }
    public static MemoryAddress g_socket_accept ( Addressable socket,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$811.g_socket_accept$MH, "g_socket_accept");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(socket, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listen$MH() {
        return RuntimeHelper.requireNonNull(constants$812.g_socket_listen$MH,"g_socket_listen");
    }
    public static int g_socket_listen ( Addressable socket,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$812.g_socket_listen$MH, "g_socket_listen");
        try {
            return (int)mh$.invokeExact(socket, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_receive$MH() {
        return RuntimeHelper.requireNonNull(constants$812.g_socket_receive$MH,"g_socket_receive");
    }
    public static long g_socket_receive ( Addressable socket,  Addressable buffer,  long size,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$812.g_socket_receive$MH, "g_socket_receive");
        try {
            return (long)mh$.invokeExact(socket, buffer, size, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_receive_from$MH() {
        return RuntimeHelper.requireNonNull(constants$812.g_socket_receive_from$MH,"g_socket_receive_from");
    }
    public static long g_socket_receive_from ( Addressable socket,  Addressable address,  Addressable buffer,  long size,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$812.g_socket_receive_from$MH, "g_socket_receive_from");
        try {
            return (long)mh$.invokeExact(socket, address, buffer, size, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_send$MH() {
        return RuntimeHelper.requireNonNull(constants$812.g_socket_send$MH,"g_socket_send");
    }
    public static long g_socket_send ( Addressable socket,  Addressable buffer,  long size,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$812.g_socket_send$MH, "g_socket_send");
        try {
            return (long)mh$.invokeExact(socket, buffer, size, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_send_to$MH() {
        return RuntimeHelper.requireNonNull(constants$812.g_socket_send_to$MH,"g_socket_send_to");
    }
    public static long g_socket_send_to ( Addressable socket,  Addressable address,  Addressable buffer,  long size,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$812.g_socket_send_to$MH, "g_socket_send_to");
        try {
            return (long)mh$.invokeExact(socket, address, buffer, size, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_receive_message$MH() {
        return RuntimeHelper.requireNonNull(constants$812.g_socket_receive_message$MH,"g_socket_receive_message");
    }
    public static long g_socket_receive_message ( Addressable socket,  Addressable address,  Addressable vectors,  int num_vectors,  Addressable messages,  Addressable num_messages,  Addressable flags,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$812.g_socket_receive_message$MH, "g_socket_receive_message");
        try {
            return (long)mh$.invokeExact(socket, address, vectors, num_vectors, messages, num_messages, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_send_message$MH() {
        return RuntimeHelper.requireNonNull(constants$813.g_socket_send_message$MH,"g_socket_send_message");
    }
    public static long g_socket_send_message ( Addressable socket,  Addressable address,  Addressable vectors,  int num_vectors,  Addressable messages,  int num_messages,  int flags,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$813.g_socket_send_message$MH, "g_socket_send_message");
        try {
            return (long)mh$.invokeExact(socket, address, vectors, num_vectors, messages, num_messages, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_receive_messages$MH() {
        return RuntimeHelper.requireNonNull(constants$813.g_socket_receive_messages$MH,"g_socket_receive_messages");
    }
    public static int g_socket_receive_messages ( Addressable socket,  Addressable messages,  int num_messages,  int flags,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$813.g_socket_receive_messages$MH, "g_socket_receive_messages");
        try {
            return (int)mh$.invokeExact(socket, messages, num_messages, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_send_messages$MH() {
        return RuntimeHelper.requireNonNull(constants$813.g_socket_send_messages$MH,"g_socket_send_messages");
    }
    public static int g_socket_send_messages ( Addressable socket,  Addressable messages,  int num_messages,  int flags,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$813.g_socket_send_messages$MH, "g_socket_send_messages");
        try {
            return (int)mh$.invokeExact(socket, messages, num_messages, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_close$MH() {
        return RuntimeHelper.requireNonNull(constants$813.g_socket_close$MH,"g_socket_close");
    }
    public static int g_socket_close ( Addressable socket,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$813.g_socket_close$MH, "g_socket_close");
        try {
            return (int)mh$.invokeExact(socket, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_shutdown$MH() {
        return RuntimeHelper.requireNonNull(constants$813.g_socket_shutdown$MH,"g_socket_shutdown");
    }
    public static int g_socket_shutdown ( Addressable socket,  int shutdown_read,  int shutdown_write,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$813.g_socket_shutdown$MH, "g_socket_shutdown");
        try {
            return (int)mh$.invokeExact(socket, shutdown_read, shutdown_write, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_is_closed$MH() {
        return RuntimeHelper.requireNonNull(constants$813.g_socket_is_closed$MH,"g_socket_is_closed");
    }
    public static int g_socket_is_closed ( Addressable socket) {
        var mh$ = RuntimeHelper.requireNonNull(constants$813.g_socket_is_closed$MH, "g_socket_is_closed");
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_create_source$MH() {
        return RuntimeHelper.requireNonNull(constants$814.g_socket_create_source$MH,"g_socket_create_source");
    }
    public static MemoryAddress g_socket_create_source ( Addressable socket,  int condition,  Addressable cancellable) {
        var mh$ = RuntimeHelper.requireNonNull(constants$814.g_socket_create_source$MH, "g_socket_create_source");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(socket, condition, cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_speaks_ipv4$MH() {
        return RuntimeHelper.requireNonNull(constants$814.g_socket_speaks_ipv4$MH,"g_socket_speaks_ipv4");
    }
    public static int g_socket_speaks_ipv4 ( Addressable socket) {
        var mh$ = RuntimeHelper.requireNonNull(constants$814.g_socket_speaks_ipv4$MH, "g_socket_speaks_ipv4");
        try {
            return (int)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_credentials$MH() {
        return RuntimeHelper.requireNonNull(constants$814.g_socket_get_credentials$MH,"g_socket_get_credentials");
    }
    public static MemoryAddress g_socket_get_credentials ( Addressable socket,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$814.g_socket_get_credentials$MH, "g_socket_get_credentials");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(socket, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_receive_with_blocking$MH() {
        return RuntimeHelper.requireNonNull(constants$814.g_socket_receive_with_blocking$MH,"g_socket_receive_with_blocking");
    }
    public static long g_socket_receive_with_blocking ( Addressable socket,  Addressable buffer,  long size,  int blocking,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$814.g_socket_receive_with_blocking$MH, "g_socket_receive_with_blocking");
        try {
            return (long)mh$.invokeExact(socket, buffer, size, blocking, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_send_with_blocking$MH() {
        return RuntimeHelper.requireNonNull(constants$814.g_socket_send_with_blocking$MH,"g_socket_send_with_blocking");
    }
    public static long g_socket_send_with_blocking ( Addressable socket,  Addressable buffer,  long size,  int blocking,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$814.g_socket_send_with_blocking$MH, "g_socket_send_with_blocking");
        try {
            return (long)mh$.invokeExact(socket, buffer, size, blocking, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_send_message_with_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$814.g_socket_send_message_with_timeout$MH,"g_socket_send_message_with_timeout");
    }
    public static int g_socket_send_message_with_timeout ( Addressable socket,  Addressable address,  Addressable vectors,  int num_vectors,  Addressable messages,  int num_messages,  int flags,  long timeout_us,  Addressable bytes_written,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$814.g_socket_send_message_with_timeout$MH, "g_socket_send_message_with_timeout");
        try {
            return (int)mh$.invokeExact(socket, address, vectors, num_vectors, messages, num_messages, flags, timeout_us, bytes_written, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_get_option$MH() {
        return RuntimeHelper.requireNonNull(constants$815.g_socket_get_option$MH,"g_socket_get_option");
    }
    public static int g_socket_get_option ( Addressable socket,  int level,  int optname,  Addressable value,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$815.g_socket_get_option$MH, "g_socket_get_option");
        try {
            return (int)mh$.invokeExact(socket, level, optname, value, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_set_option$MH() {
        return RuntimeHelper.requireNonNull(constants$815.g_socket_set_option$MH,"g_socket_set_option");
    }
    public static int g_socket_set_option ( Addressable socket,  int level,  int optname,  int value,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$815.g_socket_set_option$MH, "g_socket_set_option");
        try {
            return (int)mh$.invokeExact(socket, level, optname, value, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$815.g_socket_client_get_type$MH,"g_socket_client_get_type");
    }
    public static long g_socket_client_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$815.g_socket_client_get_type$MH, "g_socket_client_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_new$MH() {
        return RuntimeHelper.requireNonNull(constants$815.g_socket_client_new$MH,"g_socket_client_new");
    }
    public static MemoryAddress g_socket_client_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$815.g_socket_client_new$MH, "g_socket_client_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_family$MH() {
        return RuntimeHelper.requireNonNull(constants$815.g_socket_client_get_family$MH,"g_socket_client_get_family");
    }
    public static int g_socket_client_get_family ( Addressable client) {
        var mh$ = RuntimeHelper.requireNonNull(constants$815.g_socket_client_get_family$MH, "g_socket_client_get_family");
        try {
            return (int)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_family$MH() {
        return RuntimeHelper.requireNonNull(constants$815.g_socket_client_set_family$MH,"g_socket_client_set_family");
    }
    public static void g_socket_client_set_family ( Addressable client,  int family) {
        var mh$ = RuntimeHelper.requireNonNull(constants$815.g_socket_client_set_family$MH, "g_socket_client_set_family");
        try {
            mh$.invokeExact(client, family);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_socket_type$MH() {
        return RuntimeHelper.requireNonNull(constants$816.g_socket_client_get_socket_type$MH,"g_socket_client_get_socket_type");
    }
    public static int g_socket_client_get_socket_type ( Addressable client) {
        var mh$ = RuntimeHelper.requireNonNull(constants$816.g_socket_client_get_socket_type$MH, "g_socket_client_get_socket_type");
        try {
            return (int)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_socket_type$MH() {
        return RuntimeHelper.requireNonNull(constants$816.g_socket_client_set_socket_type$MH,"g_socket_client_set_socket_type");
    }
    public static void g_socket_client_set_socket_type ( Addressable client,  int type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$816.g_socket_client_set_socket_type$MH, "g_socket_client_set_socket_type");
        try {
            mh$.invokeExact(client, type);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_protocol$MH() {
        return RuntimeHelper.requireNonNull(constants$816.g_socket_client_get_protocol$MH,"g_socket_client_get_protocol");
    }
    public static int g_socket_client_get_protocol ( Addressable client) {
        var mh$ = RuntimeHelper.requireNonNull(constants$816.g_socket_client_get_protocol$MH, "g_socket_client_get_protocol");
        try {
            return (int)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_protocol$MH() {
        return RuntimeHelper.requireNonNull(constants$816.g_socket_client_set_protocol$MH,"g_socket_client_set_protocol");
    }
    public static void g_socket_client_set_protocol ( Addressable client,  int protocol) {
        var mh$ = RuntimeHelper.requireNonNull(constants$816.g_socket_client_set_protocol$MH, "g_socket_client_set_protocol");
        try {
            mh$.invokeExact(client, protocol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_local_address$MH() {
        return RuntimeHelper.requireNonNull(constants$816.g_socket_client_get_local_address$MH,"g_socket_client_get_local_address");
    }
    public static MemoryAddress g_socket_client_get_local_address ( Addressable client) {
        var mh$ = RuntimeHelper.requireNonNull(constants$816.g_socket_client_get_local_address$MH, "g_socket_client_get_local_address");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_local_address$MH() {
        return RuntimeHelper.requireNonNull(constants$816.g_socket_client_set_local_address$MH,"g_socket_client_set_local_address");
    }
    public static void g_socket_client_set_local_address ( Addressable client,  Addressable address) {
        var mh$ = RuntimeHelper.requireNonNull(constants$816.g_socket_client_set_local_address$MH, "g_socket_client_set_local_address");
        try {
            mh$.invokeExact(client, address);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$817.g_socket_client_get_timeout$MH,"g_socket_client_get_timeout");
    }
    public static int g_socket_client_get_timeout ( Addressable client) {
        var mh$ = RuntimeHelper.requireNonNull(constants$817.g_socket_client_get_timeout$MH, "g_socket_client_get_timeout");
        try {
            return (int)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$817.g_socket_client_set_timeout$MH,"g_socket_client_set_timeout");
    }
    public static void g_socket_client_set_timeout ( Addressable client,  int timeout) {
        var mh$ = RuntimeHelper.requireNonNull(constants$817.g_socket_client_set_timeout$MH, "g_socket_client_set_timeout");
        try {
            mh$.invokeExact(client, timeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_enable_proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$817.g_socket_client_get_enable_proxy$MH,"g_socket_client_get_enable_proxy");
    }
    public static int g_socket_client_get_enable_proxy ( Addressable client) {
        var mh$ = RuntimeHelper.requireNonNull(constants$817.g_socket_client_get_enable_proxy$MH, "g_socket_client_get_enable_proxy");
        try {
            return (int)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_enable_proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$817.g_socket_client_set_enable_proxy$MH,"g_socket_client_set_enable_proxy");
    }
    public static void g_socket_client_set_enable_proxy ( Addressable client,  int enable) {
        var mh$ = RuntimeHelper.requireNonNull(constants$817.g_socket_client_set_enable_proxy$MH, "g_socket_client_set_enable_proxy");
        try {
            mh$.invokeExact(client, enable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_tls$MH() {
        return RuntimeHelper.requireNonNull(constants$817.g_socket_client_get_tls$MH,"g_socket_client_get_tls");
    }
    public static int g_socket_client_get_tls ( Addressable client) {
        var mh$ = RuntimeHelper.requireNonNull(constants$817.g_socket_client_get_tls$MH, "g_socket_client_get_tls");
        try {
            return (int)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_tls$MH() {
        return RuntimeHelper.requireNonNull(constants$817.g_socket_client_set_tls$MH,"g_socket_client_set_tls");
    }
    public static void g_socket_client_set_tls ( Addressable client,  int tls) {
        var mh$ = RuntimeHelper.requireNonNull(constants$817.g_socket_client_set_tls$MH, "g_socket_client_set_tls");
        try {
            mh$.invokeExact(client, tls);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_tls_validation_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$818.g_socket_client_get_tls_validation_flags$MH,"g_socket_client_get_tls_validation_flags");
    }
    public static int g_socket_client_get_tls_validation_flags ( Addressable client) {
        var mh$ = RuntimeHelper.requireNonNull(constants$818.g_socket_client_get_tls_validation_flags$MH, "g_socket_client_get_tls_validation_flags");
        try {
            return (int)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_tls_validation_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$818.g_socket_client_set_tls_validation_flags$MH,"g_socket_client_set_tls_validation_flags");
    }
    public static void g_socket_client_set_tls_validation_flags ( Addressable client,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$818.g_socket_client_set_tls_validation_flags$MH, "g_socket_client_set_tls_validation_flags");
        try {
            mh$.invokeExact(client, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_get_proxy_resolver$MH() {
        return RuntimeHelper.requireNonNull(constants$818.g_socket_client_get_proxy_resolver$MH,"g_socket_client_get_proxy_resolver");
    }
    public static MemoryAddress g_socket_client_get_proxy_resolver ( Addressable client) {
        var mh$ = RuntimeHelper.requireNonNull(constants$818.g_socket_client_get_proxy_resolver$MH, "g_socket_client_get_proxy_resolver");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(client);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_set_proxy_resolver$MH() {
        return RuntimeHelper.requireNonNull(constants$818.g_socket_client_set_proxy_resolver$MH,"g_socket_client_set_proxy_resolver");
    }
    public static void g_socket_client_set_proxy_resolver ( Addressable client,  Addressable proxy_resolver) {
        var mh$ = RuntimeHelper.requireNonNull(constants$818.g_socket_client_set_proxy_resolver$MH, "g_socket_client_set_proxy_resolver");
        try {
            mh$.invokeExact(client, proxy_resolver);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect$MH() {
        return RuntimeHelper.requireNonNull(constants$818.g_socket_client_connect$MH,"g_socket_client_connect");
    }
    public static MemoryAddress g_socket_client_connect ( Addressable client,  Addressable connectable,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$818.g_socket_client_connect$MH, "g_socket_client_connect");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(client, connectable, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_host$MH() {
        return RuntimeHelper.requireNonNull(constants$818.g_socket_client_connect_to_host$MH,"g_socket_client_connect_to_host");
    }
    public static MemoryAddress g_socket_client_connect_to_host ( Addressable client,  Addressable host_and_port,  short default_port,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$818.g_socket_client_connect_to_host$MH, "g_socket_client_connect_to_host");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(client, host_and_port, default_port, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_service$MH() {
        return RuntimeHelper.requireNonNull(constants$819.g_socket_client_connect_to_service$MH,"g_socket_client_connect_to_service");
    }
    public static MemoryAddress g_socket_client_connect_to_service ( Addressable client,  Addressable domain,  Addressable service,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$819.g_socket_client_connect_to_service$MH, "g_socket_client_connect_to_service");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(client, domain, service, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$819.g_socket_client_connect_to_uri$MH,"g_socket_client_connect_to_uri");
    }
    public static MemoryAddress g_socket_client_connect_to_uri ( Addressable client,  Addressable uri,  short default_port,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$819.g_socket_client_connect_to_uri$MH, "g_socket_client_connect_to_uri");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(client, uri, default_port, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_async$MH() {
        return RuntimeHelper.requireNonNull(constants$819.g_socket_client_connect_async$MH,"g_socket_client_connect_async");
    }
    public static void g_socket_client_connect_async ( Addressable client,  Addressable connectable,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$819.g_socket_client_connect_async$MH, "g_socket_client_connect_async");
        try {
            mh$.invokeExact(client, connectable, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$819.g_socket_client_connect_finish$MH,"g_socket_client_connect_finish");
    }
    public static MemoryAddress g_socket_client_connect_finish ( Addressable client,  Addressable result,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$819.g_socket_client_connect_finish$MH, "g_socket_client_connect_finish");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(client, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_host_async$MH() {
        return RuntimeHelper.requireNonNull(constants$819.g_socket_client_connect_to_host_async$MH,"g_socket_client_connect_to_host_async");
    }
    public static void g_socket_client_connect_to_host_async ( Addressable client,  Addressable host_and_port,  short default_port,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$819.g_socket_client_connect_to_host_async$MH, "g_socket_client_connect_to_host_async");
        try {
            mh$.invokeExact(client, host_and_port, default_port, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_host_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$819.g_socket_client_connect_to_host_finish$MH,"g_socket_client_connect_to_host_finish");
    }
    public static MemoryAddress g_socket_client_connect_to_host_finish ( Addressable client,  Addressable result,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$819.g_socket_client_connect_to_host_finish$MH, "g_socket_client_connect_to_host_finish");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(client, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_service_async$MH() {
        return RuntimeHelper.requireNonNull(constants$820.g_socket_client_connect_to_service_async$MH,"g_socket_client_connect_to_service_async");
    }
    public static void g_socket_client_connect_to_service_async ( Addressable client,  Addressable domain,  Addressable service,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$820.g_socket_client_connect_to_service_async$MH, "g_socket_client_connect_to_service_async");
        try {
            mh$.invokeExact(client, domain, service, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_service_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$820.g_socket_client_connect_to_service_finish$MH,"g_socket_client_connect_to_service_finish");
    }
    public static MemoryAddress g_socket_client_connect_to_service_finish ( Addressable client,  Addressable result,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$820.g_socket_client_connect_to_service_finish$MH, "g_socket_client_connect_to_service_finish");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(client, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_uri_async$MH() {
        return RuntimeHelper.requireNonNull(constants$820.g_socket_client_connect_to_uri_async$MH,"g_socket_client_connect_to_uri_async");
    }
    public static void g_socket_client_connect_to_uri_async ( Addressable client,  Addressable uri,  short default_port,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$820.g_socket_client_connect_to_uri_async$MH, "g_socket_client_connect_to_uri_async");
        try {
            mh$.invokeExact(client, uri, default_port, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_connect_to_uri_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$820.g_socket_client_connect_to_uri_finish$MH,"g_socket_client_connect_to_uri_finish");
    }
    public static MemoryAddress g_socket_client_connect_to_uri_finish ( Addressable client,  Addressable result,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$820.g_socket_client_connect_to_uri_finish$MH, "g_socket_client_connect_to_uri_finish");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(client, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_client_add_application_proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$820.g_socket_client_add_application_proxy$MH,"g_socket_client_add_application_proxy");
    }
    public static void g_socket_client_add_application_proxy ( Addressable client,  Addressable protocol) {
        var mh$ = RuntimeHelper.requireNonNull(constants$820.g_socket_client_add_application_proxy$MH, "g_socket_client_add_application_proxy");
        try {
            mh$.invokeExact(client, protocol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connectable_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$820.g_socket_connectable_get_type$MH,"g_socket_connectable_get_type");
    }
    public static long g_socket_connectable_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$820.g_socket_connectable_get_type$MH, "g_socket_connectable_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connectable_enumerate$MH() {
        return RuntimeHelper.requireNonNull(constants$821.g_socket_connectable_enumerate$MH,"g_socket_connectable_enumerate");
    }
    public static MemoryAddress g_socket_connectable_enumerate ( Addressable connectable) {
        var mh$ = RuntimeHelper.requireNonNull(constants$821.g_socket_connectable_enumerate$MH, "g_socket_connectable_enumerate");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(connectable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connectable_proxy_enumerate$MH() {
        return RuntimeHelper.requireNonNull(constants$821.g_socket_connectable_proxy_enumerate$MH,"g_socket_connectable_proxy_enumerate");
    }
    public static MemoryAddress g_socket_connectable_proxy_enumerate ( Addressable connectable) {
        var mh$ = RuntimeHelper.requireNonNull(constants$821.g_socket_connectable_proxy_enumerate$MH, "g_socket_connectable_proxy_enumerate");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(connectable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connectable_to_string$MH() {
        return RuntimeHelper.requireNonNull(constants$821.g_socket_connectable_to_string$MH,"g_socket_connectable_to_string");
    }
    public static MemoryAddress g_socket_connectable_to_string ( Addressable connectable) {
        var mh$ = RuntimeHelper.requireNonNull(constants$821.g_socket_connectable_to_string$MH, "g_socket_connectable_to_string");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(connectable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$821.g_socket_connection_get_type$MH,"g_socket_connection_get_type");
    }
    public static long g_socket_connection_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$821.g_socket_connection_get_type$MH, "g_socket_connection_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_is_connected$MH() {
        return RuntimeHelper.requireNonNull(constants$821.g_socket_connection_is_connected$MH,"g_socket_connection_is_connected");
    }
    public static int g_socket_connection_is_connected ( Addressable connection) {
        var mh$ = RuntimeHelper.requireNonNull(constants$821.g_socket_connection_is_connected$MH, "g_socket_connection_is_connected");
        try {
            return (int)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_connect$MH() {
        return RuntimeHelper.requireNonNull(constants$821.g_socket_connection_connect$MH,"g_socket_connection_connect");
    }
    public static int g_socket_connection_connect ( Addressable connection,  Addressable address,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$821.g_socket_connection_connect$MH, "g_socket_connection_connect");
        try {
            return (int)mh$.invokeExact(connection, address, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_connect_async$MH() {
        return RuntimeHelper.requireNonNull(constants$822.g_socket_connection_connect_async$MH,"g_socket_connection_connect_async");
    }
    public static void g_socket_connection_connect_async ( Addressable connection,  Addressable address,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$822.g_socket_connection_connect_async$MH, "g_socket_connection_connect_async");
        try {
            mh$.invokeExact(connection, address, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_connect_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$822.g_socket_connection_connect_finish$MH,"g_socket_connection_connect_finish");
    }
    public static int g_socket_connection_connect_finish ( Addressable connection,  Addressable result,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$822.g_socket_connection_connect_finish$MH, "g_socket_connection_connect_finish");
        try {
            return (int)mh$.invokeExact(connection, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_get_socket$MH() {
        return RuntimeHelper.requireNonNull(constants$822.g_socket_connection_get_socket$MH,"g_socket_connection_get_socket");
    }
    public static MemoryAddress g_socket_connection_get_socket ( Addressable connection) {
        var mh$ = RuntimeHelper.requireNonNull(constants$822.g_socket_connection_get_socket$MH, "g_socket_connection_get_socket");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_get_local_address$MH() {
        return RuntimeHelper.requireNonNull(constants$822.g_socket_connection_get_local_address$MH,"g_socket_connection_get_local_address");
    }
    public static MemoryAddress g_socket_connection_get_local_address ( Addressable connection,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$822.g_socket_connection_get_local_address$MH, "g_socket_connection_get_local_address");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(connection, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_get_remote_address$MH() {
        return RuntimeHelper.requireNonNull(constants$822.g_socket_connection_get_remote_address$MH,"g_socket_connection_get_remote_address");
    }
    public static MemoryAddress g_socket_connection_get_remote_address ( Addressable connection,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$822.g_socket_connection_get_remote_address$MH, "g_socket_connection_get_remote_address");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(connection, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_factory_register_type$MH() {
        return RuntimeHelper.requireNonNull(constants$822.g_socket_connection_factory_register_type$MH,"g_socket_connection_factory_register_type");
    }
    public static void g_socket_connection_factory_register_type ( long g_type,  int family,  int type,  int protocol) {
        var mh$ = RuntimeHelper.requireNonNull(constants$822.g_socket_connection_factory_register_type$MH, "g_socket_connection_factory_register_type");
        try {
            mh$.invokeExact(g_type, family, type, protocol);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_factory_lookup_type$MH() {
        return RuntimeHelper.requireNonNull(constants$823.g_socket_connection_factory_lookup_type$MH,"g_socket_connection_factory_lookup_type");
    }
    public static long g_socket_connection_factory_lookup_type ( int family,  int type,  int protocol_id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$823.g_socket_connection_factory_lookup_type$MH, "g_socket_connection_factory_lookup_type");
        try {
            return (long)mh$.invokeExact(family, type, protocol_id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_connection_factory_create_connection$MH() {
        return RuntimeHelper.requireNonNull(constants$823.g_socket_connection_factory_create_connection$MH,"g_socket_connection_factory_create_connection");
    }
    public static MemoryAddress g_socket_connection_factory_create_connection ( Addressable socket) {
        var mh$ = RuntimeHelper.requireNonNull(constants$823.g_socket_connection_factory_create_connection$MH, "g_socket_connection_factory_create_connection");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_control_message_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$823.g_socket_control_message_get_type$MH,"g_socket_control_message_get_type");
    }
    public static long g_socket_control_message_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$823.g_socket_control_message_get_type$MH, "g_socket_control_message_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_control_message_get_size$MH() {
        return RuntimeHelper.requireNonNull(constants$823.g_socket_control_message_get_size$MH,"g_socket_control_message_get_size");
    }
    public static long g_socket_control_message_get_size ( Addressable message) {
        var mh$ = RuntimeHelper.requireNonNull(constants$823.g_socket_control_message_get_size$MH, "g_socket_control_message_get_size");
        try {
            return (long)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_control_message_get_level$MH() {
        return RuntimeHelper.requireNonNull(constants$823.g_socket_control_message_get_level$MH,"g_socket_control_message_get_level");
    }
    public static int g_socket_control_message_get_level ( Addressable message) {
        var mh$ = RuntimeHelper.requireNonNull(constants$823.g_socket_control_message_get_level$MH, "g_socket_control_message_get_level");
        try {
            return (int)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_control_message_get_msg_type$MH() {
        return RuntimeHelper.requireNonNull(constants$823.g_socket_control_message_get_msg_type$MH,"g_socket_control_message_get_msg_type");
    }
    public static int g_socket_control_message_get_msg_type ( Addressable message) {
        var mh$ = RuntimeHelper.requireNonNull(constants$823.g_socket_control_message_get_msg_type$MH, "g_socket_control_message_get_msg_type");
        try {
            return (int)mh$.invokeExact(message);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_control_message_serialize$MH() {
        return RuntimeHelper.requireNonNull(constants$824.g_socket_control_message_serialize$MH,"g_socket_control_message_serialize");
    }
    public static void g_socket_control_message_serialize ( Addressable message,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$824.g_socket_control_message_serialize$MH, "g_socket_control_message_serialize");
        try {
            mh$.invokeExact(message, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_control_message_deserialize$MH() {
        return RuntimeHelper.requireNonNull(constants$824.g_socket_control_message_deserialize$MH,"g_socket_control_message_deserialize");
    }
    public static MemoryAddress g_socket_control_message_deserialize ( int level,  int type,  long size,  Addressable data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$824.g_socket_control_message_deserialize$MH, "g_socket_control_message_deserialize");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(level, type, size, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$824.g_socket_listener_get_type$MH,"g_socket_listener_get_type");
    }
    public static long g_socket_listener_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$824.g_socket_listener_get_type$MH, "g_socket_listener_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_new$MH() {
        return RuntimeHelper.requireNonNull(constants$824.g_socket_listener_new$MH,"g_socket_listener_new");
    }
    public static MemoryAddress g_socket_listener_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$824.g_socket_listener_new$MH, "g_socket_listener_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_set_backlog$MH() {
        return RuntimeHelper.requireNonNull(constants$824.g_socket_listener_set_backlog$MH,"g_socket_listener_set_backlog");
    }
    public static void g_socket_listener_set_backlog ( Addressable listener,  int listen_backlog) {
        var mh$ = RuntimeHelper.requireNonNull(constants$824.g_socket_listener_set_backlog$MH, "g_socket_listener_set_backlog");
        try {
            mh$.invokeExact(listener, listen_backlog);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_add_socket$MH() {
        return RuntimeHelper.requireNonNull(constants$824.g_socket_listener_add_socket$MH,"g_socket_listener_add_socket");
    }
    public static int g_socket_listener_add_socket ( Addressable listener,  Addressable socket,  Addressable source_object,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$824.g_socket_listener_add_socket$MH, "g_socket_listener_add_socket");
        try {
            return (int)mh$.invokeExact(listener, socket, source_object, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_add_address$MH() {
        return RuntimeHelper.requireNonNull(constants$825.g_socket_listener_add_address$MH,"g_socket_listener_add_address");
    }
    public static int g_socket_listener_add_address ( Addressable listener,  Addressable address,  int type,  int protocol,  Addressable source_object,  Addressable effective_address,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$825.g_socket_listener_add_address$MH, "g_socket_listener_add_address");
        try {
            return (int)mh$.invokeExact(listener, address, type, protocol, source_object, effective_address, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_add_inet_port$MH() {
        return RuntimeHelper.requireNonNull(constants$825.g_socket_listener_add_inet_port$MH,"g_socket_listener_add_inet_port");
    }
    public static int g_socket_listener_add_inet_port ( Addressable listener,  short port,  Addressable source_object,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$825.g_socket_listener_add_inet_port$MH, "g_socket_listener_add_inet_port");
        try {
            return (int)mh$.invokeExact(listener, port, source_object, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_add_any_inet_port$MH() {
        return RuntimeHelper.requireNonNull(constants$825.g_socket_listener_add_any_inet_port$MH,"g_socket_listener_add_any_inet_port");
    }
    public static short g_socket_listener_add_any_inet_port ( Addressable listener,  Addressable source_object,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$825.g_socket_listener_add_any_inet_port$MH, "g_socket_listener_add_any_inet_port");
        try {
            return (short)mh$.invokeExact(listener, source_object, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_accept_socket$MH() {
        return RuntimeHelper.requireNonNull(constants$825.g_socket_listener_accept_socket$MH,"g_socket_listener_accept_socket");
    }
    public static MemoryAddress g_socket_listener_accept_socket ( Addressable listener,  Addressable source_object,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$825.g_socket_listener_accept_socket$MH, "g_socket_listener_accept_socket");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(listener, source_object, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_accept_socket_async$MH() {
        return RuntimeHelper.requireNonNull(constants$825.g_socket_listener_accept_socket_async$MH,"g_socket_listener_accept_socket_async");
    }
    public static void g_socket_listener_accept_socket_async ( Addressable listener,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$825.g_socket_listener_accept_socket_async$MH, "g_socket_listener_accept_socket_async");
        try {
            mh$.invokeExact(listener, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_accept_socket_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$825.g_socket_listener_accept_socket_finish$MH,"g_socket_listener_accept_socket_finish");
    }
    public static MemoryAddress g_socket_listener_accept_socket_finish ( Addressable listener,  Addressable result,  Addressable source_object,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$825.g_socket_listener_accept_socket_finish$MH, "g_socket_listener_accept_socket_finish");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(listener, result, source_object, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_accept$MH() {
        return RuntimeHelper.requireNonNull(constants$826.g_socket_listener_accept$MH,"g_socket_listener_accept");
    }
    public static MemoryAddress g_socket_listener_accept ( Addressable listener,  Addressable source_object,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$826.g_socket_listener_accept$MH, "g_socket_listener_accept");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(listener, source_object, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_accept_async$MH() {
        return RuntimeHelper.requireNonNull(constants$826.g_socket_listener_accept_async$MH,"g_socket_listener_accept_async");
    }
    public static void g_socket_listener_accept_async ( Addressable listener,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$826.g_socket_listener_accept_async$MH, "g_socket_listener_accept_async");
        try {
            mh$.invokeExact(listener, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_accept_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$826.g_socket_listener_accept_finish$MH,"g_socket_listener_accept_finish");
    }
    public static MemoryAddress g_socket_listener_accept_finish ( Addressable listener,  Addressable result,  Addressable source_object,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$826.g_socket_listener_accept_finish$MH, "g_socket_listener_accept_finish");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(listener, result, source_object, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_listener_close$MH() {
        return RuntimeHelper.requireNonNull(constants$826.g_socket_listener_close$MH,"g_socket_listener_close");
    }
    public static void g_socket_listener_close ( Addressable listener) {
        var mh$ = RuntimeHelper.requireNonNull(constants$826.g_socket_listener_close$MH, "g_socket_listener_close");
        try {
            mh$.invokeExact(listener);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_service_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$826.g_socket_service_get_type$MH,"g_socket_service_get_type");
    }
    public static long g_socket_service_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$826.g_socket_service_get_type$MH, "g_socket_service_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_service_new$MH() {
        return RuntimeHelper.requireNonNull(constants$826.g_socket_service_new$MH,"g_socket_service_new");
    }
    public static MemoryAddress g_socket_service_new () {
        var mh$ = RuntimeHelper.requireNonNull(constants$826.g_socket_service_new$MH, "g_socket_service_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_service_start$MH() {
        return RuntimeHelper.requireNonNull(constants$827.g_socket_service_start$MH,"g_socket_service_start");
    }
    public static void g_socket_service_start ( Addressable service) {
        var mh$ = RuntimeHelper.requireNonNull(constants$827.g_socket_service_start$MH, "g_socket_service_start");
        try {
            mh$.invokeExact(service);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_service_stop$MH() {
        return RuntimeHelper.requireNonNull(constants$827.g_socket_service_stop$MH,"g_socket_service_stop");
    }
    public static void g_socket_service_stop ( Addressable service) {
        var mh$ = RuntimeHelper.requireNonNull(constants$827.g_socket_service_stop$MH, "g_socket_service_stop");
        try {
            mh$.invokeExact(service);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_socket_service_is_active$MH() {
        return RuntimeHelper.requireNonNull(constants$827.g_socket_service_is_active$MH,"g_socket_service_is_active");
    }
    public static int g_socket_service_is_active ( Addressable service) {
        var mh$ = RuntimeHelper.requireNonNull(constants$827.g_socket_service_is_active$MH, "g_socket_service_is_active");
        try {
            return (int)mh$.invokeExact(service);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$827.g_srv_target_get_type$MH,"g_srv_target_get_type");
    }
    public static long g_srv_target_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$827.g_srv_target_get_type$MH, "g_srv_target_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_new$MH() {
        return RuntimeHelper.requireNonNull(constants$827.g_srv_target_new$MH,"g_srv_target_new");
    }
    public static MemoryAddress g_srv_target_new ( Addressable hostname,  short port,  short priority,  short weight) {
        var mh$ = RuntimeHelper.requireNonNull(constants$827.g_srv_target_new$MH, "g_srv_target_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hostname, port, priority, weight);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_copy$MH() {
        return RuntimeHelper.requireNonNull(constants$827.g_srv_target_copy$MH,"g_srv_target_copy");
    }
    public static MemoryAddress g_srv_target_copy ( Addressable target) {
        var mh$ = RuntimeHelper.requireNonNull(constants$827.g_srv_target_copy$MH, "g_srv_target_copy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_free$MH() {
        return RuntimeHelper.requireNonNull(constants$828.g_srv_target_free$MH,"g_srv_target_free");
    }
    public static void g_srv_target_free ( Addressable target) {
        var mh$ = RuntimeHelper.requireNonNull(constants$828.g_srv_target_free$MH, "g_srv_target_free");
        try {
            mh$.invokeExact(target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_get_hostname$MH() {
        return RuntimeHelper.requireNonNull(constants$828.g_srv_target_get_hostname$MH,"g_srv_target_get_hostname");
    }
    public static MemoryAddress g_srv_target_get_hostname ( Addressable target) {
        var mh$ = RuntimeHelper.requireNonNull(constants$828.g_srv_target_get_hostname$MH, "g_srv_target_get_hostname");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_get_port$MH() {
        return RuntimeHelper.requireNonNull(constants$828.g_srv_target_get_port$MH,"g_srv_target_get_port");
    }
    public static short g_srv_target_get_port ( Addressable target) {
        var mh$ = RuntimeHelper.requireNonNull(constants$828.g_srv_target_get_port$MH, "g_srv_target_get_port");
        try {
            return (short)mh$.invokeExact(target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_get_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$828.g_srv_target_get_priority$MH,"g_srv_target_get_priority");
    }
    public static short g_srv_target_get_priority ( Addressable target) {
        var mh$ = RuntimeHelper.requireNonNull(constants$828.g_srv_target_get_priority$MH, "g_srv_target_get_priority");
        try {
            return (short)mh$.invokeExact(target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_get_weight$MH() {
        return RuntimeHelper.requireNonNull(constants$828.g_srv_target_get_weight$MH,"g_srv_target_get_weight");
    }
    public static short g_srv_target_get_weight ( Addressable target) {
        var mh$ = RuntimeHelper.requireNonNull(constants$828.g_srv_target_get_weight$MH, "g_srv_target_get_weight");
        try {
            return (short)mh$.invokeExact(target);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_srv_target_list_sort$MH() {
        return RuntimeHelper.requireNonNull(constants$828.g_srv_target_list_sort$MH,"g_srv_target_list_sort");
    }
    public static MemoryAddress g_srv_target_list_sort ( Addressable targets) {
        var mh$ = RuntimeHelper.requireNonNull(constants$828.g_srv_target_list_sort$MH, "g_srv_target_list_sort");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(targets);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$829.g_subprocess_get_type$MH,"g_subprocess_get_type");
    }
    public static long g_subprocess_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$829.g_subprocess_get_type$MH, "g_subprocess_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_new$MH() {
        return RuntimeHelper.requireNonNull(constants$829.g_subprocess_new$MH,"g_subprocess_new");
    }
    public static MemoryAddress g_subprocess_new ( int flags,  Addressable error,  Addressable argv0, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$829.g_subprocess_new$MH, "g_subprocess_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(flags, error, argv0, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_newv$MH() {
        return RuntimeHelper.requireNonNull(constants$829.g_subprocess_newv$MH,"g_subprocess_newv");
    }
    public static MemoryAddress g_subprocess_newv ( Addressable argv,  int flags,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$829.g_subprocess_newv$MH, "g_subprocess_newv");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(argv, flags, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_stdin_pipe$MH() {
        return RuntimeHelper.requireNonNull(constants$829.g_subprocess_get_stdin_pipe$MH,"g_subprocess_get_stdin_pipe");
    }
    public static MemoryAddress g_subprocess_get_stdin_pipe ( Addressable subprocess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$829.g_subprocess_get_stdin_pipe$MH, "g_subprocess_get_stdin_pipe");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_stdout_pipe$MH() {
        return RuntimeHelper.requireNonNull(constants$829.g_subprocess_get_stdout_pipe$MH,"g_subprocess_get_stdout_pipe");
    }
    public static MemoryAddress g_subprocess_get_stdout_pipe ( Addressable subprocess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$829.g_subprocess_get_stdout_pipe$MH, "g_subprocess_get_stdout_pipe");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_stderr_pipe$MH() {
        return RuntimeHelper.requireNonNull(constants$829.g_subprocess_get_stderr_pipe$MH,"g_subprocess_get_stderr_pipe");
    }
    public static MemoryAddress g_subprocess_get_stderr_pipe ( Addressable subprocess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$829.g_subprocess_get_stderr_pipe$MH, "g_subprocess_get_stderr_pipe");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_identifier$MH() {
        return RuntimeHelper.requireNonNull(constants$830.g_subprocess_get_identifier$MH,"g_subprocess_get_identifier");
    }
    public static MemoryAddress g_subprocess_get_identifier ( Addressable subprocess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$830.g_subprocess_get_identifier$MH, "g_subprocess_get_identifier");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_send_signal$MH() {
        return RuntimeHelper.requireNonNull(constants$830.g_subprocess_send_signal$MH,"g_subprocess_send_signal");
    }
    public static void g_subprocess_send_signal ( Addressable subprocess,  int signal_num) {
        var mh$ = RuntimeHelper.requireNonNull(constants$830.g_subprocess_send_signal$MH, "g_subprocess_send_signal");
        try {
            mh$.invokeExact(subprocess, signal_num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_force_exit$MH() {
        return RuntimeHelper.requireNonNull(constants$830.g_subprocess_force_exit$MH,"g_subprocess_force_exit");
    }
    public static void g_subprocess_force_exit ( Addressable subprocess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$830.g_subprocess_force_exit$MH, "g_subprocess_force_exit");
        try {
            mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_wait$MH() {
        return RuntimeHelper.requireNonNull(constants$830.g_subprocess_wait$MH,"g_subprocess_wait");
    }
    public static int g_subprocess_wait ( Addressable subprocess,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$830.g_subprocess_wait$MH, "g_subprocess_wait");
        try {
            return (int)mh$.invokeExact(subprocess, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_wait_async$MH() {
        return RuntimeHelper.requireNonNull(constants$830.g_subprocess_wait_async$MH,"g_subprocess_wait_async");
    }
    public static void g_subprocess_wait_async ( Addressable subprocess,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$830.g_subprocess_wait_async$MH, "g_subprocess_wait_async");
        try {
            mh$.invokeExact(subprocess, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_wait_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$830.g_subprocess_wait_finish$MH,"g_subprocess_wait_finish");
    }
    public static int g_subprocess_wait_finish ( Addressable subprocess,  Addressable result,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$830.g_subprocess_wait_finish$MH, "g_subprocess_wait_finish");
        try {
            return (int)mh$.invokeExact(subprocess, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_wait_check$MH() {
        return RuntimeHelper.requireNonNull(constants$831.g_subprocess_wait_check$MH,"g_subprocess_wait_check");
    }
    public static int g_subprocess_wait_check ( Addressable subprocess,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$831.g_subprocess_wait_check$MH, "g_subprocess_wait_check");
        try {
            return (int)mh$.invokeExact(subprocess, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_wait_check_async$MH() {
        return RuntimeHelper.requireNonNull(constants$831.g_subprocess_wait_check_async$MH,"g_subprocess_wait_check_async");
    }
    public static void g_subprocess_wait_check_async ( Addressable subprocess,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$831.g_subprocess_wait_check_async$MH, "g_subprocess_wait_check_async");
        try {
            mh$.invokeExact(subprocess, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_wait_check_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$831.g_subprocess_wait_check_finish$MH,"g_subprocess_wait_check_finish");
    }
    public static int g_subprocess_wait_check_finish ( Addressable subprocess,  Addressable result,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$831.g_subprocess_wait_check_finish$MH, "g_subprocess_wait_check_finish");
        try {
            return (int)mh$.invokeExact(subprocess, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_status$MH() {
        return RuntimeHelper.requireNonNull(constants$831.g_subprocess_get_status$MH,"g_subprocess_get_status");
    }
    public static int g_subprocess_get_status ( Addressable subprocess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$831.g_subprocess_get_status$MH, "g_subprocess_get_status");
        try {
            return (int)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_successful$MH() {
        return RuntimeHelper.requireNonNull(constants$831.g_subprocess_get_successful$MH,"g_subprocess_get_successful");
    }
    public static int g_subprocess_get_successful ( Addressable subprocess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$831.g_subprocess_get_successful$MH, "g_subprocess_get_successful");
        try {
            return (int)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_if_exited$MH() {
        return RuntimeHelper.requireNonNull(constants$831.g_subprocess_get_if_exited$MH,"g_subprocess_get_if_exited");
    }
    public static int g_subprocess_get_if_exited ( Addressable subprocess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$831.g_subprocess_get_if_exited$MH, "g_subprocess_get_if_exited");
        try {
            return (int)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_exit_status$MH() {
        return RuntimeHelper.requireNonNull(constants$832.g_subprocess_get_exit_status$MH,"g_subprocess_get_exit_status");
    }
    public static int g_subprocess_get_exit_status ( Addressable subprocess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$832.g_subprocess_get_exit_status$MH, "g_subprocess_get_exit_status");
        try {
            return (int)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_if_signaled$MH() {
        return RuntimeHelper.requireNonNull(constants$832.g_subprocess_get_if_signaled$MH,"g_subprocess_get_if_signaled");
    }
    public static int g_subprocess_get_if_signaled ( Addressable subprocess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$832.g_subprocess_get_if_signaled$MH, "g_subprocess_get_if_signaled");
        try {
            return (int)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_get_term_sig$MH() {
        return RuntimeHelper.requireNonNull(constants$832.g_subprocess_get_term_sig$MH,"g_subprocess_get_term_sig");
    }
    public static int g_subprocess_get_term_sig ( Addressable subprocess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$832.g_subprocess_get_term_sig$MH, "g_subprocess_get_term_sig");
        try {
            return (int)mh$.invokeExact(subprocess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_communicate$MH() {
        return RuntimeHelper.requireNonNull(constants$832.g_subprocess_communicate$MH,"g_subprocess_communicate");
    }
    public static int g_subprocess_communicate ( Addressable subprocess,  Addressable stdin_buf,  Addressable cancellable,  Addressable stdout_buf,  Addressable stderr_buf,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$832.g_subprocess_communicate$MH, "g_subprocess_communicate");
        try {
            return (int)mh$.invokeExact(subprocess, stdin_buf, cancellable, stdout_buf, stderr_buf, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_communicate_async$MH() {
        return RuntimeHelper.requireNonNull(constants$832.g_subprocess_communicate_async$MH,"g_subprocess_communicate_async");
    }
    public static void g_subprocess_communicate_async ( Addressable subprocess,  Addressable stdin_buf,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$832.g_subprocess_communicate_async$MH, "g_subprocess_communicate_async");
        try {
            mh$.invokeExact(subprocess, stdin_buf, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_communicate_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$832.g_subprocess_communicate_finish$MH,"g_subprocess_communicate_finish");
    }
    public static int g_subprocess_communicate_finish ( Addressable subprocess,  Addressable result,  Addressable stdout_buf,  Addressable stderr_buf,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$832.g_subprocess_communicate_finish$MH, "g_subprocess_communicate_finish");
        try {
            return (int)mh$.invokeExact(subprocess, result, stdout_buf, stderr_buf, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_communicate_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$833.g_subprocess_communicate_utf8$MH,"g_subprocess_communicate_utf8");
    }
    public static int g_subprocess_communicate_utf8 ( Addressable subprocess,  Addressable stdin_buf,  Addressable cancellable,  Addressable stdout_buf,  Addressable stderr_buf,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$833.g_subprocess_communicate_utf8$MH, "g_subprocess_communicate_utf8");
        try {
            return (int)mh$.invokeExact(subprocess, stdin_buf, cancellable, stdout_buf, stderr_buf, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_communicate_utf8_async$MH() {
        return RuntimeHelper.requireNonNull(constants$833.g_subprocess_communicate_utf8_async$MH,"g_subprocess_communicate_utf8_async");
    }
    public static void g_subprocess_communicate_utf8_async ( Addressable subprocess,  Addressable stdin_buf,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$833.g_subprocess_communicate_utf8_async$MH, "g_subprocess_communicate_utf8_async");
        try {
            mh$.invokeExact(subprocess, stdin_buf, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_communicate_utf8_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$833.g_subprocess_communicate_utf8_finish$MH,"g_subprocess_communicate_utf8_finish");
    }
    public static int g_subprocess_communicate_utf8_finish ( Addressable subprocess,  Addressable result,  Addressable stdout_buf,  Addressable stderr_buf,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$833.g_subprocess_communicate_utf8_finish$MH, "g_subprocess_communicate_utf8_finish");
        try {
            return (int)mh$.invokeExact(subprocess, result, stdout_buf, stderr_buf, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$833.g_subprocess_launcher_get_type$MH,"g_subprocess_launcher_get_type");
    }
    public static long g_subprocess_launcher_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$833.g_subprocess_launcher_get_type$MH, "g_subprocess_launcher_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_new$MH() {
        return RuntimeHelper.requireNonNull(constants$833.g_subprocess_launcher_new$MH,"g_subprocess_launcher_new");
    }
    public static MemoryAddress g_subprocess_launcher_new ( int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$833.g_subprocess_launcher_new$MH, "g_subprocess_launcher_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_spawn$MH() {
        return RuntimeHelper.requireNonNull(constants$833.g_subprocess_launcher_spawn$MH,"g_subprocess_launcher_spawn");
    }
    public static MemoryAddress g_subprocess_launcher_spawn ( Addressable self,  Addressable error,  Addressable argv0, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$833.g_subprocess_launcher_spawn$MH, "g_subprocess_launcher_spawn");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(self, error, argv0, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_spawnv$MH() {
        return RuntimeHelper.requireNonNull(constants$834.g_subprocess_launcher_spawnv$MH,"g_subprocess_launcher_spawnv");
    }
    public static MemoryAddress g_subprocess_launcher_spawnv ( Addressable self,  Addressable argv,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$834.g_subprocess_launcher_spawnv$MH, "g_subprocess_launcher_spawnv");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(self, argv, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_set_environ$MH() {
        return RuntimeHelper.requireNonNull(constants$834.g_subprocess_launcher_set_environ$MH,"g_subprocess_launcher_set_environ");
    }
    public static void g_subprocess_launcher_set_environ ( Addressable self,  Addressable env) {
        var mh$ = RuntimeHelper.requireNonNull(constants$834.g_subprocess_launcher_set_environ$MH, "g_subprocess_launcher_set_environ");
        try {
            mh$.invokeExact(self, env);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_setenv$MH() {
        return RuntimeHelper.requireNonNull(constants$834.g_subprocess_launcher_setenv$MH,"g_subprocess_launcher_setenv");
    }
    public static void g_subprocess_launcher_setenv ( Addressable self,  Addressable variable,  Addressable value,  int overwrite) {
        var mh$ = RuntimeHelper.requireNonNull(constants$834.g_subprocess_launcher_setenv$MH, "g_subprocess_launcher_setenv");
        try {
            mh$.invokeExact(self, variable, value, overwrite);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_unsetenv$MH() {
        return RuntimeHelper.requireNonNull(constants$834.g_subprocess_launcher_unsetenv$MH,"g_subprocess_launcher_unsetenv");
    }
    public static void g_subprocess_launcher_unsetenv ( Addressable self,  Addressable variable) {
        var mh$ = RuntimeHelper.requireNonNull(constants$834.g_subprocess_launcher_unsetenv$MH, "g_subprocess_launcher_unsetenv");
        try {
            mh$.invokeExact(self, variable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_getenv$MH() {
        return RuntimeHelper.requireNonNull(constants$834.g_subprocess_launcher_getenv$MH,"g_subprocess_launcher_getenv");
    }
    public static MemoryAddress g_subprocess_launcher_getenv ( Addressable self,  Addressable variable) {
        var mh$ = RuntimeHelper.requireNonNull(constants$834.g_subprocess_launcher_getenv$MH, "g_subprocess_launcher_getenv");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(self, variable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_set_cwd$MH() {
        return RuntimeHelper.requireNonNull(constants$834.g_subprocess_launcher_set_cwd$MH,"g_subprocess_launcher_set_cwd");
    }
    public static void g_subprocess_launcher_set_cwd ( Addressable self,  Addressable cwd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$834.g_subprocess_launcher_set_cwd$MH, "g_subprocess_launcher_set_cwd");
        try {
            mh$.invokeExact(self, cwd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$835.g_subprocess_launcher_set_flags$MH,"g_subprocess_launcher_set_flags");
    }
    public static void g_subprocess_launcher_set_flags ( Addressable self,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$835.g_subprocess_launcher_set_flags$MH, "g_subprocess_launcher_set_flags");
        try {
            mh$.invokeExact(self, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_set_stdin_file_path$MH() {
        return RuntimeHelper.requireNonNull(constants$835.g_subprocess_launcher_set_stdin_file_path$MH,"g_subprocess_launcher_set_stdin_file_path");
    }
    public static void g_subprocess_launcher_set_stdin_file_path ( Addressable self,  Addressable path) {
        var mh$ = RuntimeHelper.requireNonNull(constants$835.g_subprocess_launcher_set_stdin_file_path$MH, "g_subprocess_launcher_set_stdin_file_path");
        try {
            mh$.invokeExact(self, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_take_stdin_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$835.g_subprocess_launcher_take_stdin_fd$MH,"g_subprocess_launcher_take_stdin_fd");
    }
    public static void g_subprocess_launcher_take_stdin_fd ( Addressable self,  int fd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$835.g_subprocess_launcher_take_stdin_fd$MH, "g_subprocess_launcher_take_stdin_fd");
        try {
            mh$.invokeExact(self, fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_set_stdout_file_path$MH() {
        return RuntimeHelper.requireNonNull(constants$835.g_subprocess_launcher_set_stdout_file_path$MH,"g_subprocess_launcher_set_stdout_file_path");
    }
    public static void g_subprocess_launcher_set_stdout_file_path ( Addressable self,  Addressable path) {
        var mh$ = RuntimeHelper.requireNonNull(constants$835.g_subprocess_launcher_set_stdout_file_path$MH, "g_subprocess_launcher_set_stdout_file_path");
        try {
            mh$.invokeExact(self, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_take_stdout_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$835.g_subprocess_launcher_take_stdout_fd$MH,"g_subprocess_launcher_take_stdout_fd");
    }
    public static void g_subprocess_launcher_take_stdout_fd ( Addressable self,  int fd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$835.g_subprocess_launcher_take_stdout_fd$MH, "g_subprocess_launcher_take_stdout_fd");
        try {
            mh$.invokeExact(self, fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_set_stderr_file_path$MH() {
        return RuntimeHelper.requireNonNull(constants$835.g_subprocess_launcher_set_stderr_file_path$MH,"g_subprocess_launcher_set_stderr_file_path");
    }
    public static void g_subprocess_launcher_set_stderr_file_path ( Addressable self,  Addressable path) {
        var mh$ = RuntimeHelper.requireNonNull(constants$835.g_subprocess_launcher_set_stderr_file_path$MH, "g_subprocess_launcher_set_stderr_file_path");
        try {
            mh$.invokeExact(self, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_take_stderr_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$836.g_subprocess_launcher_take_stderr_fd$MH,"g_subprocess_launcher_take_stderr_fd");
    }
    public static void g_subprocess_launcher_take_stderr_fd ( Addressable self,  int fd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$836.g_subprocess_launcher_take_stderr_fd$MH, "g_subprocess_launcher_take_stderr_fd");
        try {
            mh$.invokeExact(self, fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_take_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$836.g_subprocess_launcher_take_fd$MH,"g_subprocess_launcher_take_fd");
    }
    public static void g_subprocess_launcher_take_fd ( Addressable self,  int source_fd,  int target_fd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$836.g_subprocess_launcher_take_fd$MH, "g_subprocess_launcher_take_fd");
        try {
            mh$.invokeExact(self, source_fd, target_fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_close$MH() {
        return RuntimeHelper.requireNonNull(constants$836.g_subprocess_launcher_close$MH,"g_subprocess_launcher_close");
    }
    public static void g_subprocess_launcher_close ( Addressable self) {
        var mh$ = RuntimeHelper.requireNonNull(constants$836.g_subprocess_launcher_close$MH, "g_subprocess_launcher_close");
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_subprocess_launcher_set_child_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$836.g_subprocess_launcher_set_child_setup$MH,"g_subprocess_launcher_set_child_setup");
    }
    public static void g_subprocess_launcher_set_child_setup ( Addressable self,  Addressable child_setup,  Addressable user_data,  Addressable destroy_notify) {
        var mh$ = RuntimeHelper.requireNonNull(constants$836.g_subprocess_launcher_set_child_setup$MH, "g_subprocess_launcher_set_child_setup");
        try {
            mh$.invokeExact(self, child_setup, user_data, destroy_notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$836.g_task_get_type$MH,"g_task_get_type");
    }
    public static long g_task_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$836.g_task_get_type$MH, "g_task_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_new$MH() {
        return RuntimeHelper.requireNonNull(constants$836.g_task_new$MH,"g_task_new");
    }
    public static MemoryAddress g_task_new ( Addressable source_object,  Addressable cancellable,  Addressable callback,  Addressable callback_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$836.g_task_new$MH, "g_task_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(source_object, cancellable, callback, callback_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_report_error$MH() {
        return RuntimeHelper.requireNonNull(constants$837.g_task_report_error$MH,"g_task_report_error");
    }
    public static void g_task_report_error ( Addressable source_object,  Addressable callback,  Addressable callback_data,  Addressable source_tag,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$837.g_task_report_error$MH, "g_task_report_error");
        try {
            mh$.invokeExact(source_object, callback, callback_data, source_tag, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_report_new_error$MH() {
        return RuntimeHelper.requireNonNull(constants$837.g_task_report_new_error$MH,"g_task_report_new_error");
    }
    public static void g_task_report_new_error ( Addressable source_object,  Addressable callback,  Addressable callback_data,  Addressable source_tag,  int domain,  int code,  Addressable format, Object... x7) {
        var mh$ = RuntimeHelper.requireNonNull(constants$837.g_task_report_new_error$MH, "g_task_report_new_error");
        try {
            mh$.invokeExact(source_object, callback, callback_data, source_tag, domain, code, format, x7);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_set_task_data$MH() {
        return RuntimeHelper.requireNonNull(constants$837.g_task_set_task_data$MH,"g_task_set_task_data");
    }
    public static void g_task_set_task_data ( Addressable task,  Addressable task_data,  Addressable task_data_destroy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$837.g_task_set_task_data$MH, "g_task_set_task_data");
        try {
            mh$.invokeExact(task, task_data, task_data_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_set_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$837.g_task_set_priority$MH,"g_task_set_priority");
    }
    public static void g_task_set_priority ( Addressable task,  int priority) {
        var mh$ = RuntimeHelper.requireNonNull(constants$837.g_task_set_priority$MH, "g_task_set_priority");
        try {
            mh$.invokeExact(task, priority);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_set_check_cancellable$MH() {
        return RuntimeHelper.requireNonNull(constants$837.g_task_set_check_cancellable$MH,"g_task_set_check_cancellable");
    }
    public static void g_task_set_check_cancellable ( Addressable task,  int check_cancellable) {
        var mh$ = RuntimeHelper.requireNonNull(constants$837.g_task_set_check_cancellable$MH, "g_task_set_check_cancellable");
        try {
            mh$.invokeExact(task, check_cancellable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_set_source_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$837.g_task_set_source_tag$MH,"g_task_set_source_tag");
    }
    public static void g_task_set_source_tag ( Addressable task,  Addressable source_tag) {
        var mh$ = RuntimeHelper.requireNonNull(constants$837.g_task_set_source_tag$MH, "g_task_set_source_tag");
        try {
            mh$.invokeExact(task, source_tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_set_name$MH() {
        return RuntimeHelper.requireNonNull(constants$838.g_task_set_name$MH,"g_task_set_name");
    }
    public static void g_task_set_name ( Addressable task,  Addressable name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$838.g_task_set_name$MH, "g_task_set_name");
        try {
            mh$.invokeExact(task, name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_source_object$MH() {
        return RuntimeHelper.requireNonNull(constants$838.g_task_get_source_object$MH,"g_task_get_source_object");
    }
    public static MemoryAddress g_task_get_source_object ( Addressable task) {
        var mh$ = RuntimeHelper.requireNonNull(constants$838.g_task_get_source_object$MH, "g_task_get_source_object");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_task_data$MH() {
        return RuntimeHelper.requireNonNull(constants$838.g_task_get_task_data$MH,"g_task_get_task_data");
    }
    public static MemoryAddress g_task_get_task_data ( Addressable task) {
        var mh$ = RuntimeHelper.requireNonNull(constants$838.g_task_get_task_data$MH, "g_task_get_task_data");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_priority$MH() {
        return RuntimeHelper.requireNonNull(constants$838.g_task_get_priority$MH,"g_task_get_priority");
    }
    public static int g_task_get_priority ( Addressable task) {
        var mh$ = RuntimeHelper.requireNonNull(constants$838.g_task_get_priority$MH, "g_task_get_priority");
        try {
            return (int)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_context$MH() {
        return RuntimeHelper.requireNonNull(constants$838.g_task_get_context$MH,"g_task_get_context");
    }
    public static MemoryAddress g_task_get_context ( Addressable task) {
        var mh$ = RuntimeHelper.requireNonNull(constants$838.g_task_get_context$MH, "g_task_get_context");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_cancellable$MH() {
        return RuntimeHelper.requireNonNull(constants$838.g_task_get_cancellable$MH,"g_task_get_cancellable");
    }
    public static MemoryAddress g_task_get_cancellable ( Addressable task) {
        var mh$ = RuntimeHelper.requireNonNull(constants$838.g_task_get_cancellable$MH, "g_task_get_cancellable");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_check_cancellable$MH() {
        return RuntimeHelper.requireNonNull(constants$839.g_task_get_check_cancellable$MH,"g_task_get_check_cancellable");
    }
    public static int g_task_get_check_cancellable ( Addressable task) {
        var mh$ = RuntimeHelper.requireNonNull(constants$839.g_task_get_check_cancellable$MH, "g_task_get_check_cancellable");
        try {
            return (int)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_source_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$839.g_task_get_source_tag$MH,"g_task_get_source_tag");
    }
    public static MemoryAddress g_task_get_source_tag ( Addressable task) {
        var mh$ = RuntimeHelper.requireNonNull(constants$839.g_task_get_source_tag$MH, "g_task_get_source_tag");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$839.g_task_get_name$MH,"g_task_get_name");
    }
    public static MemoryAddress g_task_get_name ( Addressable task) {
        var mh$ = RuntimeHelper.requireNonNull(constants$839.g_task_get_name$MH, "g_task_get_name");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_is_valid$MH() {
        return RuntimeHelper.requireNonNull(constants$839.g_task_is_valid$MH,"g_task_is_valid");
    }
    public static int g_task_is_valid ( Addressable result,  Addressable source_object) {
        var mh$ = RuntimeHelper.requireNonNull(constants$839.g_task_is_valid$MH, "g_task_is_valid");
        try {
            return (int)mh$.invokeExact(result, source_object);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_run_in_thread$MH() {
        return RuntimeHelper.requireNonNull(constants$840.g_task_run_in_thread$MH,"g_task_run_in_thread");
    }
    public static void g_task_run_in_thread ( Addressable task,  Addressable task_func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$840.g_task_run_in_thread$MH, "g_task_run_in_thread");
        try {
            mh$.invokeExact(task, task_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_run_in_thread_sync$MH() {
        return RuntimeHelper.requireNonNull(constants$840.g_task_run_in_thread_sync$MH,"g_task_run_in_thread_sync");
    }
    public static void g_task_run_in_thread_sync ( Addressable task,  Addressable task_func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$840.g_task_run_in_thread_sync$MH, "g_task_run_in_thread_sync");
        try {
            mh$.invokeExact(task, task_func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_set_return_on_cancel$MH() {
        return RuntimeHelper.requireNonNull(constants$840.g_task_set_return_on_cancel$MH,"g_task_set_return_on_cancel");
    }
    public static int g_task_set_return_on_cancel ( Addressable task,  int return_on_cancel) {
        var mh$ = RuntimeHelper.requireNonNull(constants$840.g_task_set_return_on_cancel$MH, "g_task_set_return_on_cancel");
        try {
            return (int)mh$.invokeExact(task, return_on_cancel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_return_on_cancel$MH() {
        return RuntimeHelper.requireNonNull(constants$840.g_task_get_return_on_cancel$MH,"g_task_get_return_on_cancel");
    }
    public static int g_task_get_return_on_cancel ( Addressable task) {
        var mh$ = RuntimeHelper.requireNonNull(constants$840.g_task_get_return_on_cancel$MH, "g_task_get_return_on_cancel");
        try {
            return (int)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_attach_source$MH() {
        return RuntimeHelper.requireNonNull(constants$840.g_task_attach_source$MH,"g_task_attach_source");
    }
    public static void g_task_attach_source ( Addressable task,  Addressable source,  Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$840.g_task_attach_source$MH, "g_task_attach_source");
        try {
            mh$.invokeExact(task, source, callback);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_return_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$840.g_task_return_pointer$MH,"g_task_return_pointer");
    }
    public static void g_task_return_pointer ( Addressable task,  Addressable result,  Addressable result_destroy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$840.g_task_return_pointer$MH, "g_task_return_pointer");
        try {
            mh$.invokeExact(task, result, result_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_return_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$841.g_task_return_boolean$MH,"g_task_return_boolean");
    }
    public static void g_task_return_boolean ( Addressable task,  int result) {
        var mh$ = RuntimeHelper.requireNonNull(constants$841.g_task_return_boolean$MH, "g_task_return_boolean");
        try {
            mh$.invokeExact(task, result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_return_int$MH() {
        return RuntimeHelper.requireNonNull(constants$841.g_task_return_int$MH,"g_task_return_int");
    }
    public static void g_task_return_int ( Addressable task,  long result) {
        var mh$ = RuntimeHelper.requireNonNull(constants$841.g_task_return_int$MH, "g_task_return_int");
        try {
            mh$.invokeExact(task, result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_return_error$MH() {
        return RuntimeHelper.requireNonNull(constants$841.g_task_return_error$MH,"g_task_return_error");
    }
    public static void g_task_return_error ( Addressable task,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$841.g_task_return_error$MH, "g_task_return_error");
        try {
            mh$.invokeExact(task, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_return_new_error$MH() {
        return RuntimeHelper.requireNonNull(constants$841.g_task_return_new_error$MH,"g_task_return_new_error");
    }
    public static void g_task_return_new_error ( Addressable task,  int domain,  int code,  Addressable format, Object... x4) {
        var mh$ = RuntimeHelper.requireNonNull(constants$841.g_task_return_new_error$MH, "g_task_return_new_error");
        try {
            mh$.invokeExact(task, domain, code, format, x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_return_value$MH() {
        return RuntimeHelper.requireNonNull(constants$841.g_task_return_value$MH,"g_task_return_value");
    }
    public static void g_task_return_value ( Addressable task,  Addressable result) {
        var mh$ = RuntimeHelper.requireNonNull(constants$841.g_task_return_value$MH, "g_task_return_value");
        try {
            mh$.invokeExact(task, result);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_return_error_if_cancelled$MH() {
        return RuntimeHelper.requireNonNull(constants$841.g_task_return_error_if_cancelled$MH,"g_task_return_error_if_cancelled");
    }
    public static int g_task_return_error_if_cancelled ( Addressable task) {
        var mh$ = RuntimeHelper.requireNonNull(constants$841.g_task_return_error_if_cancelled$MH, "g_task_return_error_if_cancelled");
        try {
            return (int)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_propagate_pointer$MH() {
        return RuntimeHelper.requireNonNull(constants$842.g_task_propagate_pointer$MH,"g_task_propagate_pointer");
    }
    public static MemoryAddress g_task_propagate_pointer ( Addressable task,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$842.g_task_propagate_pointer$MH, "g_task_propagate_pointer");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(task, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_propagate_boolean$MH() {
        return RuntimeHelper.requireNonNull(constants$842.g_task_propagate_boolean$MH,"g_task_propagate_boolean");
    }
    public static int g_task_propagate_boolean ( Addressable task,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$842.g_task_propagate_boolean$MH, "g_task_propagate_boolean");
        try {
            return (int)mh$.invokeExact(task, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_propagate_int$MH() {
        return RuntimeHelper.requireNonNull(constants$842.g_task_propagate_int$MH,"g_task_propagate_int");
    }
    public static long g_task_propagate_int ( Addressable task,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$842.g_task_propagate_int$MH, "g_task_propagate_int");
        try {
            return (long)mh$.invokeExact(task, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_propagate_value$MH() {
        return RuntimeHelper.requireNonNull(constants$842.g_task_propagate_value$MH,"g_task_propagate_value");
    }
    public static int g_task_propagate_value ( Addressable task,  Addressable value,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$842.g_task_propagate_value$MH, "g_task_propagate_value");
        try {
            return (int)mh$.invokeExact(task, value, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_had_error$MH() {
        return RuntimeHelper.requireNonNull(constants$842.g_task_had_error$MH,"g_task_had_error");
    }
    public static int g_task_had_error ( Addressable task) {
        var mh$ = RuntimeHelper.requireNonNull(constants$842.g_task_had_error$MH, "g_task_had_error");
        try {
            return (int)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_task_get_completed$MH() {
        return RuntimeHelper.requireNonNull(constants$842.g_task_get_completed$MH,"g_task_get_completed");
    }
    public static int g_task_get_completed ( Addressable task) {
        var mh$ = RuntimeHelper.requireNonNull(constants$842.g_task_get_completed$MH, "g_task_get_completed");
        try {
            return (int)mh$.invokeExact(task);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tcp_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$843.g_tcp_connection_get_type$MH,"g_tcp_connection_get_type");
    }
    public static long g_tcp_connection_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$843.g_tcp_connection_get_type$MH, "g_tcp_connection_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tcp_connection_set_graceful_disconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$843.g_tcp_connection_set_graceful_disconnect$MH,"g_tcp_connection_set_graceful_disconnect");
    }
    public static void g_tcp_connection_set_graceful_disconnect ( Addressable connection,  int graceful_disconnect) {
        var mh$ = RuntimeHelper.requireNonNull(constants$843.g_tcp_connection_set_graceful_disconnect$MH, "g_tcp_connection_set_graceful_disconnect");
        try {
            mh$.invokeExact(connection, graceful_disconnect);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tcp_connection_get_graceful_disconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$843.g_tcp_connection_get_graceful_disconnect$MH,"g_tcp_connection_get_graceful_disconnect");
    }
    public static int g_tcp_connection_get_graceful_disconnect ( Addressable connection) {
        var mh$ = RuntimeHelper.requireNonNull(constants$843.g_tcp_connection_get_graceful_disconnect$MH, "g_tcp_connection_get_graceful_disconnect");
        try {
            return (int)mh$.invokeExact(connection);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tcp_wrapper_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$843.g_tcp_wrapper_connection_get_type$MH,"g_tcp_wrapper_connection_get_type");
    }
    public static long g_tcp_wrapper_connection_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$843.g_tcp_wrapper_connection_get_type$MH, "g_tcp_wrapper_connection_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tcp_wrapper_connection_new$MH() {
        return RuntimeHelper.requireNonNull(constants$843.g_tcp_wrapper_connection_new$MH,"g_tcp_wrapper_connection_new");
    }
    public static MemoryAddress g_tcp_wrapper_connection_new ( Addressable base_io_stream,  Addressable socket) {
        var mh$ = RuntimeHelper.requireNonNull(constants$843.g_tcp_wrapper_connection_new$MH, "g_tcp_wrapper_connection_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(base_io_stream, socket);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tcp_wrapper_connection_get_base_io_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$843.g_tcp_wrapper_connection_get_base_io_stream$MH,"g_tcp_wrapper_connection_get_base_io_stream");
    }
    public static MemoryAddress g_tcp_wrapper_connection_get_base_io_stream ( Addressable conn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$843.g_tcp_wrapper_connection_get_base_io_stream$MH, "g_tcp_wrapper_connection_get_base_io_stream");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$844.g_test_dbus_get_type$MH,"g_test_dbus_get_type");
    }
    public static long g_test_dbus_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$844.g_test_dbus_get_type$MH, "g_test_dbus_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_new$MH() {
        return RuntimeHelper.requireNonNull(constants$844.g_test_dbus_new$MH,"g_test_dbus_new");
    }
    public static MemoryAddress g_test_dbus_new ( int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$844.g_test_dbus_new$MH, "g_test_dbus_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$844.g_test_dbus_get_flags$MH,"g_test_dbus_get_flags");
    }
    public static int g_test_dbus_get_flags ( Addressable self) {
        var mh$ = RuntimeHelper.requireNonNull(constants$844.g_test_dbus_get_flags$MH, "g_test_dbus_get_flags");
        try {
            return (int)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_get_bus_address$MH() {
        return RuntimeHelper.requireNonNull(constants$844.g_test_dbus_get_bus_address$MH,"g_test_dbus_get_bus_address");
    }
    public static MemoryAddress g_test_dbus_get_bus_address ( Addressable self) {
        var mh$ = RuntimeHelper.requireNonNull(constants$844.g_test_dbus_get_bus_address$MH, "g_test_dbus_get_bus_address");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_add_service_dir$MH() {
        return RuntimeHelper.requireNonNull(constants$844.g_test_dbus_add_service_dir$MH,"g_test_dbus_add_service_dir");
    }
    public static void g_test_dbus_add_service_dir ( Addressable self,  Addressable path) {
        var mh$ = RuntimeHelper.requireNonNull(constants$844.g_test_dbus_add_service_dir$MH, "g_test_dbus_add_service_dir");
        try {
            mh$.invokeExact(self, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_up$MH() {
        return RuntimeHelper.requireNonNull(constants$844.g_test_dbus_up$MH,"g_test_dbus_up");
    }
    public static void g_test_dbus_up ( Addressable self) {
        var mh$ = RuntimeHelper.requireNonNull(constants$844.g_test_dbus_up$MH, "g_test_dbus_up");
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_stop$MH() {
        return RuntimeHelper.requireNonNull(constants$845.g_test_dbus_stop$MH,"g_test_dbus_stop");
    }
    public static void g_test_dbus_stop ( Addressable self) {
        var mh$ = RuntimeHelper.requireNonNull(constants$845.g_test_dbus_stop$MH, "g_test_dbus_stop");
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_down$MH() {
        return RuntimeHelper.requireNonNull(constants$845.g_test_dbus_down$MH,"g_test_dbus_down");
    }
    public static void g_test_dbus_down ( Addressable self) {
        var mh$ = RuntimeHelper.requireNonNull(constants$845.g_test_dbus_down$MH, "g_test_dbus_down");
        try {
            mh$.invokeExact(self);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_test_dbus_unset$MH() {
        return RuntimeHelper.requireNonNull(constants$845.g_test_dbus_unset$MH,"g_test_dbus_unset");
    }
    public static void g_test_dbus_unset () {
        var mh$ = RuntimeHelper.requireNonNull(constants$845.g_test_dbus_unset$MH, "g_test_dbus_unset");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_themed_icon_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$845.g_themed_icon_get_type$MH,"g_themed_icon_get_type");
    }
    public static long g_themed_icon_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$845.g_themed_icon_get_type$MH, "g_themed_icon_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_themed_icon_new$MH() {
        return RuntimeHelper.requireNonNull(constants$845.g_themed_icon_new$MH,"g_themed_icon_new");
    }
    public static MemoryAddress g_themed_icon_new ( Addressable iconname) {
        var mh$ = RuntimeHelper.requireNonNull(constants$845.g_themed_icon_new$MH, "g_themed_icon_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(iconname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_themed_icon_new_with_default_fallbacks$MH() {
        return RuntimeHelper.requireNonNull(constants$845.g_themed_icon_new_with_default_fallbacks$MH,"g_themed_icon_new_with_default_fallbacks");
    }
    public static MemoryAddress g_themed_icon_new_with_default_fallbacks ( Addressable iconname) {
        var mh$ = RuntimeHelper.requireNonNull(constants$845.g_themed_icon_new_with_default_fallbacks$MH, "g_themed_icon_new_with_default_fallbacks");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(iconname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_themed_icon_new_from_names$MH() {
        return RuntimeHelper.requireNonNull(constants$846.g_themed_icon_new_from_names$MH,"g_themed_icon_new_from_names");
    }
    public static MemoryAddress g_themed_icon_new_from_names ( Addressable iconnames,  int len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$846.g_themed_icon_new_from_names$MH, "g_themed_icon_new_from_names");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(iconnames, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_themed_icon_prepend_name$MH() {
        return RuntimeHelper.requireNonNull(constants$846.g_themed_icon_prepend_name$MH,"g_themed_icon_prepend_name");
    }
    public static void g_themed_icon_prepend_name ( Addressable icon,  Addressable iconname) {
        var mh$ = RuntimeHelper.requireNonNull(constants$846.g_themed_icon_prepend_name$MH, "g_themed_icon_prepend_name");
        try {
            mh$.invokeExact(icon, iconname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_themed_icon_append_name$MH() {
        return RuntimeHelper.requireNonNull(constants$846.g_themed_icon_append_name$MH,"g_themed_icon_append_name");
    }
    public static void g_themed_icon_append_name ( Addressable icon,  Addressable iconname) {
        var mh$ = RuntimeHelper.requireNonNull(constants$846.g_themed_icon_append_name$MH, "g_themed_icon_append_name");
        try {
            mh$.invokeExact(icon, iconname);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_themed_icon_get_names$MH() {
        return RuntimeHelper.requireNonNull(constants$846.g_themed_icon_get_names$MH,"g_themed_icon_get_names");
    }
    public static MemoryAddress g_themed_icon_get_names ( Addressable icon) {
        var mh$ = RuntimeHelper.requireNonNull(constants$846.g_themed_icon_get_names$MH, "g_themed_icon_get_names");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(icon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_threaded_socket_service_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$846.g_threaded_socket_service_get_type$MH,"g_threaded_socket_service_get_type");
    }
    public static long g_threaded_socket_service_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$846.g_threaded_socket_service_get_type$MH, "g_threaded_socket_service_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_threaded_socket_service_new$MH() {
        return RuntimeHelper.requireNonNull(constants$846.g_threaded_socket_service_new$MH,"g_threaded_socket_service_new");
    }
    public static MemoryAddress g_threaded_socket_service_new ( int max_threads) {
        var mh$ = RuntimeHelper.requireNonNull(constants$846.g_threaded_socket_service_new$MH, "g_threaded_socket_service_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(max_threads);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$847.g_tls_backend_get_type$MH,"g_tls_backend_get_type");
    }
    public static long g_tls_backend_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$847.g_tls_backend_get_type$MH, "g_tls_backend_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$847.g_tls_backend_get_default$MH,"g_tls_backend_get_default");
    }
    public static MemoryAddress g_tls_backend_get_default () {
        var mh$ = RuntimeHelper.requireNonNull(constants$847.g_tls_backend_get_default$MH, "g_tls_backend_get_default");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_default_database$MH() {
        return RuntimeHelper.requireNonNull(constants$847.g_tls_backend_get_default_database$MH,"g_tls_backend_get_default_database");
    }
    public static MemoryAddress g_tls_backend_get_default_database ( Addressable backend) {
        var mh$ = RuntimeHelper.requireNonNull(constants$847.g_tls_backend_get_default_database$MH, "g_tls_backend_get_default_database");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_set_default_database$MH() {
        return RuntimeHelper.requireNonNull(constants$847.g_tls_backend_set_default_database$MH,"g_tls_backend_set_default_database");
    }
    public static void g_tls_backend_set_default_database ( Addressable backend,  Addressable database) {
        var mh$ = RuntimeHelper.requireNonNull(constants$847.g_tls_backend_set_default_database$MH, "g_tls_backend_set_default_database");
        try {
            mh$.invokeExact(backend, database);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_supports_tls$MH() {
        return RuntimeHelper.requireNonNull(constants$847.g_tls_backend_supports_tls$MH,"g_tls_backend_supports_tls");
    }
    public static int g_tls_backend_supports_tls ( Addressable backend) {
        var mh$ = RuntimeHelper.requireNonNull(constants$847.g_tls_backend_supports_tls$MH, "g_tls_backend_supports_tls");
        try {
            return (int)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_supports_dtls$MH() {
        return RuntimeHelper.requireNonNull(constants$847.g_tls_backend_supports_dtls$MH,"g_tls_backend_supports_dtls");
    }
    public static int g_tls_backend_supports_dtls ( Addressable backend) {
        var mh$ = RuntimeHelper.requireNonNull(constants$847.g_tls_backend_supports_dtls$MH, "g_tls_backend_supports_dtls");
        try {
            return (int)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_certificate_type$MH() {
        return RuntimeHelper.requireNonNull(constants$848.g_tls_backend_get_certificate_type$MH,"g_tls_backend_get_certificate_type");
    }
    public static long g_tls_backend_get_certificate_type ( Addressable backend) {
        var mh$ = RuntimeHelper.requireNonNull(constants$848.g_tls_backend_get_certificate_type$MH, "g_tls_backend_get_certificate_type");
        try {
            return (long)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_client_connection_type$MH() {
        return RuntimeHelper.requireNonNull(constants$848.g_tls_backend_get_client_connection_type$MH,"g_tls_backend_get_client_connection_type");
    }
    public static long g_tls_backend_get_client_connection_type ( Addressable backend) {
        var mh$ = RuntimeHelper.requireNonNull(constants$848.g_tls_backend_get_client_connection_type$MH, "g_tls_backend_get_client_connection_type");
        try {
            return (long)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_server_connection_type$MH() {
        return RuntimeHelper.requireNonNull(constants$848.g_tls_backend_get_server_connection_type$MH,"g_tls_backend_get_server_connection_type");
    }
    public static long g_tls_backend_get_server_connection_type ( Addressable backend) {
        var mh$ = RuntimeHelper.requireNonNull(constants$848.g_tls_backend_get_server_connection_type$MH, "g_tls_backend_get_server_connection_type");
        try {
            return (long)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_file_database_type$MH() {
        return RuntimeHelper.requireNonNull(constants$848.g_tls_backend_get_file_database_type$MH,"g_tls_backend_get_file_database_type");
    }
    public static long g_tls_backend_get_file_database_type ( Addressable backend) {
        var mh$ = RuntimeHelper.requireNonNull(constants$848.g_tls_backend_get_file_database_type$MH, "g_tls_backend_get_file_database_type");
        try {
            return (long)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_dtls_client_connection_type$MH() {
        return RuntimeHelper.requireNonNull(constants$848.g_tls_backend_get_dtls_client_connection_type$MH,"g_tls_backend_get_dtls_client_connection_type");
    }
    public static long g_tls_backend_get_dtls_client_connection_type ( Addressable backend) {
        var mh$ = RuntimeHelper.requireNonNull(constants$848.g_tls_backend_get_dtls_client_connection_type$MH, "g_tls_backend_get_dtls_client_connection_type");
        try {
            return (long)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_backend_get_dtls_server_connection_type$MH() {
        return RuntimeHelper.requireNonNull(constants$848.g_tls_backend_get_dtls_server_connection_type$MH,"g_tls_backend_get_dtls_server_connection_type");
    }
    public static long g_tls_backend_get_dtls_server_connection_type ( Addressable backend) {
        var mh$ = RuntimeHelper.requireNonNull(constants$848.g_tls_backend_get_dtls_server_connection_type$MH, "g_tls_backend_get_dtls_server_connection_type");
        try {
            return (long)mh$.invokeExact(backend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$849.g_tls_certificate_get_type$MH,"g_tls_certificate_get_type");
    }
    public static long g_tls_certificate_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$849.g_tls_certificate_get_type$MH, "g_tls_certificate_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_new_from_pem$MH() {
        return RuntimeHelper.requireNonNull(constants$849.g_tls_certificate_new_from_pem$MH,"g_tls_certificate_new_from_pem");
    }
    public static MemoryAddress g_tls_certificate_new_from_pem ( Addressable data,  long length,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$849.g_tls_certificate_new_from_pem$MH, "g_tls_certificate_new_from_pem");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(data, length, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_new_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$849.g_tls_certificate_new_from_file$MH,"g_tls_certificate_new_from_file");
    }
    public static MemoryAddress g_tls_certificate_new_from_file ( Addressable file,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$849.g_tls_certificate_new_from_file$MH, "g_tls_certificate_new_from_file");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_new_from_files$MH() {
        return RuntimeHelper.requireNonNull(constants$849.g_tls_certificate_new_from_files$MH,"g_tls_certificate_new_from_files");
    }
    public static MemoryAddress g_tls_certificate_new_from_files ( Addressable cert_file,  Addressable key_file,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$849.g_tls_certificate_new_from_files$MH, "g_tls_certificate_new_from_files");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(cert_file, key_file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_new_from_pkcs11_uris$MH() {
        return RuntimeHelper.requireNonNull(constants$849.g_tls_certificate_new_from_pkcs11_uris$MH,"g_tls_certificate_new_from_pkcs11_uris");
    }
    public static MemoryAddress g_tls_certificate_new_from_pkcs11_uris ( Addressable pkcs11_uri,  Addressable private_key_pkcs11_uri,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$849.g_tls_certificate_new_from_pkcs11_uris$MH, "g_tls_certificate_new_from_pkcs11_uris");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(pkcs11_uri, private_key_pkcs11_uri, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_list_new_from_file$MH() {
        return RuntimeHelper.requireNonNull(constants$849.g_tls_certificate_list_new_from_file$MH,"g_tls_certificate_list_new_from_file");
    }
    public static MemoryAddress g_tls_certificate_list_new_from_file ( Addressable file,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$849.g_tls_certificate_list_new_from_file$MH, "g_tls_certificate_list_new_from_file");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(file, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_get_issuer$MH() {
        return RuntimeHelper.requireNonNull(constants$850.g_tls_certificate_get_issuer$MH,"g_tls_certificate_get_issuer");
    }
    public static MemoryAddress g_tls_certificate_get_issuer ( Addressable cert) {
        var mh$ = RuntimeHelper.requireNonNull(constants$850.g_tls_certificate_get_issuer$MH, "g_tls_certificate_get_issuer");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(cert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$850.g_tls_certificate_verify$MH,"g_tls_certificate_verify");
    }
    public static int g_tls_certificate_verify ( Addressable cert,  Addressable identity,  Addressable trusted_ca) {
        var mh$ = RuntimeHelper.requireNonNull(constants$850.g_tls_certificate_verify$MH, "g_tls_certificate_verify");
        try {
            return (int)mh$.invokeExact(cert, identity, trusted_ca);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_is_same$MH() {
        return RuntimeHelper.requireNonNull(constants$850.g_tls_certificate_is_same$MH,"g_tls_certificate_is_same");
    }
    public static int g_tls_certificate_is_same ( Addressable cert_one,  Addressable cert_two) {
        var mh$ = RuntimeHelper.requireNonNull(constants$850.g_tls_certificate_is_same$MH, "g_tls_certificate_is_same");
        try {
            return (int)mh$.invokeExact(cert_one, cert_two);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_get_not_valid_before$MH() {
        return RuntimeHelper.requireNonNull(constants$850.g_tls_certificate_get_not_valid_before$MH,"g_tls_certificate_get_not_valid_before");
    }
    public static MemoryAddress g_tls_certificate_get_not_valid_before ( Addressable cert) {
        var mh$ = RuntimeHelper.requireNonNull(constants$850.g_tls_certificate_get_not_valid_before$MH, "g_tls_certificate_get_not_valid_before");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(cert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_get_not_valid_after$MH() {
        return RuntimeHelper.requireNonNull(constants$850.g_tls_certificate_get_not_valid_after$MH,"g_tls_certificate_get_not_valid_after");
    }
    public static MemoryAddress g_tls_certificate_get_not_valid_after ( Addressable cert) {
        var mh$ = RuntimeHelper.requireNonNull(constants$850.g_tls_certificate_get_not_valid_after$MH, "g_tls_certificate_get_not_valid_after");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(cert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_get_subject_name$MH() {
        return RuntimeHelper.requireNonNull(constants$850.g_tls_certificate_get_subject_name$MH,"g_tls_certificate_get_subject_name");
    }
    public static MemoryAddress g_tls_certificate_get_subject_name ( Addressable cert) {
        var mh$ = RuntimeHelper.requireNonNull(constants$850.g_tls_certificate_get_subject_name$MH, "g_tls_certificate_get_subject_name");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(cert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_get_issuer_name$MH() {
        return RuntimeHelper.requireNonNull(constants$851.g_tls_certificate_get_issuer_name$MH,"g_tls_certificate_get_issuer_name");
    }
    public static MemoryAddress g_tls_certificate_get_issuer_name ( Addressable cert) {
        var mh$ = RuntimeHelper.requireNonNull(constants$851.g_tls_certificate_get_issuer_name$MH, "g_tls_certificate_get_issuer_name");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(cert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_get_dns_names$MH() {
        return RuntimeHelper.requireNonNull(constants$851.g_tls_certificate_get_dns_names$MH,"g_tls_certificate_get_dns_names");
    }
    public static MemoryAddress g_tls_certificate_get_dns_names ( Addressable cert) {
        var mh$ = RuntimeHelper.requireNonNull(constants$851.g_tls_certificate_get_dns_names$MH, "g_tls_certificate_get_dns_names");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(cert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_certificate_get_ip_addresses$MH() {
        return RuntimeHelper.requireNonNull(constants$851.g_tls_certificate_get_ip_addresses$MH,"g_tls_certificate_get_ip_addresses");
    }
    public static MemoryAddress g_tls_certificate_get_ip_addresses ( Addressable cert) {
        var mh$ = RuntimeHelper.requireNonNull(constants$851.g_tls_certificate_get_ip_addresses$MH, "g_tls_certificate_get_ip_addresses");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(cert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$851.g_tls_connection_get_type$MH,"g_tls_connection_get_type");
    }
    public static long g_tls_connection_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$851.g_tls_connection_get_type$MH, "g_tls_connection_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_set_use_system_certdb$MH() {
        return RuntimeHelper.requireNonNull(constants$851.g_tls_connection_set_use_system_certdb$MH,"g_tls_connection_set_use_system_certdb");
    }
    public static void g_tls_connection_set_use_system_certdb ( Addressable conn,  int use_system_certdb) {
        var mh$ = RuntimeHelper.requireNonNull(constants$851.g_tls_connection_set_use_system_certdb$MH, "g_tls_connection_set_use_system_certdb");
        try {
            mh$.invokeExact(conn, use_system_certdb);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_use_system_certdb$MH() {
        return RuntimeHelper.requireNonNull(constants$851.g_tls_connection_get_use_system_certdb$MH,"g_tls_connection_get_use_system_certdb");
    }
    public static int g_tls_connection_get_use_system_certdb ( Addressable conn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$851.g_tls_connection_get_use_system_certdb$MH, "g_tls_connection_get_use_system_certdb");
        try {
            return (int)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_set_database$MH() {
        return RuntimeHelper.requireNonNull(constants$852.g_tls_connection_set_database$MH,"g_tls_connection_set_database");
    }
    public static void g_tls_connection_set_database ( Addressable conn,  Addressable database) {
        var mh$ = RuntimeHelper.requireNonNull(constants$852.g_tls_connection_set_database$MH, "g_tls_connection_set_database");
        try {
            mh$.invokeExact(conn, database);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_database$MH() {
        return RuntimeHelper.requireNonNull(constants$852.g_tls_connection_get_database$MH,"g_tls_connection_get_database");
    }
    public static MemoryAddress g_tls_connection_get_database ( Addressable conn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$852.g_tls_connection_get_database$MH, "g_tls_connection_get_database");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_set_certificate$MH() {
        return RuntimeHelper.requireNonNull(constants$852.g_tls_connection_set_certificate$MH,"g_tls_connection_set_certificate");
    }
    public static void g_tls_connection_set_certificate ( Addressable conn,  Addressable certificate) {
        var mh$ = RuntimeHelper.requireNonNull(constants$852.g_tls_connection_set_certificate$MH, "g_tls_connection_set_certificate");
        try {
            mh$.invokeExact(conn, certificate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_certificate$MH() {
        return RuntimeHelper.requireNonNull(constants$852.g_tls_connection_get_certificate$MH,"g_tls_connection_get_certificate");
    }
    public static MemoryAddress g_tls_connection_get_certificate ( Addressable conn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$852.g_tls_connection_get_certificate$MH, "g_tls_connection_get_certificate");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_set_interaction$MH() {
        return RuntimeHelper.requireNonNull(constants$852.g_tls_connection_set_interaction$MH,"g_tls_connection_set_interaction");
    }
    public static void g_tls_connection_set_interaction ( Addressable conn,  Addressable interaction) {
        var mh$ = RuntimeHelper.requireNonNull(constants$852.g_tls_connection_set_interaction$MH, "g_tls_connection_set_interaction");
        try {
            mh$.invokeExact(conn, interaction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_interaction$MH() {
        return RuntimeHelper.requireNonNull(constants$852.g_tls_connection_get_interaction$MH,"g_tls_connection_get_interaction");
    }
    public static MemoryAddress g_tls_connection_get_interaction ( Addressable conn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$852.g_tls_connection_get_interaction$MH, "g_tls_connection_get_interaction");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_peer_certificate$MH() {
        return RuntimeHelper.requireNonNull(constants$853.g_tls_connection_get_peer_certificate$MH,"g_tls_connection_get_peer_certificate");
    }
    public static MemoryAddress g_tls_connection_get_peer_certificate ( Addressable conn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$853.g_tls_connection_get_peer_certificate$MH, "g_tls_connection_get_peer_certificate");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_peer_certificate_errors$MH() {
        return RuntimeHelper.requireNonNull(constants$853.g_tls_connection_get_peer_certificate_errors$MH,"g_tls_connection_get_peer_certificate_errors");
    }
    public static int g_tls_connection_get_peer_certificate_errors ( Addressable conn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$853.g_tls_connection_get_peer_certificate_errors$MH, "g_tls_connection_get_peer_certificate_errors");
        try {
            return (int)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_set_require_close_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$853.g_tls_connection_set_require_close_notify$MH,"g_tls_connection_set_require_close_notify");
    }
    public static void g_tls_connection_set_require_close_notify ( Addressable conn,  int require_close_notify) {
        var mh$ = RuntimeHelper.requireNonNull(constants$853.g_tls_connection_set_require_close_notify$MH, "g_tls_connection_set_require_close_notify");
        try {
            mh$.invokeExact(conn, require_close_notify);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_require_close_notify$MH() {
        return RuntimeHelper.requireNonNull(constants$853.g_tls_connection_get_require_close_notify$MH,"g_tls_connection_get_require_close_notify");
    }
    public static int g_tls_connection_get_require_close_notify ( Addressable conn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$853.g_tls_connection_get_require_close_notify$MH, "g_tls_connection_get_require_close_notify");
        try {
            return (int)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_set_rehandshake_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$853.g_tls_connection_set_rehandshake_mode$MH,"g_tls_connection_set_rehandshake_mode");
    }
    public static void g_tls_connection_set_rehandshake_mode ( Addressable conn,  int mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$853.g_tls_connection_set_rehandshake_mode$MH, "g_tls_connection_set_rehandshake_mode");
        try {
            mh$.invokeExact(conn, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_rehandshake_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$853.g_tls_connection_get_rehandshake_mode$MH,"g_tls_connection_get_rehandshake_mode");
    }
    public static int g_tls_connection_get_rehandshake_mode ( Addressable conn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$853.g_tls_connection_get_rehandshake_mode$MH, "g_tls_connection_get_rehandshake_mode");
        try {
            return (int)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_set_advertised_protocols$MH() {
        return RuntimeHelper.requireNonNull(constants$854.g_tls_connection_set_advertised_protocols$MH,"g_tls_connection_set_advertised_protocols");
    }
    public static void g_tls_connection_set_advertised_protocols ( Addressable conn,  Addressable protocols) {
        var mh$ = RuntimeHelper.requireNonNull(constants$854.g_tls_connection_set_advertised_protocols$MH, "g_tls_connection_set_advertised_protocols");
        try {
            mh$.invokeExact(conn, protocols);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_negotiated_protocol$MH() {
        return RuntimeHelper.requireNonNull(constants$854.g_tls_connection_get_negotiated_protocol$MH,"g_tls_connection_get_negotiated_protocol");
    }
    public static MemoryAddress g_tls_connection_get_negotiated_protocol ( Addressable conn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$854.g_tls_connection_get_negotiated_protocol$MH, "g_tls_connection_get_negotiated_protocol");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_channel_binding_data$MH() {
        return RuntimeHelper.requireNonNull(constants$854.g_tls_connection_get_channel_binding_data$MH,"g_tls_connection_get_channel_binding_data");
    }
    public static int g_tls_connection_get_channel_binding_data ( Addressable conn,  int type,  Addressable data,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$854.g_tls_connection_get_channel_binding_data$MH, "g_tls_connection_get_channel_binding_data");
        try {
            return (int)mh$.invokeExact(conn, type, data, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_handshake$MH() {
        return RuntimeHelper.requireNonNull(constants$854.g_tls_connection_handshake$MH,"g_tls_connection_handshake");
    }
    public static int g_tls_connection_handshake ( Addressable conn,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$854.g_tls_connection_handshake$MH, "g_tls_connection_handshake");
        try {
            return (int)mh$.invokeExact(conn, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_handshake_async$MH() {
        return RuntimeHelper.requireNonNull(constants$854.g_tls_connection_handshake_async$MH,"g_tls_connection_handshake_async");
    }
    public static void g_tls_connection_handshake_async ( Addressable conn,  int io_priority,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$854.g_tls_connection_handshake_async$MH, "g_tls_connection_handshake_async");
        try {
            mh$.invokeExact(conn, io_priority, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_handshake_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$854.g_tls_connection_handshake_finish$MH,"g_tls_connection_handshake_finish");
    }
    public static int g_tls_connection_handshake_finish ( Addressable conn,  Addressable result,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$854.g_tls_connection_handshake_finish$MH, "g_tls_connection_handshake_finish");
        try {
            return (int)mh$.invokeExact(conn, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_protocol_version$MH() {
        return RuntimeHelper.requireNonNull(constants$855.g_tls_connection_get_protocol_version$MH,"g_tls_connection_get_protocol_version");
    }
    public static int g_tls_connection_get_protocol_version ( Addressable conn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$855.g_tls_connection_get_protocol_version$MH, "g_tls_connection_get_protocol_version");
        try {
            return (int)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_get_ciphersuite_name$MH() {
        return RuntimeHelper.requireNonNull(constants$855.g_tls_connection_get_ciphersuite_name$MH,"g_tls_connection_get_ciphersuite_name");
    }
    public static MemoryAddress g_tls_connection_get_ciphersuite_name ( Addressable conn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$855.g_tls_connection_get_ciphersuite_name$MH, "g_tls_connection_get_ciphersuite_name");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$855.g_tls_error_quark$MH,"g_tls_error_quark");
    }
    public static int g_tls_error_quark () {
        var mh$ = RuntimeHelper.requireNonNull(constants$855.g_tls_error_quark$MH, "g_tls_error_quark");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_channel_binding_error_quark$MH() {
        return RuntimeHelper.requireNonNull(constants$855.g_tls_channel_binding_error_quark$MH,"g_tls_channel_binding_error_quark");
    }
    public static int g_tls_channel_binding_error_quark () {
        var mh$ = RuntimeHelper.requireNonNull(constants$855.g_tls_channel_binding_error_quark$MH, "g_tls_channel_binding_error_quark");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_connection_emit_accept_certificate$MH() {
        return RuntimeHelper.requireNonNull(constants$855.g_tls_connection_emit_accept_certificate$MH,"g_tls_connection_emit_accept_certificate");
    }
    public static int g_tls_connection_emit_accept_certificate ( Addressable conn,  Addressable peer_cert,  int errors) {
        var mh$ = RuntimeHelper.requireNonNull(constants$855.g_tls_connection_emit_accept_certificate$MH, "g_tls_connection_emit_accept_certificate");
        try {
            return (int)mh$.invokeExact(conn, peer_cert, errors);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$855.g_tls_client_connection_get_type$MH,"g_tls_client_connection_get_type");
    }
    public static long g_tls_client_connection_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$855.g_tls_client_connection_get_type$MH, "g_tls_client_connection_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_new$MH() {
        return RuntimeHelper.requireNonNull(constants$856.g_tls_client_connection_new$MH,"g_tls_client_connection_new");
    }
    public static MemoryAddress g_tls_client_connection_new ( Addressable base_io_stream,  Addressable server_identity,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$856.g_tls_client_connection_new$MH, "g_tls_client_connection_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(base_io_stream, server_identity, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_get_validation_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$856.g_tls_client_connection_get_validation_flags$MH,"g_tls_client_connection_get_validation_flags");
    }
    public static int g_tls_client_connection_get_validation_flags ( Addressable conn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$856.g_tls_client_connection_get_validation_flags$MH, "g_tls_client_connection_get_validation_flags");
        try {
            return (int)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_set_validation_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$856.g_tls_client_connection_set_validation_flags$MH,"g_tls_client_connection_set_validation_flags");
    }
    public static void g_tls_client_connection_set_validation_flags ( Addressable conn,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$856.g_tls_client_connection_set_validation_flags$MH, "g_tls_client_connection_set_validation_flags");
        try {
            mh$.invokeExact(conn, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_get_server_identity$MH() {
        return RuntimeHelper.requireNonNull(constants$856.g_tls_client_connection_get_server_identity$MH,"g_tls_client_connection_get_server_identity");
    }
    public static MemoryAddress g_tls_client_connection_get_server_identity ( Addressable conn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$856.g_tls_client_connection_get_server_identity$MH, "g_tls_client_connection_get_server_identity");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_set_server_identity$MH() {
        return RuntimeHelper.requireNonNull(constants$856.g_tls_client_connection_set_server_identity$MH,"g_tls_client_connection_set_server_identity");
    }
    public static void g_tls_client_connection_set_server_identity ( Addressable conn,  Addressable identity) {
        var mh$ = RuntimeHelper.requireNonNull(constants$856.g_tls_client_connection_set_server_identity$MH, "g_tls_client_connection_set_server_identity");
        try {
            mh$.invokeExact(conn, identity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_get_use_ssl3$MH() {
        return RuntimeHelper.requireNonNull(constants$856.g_tls_client_connection_get_use_ssl3$MH,"g_tls_client_connection_get_use_ssl3");
    }
    public static int g_tls_client_connection_get_use_ssl3 ( Addressable conn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$856.g_tls_client_connection_get_use_ssl3$MH, "g_tls_client_connection_get_use_ssl3");
        try {
            return (int)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_set_use_ssl3$MH() {
        return RuntimeHelper.requireNonNull(constants$857.g_tls_client_connection_set_use_ssl3$MH,"g_tls_client_connection_set_use_ssl3");
    }
    public static void g_tls_client_connection_set_use_ssl3 ( Addressable conn,  int use_ssl3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$857.g_tls_client_connection_set_use_ssl3$MH, "g_tls_client_connection_set_use_ssl3");
        try {
            mh$.invokeExact(conn, use_ssl3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_get_accepted_cas$MH() {
        return RuntimeHelper.requireNonNull(constants$857.g_tls_client_connection_get_accepted_cas$MH,"g_tls_client_connection_get_accepted_cas");
    }
    public static MemoryAddress g_tls_client_connection_get_accepted_cas ( Addressable conn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$857.g_tls_client_connection_get_accepted_cas$MH, "g_tls_client_connection_get_accepted_cas");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(conn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_client_connection_copy_session_state$MH() {
        return RuntimeHelper.requireNonNull(constants$857.g_tls_client_connection_copy_session_state$MH,"g_tls_client_connection_copy_session_state");
    }
    public static void g_tls_client_connection_copy_session_state ( Addressable conn,  Addressable source) {
        var mh$ = RuntimeHelper.requireNonNull(constants$857.g_tls_client_connection_copy_session_state$MH, "g_tls_client_connection_copy_session_state");
        try {
            mh$.invokeExact(conn, source);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$857.g_tls_database_get_type$MH,"g_tls_database_get_type");
    }
    public static long g_tls_database_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$857.g_tls_database_get_type$MH, "g_tls_database_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_verify_chain$MH() {
        return RuntimeHelper.requireNonNull(constants$857.g_tls_database_verify_chain$MH,"g_tls_database_verify_chain");
    }
    public static int g_tls_database_verify_chain ( Addressable self,  Addressable chain,  Addressable purpose,  Addressable identity,  Addressable interaction,  int flags,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$857.g_tls_database_verify_chain$MH, "g_tls_database_verify_chain");
        try {
            return (int)mh$.invokeExact(self, chain, purpose, identity, interaction, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_verify_chain_async$MH() {
        return RuntimeHelper.requireNonNull(constants$857.g_tls_database_verify_chain_async$MH,"g_tls_database_verify_chain_async");
    }
    public static void g_tls_database_verify_chain_async ( Addressable self,  Addressable chain,  Addressable purpose,  Addressable identity,  Addressable interaction,  int flags,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$857.g_tls_database_verify_chain_async$MH, "g_tls_database_verify_chain_async");
        try {
            mh$.invokeExact(self, chain, purpose, identity, interaction, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_verify_chain_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$858.g_tls_database_verify_chain_finish$MH,"g_tls_database_verify_chain_finish");
    }
    public static int g_tls_database_verify_chain_finish ( Addressable self,  Addressable result,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$858.g_tls_database_verify_chain_finish$MH, "g_tls_database_verify_chain_finish");
        try {
            return (int)mh$.invokeExact(self, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_create_certificate_handle$MH() {
        return RuntimeHelper.requireNonNull(constants$858.g_tls_database_create_certificate_handle$MH,"g_tls_database_create_certificate_handle");
    }
    public static MemoryAddress g_tls_database_create_certificate_handle ( Addressable self,  Addressable certificate) {
        var mh$ = RuntimeHelper.requireNonNull(constants$858.g_tls_database_create_certificate_handle$MH, "g_tls_database_create_certificate_handle");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(self, certificate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificate_for_handle$MH() {
        return RuntimeHelper.requireNonNull(constants$858.g_tls_database_lookup_certificate_for_handle$MH,"g_tls_database_lookup_certificate_for_handle");
    }
    public static MemoryAddress g_tls_database_lookup_certificate_for_handle ( Addressable self,  Addressable handle,  Addressable interaction,  int flags,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$858.g_tls_database_lookup_certificate_for_handle$MH, "g_tls_database_lookup_certificate_for_handle");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(self, handle, interaction, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificate_for_handle_async$MH() {
        return RuntimeHelper.requireNonNull(constants$858.g_tls_database_lookup_certificate_for_handle_async$MH,"g_tls_database_lookup_certificate_for_handle_async");
    }
    public static void g_tls_database_lookup_certificate_for_handle_async ( Addressable self,  Addressable handle,  Addressable interaction,  int flags,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$858.g_tls_database_lookup_certificate_for_handle_async$MH, "g_tls_database_lookup_certificate_for_handle_async");
        try {
            mh$.invokeExact(self, handle, interaction, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificate_for_handle_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$858.g_tls_database_lookup_certificate_for_handle_finish$MH,"g_tls_database_lookup_certificate_for_handle_finish");
    }
    public static MemoryAddress g_tls_database_lookup_certificate_for_handle_finish ( Addressable self,  Addressable result,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$858.g_tls_database_lookup_certificate_for_handle_finish$MH, "g_tls_database_lookup_certificate_for_handle_finish");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(self, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificate_issuer$MH() {
        return RuntimeHelper.requireNonNull(constants$858.g_tls_database_lookup_certificate_issuer$MH,"g_tls_database_lookup_certificate_issuer");
    }
    public static MemoryAddress g_tls_database_lookup_certificate_issuer ( Addressable self,  Addressable certificate,  Addressable interaction,  int flags,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$858.g_tls_database_lookup_certificate_issuer$MH, "g_tls_database_lookup_certificate_issuer");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(self, certificate, interaction, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificate_issuer_async$MH() {
        return RuntimeHelper.requireNonNull(constants$859.g_tls_database_lookup_certificate_issuer_async$MH,"g_tls_database_lookup_certificate_issuer_async");
    }
    public static void g_tls_database_lookup_certificate_issuer_async ( Addressable self,  Addressable certificate,  Addressable interaction,  int flags,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$859.g_tls_database_lookup_certificate_issuer_async$MH, "g_tls_database_lookup_certificate_issuer_async");
        try {
            mh$.invokeExact(self, certificate, interaction, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificate_issuer_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$859.g_tls_database_lookup_certificate_issuer_finish$MH,"g_tls_database_lookup_certificate_issuer_finish");
    }
    public static MemoryAddress g_tls_database_lookup_certificate_issuer_finish ( Addressable self,  Addressable result,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$859.g_tls_database_lookup_certificate_issuer_finish$MH, "g_tls_database_lookup_certificate_issuer_finish");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(self, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificates_issued_by$MH() {
        return RuntimeHelper.requireNonNull(constants$859.g_tls_database_lookup_certificates_issued_by$MH,"g_tls_database_lookup_certificates_issued_by");
    }
    public static MemoryAddress g_tls_database_lookup_certificates_issued_by ( Addressable self,  Addressable issuer_raw_dn,  Addressable interaction,  int flags,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$859.g_tls_database_lookup_certificates_issued_by$MH, "g_tls_database_lookup_certificates_issued_by");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(self, issuer_raw_dn, interaction, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificates_issued_by_async$MH() {
        return RuntimeHelper.requireNonNull(constants$859.g_tls_database_lookup_certificates_issued_by_async$MH,"g_tls_database_lookup_certificates_issued_by_async");
    }
    public static void g_tls_database_lookup_certificates_issued_by_async ( Addressable self,  Addressable issuer_raw_dn,  Addressable interaction,  int flags,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$859.g_tls_database_lookup_certificates_issued_by_async$MH, "g_tls_database_lookup_certificates_issued_by_async");
        try {
            mh$.invokeExact(self, issuer_raw_dn, interaction, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_database_lookup_certificates_issued_by_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$859.g_tls_database_lookup_certificates_issued_by_finish$MH,"g_tls_database_lookup_certificates_issued_by_finish");
    }
    public static MemoryAddress g_tls_database_lookup_certificates_issued_by_finish ( Addressable self,  Addressable result,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$859.g_tls_database_lookup_certificates_issued_by_finish$MH, "g_tls_database_lookup_certificates_issued_by_finish");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(self, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_file_database_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$859.g_tls_file_database_get_type$MH,"g_tls_file_database_get_type");
    }
    public static long g_tls_file_database_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$859.g_tls_file_database_get_type$MH, "g_tls_file_database_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_file_database_new$MH() {
        return RuntimeHelper.requireNonNull(constants$860.g_tls_file_database_new$MH,"g_tls_file_database_new");
    }
    public static MemoryAddress g_tls_file_database_new ( Addressable anchors,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$860.g_tls_file_database_new$MH, "g_tls_file_database_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(anchors, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$860.g_tls_interaction_get_type$MH,"g_tls_interaction_get_type");
    }
    public static long g_tls_interaction_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$860.g_tls_interaction_get_type$MH, "g_tls_interaction_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_invoke_ask_password$MH() {
        return RuntimeHelper.requireNonNull(constants$860.g_tls_interaction_invoke_ask_password$MH,"g_tls_interaction_invoke_ask_password");
    }
    public static int g_tls_interaction_invoke_ask_password ( Addressable interaction,  Addressable password,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$860.g_tls_interaction_invoke_ask_password$MH, "g_tls_interaction_invoke_ask_password");
        try {
            return (int)mh$.invokeExact(interaction, password, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_ask_password$MH() {
        return RuntimeHelper.requireNonNull(constants$860.g_tls_interaction_ask_password$MH,"g_tls_interaction_ask_password");
    }
    public static int g_tls_interaction_ask_password ( Addressable interaction,  Addressable password,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$860.g_tls_interaction_ask_password$MH, "g_tls_interaction_ask_password");
        try {
            return (int)mh$.invokeExact(interaction, password, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_ask_password_async$MH() {
        return RuntimeHelper.requireNonNull(constants$860.g_tls_interaction_ask_password_async$MH,"g_tls_interaction_ask_password_async");
    }
    public static void g_tls_interaction_ask_password_async ( Addressable interaction,  Addressable password,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$860.g_tls_interaction_ask_password_async$MH, "g_tls_interaction_ask_password_async");
        try {
            mh$.invokeExact(interaction, password, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_ask_password_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$860.g_tls_interaction_ask_password_finish$MH,"g_tls_interaction_ask_password_finish");
    }
    public static int g_tls_interaction_ask_password_finish ( Addressable interaction,  Addressable result,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$860.g_tls_interaction_ask_password_finish$MH, "g_tls_interaction_ask_password_finish");
        try {
            return (int)mh$.invokeExact(interaction, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_invoke_request_certificate$MH() {
        return RuntimeHelper.requireNonNull(constants$861.g_tls_interaction_invoke_request_certificate$MH,"g_tls_interaction_invoke_request_certificate");
    }
    public static int g_tls_interaction_invoke_request_certificate ( Addressable interaction,  Addressable connection,  int flags,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$861.g_tls_interaction_invoke_request_certificate$MH, "g_tls_interaction_invoke_request_certificate");
        try {
            return (int)mh$.invokeExact(interaction, connection, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_request_certificate$MH() {
        return RuntimeHelper.requireNonNull(constants$861.g_tls_interaction_request_certificate$MH,"g_tls_interaction_request_certificate");
    }
    public static int g_tls_interaction_request_certificate ( Addressable interaction,  Addressable connection,  int flags,  Addressable cancellable,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$861.g_tls_interaction_request_certificate$MH, "g_tls_interaction_request_certificate");
        try {
            return (int)mh$.invokeExact(interaction, connection, flags, cancellable, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_request_certificate_async$MH() {
        return RuntimeHelper.requireNonNull(constants$861.g_tls_interaction_request_certificate_async$MH,"g_tls_interaction_request_certificate_async");
    }
    public static void g_tls_interaction_request_certificate_async ( Addressable interaction,  Addressable connection,  int flags,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$861.g_tls_interaction_request_certificate_async$MH, "g_tls_interaction_request_certificate_async");
        try {
            mh$.invokeExact(interaction, connection, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_interaction_request_certificate_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$861.g_tls_interaction_request_certificate_finish$MH,"g_tls_interaction_request_certificate_finish");
    }
    public static int g_tls_interaction_request_certificate_finish ( Addressable interaction,  Addressable result,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$861.g_tls_interaction_request_certificate_finish$MH, "g_tls_interaction_request_certificate_finish");
        try {
            return (int)mh$.invokeExact(interaction, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$861.g_tls_password_get_type$MH,"g_tls_password_get_type");
    }
    public static long g_tls_password_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$861.g_tls_password_get_type$MH, "g_tls_password_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_new$MH() {
        return RuntimeHelper.requireNonNull(constants$861.g_tls_password_new$MH,"g_tls_password_new");
    }
    public static MemoryAddress g_tls_password_new ( int flags,  Addressable description) {
        var mh$ = RuntimeHelper.requireNonNull(constants$861.g_tls_password_new$MH, "g_tls_password_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(flags, description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_get_value$MH() {
        return RuntimeHelper.requireNonNull(constants$862.g_tls_password_get_value$MH,"g_tls_password_get_value");
    }
    public static MemoryAddress g_tls_password_get_value ( Addressable password,  Addressable length) {
        var mh$ = RuntimeHelper.requireNonNull(constants$862.g_tls_password_get_value$MH, "g_tls_password_get_value");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(password, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_set_value$MH() {
        return RuntimeHelper.requireNonNull(constants$862.g_tls_password_set_value$MH,"g_tls_password_set_value");
    }
    public static void g_tls_password_set_value ( Addressable password,  Addressable value,  long length) {
        var mh$ = RuntimeHelper.requireNonNull(constants$862.g_tls_password_set_value$MH, "g_tls_password_set_value");
        try {
            mh$.invokeExact(password, value, length);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_set_value_full$MH() {
        return RuntimeHelper.requireNonNull(constants$862.g_tls_password_set_value_full$MH,"g_tls_password_set_value_full");
    }
    public static void g_tls_password_set_value_full ( Addressable password,  Addressable value,  long length,  Addressable destroy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$862.g_tls_password_set_value_full$MH, "g_tls_password_set_value_full");
        try {
            mh$.invokeExact(password, value, length, destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_get_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$862.g_tls_password_get_flags$MH,"g_tls_password_get_flags");
    }
    public static int g_tls_password_get_flags ( Addressable password) {
        var mh$ = RuntimeHelper.requireNonNull(constants$862.g_tls_password_get_flags$MH, "g_tls_password_get_flags");
        try {
            return (int)mh$.invokeExact(password);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$862.g_tls_password_set_flags$MH,"g_tls_password_set_flags");
    }
    public static void g_tls_password_set_flags ( Addressable password,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$862.g_tls_password_set_flags$MH, "g_tls_password_set_flags");
        try {
            mh$.invokeExact(password, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_get_description$MH() {
        return RuntimeHelper.requireNonNull(constants$862.g_tls_password_get_description$MH,"g_tls_password_get_description");
    }
    public static MemoryAddress g_tls_password_get_description ( Addressable password) {
        var mh$ = RuntimeHelper.requireNonNull(constants$862.g_tls_password_get_description$MH, "g_tls_password_get_description");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(password);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_set_description$MH() {
        return RuntimeHelper.requireNonNull(constants$863.g_tls_password_set_description$MH,"g_tls_password_set_description");
    }
    public static void g_tls_password_set_description ( Addressable password,  Addressable description) {
        var mh$ = RuntimeHelper.requireNonNull(constants$863.g_tls_password_set_description$MH, "g_tls_password_set_description");
        try {
            mh$.invokeExact(password, description);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_get_warning$MH() {
        return RuntimeHelper.requireNonNull(constants$863.g_tls_password_get_warning$MH,"g_tls_password_get_warning");
    }
    public static MemoryAddress g_tls_password_get_warning ( Addressable password) {
        var mh$ = RuntimeHelper.requireNonNull(constants$863.g_tls_password_get_warning$MH, "g_tls_password_get_warning");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(password);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_password_set_warning$MH() {
        return RuntimeHelper.requireNonNull(constants$863.g_tls_password_set_warning$MH,"g_tls_password_set_warning");
    }
    public static void g_tls_password_set_warning ( Addressable password,  Addressable warning) {
        var mh$ = RuntimeHelper.requireNonNull(constants$863.g_tls_password_set_warning$MH, "g_tls_password_set_warning");
        try {
            mh$.invokeExact(password, warning);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_server_connection_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$863.g_tls_server_connection_get_type$MH,"g_tls_server_connection_get_type");
    }
    public static long g_tls_server_connection_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$863.g_tls_server_connection_get_type$MH, "g_tls_server_connection_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_tls_server_connection_new$MH() {
        return RuntimeHelper.requireNonNull(constants$863.g_tls_server_connection_new$MH,"g_tls_server_connection_new");
    }
    public static MemoryAddress g_tls_server_connection_new ( Addressable base_io_stream,  Addressable certificate,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$863.g_tls_server_connection_new$MH, "g_tls_server_connection_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(base_io_stream, certificate, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$864.g_vfs_get_type$MH,"g_vfs_get_type");
    }
    public static long g_vfs_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$864.g_vfs_get_type$MH, "g_vfs_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_is_active$MH() {
        return RuntimeHelper.requireNonNull(constants$864.g_vfs_is_active$MH,"g_vfs_is_active");
    }
    public static int g_vfs_is_active ( Addressable vfs) {
        var mh$ = RuntimeHelper.requireNonNull(constants$864.g_vfs_is_active$MH, "g_vfs_is_active");
        try {
            return (int)mh$.invokeExact(vfs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_get_file_for_path$MH() {
        return RuntimeHelper.requireNonNull(constants$864.g_vfs_get_file_for_path$MH,"g_vfs_get_file_for_path");
    }
    public static MemoryAddress g_vfs_get_file_for_path ( Addressable vfs,  Addressable path) {
        var mh$ = RuntimeHelper.requireNonNull(constants$864.g_vfs_get_file_for_path$MH, "g_vfs_get_file_for_path");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(vfs, path);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_get_file_for_uri$MH() {
        return RuntimeHelper.requireNonNull(constants$864.g_vfs_get_file_for_uri$MH,"g_vfs_get_file_for_uri");
    }
    public static MemoryAddress g_vfs_get_file_for_uri ( Addressable vfs,  Addressable uri) {
        var mh$ = RuntimeHelper.requireNonNull(constants$864.g_vfs_get_file_for_uri$MH, "g_vfs_get_file_for_uri");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(vfs, uri);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_get_supported_uri_schemes$MH() {
        return RuntimeHelper.requireNonNull(constants$864.g_vfs_get_supported_uri_schemes$MH,"g_vfs_get_supported_uri_schemes");
    }
    public static MemoryAddress g_vfs_get_supported_uri_schemes ( Addressable vfs) {
        var mh$ = RuntimeHelper.requireNonNull(constants$864.g_vfs_get_supported_uri_schemes$MH, "g_vfs_get_supported_uri_schemes");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(vfs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_parse_name$MH() {
        return RuntimeHelper.requireNonNull(constants$865.g_vfs_parse_name$MH,"g_vfs_parse_name");
    }
    public static MemoryAddress g_vfs_parse_name ( Addressable vfs,  Addressable parse_name) {
        var mh$ = RuntimeHelper.requireNonNull(constants$865.g_vfs_parse_name$MH, "g_vfs_parse_name");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(vfs, parse_name);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_get_default$MH() {
        return RuntimeHelper.requireNonNull(constants$865.g_vfs_get_default$MH,"g_vfs_get_default");
    }
    public static MemoryAddress g_vfs_get_default () {
        var mh$ = RuntimeHelper.requireNonNull(constants$865.g_vfs_get_default$MH, "g_vfs_get_default");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_get_local$MH() {
        return RuntimeHelper.requireNonNull(constants$865.g_vfs_get_local$MH,"g_vfs_get_local");
    }
    public static MemoryAddress g_vfs_get_local () {
        var mh$ = RuntimeHelper.requireNonNull(constants$865.g_vfs_get_local$MH, "g_vfs_get_local");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_register_uri_scheme$MH() {
        return RuntimeHelper.requireNonNull(constants$865.g_vfs_register_uri_scheme$MH,"g_vfs_register_uri_scheme");
    }
    public static int g_vfs_register_uri_scheme ( Addressable vfs,  Addressable scheme,  Addressable uri_func,  Addressable uri_data,  Addressable uri_destroy,  Addressable parse_name_func,  Addressable parse_name_data,  Addressable parse_name_destroy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$865.g_vfs_register_uri_scheme$MH, "g_vfs_register_uri_scheme");
        try {
            return (int)mh$.invokeExact(vfs, scheme, uri_func, uri_data, uri_destroy, parse_name_func, parse_name_data, parse_name_destroy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_vfs_unregister_uri_scheme$MH() {
        return RuntimeHelper.requireNonNull(constants$865.g_vfs_unregister_uri_scheme$MH,"g_vfs_unregister_uri_scheme");
    }
    public static int g_vfs_unregister_uri_scheme ( Addressable vfs,  Addressable scheme) {
        var mh$ = RuntimeHelper.requireNonNull(constants$865.g_vfs_unregister_uri_scheme$MH, "g_vfs_unregister_uri_scheme");
        try {
            return (int)mh$.invokeExact(vfs, scheme);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$865.g_volume_get_type$MH,"g_volume_get_type");
    }
    public static long g_volume_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$865.g_volume_get_type$MH, "g_volume_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_name$MH() {
        return RuntimeHelper.requireNonNull(constants$866.g_volume_get_name$MH,"g_volume_get_name");
    }
    public static MemoryAddress g_volume_get_name ( Addressable volume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$866.g_volume_get_name$MH, "g_volume_get_name");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$866.g_volume_get_icon$MH,"g_volume_get_icon");
    }
    public static MemoryAddress g_volume_get_icon ( Addressable volume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$866.g_volume_get_icon$MH, "g_volume_get_icon");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_symbolic_icon$MH() {
        return RuntimeHelper.requireNonNull(constants$866.g_volume_get_symbolic_icon$MH,"g_volume_get_symbolic_icon");
    }
    public static MemoryAddress g_volume_get_symbolic_icon ( Addressable volume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$866.g_volume_get_symbolic_icon$MH, "g_volume_get_symbolic_icon");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_uuid$MH() {
        return RuntimeHelper.requireNonNull(constants$866.g_volume_get_uuid$MH,"g_volume_get_uuid");
    }
    public static MemoryAddress g_volume_get_uuid ( Addressable volume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$866.g_volume_get_uuid$MH, "g_volume_get_uuid");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_drive$MH() {
        return RuntimeHelper.requireNonNull(constants$866.g_volume_get_drive$MH,"g_volume_get_drive");
    }
    public static MemoryAddress g_volume_get_drive ( Addressable volume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$866.g_volume_get_drive$MH, "g_volume_get_drive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_mount$MH() {
        return RuntimeHelper.requireNonNull(constants$866.g_volume_get_mount$MH,"g_volume_get_mount");
    }
    public static MemoryAddress g_volume_get_mount ( Addressable volume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$866.g_volume_get_mount$MH, "g_volume_get_mount");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_can_mount$MH() {
        return RuntimeHelper.requireNonNull(constants$867.g_volume_can_mount$MH,"g_volume_can_mount");
    }
    public static int g_volume_can_mount ( Addressable volume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$867.g_volume_can_mount$MH, "g_volume_can_mount");
        try {
            return (int)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_can_eject$MH() {
        return RuntimeHelper.requireNonNull(constants$867.g_volume_can_eject$MH,"g_volume_can_eject");
    }
    public static int g_volume_can_eject ( Addressable volume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$867.g_volume_can_eject$MH, "g_volume_can_eject");
        try {
            return (int)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_should_automount$MH() {
        return RuntimeHelper.requireNonNull(constants$867.g_volume_should_automount$MH,"g_volume_should_automount");
    }
    public static int g_volume_should_automount ( Addressable volume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$867.g_volume_should_automount$MH, "g_volume_should_automount");
        try {
            return (int)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_mount$MH() {
        return RuntimeHelper.requireNonNull(constants$867.g_volume_mount$MH,"g_volume_mount");
    }
    public static void g_volume_mount ( Addressable volume,  int flags,  Addressable mount_operation,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$867.g_volume_mount$MH, "g_volume_mount");
        try {
            mh$.invokeExact(volume, flags, mount_operation, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_mount_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$867.g_volume_mount_finish$MH,"g_volume_mount_finish");
    }
    public static int g_volume_mount_finish ( Addressable volume,  Addressable result,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$867.g_volume_mount_finish$MH, "g_volume_mount_finish");
        try {
            return (int)mh$.invokeExact(volume, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_eject$MH() {
        return RuntimeHelper.requireNonNull(constants$867.g_volume_eject$MH,"g_volume_eject");
    }
    public static void g_volume_eject ( Addressable volume,  int flags,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$867.g_volume_eject$MH, "g_volume_eject");
        try {
            mh$.invokeExact(volume, flags, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_eject_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$868.g_volume_eject_finish$MH,"g_volume_eject_finish");
    }
    public static int g_volume_eject_finish ( Addressable volume,  Addressable result,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$868.g_volume_eject_finish$MH, "g_volume_eject_finish");
        try {
            return (int)mh$.invokeExact(volume, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_identifier$MH() {
        return RuntimeHelper.requireNonNull(constants$868.g_volume_get_identifier$MH,"g_volume_get_identifier");
    }
    public static MemoryAddress g_volume_get_identifier ( Addressable volume,  Addressable kind) {
        var mh$ = RuntimeHelper.requireNonNull(constants$868.g_volume_get_identifier$MH, "g_volume_get_identifier");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(volume, kind);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_enumerate_identifiers$MH() {
        return RuntimeHelper.requireNonNull(constants$868.g_volume_enumerate_identifiers$MH,"g_volume_enumerate_identifiers");
    }
    public static MemoryAddress g_volume_enumerate_identifiers ( Addressable volume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$868.g_volume_enumerate_identifiers$MH, "g_volume_enumerate_identifiers");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_activation_root$MH() {
        return RuntimeHelper.requireNonNull(constants$868.g_volume_get_activation_root$MH,"g_volume_get_activation_root");
    }
    public static MemoryAddress g_volume_get_activation_root ( Addressable volume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$868.g_volume_get_activation_root$MH, "g_volume_get_activation_root");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_eject_with_operation$MH() {
        return RuntimeHelper.requireNonNull(constants$868.g_volume_eject_with_operation$MH,"g_volume_eject_with_operation");
    }
    public static void g_volume_eject_with_operation ( Addressable volume,  int flags,  Addressable mount_operation,  Addressable cancellable,  Addressable callback,  Addressable user_data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$868.g_volume_eject_with_operation$MH, "g_volume_eject_with_operation");
        try {
            mh$.invokeExact(volume, flags, mount_operation, cancellable, callback, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_eject_with_operation_finish$MH() {
        return RuntimeHelper.requireNonNull(constants$868.g_volume_eject_with_operation_finish$MH,"g_volume_eject_with_operation_finish");
    }
    public static int g_volume_eject_with_operation_finish ( Addressable volume,  Addressable result,  Addressable error) {
        var mh$ = RuntimeHelper.requireNonNull(constants$868.g_volume_eject_with_operation_finish$MH, "g_volume_eject_with_operation_finish");
        try {
            return (int)mh$.invokeExact(volume, result, error);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_volume_get_sort_key$MH() {
        return RuntimeHelper.requireNonNull(constants$869.g_volume_get_sort_key$MH,"g_volume_get_sort_key");
    }
    public static MemoryAddress g_volume_get_sort_key ( Addressable volume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$869.g_volume_get_sort_key$MH, "g_volume_get_sort_key");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(volume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_compressor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$869.g_zlib_compressor_get_type$MH,"g_zlib_compressor_get_type");
    }
    public static long g_zlib_compressor_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$869.g_zlib_compressor_get_type$MH, "g_zlib_compressor_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_compressor_new$MH() {
        return RuntimeHelper.requireNonNull(constants$869.g_zlib_compressor_new$MH,"g_zlib_compressor_new");
    }
    public static MemoryAddress g_zlib_compressor_new ( int format,  int level) {
        var mh$ = RuntimeHelper.requireNonNull(constants$869.g_zlib_compressor_new$MH, "g_zlib_compressor_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(format, level);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_compressor_get_file_info$MH() {
        return RuntimeHelper.requireNonNull(constants$869.g_zlib_compressor_get_file_info$MH,"g_zlib_compressor_get_file_info");
    }
    public static MemoryAddress g_zlib_compressor_get_file_info ( Addressable compressor) {
        var mh$ = RuntimeHelper.requireNonNull(constants$869.g_zlib_compressor_get_file_info$MH, "g_zlib_compressor_get_file_info");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(compressor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_compressor_set_file_info$MH() {
        return RuntimeHelper.requireNonNull(constants$869.g_zlib_compressor_set_file_info$MH,"g_zlib_compressor_set_file_info");
    }
    public static void g_zlib_compressor_set_file_info ( Addressable compressor,  Addressable file_info) {
        var mh$ = RuntimeHelper.requireNonNull(constants$869.g_zlib_compressor_set_file_info$MH, "g_zlib_compressor_set_file_info");
        try {
            mh$.invokeExact(compressor, file_info);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_decompressor_get_type$MH() {
        return RuntimeHelper.requireNonNull(constants$869.g_zlib_decompressor_get_type$MH,"g_zlib_decompressor_get_type");
    }
    public static long g_zlib_decompressor_get_type () {
        var mh$ = RuntimeHelper.requireNonNull(constants$869.g_zlib_decompressor_get_type$MH, "g_zlib_decompressor_get_type");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_decompressor_new$MH() {
        return RuntimeHelper.requireNonNull(constants$870.g_zlib_decompressor_new$MH,"g_zlib_decompressor_new");
    }
    public static MemoryAddress g_zlib_decompressor_new ( int format) {
        var mh$ = RuntimeHelper.requireNonNull(constants$870.g_zlib_decompressor_new$MH, "g_zlib_decompressor_new");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle g_zlib_decompressor_get_file_info$MH() {
        return RuntimeHelper.requireNonNull(constants$870.g_zlib_decompressor_get_file_info$MH,"g_zlib_decompressor_get_file_info");
    }
    public static MemoryAddress g_zlib_decompressor_get_file_info ( Addressable decompressor) {
        var mh$ = RuntimeHelper.requireNonNull(constants$870.g_zlib_decompressor_get_file_info$MH, "g_zlib_decompressor_get_file_info");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(decompressor);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GAction$MH() {
        return RuntimeHelper.requireNonNull(constants$870.glib_autoptr_clear_GAction$MH,"glib_autoptr_clear_GAction");
    }
    public static void glib_autoptr_clear_GAction ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$870.glib_autoptr_clear_GAction$MH, "glib_autoptr_clear_GAction");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GAction$MH() {
        return RuntimeHelper.requireNonNull(constants$870.glib_autoptr_cleanup_GAction$MH,"glib_autoptr_cleanup_GAction");
    }
    public static void glib_autoptr_cleanup_GAction ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$870.glib_autoptr_cleanup_GAction$MH, "glib_autoptr_cleanup_GAction");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GAction$MH() {
        return RuntimeHelper.requireNonNull(constants$870.glib_listautoptr_cleanup_GAction$MH,"glib_listautoptr_cleanup_GAction");
    }
    public static void glib_listautoptr_cleanup_GAction ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$870.glib_listautoptr_cleanup_GAction$MH, "glib_listautoptr_cleanup_GAction");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GAction$MH() {
        return RuntimeHelper.requireNonNull(constants$870.glib_slistautoptr_cleanup_GAction$MH,"glib_slistautoptr_cleanup_GAction");
    }
    public static void glib_slistautoptr_cleanup_GAction ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$870.glib_slistautoptr_cleanup_GAction$MH, "glib_slistautoptr_cleanup_GAction");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GAction$MH() {
        return RuntimeHelper.requireNonNull(constants$871.glib_queueautoptr_cleanup_GAction$MH,"glib_queueautoptr_cleanup_GAction");
    }
    public static void glib_queueautoptr_cleanup_GAction ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$871.glib_queueautoptr_cleanup_GAction$MH, "glib_queueautoptr_cleanup_GAction");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GActionMap_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GActionMap_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GActionMap_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GActionMap_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GActionMap$MH() {
        return RuntimeHelper.requireNonNull(constants$871.glib_autoptr_clear_GActionMap$MH,"glib_autoptr_clear_GActionMap");
    }
    public static void glib_autoptr_clear_GActionMap ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$871.glib_autoptr_clear_GActionMap$MH, "glib_autoptr_clear_GActionMap");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GActionMap$MH() {
        return RuntimeHelper.requireNonNull(constants$871.glib_autoptr_cleanup_GActionMap$MH,"glib_autoptr_cleanup_GActionMap");
    }
    public static void glib_autoptr_cleanup_GActionMap ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$871.glib_autoptr_cleanup_GActionMap$MH, "glib_autoptr_cleanup_GActionMap");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GActionMap$MH() {
        return RuntimeHelper.requireNonNull(constants$871.glib_listautoptr_cleanup_GActionMap$MH,"glib_listautoptr_cleanup_GActionMap");
    }
    public static void glib_listautoptr_cleanup_GActionMap ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$871.glib_listautoptr_cleanup_GActionMap$MH, "glib_listautoptr_cleanup_GActionMap");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GActionMap$MH() {
        return RuntimeHelper.requireNonNull(constants$871.glib_slistautoptr_cleanup_GActionMap$MH,"glib_slistautoptr_cleanup_GActionMap");
    }
    public static void glib_slistautoptr_cleanup_GActionMap ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$871.glib_slistautoptr_cleanup_GActionMap$MH, "glib_slistautoptr_cleanup_GActionMap");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GActionMap$MH() {
        return RuntimeHelper.requireNonNull(constants$871.glib_queueautoptr_cleanup_GActionMap$MH,"glib_queueautoptr_cleanup_GActionMap");
    }
    public static void glib_queueautoptr_cleanup_GActionMap ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$871.glib_queueautoptr_cleanup_GActionMap$MH, "glib_queueautoptr_cleanup_GActionMap");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GAppInfo_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAppInfo_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAppInfo_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAppInfo_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GAppInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$872.glib_autoptr_clear_GAppInfo$MH,"glib_autoptr_clear_GAppInfo");
    }
    public static void glib_autoptr_clear_GAppInfo ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$872.glib_autoptr_clear_GAppInfo$MH, "glib_autoptr_clear_GAppInfo");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GAppInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$872.glib_autoptr_cleanup_GAppInfo$MH,"glib_autoptr_cleanup_GAppInfo");
    }
    public static void glib_autoptr_cleanup_GAppInfo ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$872.glib_autoptr_cleanup_GAppInfo$MH, "glib_autoptr_cleanup_GAppInfo");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GAppInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$872.glib_listautoptr_cleanup_GAppInfo$MH,"glib_listautoptr_cleanup_GAppInfo");
    }
    public static void glib_listautoptr_cleanup_GAppInfo ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$872.glib_listautoptr_cleanup_GAppInfo$MH, "glib_listautoptr_cleanup_GAppInfo");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GAppInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$872.glib_slistautoptr_cleanup_GAppInfo$MH,"glib_slistautoptr_cleanup_GAppInfo");
    }
    public static void glib_slistautoptr_cleanup_GAppInfo ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$872.glib_slistautoptr_cleanup_GAppInfo$MH, "glib_slistautoptr_cleanup_GAppInfo");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GAppInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$872.glib_queueautoptr_cleanup_GAppInfo$MH,"glib_queueautoptr_cleanup_GAppInfo");
    }
    public static void glib_queueautoptr_cleanup_GAppInfo ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$872.glib_queueautoptr_cleanup_GAppInfo$MH, "glib_queueautoptr_cleanup_GAppInfo");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GAppLaunchContext_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAppLaunchContext_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAppLaunchContext_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAppLaunchContext_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GAppLaunchContext$MH() {
        return RuntimeHelper.requireNonNull(constants$872.glib_autoptr_clear_GAppLaunchContext$MH,"glib_autoptr_clear_GAppLaunchContext");
    }
    public static void glib_autoptr_clear_GAppLaunchContext ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$872.glib_autoptr_clear_GAppLaunchContext$MH, "glib_autoptr_clear_GAppLaunchContext");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GAppLaunchContext$MH() {
        return RuntimeHelper.requireNonNull(constants$873.glib_autoptr_cleanup_GAppLaunchContext$MH,"glib_autoptr_cleanup_GAppLaunchContext");
    }
    public static void glib_autoptr_cleanup_GAppLaunchContext ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$873.glib_autoptr_cleanup_GAppLaunchContext$MH, "glib_autoptr_cleanup_GAppLaunchContext");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GAppLaunchContext$MH() {
        return RuntimeHelper.requireNonNull(constants$873.glib_listautoptr_cleanup_GAppLaunchContext$MH,"glib_listautoptr_cleanup_GAppLaunchContext");
    }
    public static void glib_listautoptr_cleanup_GAppLaunchContext ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$873.glib_listautoptr_cleanup_GAppLaunchContext$MH, "glib_listautoptr_cleanup_GAppLaunchContext");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GAppLaunchContext$MH() {
        return RuntimeHelper.requireNonNull(constants$873.glib_slistautoptr_cleanup_GAppLaunchContext$MH,"glib_slistautoptr_cleanup_GAppLaunchContext");
    }
    public static void glib_slistautoptr_cleanup_GAppLaunchContext ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$873.glib_slistautoptr_cleanup_GAppLaunchContext$MH, "glib_slistautoptr_cleanup_GAppLaunchContext");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GAppLaunchContext$MH() {
        return RuntimeHelper.requireNonNull(constants$873.glib_queueautoptr_cleanup_GAppLaunchContext$MH,"glib_queueautoptr_cleanup_GAppLaunchContext");
    }
    public static void glib_queueautoptr_cleanup_GAppLaunchContext ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$873.glib_queueautoptr_cleanup_GAppLaunchContext$MH, "glib_queueautoptr_cleanup_GAppLaunchContext");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GAppInfoMonitor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAppInfoMonitor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAppInfoMonitor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAppInfoMonitor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GAppInfoMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$873.glib_autoptr_clear_GAppInfoMonitor$MH,"glib_autoptr_clear_GAppInfoMonitor");
    }
    public static void glib_autoptr_clear_GAppInfoMonitor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$873.glib_autoptr_clear_GAppInfoMonitor$MH, "glib_autoptr_clear_GAppInfoMonitor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GAppInfoMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$873.glib_autoptr_cleanup_GAppInfoMonitor$MH,"glib_autoptr_cleanup_GAppInfoMonitor");
    }
    public static void glib_autoptr_cleanup_GAppInfoMonitor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$873.glib_autoptr_cleanup_GAppInfoMonitor$MH, "glib_autoptr_cleanup_GAppInfoMonitor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GAppInfoMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$874.glib_listautoptr_cleanup_GAppInfoMonitor$MH,"glib_listautoptr_cleanup_GAppInfoMonitor");
    }
    public static void glib_listautoptr_cleanup_GAppInfoMonitor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$874.glib_listautoptr_cleanup_GAppInfoMonitor$MH, "glib_listautoptr_cleanup_GAppInfoMonitor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GAppInfoMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$874.glib_slistautoptr_cleanup_GAppInfoMonitor$MH,"glib_slistautoptr_cleanup_GAppInfoMonitor");
    }
    public static void glib_slistautoptr_cleanup_GAppInfoMonitor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$874.glib_slistautoptr_cleanup_GAppInfoMonitor$MH, "glib_slistautoptr_cleanup_GAppInfoMonitor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GAppInfoMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$874.glib_queueautoptr_cleanup_GAppInfoMonitor$MH,"glib_queueautoptr_cleanup_GAppInfoMonitor");
    }
    public static void glib_queueautoptr_cleanup_GAppInfoMonitor ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$874.glib_queueautoptr_cleanup_GAppInfoMonitor$MH, "glib_queueautoptr_cleanup_GAppInfoMonitor");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GApplicationCommandLine_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GApplicationCommandLine_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GApplicationCommandLine_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GApplicationCommandLine_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GApplicationCommandLine$MH() {
        return RuntimeHelper.requireNonNull(constants$874.glib_autoptr_clear_GApplicationCommandLine$MH,"glib_autoptr_clear_GApplicationCommandLine");
    }
    public static void glib_autoptr_clear_GApplicationCommandLine ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$874.glib_autoptr_clear_GApplicationCommandLine$MH, "glib_autoptr_clear_GApplicationCommandLine");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GApplicationCommandLine$MH() {
        return RuntimeHelper.requireNonNull(constants$874.glib_autoptr_cleanup_GApplicationCommandLine$MH,"glib_autoptr_cleanup_GApplicationCommandLine");
    }
    public static void glib_autoptr_cleanup_GApplicationCommandLine ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$874.glib_autoptr_cleanup_GApplicationCommandLine$MH, "glib_autoptr_cleanup_GApplicationCommandLine");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GApplicationCommandLine$MH() {
        return RuntimeHelper.requireNonNull(constants$874.glib_listautoptr_cleanup_GApplicationCommandLine$MH,"glib_listautoptr_cleanup_GApplicationCommandLine");
    }
    public static void glib_listautoptr_cleanup_GApplicationCommandLine ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$874.glib_listautoptr_cleanup_GApplicationCommandLine$MH, "glib_listautoptr_cleanup_GApplicationCommandLine");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GApplicationCommandLine$MH() {
        return RuntimeHelper.requireNonNull(constants$875.glib_slistautoptr_cleanup_GApplicationCommandLine$MH,"glib_slistautoptr_cleanup_GApplicationCommandLine");
    }
    public static void glib_slistautoptr_cleanup_GApplicationCommandLine ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$875.glib_slistautoptr_cleanup_GApplicationCommandLine$MH, "glib_slistautoptr_cleanup_GApplicationCommandLine");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GApplicationCommandLine$MH() {
        return RuntimeHelper.requireNonNull(constants$875.glib_queueautoptr_cleanup_GApplicationCommandLine$MH,"glib_queueautoptr_cleanup_GApplicationCommandLine");
    }
    public static void glib_queueautoptr_cleanup_GApplicationCommandLine ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$875.glib_queueautoptr_cleanup_GApplicationCommandLine$MH, "glib_queueautoptr_cleanup_GApplicationCommandLine");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GApplication_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GApplication_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GApplication_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GApplication_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GApplication$MH() {
        return RuntimeHelper.requireNonNull(constants$875.glib_autoptr_clear_GApplication$MH,"glib_autoptr_clear_GApplication");
    }
    public static void glib_autoptr_clear_GApplication ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$875.glib_autoptr_clear_GApplication$MH, "glib_autoptr_clear_GApplication");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GApplication$MH() {
        return RuntimeHelper.requireNonNull(constants$875.glib_autoptr_cleanup_GApplication$MH,"glib_autoptr_cleanup_GApplication");
    }
    public static void glib_autoptr_cleanup_GApplication ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$875.glib_autoptr_cleanup_GApplication$MH, "glib_autoptr_cleanup_GApplication");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GApplication$MH() {
        return RuntimeHelper.requireNonNull(constants$875.glib_listautoptr_cleanup_GApplication$MH,"glib_listautoptr_cleanup_GApplication");
    }
    public static void glib_listautoptr_cleanup_GApplication ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$875.glib_listautoptr_cleanup_GApplication$MH, "glib_listautoptr_cleanup_GApplication");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GApplication$MH() {
        return RuntimeHelper.requireNonNull(constants$875.glib_slistautoptr_cleanup_GApplication$MH,"glib_slistautoptr_cleanup_GApplication");
    }
    public static void glib_slistautoptr_cleanup_GApplication ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$875.glib_slistautoptr_cleanup_GApplication$MH, "glib_slistautoptr_cleanup_GApplication");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GApplication$MH() {
        return RuntimeHelper.requireNonNull(constants$876.glib_queueautoptr_cleanup_GApplication$MH,"glib_queueautoptr_cleanup_GApplication");
    }
    public static void glib_queueautoptr_cleanup_GApplication ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$876.glib_queueautoptr_cleanup_GApplication$MH, "glib_queueautoptr_cleanup_GApplication");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GAsyncInitable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAsyncInitable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAsyncInitable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAsyncInitable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GAsyncInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$876.glib_autoptr_clear_GAsyncInitable$MH,"glib_autoptr_clear_GAsyncInitable");
    }
    public static void glib_autoptr_clear_GAsyncInitable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$876.glib_autoptr_clear_GAsyncInitable$MH, "glib_autoptr_clear_GAsyncInitable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GAsyncInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$876.glib_autoptr_cleanup_GAsyncInitable$MH,"glib_autoptr_cleanup_GAsyncInitable");
    }
    public static void glib_autoptr_cleanup_GAsyncInitable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$876.glib_autoptr_cleanup_GAsyncInitable$MH, "glib_autoptr_cleanup_GAsyncInitable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GAsyncInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$876.glib_listautoptr_cleanup_GAsyncInitable$MH,"glib_listautoptr_cleanup_GAsyncInitable");
    }
    public static void glib_listautoptr_cleanup_GAsyncInitable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$876.glib_listautoptr_cleanup_GAsyncInitable$MH, "glib_listautoptr_cleanup_GAsyncInitable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GAsyncInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$876.glib_slistautoptr_cleanup_GAsyncInitable$MH,"glib_slistautoptr_cleanup_GAsyncInitable");
    }
    public static void glib_slistautoptr_cleanup_GAsyncInitable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$876.glib_slistautoptr_cleanup_GAsyncInitable$MH, "glib_slistautoptr_cleanup_GAsyncInitable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GAsyncInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$876.glib_queueautoptr_cleanup_GAsyncInitable$MH,"glib_queueautoptr_cleanup_GAsyncInitable");
    }
    public static void glib_queueautoptr_cleanup_GAsyncInitable ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$876.glib_queueautoptr_cleanup_GAsyncInitable$MH, "glib_queueautoptr_cleanup_GAsyncInitable");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GAsyncResult_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAsyncResult_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAsyncResult_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GAsyncResult_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$877.glib_autoptr_clear_GAsyncResult$MH,"glib_autoptr_clear_GAsyncResult");
    }
    public static void glib_autoptr_clear_GAsyncResult ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$877.glib_autoptr_clear_GAsyncResult$MH, "glib_autoptr_clear_GAsyncResult");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$877.glib_autoptr_cleanup_GAsyncResult$MH,"glib_autoptr_cleanup_GAsyncResult");
    }
    public static void glib_autoptr_cleanup_GAsyncResult ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$877.glib_autoptr_cleanup_GAsyncResult$MH, "glib_autoptr_cleanup_GAsyncResult");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$877.glib_listautoptr_cleanup_GAsyncResult$MH,"glib_listautoptr_cleanup_GAsyncResult");
    }
    public static void glib_listautoptr_cleanup_GAsyncResult ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$877.glib_listautoptr_cleanup_GAsyncResult$MH, "glib_listautoptr_cleanup_GAsyncResult");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$877.glib_slistautoptr_cleanup_GAsyncResult$MH,"glib_slistautoptr_cleanup_GAsyncResult");
    }
    public static void glib_slistautoptr_cleanup_GAsyncResult ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$877.glib_slistautoptr_cleanup_GAsyncResult$MH, "glib_slistautoptr_cleanup_GAsyncResult");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$877.glib_queueautoptr_cleanup_GAsyncResult$MH,"glib_queueautoptr_cleanup_GAsyncResult");
    }
    public static void glib_queueautoptr_cleanup_GAsyncResult ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$877.glib_queueautoptr_cleanup_GAsyncResult$MH, "glib_queueautoptr_cleanup_GAsyncResult");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GBufferedInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GBufferedInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GBufferedInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GBufferedInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GBufferedInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$877.glib_autoptr_clear_GBufferedInputStream$MH,"glib_autoptr_clear_GBufferedInputStream");
    }
    public static void glib_autoptr_clear_GBufferedInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$877.glib_autoptr_clear_GBufferedInputStream$MH, "glib_autoptr_clear_GBufferedInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GBufferedInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$878.glib_autoptr_cleanup_GBufferedInputStream$MH,"glib_autoptr_cleanup_GBufferedInputStream");
    }
    public static void glib_autoptr_cleanup_GBufferedInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$878.glib_autoptr_cleanup_GBufferedInputStream$MH, "glib_autoptr_cleanup_GBufferedInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GBufferedInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$878.glib_listautoptr_cleanup_GBufferedInputStream$MH,"glib_listautoptr_cleanup_GBufferedInputStream");
    }
    public static void glib_listautoptr_cleanup_GBufferedInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$878.glib_listautoptr_cleanup_GBufferedInputStream$MH, "glib_listautoptr_cleanup_GBufferedInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GBufferedInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$878.glib_slistautoptr_cleanup_GBufferedInputStream$MH,"glib_slistautoptr_cleanup_GBufferedInputStream");
    }
    public static void glib_slistautoptr_cleanup_GBufferedInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$878.glib_slistautoptr_cleanup_GBufferedInputStream$MH, "glib_slistautoptr_cleanup_GBufferedInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GBufferedInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$878.glib_queueautoptr_cleanup_GBufferedInputStream$MH,"glib_queueautoptr_cleanup_GBufferedInputStream");
    }
    public static void glib_queueautoptr_cleanup_GBufferedInputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$878.glib_queueautoptr_cleanup_GBufferedInputStream$MH, "glib_queueautoptr_cleanup_GBufferedInputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GBufferedOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GBufferedOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GBufferedOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GBufferedOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GBufferedOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$878.glib_autoptr_clear_GBufferedOutputStream$MH,"glib_autoptr_clear_GBufferedOutputStream");
    }
    public static void glib_autoptr_clear_GBufferedOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$878.glib_autoptr_clear_GBufferedOutputStream$MH, "glib_autoptr_clear_GBufferedOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GBufferedOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$878.glib_autoptr_cleanup_GBufferedOutputStream$MH,"glib_autoptr_cleanup_GBufferedOutputStream");
    }
    public static void glib_autoptr_cleanup_GBufferedOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$878.glib_autoptr_cleanup_GBufferedOutputStream$MH, "glib_autoptr_cleanup_GBufferedOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GBufferedOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$879.glib_listautoptr_cleanup_GBufferedOutputStream$MH,"glib_listautoptr_cleanup_GBufferedOutputStream");
    }
    public static void glib_listautoptr_cleanup_GBufferedOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$879.glib_listautoptr_cleanup_GBufferedOutputStream$MH, "glib_listautoptr_cleanup_GBufferedOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GBufferedOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$879.glib_slistautoptr_cleanup_GBufferedOutputStream$MH,"glib_slistautoptr_cleanup_GBufferedOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GBufferedOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$879.glib_slistautoptr_cleanup_GBufferedOutputStream$MH, "glib_slistautoptr_cleanup_GBufferedOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GBufferedOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$879.glib_queueautoptr_cleanup_GBufferedOutputStream$MH,"glib_queueautoptr_cleanup_GBufferedOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GBufferedOutputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$879.glib_queueautoptr_cleanup_GBufferedOutputStream$MH, "glib_queueautoptr_cleanup_GBufferedOutputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GBytesIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GBytesIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GBytesIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GBytesIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GBytesIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$879.glib_autoptr_clear_GBytesIcon$MH,"glib_autoptr_clear_GBytesIcon");
    }
    public static void glib_autoptr_clear_GBytesIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$879.glib_autoptr_clear_GBytesIcon$MH, "glib_autoptr_clear_GBytesIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GBytesIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$879.glib_autoptr_cleanup_GBytesIcon$MH,"glib_autoptr_cleanup_GBytesIcon");
    }
    public static void glib_autoptr_cleanup_GBytesIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$879.glib_autoptr_cleanup_GBytesIcon$MH, "glib_autoptr_cleanup_GBytesIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GBytesIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$879.glib_listautoptr_cleanup_GBytesIcon$MH,"glib_listautoptr_cleanup_GBytesIcon");
    }
    public static void glib_listautoptr_cleanup_GBytesIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$879.glib_listautoptr_cleanup_GBytesIcon$MH, "glib_listautoptr_cleanup_GBytesIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GBytesIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$880.glib_slistautoptr_cleanup_GBytesIcon$MH,"glib_slistautoptr_cleanup_GBytesIcon");
    }
    public static void glib_slistautoptr_cleanup_GBytesIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$880.glib_slistautoptr_cleanup_GBytesIcon$MH, "glib_slistautoptr_cleanup_GBytesIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GBytesIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$880.glib_queueautoptr_cleanup_GBytesIcon$MH,"glib_queueautoptr_cleanup_GBytesIcon");
    }
    public static void glib_queueautoptr_cleanup_GBytesIcon ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$880.glib_queueautoptr_cleanup_GBytesIcon$MH, "glib_queueautoptr_cleanup_GBytesIcon");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GCancellable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GCancellable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GCancellable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GCancellable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GCancellable$MH() {
        return RuntimeHelper.requireNonNull(constants$880.glib_autoptr_clear_GCancellable$MH,"glib_autoptr_clear_GCancellable");
    }
    public static void glib_autoptr_clear_GCancellable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$880.glib_autoptr_clear_GCancellable$MH, "glib_autoptr_clear_GCancellable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GCancellable$MH() {
        return RuntimeHelper.requireNonNull(constants$880.glib_autoptr_cleanup_GCancellable$MH,"glib_autoptr_cleanup_GCancellable");
    }
    public static void glib_autoptr_cleanup_GCancellable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$880.glib_autoptr_cleanup_GCancellable$MH, "glib_autoptr_cleanup_GCancellable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GCancellable$MH() {
        return RuntimeHelper.requireNonNull(constants$880.glib_listautoptr_cleanup_GCancellable$MH,"glib_listautoptr_cleanup_GCancellable");
    }
    public static void glib_listautoptr_cleanup_GCancellable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$880.glib_listautoptr_cleanup_GCancellable$MH, "glib_listautoptr_cleanup_GCancellable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GCancellable$MH() {
        return RuntimeHelper.requireNonNull(constants$880.glib_slistautoptr_cleanup_GCancellable$MH,"glib_slistautoptr_cleanup_GCancellable");
    }
    public static void glib_slistautoptr_cleanup_GCancellable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$880.glib_slistautoptr_cleanup_GCancellable$MH, "glib_slistautoptr_cleanup_GCancellable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GCancellable$MH() {
        return RuntimeHelper.requireNonNull(constants$881.glib_queueautoptr_cleanup_GCancellable$MH,"glib_queueautoptr_cleanup_GCancellable");
    }
    public static void glib_queueautoptr_cleanup_GCancellable ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$881.glib_queueautoptr_cleanup_GCancellable$MH, "glib_queueautoptr_cleanup_GCancellable");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GCharsetConverter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GCharsetConverter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GCharsetConverter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GCharsetConverter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GCharsetConverter$MH() {
        return RuntimeHelper.requireNonNull(constants$881.glib_autoptr_clear_GCharsetConverter$MH,"glib_autoptr_clear_GCharsetConverter");
    }
    public static void glib_autoptr_clear_GCharsetConverter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$881.glib_autoptr_clear_GCharsetConverter$MH, "glib_autoptr_clear_GCharsetConverter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GCharsetConverter$MH() {
        return RuntimeHelper.requireNonNull(constants$881.glib_autoptr_cleanup_GCharsetConverter$MH,"glib_autoptr_cleanup_GCharsetConverter");
    }
    public static void glib_autoptr_cleanup_GCharsetConverter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$881.glib_autoptr_cleanup_GCharsetConverter$MH, "glib_autoptr_cleanup_GCharsetConverter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GCharsetConverter$MH() {
        return RuntimeHelper.requireNonNull(constants$881.glib_listautoptr_cleanup_GCharsetConverter$MH,"glib_listautoptr_cleanup_GCharsetConverter");
    }
    public static void glib_listautoptr_cleanup_GCharsetConverter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$881.glib_listautoptr_cleanup_GCharsetConverter$MH, "glib_listautoptr_cleanup_GCharsetConverter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GCharsetConverter$MH() {
        return RuntimeHelper.requireNonNull(constants$881.glib_slistautoptr_cleanup_GCharsetConverter$MH,"glib_slistautoptr_cleanup_GCharsetConverter");
    }
    public static void glib_slistautoptr_cleanup_GCharsetConverter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$881.glib_slistautoptr_cleanup_GCharsetConverter$MH, "glib_slistautoptr_cleanup_GCharsetConverter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GCharsetConverter$MH() {
        return RuntimeHelper.requireNonNull(constants$881.glib_queueautoptr_cleanup_GCharsetConverter$MH,"glib_queueautoptr_cleanup_GCharsetConverter");
    }
    public static void glib_queueautoptr_cleanup_GCharsetConverter ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$881.glib_queueautoptr_cleanup_GCharsetConverter$MH, "glib_queueautoptr_cleanup_GCharsetConverter");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GConverter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GConverter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GConverter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GConverter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GConverter$MH() {
        return RuntimeHelper.requireNonNull(constants$882.glib_autoptr_clear_GConverter$MH,"glib_autoptr_clear_GConverter");
    }
    public static void glib_autoptr_clear_GConverter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$882.glib_autoptr_clear_GConverter$MH, "glib_autoptr_clear_GConverter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GConverter$MH() {
        return RuntimeHelper.requireNonNull(constants$882.glib_autoptr_cleanup_GConverter$MH,"glib_autoptr_cleanup_GConverter");
    }
    public static void glib_autoptr_cleanup_GConverter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$882.glib_autoptr_cleanup_GConverter$MH, "glib_autoptr_cleanup_GConverter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GConverter$MH() {
        return RuntimeHelper.requireNonNull(constants$882.glib_listautoptr_cleanup_GConverter$MH,"glib_listautoptr_cleanup_GConverter");
    }
    public static void glib_listautoptr_cleanup_GConverter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$882.glib_listautoptr_cleanup_GConverter$MH, "glib_listautoptr_cleanup_GConverter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GConverter$MH() {
        return RuntimeHelper.requireNonNull(constants$882.glib_slistautoptr_cleanup_GConverter$MH,"glib_slistautoptr_cleanup_GConverter");
    }
    public static void glib_slistautoptr_cleanup_GConverter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$882.glib_slistautoptr_cleanup_GConverter$MH, "glib_slistautoptr_cleanup_GConverter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GConverter$MH() {
        return RuntimeHelper.requireNonNull(constants$882.glib_queueautoptr_cleanup_GConverter$MH,"glib_queueautoptr_cleanup_GConverter");
    }
    public static void glib_queueautoptr_cleanup_GConverter ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$882.glib_queueautoptr_cleanup_GConverter$MH, "glib_queueautoptr_cleanup_GConverter");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GConverterInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GConverterInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GConverterInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GConverterInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GConverterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$882.glib_autoptr_clear_GConverterInputStream$MH,"glib_autoptr_clear_GConverterInputStream");
    }
    public static void glib_autoptr_clear_GConverterInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$882.glib_autoptr_clear_GConverterInputStream$MH, "glib_autoptr_clear_GConverterInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GConverterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$883.glib_autoptr_cleanup_GConverterInputStream$MH,"glib_autoptr_cleanup_GConverterInputStream");
    }
    public static void glib_autoptr_cleanup_GConverterInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$883.glib_autoptr_cleanup_GConverterInputStream$MH, "glib_autoptr_cleanup_GConverterInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GConverterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$883.glib_listautoptr_cleanup_GConverterInputStream$MH,"glib_listautoptr_cleanup_GConverterInputStream");
    }
    public static void glib_listautoptr_cleanup_GConverterInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$883.glib_listautoptr_cleanup_GConverterInputStream$MH, "glib_listautoptr_cleanup_GConverterInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GConverterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$883.glib_slistautoptr_cleanup_GConverterInputStream$MH,"glib_slistautoptr_cleanup_GConverterInputStream");
    }
    public static void glib_slistautoptr_cleanup_GConverterInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$883.glib_slistautoptr_cleanup_GConverterInputStream$MH, "glib_slistautoptr_cleanup_GConverterInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GConverterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$883.glib_queueautoptr_cleanup_GConverterInputStream$MH,"glib_queueautoptr_cleanup_GConverterInputStream");
    }
    public static void glib_queueautoptr_cleanup_GConverterInputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$883.glib_queueautoptr_cleanup_GConverterInputStream$MH, "glib_queueautoptr_cleanup_GConverterInputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GConverterOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GConverterOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GConverterOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GConverterOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GConverterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$883.glib_autoptr_clear_GConverterOutputStream$MH,"glib_autoptr_clear_GConverterOutputStream");
    }
    public static void glib_autoptr_clear_GConverterOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$883.glib_autoptr_clear_GConverterOutputStream$MH, "glib_autoptr_clear_GConverterOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GConverterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$883.glib_autoptr_cleanup_GConverterOutputStream$MH,"glib_autoptr_cleanup_GConverterOutputStream");
    }
    public static void glib_autoptr_cleanup_GConverterOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$883.glib_autoptr_cleanup_GConverterOutputStream$MH, "glib_autoptr_cleanup_GConverterOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GConverterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$884.glib_listautoptr_cleanup_GConverterOutputStream$MH,"glib_listautoptr_cleanup_GConverterOutputStream");
    }
    public static void glib_listautoptr_cleanup_GConverterOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$884.glib_listautoptr_cleanup_GConverterOutputStream$MH, "glib_listautoptr_cleanup_GConverterOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GConverterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$884.glib_slistautoptr_cleanup_GConverterOutputStream$MH,"glib_slistautoptr_cleanup_GConverterOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GConverterOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$884.glib_slistautoptr_cleanup_GConverterOutputStream$MH, "glib_slistautoptr_cleanup_GConverterOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GConverterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$884.glib_queueautoptr_cleanup_GConverterOutputStream$MH,"glib_queueautoptr_cleanup_GConverterOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GConverterOutputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$884.glib_queueautoptr_cleanup_GConverterOutputStream$MH, "glib_queueautoptr_cleanup_GConverterOutputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GCredentials_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GCredentials_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GCredentials_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GCredentials_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GCredentials$MH() {
        return RuntimeHelper.requireNonNull(constants$884.glib_autoptr_clear_GCredentials$MH,"glib_autoptr_clear_GCredentials");
    }
    public static void glib_autoptr_clear_GCredentials ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$884.glib_autoptr_clear_GCredentials$MH, "glib_autoptr_clear_GCredentials");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GCredentials$MH() {
        return RuntimeHelper.requireNonNull(constants$884.glib_autoptr_cleanup_GCredentials$MH,"glib_autoptr_cleanup_GCredentials");
    }
    public static void glib_autoptr_cleanup_GCredentials ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$884.glib_autoptr_cleanup_GCredentials$MH, "glib_autoptr_cleanup_GCredentials");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GCredentials$MH() {
        return RuntimeHelper.requireNonNull(constants$884.glib_listautoptr_cleanup_GCredentials$MH,"glib_listautoptr_cleanup_GCredentials");
    }
    public static void glib_listautoptr_cleanup_GCredentials ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$884.glib_listautoptr_cleanup_GCredentials$MH, "glib_listautoptr_cleanup_GCredentials");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GCredentials$MH() {
        return RuntimeHelper.requireNonNull(constants$885.glib_slistautoptr_cleanup_GCredentials$MH,"glib_slistautoptr_cleanup_GCredentials");
    }
    public static void glib_slistautoptr_cleanup_GCredentials ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$885.glib_slistautoptr_cleanup_GCredentials$MH, "glib_slistautoptr_cleanup_GCredentials");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GCredentials$MH() {
        return RuntimeHelper.requireNonNull(constants$885.glib_queueautoptr_cleanup_GCredentials$MH,"glib_queueautoptr_cleanup_GCredentials");
    }
    public static void glib_queueautoptr_cleanup_GCredentials ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$885.glib_queueautoptr_cleanup_GCredentials$MH, "glib_queueautoptr_cleanup_GCredentials");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDatagramBased_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDatagramBased_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDatagramBased_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDatagramBased_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDatagramBased$MH() {
        return RuntimeHelper.requireNonNull(constants$885.glib_autoptr_clear_GDatagramBased$MH,"glib_autoptr_clear_GDatagramBased");
    }
    public static void glib_autoptr_clear_GDatagramBased ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$885.glib_autoptr_clear_GDatagramBased$MH, "glib_autoptr_clear_GDatagramBased");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDatagramBased$MH() {
        return RuntimeHelper.requireNonNull(constants$885.glib_autoptr_cleanup_GDatagramBased$MH,"glib_autoptr_cleanup_GDatagramBased");
    }
    public static void glib_autoptr_cleanup_GDatagramBased ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$885.glib_autoptr_cleanup_GDatagramBased$MH, "glib_autoptr_cleanup_GDatagramBased");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDatagramBased$MH() {
        return RuntimeHelper.requireNonNull(constants$885.glib_listautoptr_cleanup_GDatagramBased$MH,"glib_listautoptr_cleanup_GDatagramBased");
    }
    public static void glib_listautoptr_cleanup_GDatagramBased ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$885.glib_listautoptr_cleanup_GDatagramBased$MH, "glib_listautoptr_cleanup_GDatagramBased");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDatagramBased$MH() {
        return RuntimeHelper.requireNonNull(constants$885.glib_slistautoptr_cleanup_GDatagramBased$MH,"glib_slistautoptr_cleanup_GDatagramBased");
    }
    public static void glib_slistautoptr_cleanup_GDatagramBased ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$885.glib_slistautoptr_cleanup_GDatagramBased$MH, "glib_slistautoptr_cleanup_GDatagramBased");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDatagramBased$MH() {
        return RuntimeHelper.requireNonNull(constants$886.glib_queueautoptr_cleanup_GDatagramBased$MH,"glib_queueautoptr_cleanup_GDatagramBased");
    }
    public static void glib_queueautoptr_cleanup_GDatagramBased ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$886.glib_queueautoptr_cleanup_GDatagramBased$MH, "glib_queueautoptr_cleanup_GDatagramBased");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDataInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDataInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDataInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDataInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDataInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$886.glib_autoptr_clear_GDataInputStream$MH,"glib_autoptr_clear_GDataInputStream");
    }
    public static void glib_autoptr_clear_GDataInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$886.glib_autoptr_clear_GDataInputStream$MH, "glib_autoptr_clear_GDataInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDataInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$886.glib_autoptr_cleanup_GDataInputStream$MH,"glib_autoptr_cleanup_GDataInputStream");
    }
    public static void glib_autoptr_cleanup_GDataInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$886.glib_autoptr_cleanup_GDataInputStream$MH, "glib_autoptr_cleanup_GDataInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDataInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$886.glib_listautoptr_cleanup_GDataInputStream$MH,"glib_listautoptr_cleanup_GDataInputStream");
    }
    public static void glib_listautoptr_cleanup_GDataInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$886.glib_listautoptr_cleanup_GDataInputStream$MH, "glib_listautoptr_cleanup_GDataInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDataInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$886.glib_slistautoptr_cleanup_GDataInputStream$MH,"glib_slistautoptr_cleanup_GDataInputStream");
    }
    public static void glib_slistautoptr_cleanup_GDataInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$886.glib_slistautoptr_cleanup_GDataInputStream$MH, "glib_slistautoptr_cleanup_GDataInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDataInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$886.glib_queueautoptr_cleanup_GDataInputStream$MH,"glib_queueautoptr_cleanup_GDataInputStream");
    }
    public static void glib_queueautoptr_cleanup_GDataInputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$886.glib_queueautoptr_cleanup_GDataInputStream$MH, "glib_queueautoptr_cleanup_GDataInputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDataOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDataOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDataOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDataOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDataOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$887.glib_autoptr_clear_GDataOutputStream$MH,"glib_autoptr_clear_GDataOutputStream");
    }
    public static void glib_autoptr_clear_GDataOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$887.glib_autoptr_clear_GDataOutputStream$MH, "glib_autoptr_clear_GDataOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDataOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$887.glib_autoptr_cleanup_GDataOutputStream$MH,"glib_autoptr_cleanup_GDataOutputStream");
    }
    public static void glib_autoptr_cleanup_GDataOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$887.glib_autoptr_cleanup_GDataOutputStream$MH, "glib_autoptr_cleanup_GDataOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDataOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$887.glib_listautoptr_cleanup_GDataOutputStream$MH,"glib_listautoptr_cleanup_GDataOutputStream");
    }
    public static void glib_listautoptr_cleanup_GDataOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$887.glib_listautoptr_cleanup_GDataOutputStream$MH, "glib_listautoptr_cleanup_GDataOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDataOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$887.glib_slistautoptr_cleanup_GDataOutputStream$MH,"glib_slistautoptr_cleanup_GDataOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GDataOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$887.glib_slistautoptr_cleanup_GDataOutputStream$MH, "glib_slistautoptr_cleanup_GDataOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDataOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$887.glib_queueautoptr_cleanup_GDataOutputStream$MH,"glib_queueautoptr_cleanup_GDataOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GDataOutputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$887.glib_queueautoptr_cleanup_GDataOutputStream$MH, "glib_queueautoptr_cleanup_GDataOutputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusActionGroup_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusActionGroup_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusActionGroup_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusActionGroup_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$887.glib_autoptr_clear_GDBusActionGroup$MH,"glib_autoptr_clear_GDBusActionGroup");
    }
    public static void glib_autoptr_clear_GDBusActionGroup ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$887.glib_autoptr_clear_GDBusActionGroup$MH, "glib_autoptr_clear_GDBusActionGroup");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$888.glib_autoptr_cleanup_GDBusActionGroup$MH,"glib_autoptr_cleanup_GDBusActionGroup");
    }
    public static void glib_autoptr_cleanup_GDBusActionGroup ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$888.glib_autoptr_cleanup_GDBusActionGroup$MH, "glib_autoptr_cleanup_GDBusActionGroup");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$888.glib_listautoptr_cleanup_GDBusActionGroup$MH,"glib_listautoptr_cleanup_GDBusActionGroup");
    }
    public static void glib_listautoptr_cleanup_GDBusActionGroup ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$888.glib_listautoptr_cleanup_GDBusActionGroup$MH, "glib_listautoptr_cleanup_GDBusActionGroup");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$888.glib_slistautoptr_cleanup_GDBusActionGroup$MH,"glib_slistautoptr_cleanup_GDBusActionGroup");
    }
    public static void glib_slistautoptr_cleanup_GDBusActionGroup ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$888.glib_slistautoptr_cleanup_GDBusActionGroup$MH, "glib_slistautoptr_cleanup_GDBusActionGroup");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$888.glib_queueautoptr_cleanup_GDBusActionGroup$MH,"glib_queueautoptr_cleanup_GDBusActionGroup");
    }
    public static void glib_queueautoptr_cleanup_GDBusActionGroup ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$888.glib_queueautoptr_cleanup_GDBusActionGroup$MH, "glib_queueautoptr_cleanup_GDBusActionGroup");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusAuthObserver_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusAuthObserver_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusAuthObserver_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusAuthObserver_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusAuthObserver$MH() {
        return RuntimeHelper.requireNonNull(constants$888.glib_autoptr_clear_GDBusAuthObserver$MH,"glib_autoptr_clear_GDBusAuthObserver");
    }
    public static void glib_autoptr_clear_GDBusAuthObserver ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$888.glib_autoptr_clear_GDBusAuthObserver$MH, "glib_autoptr_clear_GDBusAuthObserver");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusAuthObserver$MH() {
        return RuntimeHelper.requireNonNull(constants$888.glib_autoptr_cleanup_GDBusAuthObserver$MH,"glib_autoptr_cleanup_GDBusAuthObserver");
    }
    public static void glib_autoptr_cleanup_GDBusAuthObserver ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$888.glib_autoptr_cleanup_GDBusAuthObserver$MH, "glib_autoptr_cleanup_GDBusAuthObserver");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusAuthObserver$MH() {
        return RuntimeHelper.requireNonNull(constants$889.glib_listautoptr_cleanup_GDBusAuthObserver$MH,"glib_listautoptr_cleanup_GDBusAuthObserver");
    }
    public static void glib_listautoptr_cleanup_GDBusAuthObserver ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$889.glib_listautoptr_cleanup_GDBusAuthObserver$MH, "glib_listautoptr_cleanup_GDBusAuthObserver");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusAuthObserver$MH() {
        return RuntimeHelper.requireNonNull(constants$889.glib_slistautoptr_cleanup_GDBusAuthObserver$MH,"glib_slistautoptr_cleanup_GDBusAuthObserver");
    }
    public static void glib_slistautoptr_cleanup_GDBusAuthObserver ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$889.glib_slistautoptr_cleanup_GDBusAuthObserver$MH, "glib_slistautoptr_cleanup_GDBusAuthObserver");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusAuthObserver$MH() {
        return RuntimeHelper.requireNonNull(constants$889.glib_queueautoptr_cleanup_GDBusAuthObserver$MH,"glib_queueautoptr_cleanup_GDBusAuthObserver");
    }
    public static void glib_queueautoptr_cleanup_GDBusAuthObserver ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$889.glib_queueautoptr_cleanup_GDBusAuthObserver$MH, "glib_queueautoptr_cleanup_GDBusAuthObserver");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$889.glib_autoptr_clear_GDBusConnection$MH,"glib_autoptr_clear_GDBusConnection");
    }
    public static void glib_autoptr_clear_GDBusConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$889.glib_autoptr_clear_GDBusConnection$MH, "glib_autoptr_clear_GDBusConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$889.glib_autoptr_cleanup_GDBusConnection$MH,"glib_autoptr_cleanup_GDBusConnection");
    }
    public static void glib_autoptr_cleanup_GDBusConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$889.glib_autoptr_cleanup_GDBusConnection$MH, "glib_autoptr_cleanup_GDBusConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$889.glib_listautoptr_cleanup_GDBusConnection$MH,"glib_listautoptr_cleanup_GDBusConnection");
    }
    public static void glib_listautoptr_cleanup_GDBusConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$889.glib_listautoptr_cleanup_GDBusConnection$MH, "glib_listautoptr_cleanup_GDBusConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$890.glib_slistautoptr_cleanup_GDBusConnection$MH,"glib_slistautoptr_cleanup_GDBusConnection");
    }
    public static void glib_slistautoptr_cleanup_GDBusConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$890.glib_slistautoptr_cleanup_GDBusConnection$MH, "glib_slistautoptr_cleanup_GDBusConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$890.glib_queueautoptr_cleanup_GDBusConnection$MH,"glib_queueautoptr_cleanup_GDBusConnection");
    }
    public static void glib_queueautoptr_cleanup_GDBusConnection ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$890.glib_queueautoptr_cleanup_GDBusConnection$MH, "glib_queueautoptr_cleanup_GDBusConnection");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusInterface_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusInterface_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusInterface_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusInterface_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusInterface$MH() {
        return RuntimeHelper.requireNonNull(constants$890.glib_autoptr_clear_GDBusInterface$MH,"glib_autoptr_clear_GDBusInterface");
    }
    public static void glib_autoptr_clear_GDBusInterface ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$890.glib_autoptr_clear_GDBusInterface$MH, "glib_autoptr_clear_GDBusInterface");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusInterface$MH() {
        return RuntimeHelper.requireNonNull(constants$890.glib_autoptr_cleanup_GDBusInterface$MH,"glib_autoptr_cleanup_GDBusInterface");
    }
    public static void glib_autoptr_cleanup_GDBusInterface ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$890.glib_autoptr_cleanup_GDBusInterface$MH, "glib_autoptr_cleanup_GDBusInterface");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusInterface$MH() {
        return RuntimeHelper.requireNonNull(constants$890.glib_listautoptr_cleanup_GDBusInterface$MH,"glib_listautoptr_cleanup_GDBusInterface");
    }
    public static void glib_listautoptr_cleanup_GDBusInterface ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$890.glib_listautoptr_cleanup_GDBusInterface$MH, "glib_listautoptr_cleanup_GDBusInterface");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusInterface$MH() {
        return RuntimeHelper.requireNonNull(constants$890.glib_slistautoptr_cleanup_GDBusInterface$MH,"glib_slistautoptr_cleanup_GDBusInterface");
    }
    public static void glib_slistautoptr_cleanup_GDBusInterface ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$890.glib_slistautoptr_cleanup_GDBusInterface$MH, "glib_slistautoptr_cleanup_GDBusInterface");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusInterface$MH() {
        return RuntimeHelper.requireNonNull(constants$891.glib_queueautoptr_cleanup_GDBusInterface$MH,"glib_queueautoptr_cleanup_GDBusInterface");
    }
    public static void glib_queueautoptr_cleanup_GDBusInterface ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$891.glib_queueautoptr_cleanup_GDBusInterface$MH, "glib_queueautoptr_cleanup_GDBusInterface");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusInterfaceSkeleton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusInterfaceSkeleton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusInterfaceSkeleton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusInterfaceSkeleton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusInterfaceSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$891.glib_autoptr_clear_GDBusInterfaceSkeleton$MH,"glib_autoptr_clear_GDBusInterfaceSkeleton");
    }
    public static void glib_autoptr_clear_GDBusInterfaceSkeleton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$891.glib_autoptr_clear_GDBusInterfaceSkeleton$MH, "glib_autoptr_clear_GDBusInterfaceSkeleton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusInterfaceSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$891.glib_autoptr_cleanup_GDBusInterfaceSkeleton$MH,"glib_autoptr_cleanup_GDBusInterfaceSkeleton");
    }
    public static void glib_autoptr_cleanup_GDBusInterfaceSkeleton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$891.glib_autoptr_cleanup_GDBusInterfaceSkeleton$MH, "glib_autoptr_cleanup_GDBusInterfaceSkeleton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusInterfaceSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$891.glib_listautoptr_cleanup_GDBusInterfaceSkeleton$MH,"glib_listautoptr_cleanup_GDBusInterfaceSkeleton");
    }
    public static void glib_listautoptr_cleanup_GDBusInterfaceSkeleton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$891.glib_listautoptr_cleanup_GDBusInterfaceSkeleton$MH, "glib_listautoptr_cleanup_GDBusInterfaceSkeleton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusInterfaceSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$891.glib_slistautoptr_cleanup_GDBusInterfaceSkeleton$MH,"glib_slistautoptr_cleanup_GDBusInterfaceSkeleton");
    }
    public static void glib_slistautoptr_cleanup_GDBusInterfaceSkeleton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$891.glib_slistautoptr_cleanup_GDBusInterfaceSkeleton$MH, "glib_slistautoptr_cleanup_GDBusInterfaceSkeleton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusInterfaceSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$891.glib_queueautoptr_cleanup_GDBusInterfaceSkeleton$MH,"glib_queueautoptr_cleanup_GDBusInterfaceSkeleton");
    }
    public static void glib_queueautoptr_cleanup_GDBusInterfaceSkeleton ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$891.glib_queueautoptr_cleanup_GDBusInterfaceSkeleton$MH, "glib_queueautoptr_cleanup_GDBusInterfaceSkeleton");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusMenuModel_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMenuModel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMenuModel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMenuModel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$892.glib_autoptr_clear_GDBusMenuModel$MH,"glib_autoptr_clear_GDBusMenuModel");
    }
    public static void glib_autoptr_clear_GDBusMenuModel ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$892.glib_autoptr_clear_GDBusMenuModel$MH, "glib_autoptr_clear_GDBusMenuModel");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$892.glib_autoptr_cleanup_GDBusMenuModel$MH,"glib_autoptr_cleanup_GDBusMenuModel");
    }
    public static void glib_autoptr_cleanup_GDBusMenuModel ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$892.glib_autoptr_cleanup_GDBusMenuModel$MH, "glib_autoptr_cleanup_GDBusMenuModel");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$892.glib_listautoptr_cleanup_GDBusMenuModel$MH,"glib_listautoptr_cleanup_GDBusMenuModel");
    }
    public static void glib_listautoptr_cleanup_GDBusMenuModel ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$892.glib_listautoptr_cleanup_GDBusMenuModel$MH, "glib_listautoptr_cleanup_GDBusMenuModel");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$892.glib_slistautoptr_cleanup_GDBusMenuModel$MH,"glib_slistautoptr_cleanup_GDBusMenuModel");
    }
    public static void glib_slistautoptr_cleanup_GDBusMenuModel ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$892.glib_slistautoptr_cleanup_GDBusMenuModel$MH, "glib_slistautoptr_cleanup_GDBusMenuModel");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$892.glib_queueautoptr_cleanup_GDBusMenuModel$MH,"glib_queueautoptr_cleanup_GDBusMenuModel");
    }
    public static void glib_queueautoptr_cleanup_GDBusMenuModel ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$892.glib_queueautoptr_cleanup_GDBusMenuModel$MH, "glib_queueautoptr_cleanup_GDBusMenuModel");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusMessage_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMessage_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMessage_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMessage_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$892.glib_autoptr_clear_GDBusMessage$MH,"glib_autoptr_clear_GDBusMessage");
    }
    public static void glib_autoptr_clear_GDBusMessage ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$892.glib_autoptr_clear_GDBusMessage$MH, "glib_autoptr_clear_GDBusMessage");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$893.glib_autoptr_cleanup_GDBusMessage$MH,"glib_autoptr_cleanup_GDBusMessage");
    }
    public static void glib_autoptr_cleanup_GDBusMessage ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$893.glib_autoptr_cleanup_GDBusMessage$MH, "glib_autoptr_cleanup_GDBusMessage");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$893.glib_listautoptr_cleanup_GDBusMessage$MH,"glib_listautoptr_cleanup_GDBusMessage");
    }
    public static void glib_listautoptr_cleanup_GDBusMessage ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$893.glib_listautoptr_cleanup_GDBusMessage$MH, "glib_listautoptr_cleanup_GDBusMessage");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$893.glib_slistautoptr_cleanup_GDBusMessage$MH,"glib_slistautoptr_cleanup_GDBusMessage");
    }
    public static void glib_slistautoptr_cleanup_GDBusMessage ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$893.glib_slistautoptr_cleanup_GDBusMessage$MH, "glib_slistautoptr_cleanup_GDBusMessage");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$893.glib_queueautoptr_cleanup_GDBusMessage$MH,"glib_queueautoptr_cleanup_GDBusMessage");
    }
    public static void glib_queueautoptr_cleanup_GDBusMessage ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$893.glib_queueautoptr_cleanup_GDBusMessage$MH, "glib_queueautoptr_cleanup_GDBusMessage");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusMethodInvocation_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMethodInvocation_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMethodInvocation_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusMethodInvocation_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusMethodInvocation$MH() {
        return RuntimeHelper.requireNonNull(constants$893.glib_autoptr_clear_GDBusMethodInvocation$MH,"glib_autoptr_clear_GDBusMethodInvocation");
    }
    public static void glib_autoptr_clear_GDBusMethodInvocation ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$893.glib_autoptr_clear_GDBusMethodInvocation$MH, "glib_autoptr_clear_GDBusMethodInvocation");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusMethodInvocation$MH() {
        return RuntimeHelper.requireNonNull(constants$893.glib_autoptr_cleanup_GDBusMethodInvocation$MH,"glib_autoptr_cleanup_GDBusMethodInvocation");
    }
    public static void glib_autoptr_cleanup_GDBusMethodInvocation ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$893.glib_autoptr_cleanup_GDBusMethodInvocation$MH, "glib_autoptr_cleanup_GDBusMethodInvocation");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusMethodInvocation$MH() {
        return RuntimeHelper.requireNonNull(constants$894.glib_listautoptr_cleanup_GDBusMethodInvocation$MH,"glib_listautoptr_cleanup_GDBusMethodInvocation");
    }
    public static void glib_listautoptr_cleanup_GDBusMethodInvocation ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$894.glib_listautoptr_cleanup_GDBusMethodInvocation$MH, "glib_listautoptr_cleanup_GDBusMethodInvocation");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusMethodInvocation$MH() {
        return RuntimeHelper.requireNonNull(constants$894.glib_slistautoptr_cleanup_GDBusMethodInvocation$MH,"glib_slistautoptr_cleanup_GDBusMethodInvocation");
    }
    public static void glib_slistautoptr_cleanup_GDBusMethodInvocation ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$894.glib_slistautoptr_cleanup_GDBusMethodInvocation$MH, "glib_slistautoptr_cleanup_GDBusMethodInvocation");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusMethodInvocation$MH() {
        return RuntimeHelper.requireNonNull(constants$894.glib_queueautoptr_cleanup_GDBusMethodInvocation$MH,"glib_queueautoptr_cleanup_GDBusMethodInvocation");
    }
    public static void glib_queueautoptr_cleanup_GDBusMethodInvocation ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$894.glib_queueautoptr_cleanup_GDBusMethodInvocation$MH, "glib_queueautoptr_cleanup_GDBusMethodInvocation");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusNodeInfo_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusNodeInfo_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusNodeInfo_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusNodeInfo_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusNodeInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$894.glib_autoptr_clear_GDBusNodeInfo$MH,"glib_autoptr_clear_GDBusNodeInfo");
    }
    public static void glib_autoptr_clear_GDBusNodeInfo ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$894.glib_autoptr_clear_GDBusNodeInfo$MH, "glib_autoptr_clear_GDBusNodeInfo");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusNodeInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$894.glib_autoptr_cleanup_GDBusNodeInfo$MH,"glib_autoptr_cleanup_GDBusNodeInfo");
    }
    public static void glib_autoptr_cleanup_GDBusNodeInfo ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$894.glib_autoptr_cleanup_GDBusNodeInfo$MH, "glib_autoptr_cleanup_GDBusNodeInfo");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusNodeInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$894.glib_listautoptr_cleanup_GDBusNodeInfo$MH,"glib_listautoptr_cleanup_GDBusNodeInfo");
    }
    public static void glib_listautoptr_cleanup_GDBusNodeInfo ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$894.glib_listautoptr_cleanup_GDBusNodeInfo$MH, "glib_listautoptr_cleanup_GDBusNodeInfo");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusNodeInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$895.glib_slistautoptr_cleanup_GDBusNodeInfo$MH,"glib_slistautoptr_cleanup_GDBusNodeInfo");
    }
    public static void glib_slistautoptr_cleanup_GDBusNodeInfo ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$895.glib_slistautoptr_cleanup_GDBusNodeInfo$MH, "glib_slistautoptr_cleanup_GDBusNodeInfo");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusNodeInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$895.glib_queueautoptr_cleanup_GDBusNodeInfo$MH,"glib_queueautoptr_cleanup_GDBusNodeInfo");
    }
    public static void glib_queueautoptr_cleanup_GDBusNodeInfo ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$895.glib_queueautoptr_cleanup_GDBusNodeInfo$MH, "glib_queueautoptr_cleanup_GDBusNodeInfo");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusObject_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObject_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObject_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObject_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusObject$MH() {
        return RuntimeHelper.requireNonNull(constants$895.glib_autoptr_clear_GDBusObject$MH,"glib_autoptr_clear_GDBusObject");
    }
    public static void glib_autoptr_clear_GDBusObject ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$895.glib_autoptr_clear_GDBusObject$MH, "glib_autoptr_clear_GDBusObject");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusObject$MH() {
        return RuntimeHelper.requireNonNull(constants$895.glib_autoptr_cleanup_GDBusObject$MH,"glib_autoptr_cleanup_GDBusObject");
    }
    public static void glib_autoptr_cleanup_GDBusObject ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$895.glib_autoptr_cleanup_GDBusObject$MH, "glib_autoptr_cleanup_GDBusObject");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusObject$MH() {
        return RuntimeHelper.requireNonNull(constants$895.glib_listautoptr_cleanup_GDBusObject$MH,"glib_listautoptr_cleanup_GDBusObject");
    }
    public static void glib_listautoptr_cleanup_GDBusObject ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$895.glib_listautoptr_cleanup_GDBusObject$MH, "glib_listautoptr_cleanup_GDBusObject");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusObject$MH() {
        return RuntimeHelper.requireNonNull(constants$895.glib_slistautoptr_cleanup_GDBusObject$MH,"glib_slistautoptr_cleanup_GDBusObject");
    }
    public static void glib_slistautoptr_cleanup_GDBusObject ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$895.glib_slistautoptr_cleanup_GDBusObject$MH, "glib_slistautoptr_cleanup_GDBusObject");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusObject$MH() {
        return RuntimeHelper.requireNonNull(constants$896.glib_queueautoptr_cleanup_GDBusObject$MH,"glib_queueautoptr_cleanup_GDBusObject");
    }
    public static void glib_queueautoptr_cleanup_GDBusObject ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$896.glib_queueautoptr_cleanup_GDBusObject$MH, "glib_queueautoptr_cleanup_GDBusObject");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusObjectManagerClient_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManagerClient_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManagerClient_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManagerClient_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusObjectManagerClient$MH() {
        return RuntimeHelper.requireNonNull(constants$896.glib_autoptr_clear_GDBusObjectManagerClient$MH,"glib_autoptr_clear_GDBusObjectManagerClient");
    }
    public static void glib_autoptr_clear_GDBusObjectManagerClient ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$896.glib_autoptr_clear_GDBusObjectManagerClient$MH, "glib_autoptr_clear_GDBusObjectManagerClient");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusObjectManagerClient$MH() {
        return RuntimeHelper.requireNonNull(constants$896.glib_autoptr_cleanup_GDBusObjectManagerClient$MH,"glib_autoptr_cleanup_GDBusObjectManagerClient");
    }
    public static void glib_autoptr_cleanup_GDBusObjectManagerClient ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$896.glib_autoptr_cleanup_GDBusObjectManagerClient$MH, "glib_autoptr_cleanup_GDBusObjectManagerClient");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusObjectManagerClient$MH() {
        return RuntimeHelper.requireNonNull(constants$896.glib_listautoptr_cleanup_GDBusObjectManagerClient$MH,"glib_listautoptr_cleanup_GDBusObjectManagerClient");
    }
    public static void glib_listautoptr_cleanup_GDBusObjectManagerClient ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$896.glib_listautoptr_cleanup_GDBusObjectManagerClient$MH, "glib_listautoptr_cleanup_GDBusObjectManagerClient");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusObjectManagerClient$MH() {
        return RuntimeHelper.requireNonNull(constants$896.glib_slistautoptr_cleanup_GDBusObjectManagerClient$MH,"glib_slistautoptr_cleanup_GDBusObjectManagerClient");
    }
    public static void glib_slistautoptr_cleanup_GDBusObjectManagerClient ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$896.glib_slistautoptr_cleanup_GDBusObjectManagerClient$MH, "glib_slistautoptr_cleanup_GDBusObjectManagerClient");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusObjectManagerClient$MH() {
        return RuntimeHelper.requireNonNull(constants$896.glib_queueautoptr_cleanup_GDBusObjectManagerClient$MH,"glib_queueautoptr_cleanup_GDBusObjectManagerClient");
    }
    public static void glib_queueautoptr_cleanup_GDBusObjectManagerClient ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$896.glib_queueautoptr_cleanup_GDBusObjectManagerClient$MH, "glib_queueautoptr_cleanup_GDBusObjectManagerClient");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusObjectManager_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManager_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManager_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManager_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusObjectManager$MH() {
        return RuntimeHelper.requireNonNull(constants$897.glib_autoptr_clear_GDBusObjectManager$MH,"glib_autoptr_clear_GDBusObjectManager");
    }
    public static void glib_autoptr_clear_GDBusObjectManager ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$897.glib_autoptr_clear_GDBusObjectManager$MH, "glib_autoptr_clear_GDBusObjectManager");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusObjectManager$MH() {
        return RuntimeHelper.requireNonNull(constants$897.glib_autoptr_cleanup_GDBusObjectManager$MH,"glib_autoptr_cleanup_GDBusObjectManager");
    }
    public static void glib_autoptr_cleanup_GDBusObjectManager ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$897.glib_autoptr_cleanup_GDBusObjectManager$MH, "glib_autoptr_cleanup_GDBusObjectManager");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusObjectManager$MH() {
        return RuntimeHelper.requireNonNull(constants$897.glib_listautoptr_cleanup_GDBusObjectManager$MH,"glib_listautoptr_cleanup_GDBusObjectManager");
    }
    public static void glib_listautoptr_cleanup_GDBusObjectManager ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$897.glib_listautoptr_cleanup_GDBusObjectManager$MH, "glib_listautoptr_cleanup_GDBusObjectManager");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusObjectManager$MH() {
        return RuntimeHelper.requireNonNull(constants$897.glib_slistautoptr_cleanup_GDBusObjectManager$MH,"glib_slistautoptr_cleanup_GDBusObjectManager");
    }
    public static void glib_slistautoptr_cleanup_GDBusObjectManager ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$897.glib_slistautoptr_cleanup_GDBusObjectManager$MH, "glib_slistautoptr_cleanup_GDBusObjectManager");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusObjectManager$MH() {
        return RuntimeHelper.requireNonNull(constants$897.glib_queueautoptr_cleanup_GDBusObjectManager$MH,"glib_queueautoptr_cleanup_GDBusObjectManager");
    }
    public static void glib_queueautoptr_cleanup_GDBusObjectManager ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$897.glib_queueautoptr_cleanup_GDBusObjectManager$MH, "glib_queueautoptr_cleanup_GDBusObjectManager");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusObjectManagerServer_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManagerServer_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManagerServer_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectManagerServer_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusObjectManagerServer$MH() {
        return RuntimeHelper.requireNonNull(constants$897.glib_autoptr_clear_GDBusObjectManagerServer$MH,"glib_autoptr_clear_GDBusObjectManagerServer");
    }
    public static void glib_autoptr_clear_GDBusObjectManagerServer ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$897.glib_autoptr_clear_GDBusObjectManagerServer$MH, "glib_autoptr_clear_GDBusObjectManagerServer");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusObjectManagerServer$MH() {
        return RuntimeHelper.requireNonNull(constants$898.glib_autoptr_cleanup_GDBusObjectManagerServer$MH,"glib_autoptr_cleanup_GDBusObjectManagerServer");
    }
    public static void glib_autoptr_cleanup_GDBusObjectManagerServer ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$898.glib_autoptr_cleanup_GDBusObjectManagerServer$MH, "glib_autoptr_cleanup_GDBusObjectManagerServer");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusObjectManagerServer$MH() {
        return RuntimeHelper.requireNonNull(constants$898.glib_listautoptr_cleanup_GDBusObjectManagerServer$MH,"glib_listautoptr_cleanup_GDBusObjectManagerServer");
    }
    public static void glib_listautoptr_cleanup_GDBusObjectManagerServer ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$898.glib_listautoptr_cleanup_GDBusObjectManagerServer$MH, "glib_listautoptr_cleanup_GDBusObjectManagerServer");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusObjectManagerServer$MH() {
        return RuntimeHelper.requireNonNull(constants$898.glib_slistautoptr_cleanup_GDBusObjectManagerServer$MH,"glib_slistautoptr_cleanup_GDBusObjectManagerServer");
    }
    public static void glib_slistautoptr_cleanup_GDBusObjectManagerServer ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$898.glib_slistautoptr_cleanup_GDBusObjectManagerServer$MH, "glib_slistautoptr_cleanup_GDBusObjectManagerServer");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusObjectManagerServer$MH() {
        return RuntimeHelper.requireNonNull(constants$898.glib_queueautoptr_cleanup_GDBusObjectManagerServer$MH,"glib_queueautoptr_cleanup_GDBusObjectManagerServer");
    }
    public static void glib_queueautoptr_cleanup_GDBusObjectManagerServer ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$898.glib_queueautoptr_cleanup_GDBusObjectManagerServer$MH, "glib_queueautoptr_cleanup_GDBusObjectManagerServer");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusObjectProxy_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectProxy_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectProxy_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectProxy_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusObjectProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$898.glib_autoptr_clear_GDBusObjectProxy$MH,"glib_autoptr_clear_GDBusObjectProxy");
    }
    public static void glib_autoptr_clear_GDBusObjectProxy ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$898.glib_autoptr_clear_GDBusObjectProxy$MH, "glib_autoptr_clear_GDBusObjectProxy");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusObjectProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$898.glib_autoptr_cleanup_GDBusObjectProxy$MH,"glib_autoptr_cleanup_GDBusObjectProxy");
    }
    public static void glib_autoptr_cleanup_GDBusObjectProxy ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$898.glib_autoptr_cleanup_GDBusObjectProxy$MH, "glib_autoptr_cleanup_GDBusObjectProxy");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusObjectProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$899.glib_listautoptr_cleanup_GDBusObjectProxy$MH,"glib_listautoptr_cleanup_GDBusObjectProxy");
    }
    public static void glib_listautoptr_cleanup_GDBusObjectProxy ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$899.glib_listautoptr_cleanup_GDBusObjectProxy$MH, "glib_listautoptr_cleanup_GDBusObjectProxy");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusObjectProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$899.glib_slistautoptr_cleanup_GDBusObjectProxy$MH,"glib_slistautoptr_cleanup_GDBusObjectProxy");
    }
    public static void glib_slistautoptr_cleanup_GDBusObjectProxy ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$899.glib_slistautoptr_cleanup_GDBusObjectProxy$MH, "glib_slistautoptr_cleanup_GDBusObjectProxy");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusObjectProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$899.glib_queueautoptr_cleanup_GDBusObjectProxy$MH,"glib_queueautoptr_cleanup_GDBusObjectProxy");
    }
    public static void glib_queueautoptr_cleanup_GDBusObjectProxy ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$899.glib_queueautoptr_cleanup_GDBusObjectProxy$MH, "glib_queueautoptr_cleanup_GDBusObjectProxy");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusObjectSkeleton_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectSkeleton_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectSkeleton_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusObjectSkeleton_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusObjectSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$899.glib_autoptr_clear_GDBusObjectSkeleton$MH,"glib_autoptr_clear_GDBusObjectSkeleton");
    }
    public static void glib_autoptr_clear_GDBusObjectSkeleton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$899.glib_autoptr_clear_GDBusObjectSkeleton$MH, "glib_autoptr_clear_GDBusObjectSkeleton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusObjectSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$899.glib_autoptr_cleanup_GDBusObjectSkeleton$MH,"glib_autoptr_cleanup_GDBusObjectSkeleton");
    }
    public static void glib_autoptr_cleanup_GDBusObjectSkeleton ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$899.glib_autoptr_cleanup_GDBusObjectSkeleton$MH, "glib_autoptr_cleanup_GDBusObjectSkeleton");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusObjectSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$899.glib_listautoptr_cleanup_GDBusObjectSkeleton$MH,"glib_listautoptr_cleanup_GDBusObjectSkeleton");
    }
    public static void glib_listautoptr_cleanup_GDBusObjectSkeleton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$899.glib_listautoptr_cleanup_GDBusObjectSkeleton$MH, "glib_listautoptr_cleanup_GDBusObjectSkeleton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusObjectSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$900.glib_slistautoptr_cleanup_GDBusObjectSkeleton$MH,"glib_slistautoptr_cleanup_GDBusObjectSkeleton");
    }
    public static void glib_slistautoptr_cleanup_GDBusObjectSkeleton ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$900.glib_slistautoptr_cleanup_GDBusObjectSkeleton$MH, "glib_slistautoptr_cleanup_GDBusObjectSkeleton");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusObjectSkeleton$MH() {
        return RuntimeHelper.requireNonNull(constants$900.glib_queueautoptr_cleanup_GDBusObjectSkeleton$MH,"glib_queueautoptr_cleanup_GDBusObjectSkeleton");
    }
    public static void glib_queueautoptr_cleanup_GDBusObjectSkeleton ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$900.glib_queueautoptr_cleanup_GDBusObjectSkeleton$MH, "glib_queueautoptr_cleanup_GDBusObjectSkeleton");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusProxy_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusProxy_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusProxy_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusProxy_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$900.glib_autoptr_clear_GDBusProxy$MH,"glib_autoptr_clear_GDBusProxy");
    }
    public static void glib_autoptr_clear_GDBusProxy ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$900.glib_autoptr_clear_GDBusProxy$MH, "glib_autoptr_clear_GDBusProxy");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$900.glib_autoptr_cleanup_GDBusProxy$MH,"glib_autoptr_cleanup_GDBusProxy");
    }
    public static void glib_autoptr_cleanup_GDBusProxy ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$900.glib_autoptr_cleanup_GDBusProxy$MH, "glib_autoptr_cleanup_GDBusProxy");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$900.glib_listautoptr_cleanup_GDBusProxy$MH,"glib_listautoptr_cleanup_GDBusProxy");
    }
    public static void glib_listautoptr_cleanup_GDBusProxy ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$900.glib_listautoptr_cleanup_GDBusProxy$MH, "glib_listautoptr_cleanup_GDBusProxy");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$900.glib_slistautoptr_cleanup_GDBusProxy$MH,"glib_slistautoptr_cleanup_GDBusProxy");
    }
    public static void glib_slistautoptr_cleanup_GDBusProxy ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$900.glib_slistautoptr_cleanup_GDBusProxy$MH, "glib_slistautoptr_cleanup_GDBusProxy");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$901.glib_queueautoptr_cleanup_GDBusProxy$MH,"glib_queueautoptr_cleanup_GDBusProxy");
    }
    public static void glib_queueautoptr_cleanup_GDBusProxy ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$901.glib_queueautoptr_cleanup_GDBusProxy$MH, "glib_queueautoptr_cleanup_GDBusProxy");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDBusServer_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusServer_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusServer_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDBusServer_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDBusServer$MH() {
        return RuntimeHelper.requireNonNull(constants$901.glib_autoptr_clear_GDBusServer$MH,"glib_autoptr_clear_GDBusServer");
    }
    public static void glib_autoptr_clear_GDBusServer ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$901.glib_autoptr_clear_GDBusServer$MH, "glib_autoptr_clear_GDBusServer");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDBusServer$MH() {
        return RuntimeHelper.requireNonNull(constants$901.glib_autoptr_cleanup_GDBusServer$MH,"glib_autoptr_cleanup_GDBusServer");
    }
    public static void glib_autoptr_cleanup_GDBusServer ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$901.glib_autoptr_cleanup_GDBusServer$MH, "glib_autoptr_cleanup_GDBusServer");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDBusServer$MH() {
        return RuntimeHelper.requireNonNull(constants$901.glib_listautoptr_cleanup_GDBusServer$MH,"glib_listautoptr_cleanup_GDBusServer");
    }
    public static void glib_listautoptr_cleanup_GDBusServer ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$901.glib_listautoptr_cleanup_GDBusServer$MH, "glib_listautoptr_cleanup_GDBusServer");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDBusServer$MH() {
        return RuntimeHelper.requireNonNull(constants$901.glib_slistautoptr_cleanup_GDBusServer$MH,"glib_slistautoptr_cleanup_GDBusServer");
    }
    public static void glib_slistautoptr_cleanup_GDBusServer ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$901.glib_slistautoptr_cleanup_GDBusServer$MH, "glib_slistautoptr_cleanup_GDBusServer");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDBusServer$MH() {
        return RuntimeHelper.requireNonNull(constants$901.glib_queueautoptr_cleanup_GDBusServer$MH,"glib_queueautoptr_cleanup_GDBusServer");
    }
    public static void glib_queueautoptr_cleanup_GDBusServer ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$901.glib_queueautoptr_cleanup_GDBusServer$MH, "glib_queueautoptr_cleanup_GDBusServer");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GDrive_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDrive_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDrive_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GDrive_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GDrive$MH() {
        return RuntimeHelper.requireNonNull(constants$902.glib_autoptr_clear_GDrive$MH,"glib_autoptr_clear_GDrive");
    }
    public static void glib_autoptr_clear_GDrive ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$902.glib_autoptr_clear_GDrive$MH, "glib_autoptr_clear_GDrive");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GDrive$MH() {
        return RuntimeHelper.requireNonNull(constants$902.glib_autoptr_cleanup_GDrive$MH,"glib_autoptr_cleanup_GDrive");
    }
    public static void glib_autoptr_cleanup_GDrive ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$902.glib_autoptr_cleanup_GDrive$MH, "glib_autoptr_cleanup_GDrive");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GDrive$MH() {
        return RuntimeHelper.requireNonNull(constants$902.glib_listautoptr_cleanup_GDrive$MH,"glib_listautoptr_cleanup_GDrive");
    }
    public static void glib_listautoptr_cleanup_GDrive ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$902.glib_listautoptr_cleanup_GDrive$MH, "glib_listautoptr_cleanup_GDrive");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GDrive$MH() {
        return RuntimeHelper.requireNonNull(constants$902.glib_slistautoptr_cleanup_GDrive$MH,"glib_slistautoptr_cleanup_GDrive");
    }
    public static void glib_slistautoptr_cleanup_GDrive ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$902.glib_slistautoptr_cleanup_GDrive$MH, "glib_slistautoptr_cleanup_GDrive");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GDrive$MH() {
        return RuntimeHelper.requireNonNull(constants$902.glib_queueautoptr_cleanup_GDrive$MH,"glib_queueautoptr_cleanup_GDrive");
    }
    public static void glib_queueautoptr_cleanup_GDrive ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$902.glib_queueautoptr_cleanup_GDrive$MH, "glib_queueautoptr_cleanup_GDrive");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GEmblemedIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEmblemedIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEmblemedIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEmblemedIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GEmblemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$902.glib_autoptr_clear_GEmblemedIcon$MH,"glib_autoptr_clear_GEmblemedIcon");
    }
    public static void glib_autoptr_clear_GEmblemedIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$902.glib_autoptr_clear_GEmblemedIcon$MH, "glib_autoptr_clear_GEmblemedIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GEmblemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$903.glib_autoptr_cleanup_GEmblemedIcon$MH,"glib_autoptr_cleanup_GEmblemedIcon");
    }
    public static void glib_autoptr_cleanup_GEmblemedIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$903.glib_autoptr_cleanup_GEmblemedIcon$MH, "glib_autoptr_cleanup_GEmblemedIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GEmblemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$903.glib_listautoptr_cleanup_GEmblemedIcon$MH,"glib_listautoptr_cleanup_GEmblemedIcon");
    }
    public static void glib_listautoptr_cleanup_GEmblemedIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$903.glib_listautoptr_cleanup_GEmblemedIcon$MH, "glib_listautoptr_cleanup_GEmblemedIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GEmblemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$903.glib_slistautoptr_cleanup_GEmblemedIcon$MH,"glib_slistautoptr_cleanup_GEmblemedIcon");
    }
    public static void glib_slistautoptr_cleanup_GEmblemedIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$903.glib_slistautoptr_cleanup_GEmblemedIcon$MH, "glib_slistautoptr_cleanup_GEmblemedIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GEmblemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$903.glib_queueautoptr_cleanup_GEmblemedIcon$MH,"glib_queueautoptr_cleanup_GEmblemedIcon");
    }
    public static void glib_queueautoptr_cleanup_GEmblemedIcon ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$903.glib_queueautoptr_cleanup_GEmblemedIcon$MH, "glib_queueautoptr_cleanup_GEmblemedIcon");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GEmblem_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEmblem_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEmblem_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GEmblem_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GEmblem$MH() {
        return RuntimeHelper.requireNonNull(constants$903.glib_autoptr_clear_GEmblem$MH,"glib_autoptr_clear_GEmblem");
    }
    public static void glib_autoptr_clear_GEmblem ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$903.glib_autoptr_clear_GEmblem$MH, "glib_autoptr_clear_GEmblem");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GEmblem$MH() {
        return RuntimeHelper.requireNonNull(constants$903.glib_autoptr_cleanup_GEmblem$MH,"glib_autoptr_cleanup_GEmblem");
    }
    public static void glib_autoptr_cleanup_GEmblem ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$903.glib_autoptr_cleanup_GEmblem$MH, "glib_autoptr_cleanup_GEmblem");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GEmblem$MH() {
        return RuntimeHelper.requireNonNull(constants$904.glib_listautoptr_cleanup_GEmblem$MH,"glib_listautoptr_cleanup_GEmblem");
    }
    public static void glib_listautoptr_cleanup_GEmblem ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$904.glib_listautoptr_cleanup_GEmblem$MH, "glib_listautoptr_cleanup_GEmblem");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GEmblem$MH() {
        return RuntimeHelper.requireNonNull(constants$904.glib_slistautoptr_cleanup_GEmblem$MH,"glib_slistautoptr_cleanup_GEmblem");
    }
    public static void glib_slistautoptr_cleanup_GEmblem ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$904.glib_slistautoptr_cleanup_GEmblem$MH, "glib_slistautoptr_cleanup_GEmblem");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GEmblem$MH() {
        return RuntimeHelper.requireNonNull(constants$904.glib_queueautoptr_cleanup_GEmblem$MH,"glib_queueautoptr_cleanup_GEmblem");
    }
    public static void glib_queueautoptr_cleanup_GEmblem ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$904.glib_queueautoptr_cleanup_GEmblem$MH, "glib_queueautoptr_cleanup_GEmblem");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileEnumerator_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileEnumerator_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileEnumerator_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileEnumerator_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$904.glib_autoptr_clear_GFileEnumerator$MH,"glib_autoptr_clear_GFileEnumerator");
    }
    public static void glib_autoptr_clear_GFileEnumerator ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$904.glib_autoptr_clear_GFileEnumerator$MH, "glib_autoptr_clear_GFileEnumerator");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$904.glib_autoptr_cleanup_GFileEnumerator$MH,"glib_autoptr_cleanup_GFileEnumerator");
    }
    public static void glib_autoptr_cleanup_GFileEnumerator ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$904.glib_autoptr_cleanup_GFileEnumerator$MH, "glib_autoptr_cleanup_GFileEnumerator");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$904.glib_listautoptr_cleanup_GFileEnumerator$MH,"glib_listautoptr_cleanup_GFileEnumerator");
    }
    public static void glib_listautoptr_cleanup_GFileEnumerator ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$904.glib_listautoptr_cleanup_GFileEnumerator$MH, "glib_listautoptr_cleanup_GFileEnumerator");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$905.glib_slistautoptr_cleanup_GFileEnumerator$MH,"glib_slistautoptr_cleanup_GFileEnumerator");
    }
    public static void glib_slistautoptr_cleanup_GFileEnumerator ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$905.glib_slistautoptr_cleanup_GFileEnumerator$MH, "glib_slistautoptr_cleanup_GFileEnumerator");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$905.glib_queueautoptr_cleanup_GFileEnumerator$MH,"glib_queueautoptr_cleanup_GFileEnumerator");
    }
    public static void glib_queueautoptr_cleanup_GFileEnumerator ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$905.glib_queueautoptr_cleanup_GFileEnumerator$MH, "glib_queueautoptr_cleanup_GFileEnumerator");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFile_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFile_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFile_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFile_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFile$MH() {
        return RuntimeHelper.requireNonNull(constants$905.glib_autoptr_clear_GFile$MH,"glib_autoptr_clear_GFile");
    }
    public static void glib_autoptr_clear_GFile ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$905.glib_autoptr_clear_GFile$MH, "glib_autoptr_clear_GFile");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFile$MH() {
        return RuntimeHelper.requireNonNull(constants$905.glib_autoptr_cleanup_GFile$MH,"glib_autoptr_cleanup_GFile");
    }
    public static void glib_autoptr_cleanup_GFile ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$905.glib_autoptr_cleanup_GFile$MH, "glib_autoptr_cleanup_GFile");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFile$MH() {
        return RuntimeHelper.requireNonNull(constants$905.glib_listautoptr_cleanup_GFile$MH,"glib_listautoptr_cleanup_GFile");
    }
    public static void glib_listautoptr_cleanup_GFile ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$905.glib_listautoptr_cleanup_GFile$MH, "glib_listautoptr_cleanup_GFile");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFile$MH() {
        return RuntimeHelper.requireNonNull(constants$905.glib_slistautoptr_cleanup_GFile$MH,"glib_slistautoptr_cleanup_GFile");
    }
    public static void glib_slistautoptr_cleanup_GFile ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$905.glib_slistautoptr_cleanup_GFile$MH, "glib_slistautoptr_cleanup_GFile");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFile$MH() {
        return RuntimeHelper.requireNonNull(constants$906.glib_queueautoptr_cleanup_GFile$MH,"glib_queueautoptr_cleanup_GFile");
    }
    public static void glib_queueautoptr_cleanup_GFile ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$906.glib_queueautoptr_cleanup_GFile$MH, "glib_queueautoptr_cleanup_GFile");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileAttributeInfoList_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileAttributeInfoList_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileAttributeInfoList_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileAttributeInfoList_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileAttributeInfoList$MH() {
        return RuntimeHelper.requireNonNull(constants$906.glib_autoptr_clear_GFileAttributeInfoList$MH,"glib_autoptr_clear_GFileAttributeInfoList");
    }
    public static void glib_autoptr_clear_GFileAttributeInfoList ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$906.glib_autoptr_clear_GFileAttributeInfoList$MH, "glib_autoptr_clear_GFileAttributeInfoList");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileAttributeInfoList$MH() {
        return RuntimeHelper.requireNonNull(constants$906.glib_autoptr_cleanup_GFileAttributeInfoList$MH,"glib_autoptr_cleanup_GFileAttributeInfoList");
    }
    public static void glib_autoptr_cleanup_GFileAttributeInfoList ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$906.glib_autoptr_cleanup_GFileAttributeInfoList$MH, "glib_autoptr_cleanup_GFileAttributeInfoList");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileAttributeInfoList$MH() {
        return RuntimeHelper.requireNonNull(constants$906.glib_listautoptr_cleanup_GFileAttributeInfoList$MH,"glib_listautoptr_cleanup_GFileAttributeInfoList");
    }
    public static void glib_listautoptr_cleanup_GFileAttributeInfoList ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$906.glib_listautoptr_cleanup_GFileAttributeInfoList$MH, "glib_listautoptr_cleanup_GFileAttributeInfoList");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileAttributeInfoList$MH() {
        return RuntimeHelper.requireNonNull(constants$906.glib_slistautoptr_cleanup_GFileAttributeInfoList$MH,"glib_slistautoptr_cleanup_GFileAttributeInfoList");
    }
    public static void glib_slistautoptr_cleanup_GFileAttributeInfoList ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$906.glib_slistautoptr_cleanup_GFileAttributeInfoList$MH, "glib_slistautoptr_cleanup_GFileAttributeInfoList");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileAttributeInfoList$MH() {
        return RuntimeHelper.requireNonNull(constants$906.glib_queueautoptr_cleanup_GFileAttributeInfoList$MH,"glib_queueautoptr_cleanup_GFileAttributeInfoList");
    }
    public static void glib_queueautoptr_cleanup_GFileAttributeInfoList ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$906.glib_queueautoptr_cleanup_GFileAttributeInfoList$MH, "glib_queueautoptr_cleanup_GFileAttributeInfoList");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$907.glib_autoptr_clear_GFileIcon$MH,"glib_autoptr_clear_GFileIcon");
    }
    public static void glib_autoptr_clear_GFileIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$907.glib_autoptr_clear_GFileIcon$MH, "glib_autoptr_clear_GFileIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$907.glib_autoptr_cleanup_GFileIcon$MH,"glib_autoptr_cleanup_GFileIcon");
    }
    public static void glib_autoptr_cleanup_GFileIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$907.glib_autoptr_cleanup_GFileIcon$MH, "glib_autoptr_cleanup_GFileIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$907.glib_listautoptr_cleanup_GFileIcon$MH,"glib_listautoptr_cleanup_GFileIcon");
    }
    public static void glib_listautoptr_cleanup_GFileIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$907.glib_listautoptr_cleanup_GFileIcon$MH, "glib_listautoptr_cleanup_GFileIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$907.glib_slistautoptr_cleanup_GFileIcon$MH,"glib_slistautoptr_cleanup_GFileIcon");
    }
    public static void glib_slistautoptr_cleanup_GFileIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$907.glib_slistautoptr_cleanup_GFileIcon$MH, "glib_slistautoptr_cleanup_GFileIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$907.glib_queueautoptr_cleanup_GFileIcon$MH,"glib_queueautoptr_cleanup_GFileIcon");
    }
    public static void glib_queueautoptr_cleanup_GFileIcon ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$907.glib_queueautoptr_cleanup_GFileIcon$MH, "glib_queueautoptr_cleanup_GFileIcon");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileInfo_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileInfo_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileInfo_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileInfo_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$907.glib_autoptr_clear_GFileInfo$MH,"glib_autoptr_clear_GFileInfo");
    }
    public static void glib_autoptr_clear_GFileInfo ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$907.glib_autoptr_clear_GFileInfo$MH, "glib_autoptr_clear_GFileInfo");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$908.glib_autoptr_cleanup_GFileInfo$MH,"glib_autoptr_cleanup_GFileInfo");
    }
    public static void glib_autoptr_cleanup_GFileInfo ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$908.glib_autoptr_cleanup_GFileInfo$MH, "glib_autoptr_cleanup_GFileInfo");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$908.glib_listautoptr_cleanup_GFileInfo$MH,"glib_listautoptr_cleanup_GFileInfo");
    }
    public static void glib_listautoptr_cleanup_GFileInfo ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$908.glib_listautoptr_cleanup_GFileInfo$MH, "glib_listautoptr_cleanup_GFileInfo");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$908.glib_slistautoptr_cleanup_GFileInfo$MH,"glib_slistautoptr_cleanup_GFileInfo");
    }
    public static void glib_slistautoptr_cleanup_GFileInfo ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$908.glib_slistautoptr_cleanup_GFileInfo$MH, "glib_slistautoptr_cleanup_GFileInfo");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$908.glib_queueautoptr_cleanup_GFileInfo$MH,"glib_queueautoptr_cleanup_GFileInfo");
    }
    public static void glib_queueautoptr_cleanup_GFileInfo ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$908.glib_queueautoptr_cleanup_GFileInfo$MH, "glib_queueautoptr_cleanup_GFileInfo");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$908.glib_autoptr_clear_GFileInputStream$MH,"glib_autoptr_clear_GFileInputStream");
    }
    public static void glib_autoptr_clear_GFileInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$908.glib_autoptr_clear_GFileInputStream$MH, "glib_autoptr_clear_GFileInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$908.glib_autoptr_cleanup_GFileInputStream$MH,"glib_autoptr_cleanup_GFileInputStream");
    }
    public static void glib_autoptr_cleanup_GFileInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$908.glib_autoptr_cleanup_GFileInputStream$MH, "glib_autoptr_cleanup_GFileInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$909.glib_listautoptr_cleanup_GFileInputStream$MH,"glib_listautoptr_cleanup_GFileInputStream");
    }
    public static void glib_listautoptr_cleanup_GFileInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$909.glib_listautoptr_cleanup_GFileInputStream$MH, "glib_listautoptr_cleanup_GFileInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$909.glib_slistautoptr_cleanup_GFileInputStream$MH,"glib_slistautoptr_cleanup_GFileInputStream");
    }
    public static void glib_slistautoptr_cleanup_GFileInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$909.glib_slistautoptr_cleanup_GFileInputStream$MH, "glib_slistautoptr_cleanup_GFileInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$909.glib_queueautoptr_cleanup_GFileInputStream$MH,"glib_queueautoptr_cleanup_GFileInputStream");
    }
    public static void glib_queueautoptr_cleanup_GFileInputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$909.glib_queueautoptr_cleanup_GFileInputStream$MH, "glib_queueautoptr_cleanup_GFileInputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileIOStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileIOStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileIOStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileIOStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$909.glib_autoptr_clear_GFileIOStream$MH,"glib_autoptr_clear_GFileIOStream");
    }
    public static void glib_autoptr_clear_GFileIOStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$909.glib_autoptr_clear_GFileIOStream$MH, "glib_autoptr_clear_GFileIOStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$909.glib_autoptr_cleanup_GFileIOStream$MH,"glib_autoptr_cleanup_GFileIOStream");
    }
    public static void glib_autoptr_cleanup_GFileIOStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$909.glib_autoptr_cleanup_GFileIOStream$MH, "glib_autoptr_cleanup_GFileIOStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$909.glib_listautoptr_cleanup_GFileIOStream$MH,"glib_listautoptr_cleanup_GFileIOStream");
    }
    public static void glib_listautoptr_cleanup_GFileIOStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$909.glib_listautoptr_cleanup_GFileIOStream$MH, "glib_listautoptr_cleanup_GFileIOStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$910.glib_slistautoptr_cleanup_GFileIOStream$MH,"glib_slistautoptr_cleanup_GFileIOStream");
    }
    public static void glib_slistautoptr_cleanup_GFileIOStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$910.glib_slistautoptr_cleanup_GFileIOStream$MH, "glib_slistautoptr_cleanup_GFileIOStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$910.glib_queueautoptr_cleanup_GFileIOStream$MH,"glib_queueautoptr_cleanup_GFileIOStream");
    }
    public static void glib_queueautoptr_cleanup_GFileIOStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$910.glib_queueautoptr_cleanup_GFileIOStream$MH, "glib_queueautoptr_cleanup_GFileIOStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileMonitor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileMonitor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileMonitor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileMonitor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$910.glib_autoptr_clear_GFileMonitor$MH,"glib_autoptr_clear_GFileMonitor");
    }
    public static void glib_autoptr_clear_GFileMonitor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$910.glib_autoptr_clear_GFileMonitor$MH, "glib_autoptr_clear_GFileMonitor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$910.glib_autoptr_cleanup_GFileMonitor$MH,"glib_autoptr_cleanup_GFileMonitor");
    }
    public static void glib_autoptr_cleanup_GFileMonitor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$910.glib_autoptr_cleanup_GFileMonitor$MH, "glib_autoptr_cleanup_GFileMonitor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$910.glib_listautoptr_cleanup_GFileMonitor$MH,"glib_listautoptr_cleanup_GFileMonitor");
    }
    public static void glib_listautoptr_cleanup_GFileMonitor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$910.glib_listautoptr_cleanup_GFileMonitor$MH, "glib_listautoptr_cleanup_GFileMonitor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$910.glib_slistautoptr_cleanup_GFileMonitor$MH,"glib_slistautoptr_cleanup_GFileMonitor");
    }
    public static void glib_slistautoptr_cleanup_GFileMonitor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$910.glib_slistautoptr_cleanup_GFileMonitor$MH, "glib_slistautoptr_cleanup_GFileMonitor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$911.glib_queueautoptr_cleanup_GFileMonitor$MH,"glib_queueautoptr_cleanup_GFileMonitor");
    }
    public static void glib_queueautoptr_cleanup_GFileMonitor ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$911.glib_queueautoptr_cleanup_GFileMonitor$MH, "glib_queueautoptr_cleanup_GFileMonitor");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFilenameCompleter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilenameCompleter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilenameCompleter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilenameCompleter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFilenameCompleter$MH() {
        return RuntimeHelper.requireNonNull(constants$911.glib_autoptr_clear_GFilenameCompleter$MH,"glib_autoptr_clear_GFilenameCompleter");
    }
    public static void glib_autoptr_clear_GFilenameCompleter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$911.glib_autoptr_clear_GFilenameCompleter$MH, "glib_autoptr_clear_GFilenameCompleter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFilenameCompleter$MH() {
        return RuntimeHelper.requireNonNull(constants$911.glib_autoptr_cleanup_GFilenameCompleter$MH,"glib_autoptr_cleanup_GFilenameCompleter");
    }
    public static void glib_autoptr_cleanup_GFilenameCompleter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$911.glib_autoptr_cleanup_GFilenameCompleter$MH, "glib_autoptr_cleanup_GFilenameCompleter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFilenameCompleter$MH() {
        return RuntimeHelper.requireNonNull(constants$911.glib_listautoptr_cleanup_GFilenameCompleter$MH,"glib_listautoptr_cleanup_GFilenameCompleter");
    }
    public static void glib_listautoptr_cleanup_GFilenameCompleter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$911.glib_listautoptr_cleanup_GFilenameCompleter$MH, "glib_listautoptr_cleanup_GFilenameCompleter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFilenameCompleter$MH() {
        return RuntimeHelper.requireNonNull(constants$911.glib_slistautoptr_cleanup_GFilenameCompleter$MH,"glib_slistautoptr_cleanup_GFilenameCompleter");
    }
    public static void glib_slistautoptr_cleanup_GFilenameCompleter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$911.glib_slistautoptr_cleanup_GFilenameCompleter$MH, "glib_slistautoptr_cleanup_GFilenameCompleter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFilenameCompleter$MH() {
        return RuntimeHelper.requireNonNull(constants$911.glib_queueautoptr_cleanup_GFilenameCompleter$MH,"glib_queueautoptr_cleanup_GFilenameCompleter");
    }
    public static void glib_queueautoptr_cleanup_GFilenameCompleter ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$911.glib_queueautoptr_cleanup_GFilenameCompleter$MH, "glib_queueautoptr_cleanup_GFilenameCompleter");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFileOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFileOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFileOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$912.glib_autoptr_clear_GFileOutputStream$MH,"glib_autoptr_clear_GFileOutputStream");
    }
    public static void glib_autoptr_clear_GFileOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$912.glib_autoptr_clear_GFileOutputStream$MH, "glib_autoptr_clear_GFileOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFileOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$912.glib_autoptr_cleanup_GFileOutputStream$MH,"glib_autoptr_cleanup_GFileOutputStream");
    }
    public static void glib_autoptr_cleanup_GFileOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$912.glib_autoptr_cleanup_GFileOutputStream$MH, "glib_autoptr_cleanup_GFileOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFileOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$912.glib_listautoptr_cleanup_GFileOutputStream$MH,"glib_listautoptr_cleanup_GFileOutputStream");
    }
    public static void glib_listautoptr_cleanup_GFileOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$912.glib_listautoptr_cleanup_GFileOutputStream$MH, "glib_listautoptr_cleanup_GFileOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFileOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$912.glib_slistautoptr_cleanup_GFileOutputStream$MH,"glib_slistautoptr_cleanup_GFileOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GFileOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$912.glib_slistautoptr_cleanup_GFileOutputStream$MH, "glib_slistautoptr_cleanup_GFileOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFileOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$912.glib_queueautoptr_cleanup_GFileOutputStream$MH,"glib_queueautoptr_cleanup_GFileOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GFileOutputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$912.glib_queueautoptr_cleanup_GFileOutputStream$MH, "glib_queueautoptr_cleanup_GFileOutputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFilterInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilterInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilterInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilterInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFilterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$912.glib_autoptr_clear_GFilterInputStream$MH,"glib_autoptr_clear_GFilterInputStream");
    }
    public static void glib_autoptr_clear_GFilterInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$912.glib_autoptr_clear_GFilterInputStream$MH, "glib_autoptr_clear_GFilterInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFilterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$913.glib_autoptr_cleanup_GFilterInputStream$MH,"glib_autoptr_cleanup_GFilterInputStream");
    }
    public static void glib_autoptr_cleanup_GFilterInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$913.glib_autoptr_cleanup_GFilterInputStream$MH, "glib_autoptr_cleanup_GFilterInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFilterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$913.glib_listautoptr_cleanup_GFilterInputStream$MH,"glib_listautoptr_cleanup_GFilterInputStream");
    }
    public static void glib_listautoptr_cleanup_GFilterInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$913.glib_listautoptr_cleanup_GFilterInputStream$MH, "glib_listautoptr_cleanup_GFilterInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFilterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$913.glib_slistautoptr_cleanup_GFilterInputStream$MH,"glib_slistautoptr_cleanup_GFilterInputStream");
    }
    public static void glib_slistautoptr_cleanup_GFilterInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$913.glib_slistautoptr_cleanup_GFilterInputStream$MH, "glib_slistautoptr_cleanup_GFilterInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFilterInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$913.glib_queueautoptr_cleanup_GFilterInputStream$MH,"glib_queueautoptr_cleanup_GFilterInputStream");
    }
    public static void glib_queueautoptr_cleanup_GFilterInputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$913.glib_queueautoptr_cleanup_GFilterInputStream$MH, "glib_queueautoptr_cleanup_GFilterInputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GFilterOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilterOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilterOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GFilterOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GFilterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$913.glib_autoptr_clear_GFilterOutputStream$MH,"glib_autoptr_clear_GFilterOutputStream");
    }
    public static void glib_autoptr_clear_GFilterOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$913.glib_autoptr_clear_GFilterOutputStream$MH, "glib_autoptr_clear_GFilterOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GFilterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$913.glib_autoptr_cleanup_GFilterOutputStream$MH,"glib_autoptr_cleanup_GFilterOutputStream");
    }
    public static void glib_autoptr_cleanup_GFilterOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$913.glib_autoptr_cleanup_GFilterOutputStream$MH, "glib_autoptr_cleanup_GFilterOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GFilterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$914.glib_listautoptr_cleanup_GFilterOutputStream$MH,"glib_listautoptr_cleanup_GFilterOutputStream");
    }
    public static void glib_listautoptr_cleanup_GFilterOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$914.glib_listautoptr_cleanup_GFilterOutputStream$MH, "glib_listautoptr_cleanup_GFilterOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GFilterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$914.glib_slistautoptr_cleanup_GFilterOutputStream$MH,"glib_slistautoptr_cleanup_GFilterOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GFilterOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$914.glib_slistautoptr_cleanup_GFilterOutputStream$MH, "glib_slistautoptr_cleanup_GFilterOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GFilterOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$914.glib_queueautoptr_cleanup_GFilterOutputStream$MH,"glib_queueautoptr_cleanup_GFilterOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GFilterOutputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$914.glib_queueautoptr_cleanup_GFilterOutputStream$MH, "glib_queueautoptr_cleanup_GFilterOutputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$914.glib_autoptr_clear_GIcon$MH,"glib_autoptr_clear_GIcon");
    }
    public static void glib_autoptr_clear_GIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$914.glib_autoptr_clear_GIcon$MH, "glib_autoptr_clear_GIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$914.glib_autoptr_cleanup_GIcon$MH,"glib_autoptr_cleanup_GIcon");
    }
    public static void glib_autoptr_cleanup_GIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$914.glib_autoptr_cleanup_GIcon$MH, "glib_autoptr_cleanup_GIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$914.glib_listautoptr_cleanup_GIcon$MH,"glib_listautoptr_cleanup_GIcon");
    }
    public static void glib_listautoptr_cleanup_GIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$914.glib_listautoptr_cleanup_GIcon$MH, "glib_listautoptr_cleanup_GIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$915.glib_slistautoptr_cleanup_GIcon$MH,"glib_slistautoptr_cleanup_GIcon");
    }
    public static void glib_slistautoptr_cleanup_GIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$915.glib_slistautoptr_cleanup_GIcon$MH, "glib_slistautoptr_cleanup_GIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$915.glib_queueautoptr_cleanup_GIcon$MH,"glib_queueautoptr_cleanup_GIcon");
    }
    public static void glib_queueautoptr_cleanup_GIcon ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$915.glib_queueautoptr_cleanup_GIcon$MH, "glib_queueautoptr_cleanup_GIcon");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GInetAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GInetAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$915.glib_autoptr_clear_GInetAddress$MH,"glib_autoptr_clear_GInetAddress");
    }
    public static void glib_autoptr_clear_GInetAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$915.glib_autoptr_clear_GInetAddress$MH, "glib_autoptr_clear_GInetAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GInetAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$915.glib_autoptr_cleanup_GInetAddress$MH,"glib_autoptr_cleanup_GInetAddress");
    }
    public static void glib_autoptr_cleanup_GInetAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$915.glib_autoptr_cleanup_GInetAddress$MH, "glib_autoptr_cleanup_GInetAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GInetAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$915.glib_listautoptr_cleanup_GInetAddress$MH,"glib_listautoptr_cleanup_GInetAddress");
    }
    public static void glib_listautoptr_cleanup_GInetAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$915.glib_listautoptr_cleanup_GInetAddress$MH, "glib_listautoptr_cleanup_GInetAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GInetAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$915.glib_slistautoptr_cleanup_GInetAddress$MH,"glib_slistautoptr_cleanup_GInetAddress");
    }
    public static void glib_slistautoptr_cleanup_GInetAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$915.glib_slistautoptr_cleanup_GInetAddress$MH, "glib_slistautoptr_cleanup_GInetAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GInetAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$916.glib_queueautoptr_cleanup_GInetAddress$MH,"glib_queueautoptr_cleanup_GInetAddress");
    }
    public static void glib_queueautoptr_cleanup_GInetAddress ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$916.glib_queueautoptr_cleanup_GInetAddress$MH, "glib_queueautoptr_cleanup_GInetAddress");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GInetAddressMask_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetAddressMask_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetAddressMask_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetAddressMask_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GInetAddressMask$MH() {
        return RuntimeHelper.requireNonNull(constants$916.glib_autoptr_clear_GInetAddressMask$MH,"glib_autoptr_clear_GInetAddressMask");
    }
    public static void glib_autoptr_clear_GInetAddressMask ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$916.glib_autoptr_clear_GInetAddressMask$MH, "glib_autoptr_clear_GInetAddressMask");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GInetAddressMask$MH() {
        return RuntimeHelper.requireNonNull(constants$916.glib_autoptr_cleanup_GInetAddressMask$MH,"glib_autoptr_cleanup_GInetAddressMask");
    }
    public static void glib_autoptr_cleanup_GInetAddressMask ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$916.glib_autoptr_cleanup_GInetAddressMask$MH, "glib_autoptr_cleanup_GInetAddressMask");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GInetAddressMask$MH() {
        return RuntimeHelper.requireNonNull(constants$916.glib_listautoptr_cleanup_GInetAddressMask$MH,"glib_listautoptr_cleanup_GInetAddressMask");
    }
    public static void glib_listautoptr_cleanup_GInetAddressMask ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$916.glib_listautoptr_cleanup_GInetAddressMask$MH, "glib_listautoptr_cleanup_GInetAddressMask");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GInetAddressMask$MH() {
        return RuntimeHelper.requireNonNull(constants$916.glib_slistautoptr_cleanup_GInetAddressMask$MH,"glib_slistautoptr_cleanup_GInetAddressMask");
    }
    public static void glib_slistautoptr_cleanup_GInetAddressMask ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$916.glib_slistautoptr_cleanup_GInetAddressMask$MH, "glib_slistautoptr_cleanup_GInetAddressMask");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GInetAddressMask$MH() {
        return RuntimeHelper.requireNonNull(constants$916.glib_queueautoptr_cleanup_GInetAddressMask$MH,"glib_queueautoptr_cleanup_GInetAddressMask");
    }
    public static void glib_queueautoptr_cleanup_GInetAddressMask ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$916.glib_queueautoptr_cleanup_GInetAddressMask$MH, "glib_queueautoptr_cleanup_GInetAddressMask");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GInetSocketAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetSocketAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetSocketAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInetSocketAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GInetSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$917.glib_autoptr_clear_GInetSocketAddress$MH,"glib_autoptr_clear_GInetSocketAddress");
    }
    public static void glib_autoptr_clear_GInetSocketAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$917.glib_autoptr_clear_GInetSocketAddress$MH, "glib_autoptr_clear_GInetSocketAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GInetSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$917.glib_autoptr_cleanup_GInetSocketAddress$MH,"glib_autoptr_cleanup_GInetSocketAddress");
    }
    public static void glib_autoptr_cleanup_GInetSocketAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$917.glib_autoptr_cleanup_GInetSocketAddress$MH, "glib_autoptr_cleanup_GInetSocketAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GInetSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$917.glib_listautoptr_cleanup_GInetSocketAddress$MH,"glib_listautoptr_cleanup_GInetSocketAddress");
    }
    public static void glib_listautoptr_cleanup_GInetSocketAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$917.glib_listautoptr_cleanup_GInetSocketAddress$MH, "glib_listautoptr_cleanup_GInetSocketAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GInetSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$917.glib_slistautoptr_cleanup_GInetSocketAddress$MH,"glib_slistautoptr_cleanup_GInetSocketAddress");
    }
    public static void glib_slistautoptr_cleanup_GInetSocketAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$917.glib_slistautoptr_cleanup_GInetSocketAddress$MH, "glib_slistautoptr_cleanup_GInetSocketAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GInetSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$917.glib_queueautoptr_cleanup_GInetSocketAddress$MH,"glib_queueautoptr_cleanup_GInetSocketAddress");
    }
    public static void glib_queueautoptr_cleanup_GInetSocketAddress ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$917.glib_queueautoptr_cleanup_GInetSocketAddress$MH, "glib_queueautoptr_cleanup_GInetSocketAddress");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GInitable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInitable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInitable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInitable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$917.glib_autoptr_clear_GInitable$MH,"glib_autoptr_clear_GInitable");
    }
    public static void glib_autoptr_clear_GInitable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$917.glib_autoptr_clear_GInitable$MH, "glib_autoptr_clear_GInitable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$918.glib_autoptr_cleanup_GInitable$MH,"glib_autoptr_cleanup_GInitable");
    }
    public static void glib_autoptr_cleanup_GInitable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$918.glib_autoptr_cleanup_GInitable$MH, "glib_autoptr_cleanup_GInitable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$918.glib_listautoptr_cleanup_GInitable$MH,"glib_listautoptr_cleanup_GInitable");
    }
    public static void glib_listautoptr_cleanup_GInitable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$918.glib_listautoptr_cleanup_GInitable$MH, "glib_listautoptr_cleanup_GInitable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$918.glib_slistautoptr_cleanup_GInitable$MH,"glib_slistautoptr_cleanup_GInitable");
    }
    public static void glib_slistautoptr_cleanup_GInitable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$918.glib_slistautoptr_cleanup_GInitable$MH, "glib_slistautoptr_cleanup_GInitable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GInitable$MH() {
        return RuntimeHelper.requireNonNull(constants$918.glib_queueautoptr_cleanup_GInitable$MH,"glib_queueautoptr_cleanup_GInitable");
    }
    public static void glib_queueautoptr_cleanup_GInitable ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$918.glib_queueautoptr_cleanup_GInitable$MH, "glib_queueautoptr_cleanup_GInitable");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$918.glib_autoptr_clear_GInputStream$MH,"glib_autoptr_clear_GInputStream");
    }
    public static void glib_autoptr_clear_GInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$918.glib_autoptr_clear_GInputStream$MH, "glib_autoptr_clear_GInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$918.glib_autoptr_cleanup_GInputStream$MH,"glib_autoptr_cleanup_GInputStream");
    }
    public static void glib_autoptr_cleanup_GInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$918.glib_autoptr_cleanup_GInputStream$MH, "glib_autoptr_cleanup_GInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$919.glib_listautoptr_cleanup_GInputStream$MH,"glib_listautoptr_cleanup_GInputStream");
    }
    public static void glib_listautoptr_cleanup_GInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$919.glib_listautoptr_cleanup_GInputStream$MH, "glib_listautoptr_cleanup_GInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$919.glib_slistautoptr_cleanup_GInputStream$MH,"glib_slistautoptr_cleanup_GInputStream");
    }
    public static void glib_slistautoptr_cleanup_GInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$919.glib_slistautoptr_cleanup_GInputStream$MH, "glib_slistautoptr_cleanup_GInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$919.glib_queueautoptr_cleanup_GInputStream$MH,"glib_queueautoptr_cleanup_GInputStream");
    }
    public static void glib_queueautoptr_cleanup_GInputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$919.glib_queueautoptr_cleanup_GInputStream$MH, "glib_queueautoptr_cleanup_GInputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GIOModule_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOModule_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOModule_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOModule_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GIOModule$MH() {
        return RuntimeHelper.requireNonNull(constants$919.glib_autoptr_clear_GIOModule$MH,"glib_autoptr_clear_GIOModule");
    }
    public static void glib_autoptr_clear_GIOModule ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$919.glib_autoptr_clear_GIOModule$MH, "glib_autoptr_clear_GIOModule");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GIOModule$MH() {
        return RuntimeHelper.requireNonNull(constants$919.glib_autoptr_cleanup_GIOModule$MH,"glib_autoptr_cleanup_GIOModule");
    }
    public static void glib_autoptr_cleanup_GIOModule ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$919.glib_autoptr_cleanup_GIOModule$MH, "glib_autoptr_cleanup_GIOModule");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GIOModule$MH() {
        return RuntimeHelper.requireNonNull(constants$919.glib_listautoptr_cleanup_GIOModule$MH,"glib_listautoptr_cleanup_GIOModule");
    }
    public static void glib_listautoptr_cleanup_GIOModule ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$919.glib_listautoptr_cleanup_GIOModule$MH, "glib_listautoptr_cleanup_GIOModule");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GIOModule$MH() {
        return RuntimeHelper.requireNonNull(constants$920.glib_slistautoptr_cleanup_GIOModule$MH,"glib_slistautoptr_cleanup_GIOModule");
    }
    public static void glib_slistautoptr_cleanup_GIOModule ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$920.glib_slistautoptr_cleanup_GIOModule$MH, "glib_slistautoptr_cleanup_GIOModule");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GIOModule$MH() {
        return RuntimeHelper.requireNonNull(constants$920.glib_queueautoptr_cleanup_GIOModule$MH,"glib_queueautoptr_cleanup_GIOModule");
    }
    public static void glib_queueautoptr_cleanup_GIOModule ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$920.glib_queueautoptr_cleanup_GIOModule$MH, "glib_queueautoptr_cleanup_GIOModule");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GIOStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GIOStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$920.glib_autoptr_clear_GIOStream$MH,"glib_autoptr_clear_GIOStream");
    }
    public static void glib_autoptr_clear_GIOStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$920.glib_autoptr_clear_GIOStream$MH, "glib_autoptr_clear_GIOStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$920.glib_autoptr_cleanup_GIOStream$MH,"glib_autoptr_cleanup_GIOStream");
    }
    public static void glib_autoptr_cleanup_GIOStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$920.glib_autoptr_cleanup_GIOStream$MH, "glib_autoptr_cleanup_GIOStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$920.glib_listautoptr_cleanup_GIOStream$MH,"glib_listautoptr_cleanup_GIOStream");
    }
    public static void glib_listautoptr_cleanup_GIOStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$920.glib_listautoptr_cleanup_GIOStream$MH, "glib_listautoptr_cleanup_GIOStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$920.glib_slistautoptr_cleanup_GIOStream$MH,"glib_slistautoptr_cleanup_GIOStream");
    }
    public static void glib_slistautoptr_cleanup_GIOStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$920.glib_slistautoptr_cleanup_GIOStream$MH, "glib_slistautoptr_cleanup_GIOStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GIOStream$MH() {
        return RuntimeHelper.requireNonNull(constants$921.glib_queueautoptr_cleanup_GIOStream$MH,"glib_queueautoptr_cleanup_GIOStream");
    }
    public static void glib_queueautoptr_cleanup_GIOStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$921.glib_queueautoptr_cleanup_GIOStream$MH, "glib_queueautoptr_cleanup_GIOStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GLoadableIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GLoadableIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GLoadableIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GLoadableIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GLoadableIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$921.glib_autoptr_clear_GLoadableIcon$MH,"glib_autoptr_clear_GLoadableIcon");
    }
    public static void glib_autoptr_clear_GLoadableIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$921.glib_autoptr_clear_GLoadableIcon$MH, "glib_autoptr_clear_GLoadableIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GLoadableIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$921.glib_autoptr_cleanup_GLoadableIcon$MH,"glib_autoptr_cleanup_GLoadableIcon");
    }
    public static void glib_autoptr_cleanup_GLoadableIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$921.glib_autoptr_cleanup_GLoadableIcon$MH, "glib_autoptr_cleanup_GLoadableIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GLoadableIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$921.glib_listautoptr_cleanup_GLoadableIcon$MH,"glib_listautoptr_cleanup_GLoadableIcon");
    }
    public static void glib_listautoptr_cleanup_GLoadableIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$921.glib_listautoptr_cleanup_GLoadableIcon$MH, "glib_listautoptr_cleanup_GLoadableIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GLoadableIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$921.glib_slistautoptr_cleanup_GLoadableIcon$MH,"glib_slistautoptr_cleanup_GLoadableIcon");
    }
    public static void glib_slistautoptr_cleanup_GLoadableIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$921.glib_slistautoptr_cleanup_GLoadableIcon$MH, "glib_slistautoptr_cleanup_GLoadableIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GLoadableIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$921.glib_queueautoptr_cleanup_GLoadableIcon$MH,"glib_queueautoptr_cleanup_GLoadableIcon");
    }
    public static void glib_queueautoptr_cleanup_GLoadableIcon ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$921.glib_queueautoptr_cleanup_GLoadableIcon$MH, "glib_queueautoptr_cleanup_GLoadableIcon");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMemoryInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMemoryInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$922.glib_autoptr_clear_GMemoryInputStream$MH,"glib_autoptr_clear_GMemoryInputStream");
    }
    public static void glib_autoptr_clear_GMemoryInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$922.glib_autoptr_clear_GMemoryInputStream$MH, "glib_autoptr_clear_GMemoryInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMemoryInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$922.glib_autoptr_cleanup_GMemoryInputStream$MH,"glib_autoptr_cleanup_GMemoryInputStream");
    }
    public static void glib_autoptr_cleanup_GMemoryInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$922.glib_autoptr_cleanup_GMemoryInputStream$MH, "glib_autoptr_cleanup_GMemoryInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMemoryInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$922.glib_listautoptr_cleanup_GMemoryInputStream$MH,"glib_listautoptr_cleanup_GMemoryInputStream");
    }
    public static void glib_listautoptr_cleanup_GMemoryInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$922.glib_listautoptr_cleanup_GMemoryInputStream$MH, "glib_listautoptr_cleanup_GMemoryInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMemoryInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$922.glib_slistautoptr_cleanup_GMemoryInputStream$MH,"glib_slistautoptr_cleanup_GMemoryInputStream");
    }
    public static void glib_slistautoptr_cleanup_GMemoryInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$922.glib_slistautoptr_cleanup_GMemoryInputStream$MH, "glib_slistautoptr_cleanup_GMemoryInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMemoryInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$922.glib_queueautoptr_cleanup_GMemoryInputStream$MH,"glib_queueautoptr_cleanup_GMemoryInputStream");
    }
    public static void glib_queueautoptr_cleanup_GMemoryInputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$922.glib_queueautoptr_cleanup_GMemoryInputStream$MH, "glib_queueautoptr_cleanup_GMemoryInputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMemoryOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMemoryOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMemoryOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$922.glib_autoptr_clear_GMemoryOutputStream$MH,"glib_autoptr_clear_GMemoryOutputStream");
    }
    public static void glib_autoptr_clear_GMemoryOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$922.glib_autoptr_clear_GMemoryOutputStream$MH, "glib_autoptr_clear_GMemoryOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMemoryOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$923.glib_autoptr_cleanup_GMemoryOutputStream$MH,"glib_autoptr_cleanup_GMemoryOutputStream");
    }
    public static void glib_autoptr_cleanup_GMemoryOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$923.glib_autoptr_cleanup_GMemoryOutputStream$MH, "glib_autoptr_cleanup_GMemoryOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMemoryOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$923.glib_listautoptr_cleanup_GMemoryOutputStream$MH,"glib_listautoptr_cleanup_GMemoryOutputStream");
    }
    public static void glib_listautoptr_cleanup_GMemoryOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$923.glib_listautoptr_cleanup_GMemoryOutputStream$MH, "glib_listautoptr_cleanup_GMemoryOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMemoryOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$923.glib_slistautoptr_cleanup_GMemoryOutputStream$MH,"glib_slistautoptr_cleanup_GMemoryOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GMemoryOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$923.glib_slistautoptr_cleanup_GMemoryOutputStream$MH, "glib_slistautoptr_cleanup_GMemoryOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMemoryOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$923.glib_queueautoptr_cleanup_GMemoryOutputStream$MH,"glib_queueautoptr_cleanup_GMemoryOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GMemoryOutputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$923.glib_queueautoptr_cleanup_GMemoryOutputStream$MH, "glib_queueautoptr_cleanup_GMemoryOutputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMenu_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenu_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenu_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenu_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$923.glib_autoptr_clear_GMenu$MH,"glib_autoptr_clear_GMenu");
    }
    public static void glib_autoptr_clear_GMenu ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$923.glib_autoptr_clear_GMenu$MH, "glib_autoptr_clear_GMenu");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$923.glib_autoptr_cleanup_GMenu$MH,"glib_autoptr_cleanup_GMenu");
    }
    public static void glib_autoptr_cleanup_GMenu ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$923.glib_autoptr_cleanup_GMenu$MH, "glib_autoptr_cleanup_GMenu");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$924.glib_listautoptr_cleanup_GMenu$MH,"glib_listautoptr_cleanup_GMenu");
    }
    public static void glib_listautoptr_cleanup_GMenu ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$924.glib_listautoptr_cleanup_GMenu$MH, "glib_listautoptr_cleanup_GMenu");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$924.glib_slistautoptr_cleanup_GMenu$MH,"glib_slistautoptr_cleanup_GMenu");
    }
    public static void glib_slistautoptr_cleanup_GMenu ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$924.glib_slistautoptr_cleanup_GMenu$MH, "glib_slistautoptr_cleanup_GMenu");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$924.glib_queueautoptr_cleanup_GMenu$MH,"glib_queueautoptr_cleanup_GMenu");
    }
    public static void glib_queueautoptr_cleanup_GMenu ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$924.glib_queueautoptr_cleanup_GMenu$MH, "glib_queueautoptr_cleanup_GMenu");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMenuItem_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuItem_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuItem_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuItem_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$924.glib_autoptr_clear_GMenuItem$MH,"glib_autoptr_clear_GMenuItem");
    }
    public static void glib_autoptr_clear_GMenuItem ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$924.glib_autoptr_clear_GMenuItem$MH, "glib_autoptr_clear_GMenuItem");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$924.glib_autoptr_cleanup_GMenuItem$MH,"glib_autoptr_cleanup_GMenuItem");
    }
    public static void glib_autoptr_cleanup_GMenuItem ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$924.glib_autoptr_cleanup_GMenuItem$MH, "glib_autoptr_cleanup_GMenuItem");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$924.glib_listautoptr_cleanup_GMenuItem$MH,"glib_listautoptr_cleanup_GMenuItem");
    }
    public static void glib_listautoptr_cleanup_GMenuItem ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$924.glib_listautoptr_cleanup_GMenuItem$MH, "glib_listautoptr_cleanup_GMenuItem");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$925.glib_slistautoptr_cleanup_GMenuItem$MH,"glib_slistautoptr_cleanup_GMenuItem");
    }
    public static void glib_slistautoptr_cleanup_GMenuItem ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$925.glib_slistautoptr_cleanup_GMenuItem$MH, "glib_slistautoptr_cleanup_GMenuItem");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$925.glib_queueautoptr_cleanup_GMenuItem$MH,"glib_queueautoptr_cleanup_GMenuItem");
    }
    public static void glib_queueautoptr_cleanup_GMenuItem ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$925.glib_queueautoptr_cleanup_GMenuItem$MH, "glib_queueautoptr_cleanup_GMenuItem");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMenuModel_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuModel_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuModel_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuModel_queueautoptr = Constants$root.C_POINTER$LAYOUT;
}


