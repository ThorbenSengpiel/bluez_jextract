// Generated by jextract

package gbus;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$325 {

    static final FunctionDescriptor GTraverseNodeFunc$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GTraverseNodeFunc$MH = RuntimeHelper.downcallHandle(
        constants$325.GTraverseNodeFunc$FUNC, false
    );
    static final FunctionDescriptor g_tree_new$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_tree_new$MH = RuntimeHelper.downcallHandle(
        "g_tree_new",
        constants$325.g_tree_new$FUNC, false
    );
    static final FunctionDescriptor g_tree_new_with_data$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_tree_new_with_data$MH = RuntimeHelper.downcallHandle(
        "g_tree_new_with_data",
        constants$325.g_tree_new_with_data$FUNC, false
    );
    static final FunctionDescriptor g_tree_new_full$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_tree_new_full$MH = RuntimeHelper.downcallHandle(
        "g_tree_new_full",
        constants$325.g_tree_new_full$FUNC, false
    );
    static final FunctionDescriptor g_tree_node_first$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_tree_node_first$MH = RuntimeHelper.downcallHandle(
        "g_tree_node_first",
        constants$325.g_tree_node_first$FUNC, false
    );
}


