// Generated by jextract

package gbus;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$72 {

    static final FunctionDescriptor g_bit_lock$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle g_bit_lock$MH = RuntimeHelper.downcallHandle(
        "g_bit_lock",
        constants$72.g_bit_lock$FUNC, false
    );
    static final FunctionDescriptor g_bit_trylock$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle g_bit_trylock$MH = RuntimeHelper.downcallHandle(
        "g_bit_trylock",
        constants$72.g_bit_trylock$FUNC, false
    );
    static final FunctionDescriptor g_bit_unlock$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle g_bit_unlock$MH = RuntimeHelper.downcallHandle(
        "g_bit_unlock",
        constants$72.g_bit_unlock$FUNC, false
    );
    static final FunctionDescriptor g_pointer_bit_lock$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle g_pointer_bit_lock$MH = RuntimeHelper.downcallHandle(
        "g_pointer_bit_lock",
        constants$72.g_pointer_bit_lock$FUNC, false
    );
    static final FunctionDescriptor g_pointer_bit_trylock$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle g_pointer_bit_trylock$MH = RuntimeHelper.downcallHandle(
        "g_pointer_bit_trylock",
        constants$72.g_pointer_bit_trylock$FUNC, false
    );
    static final FunctionDescriptor g_pointer_bit_unlock$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle g_pointer_bit_unlock$MH = RuntimeHelper.downcallHandle(
        "g_pointer_bit_unlock",
        constants$72.g_pointer_bit_unlock$FUNC, false
    );
}


