// Generated by jextract

package gbus;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$54 {

    static final FunctionDescriptor g_mutex_unlock$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_mutex_unlock$MH = RuntimeHelper.downcallHandle(
        "g_mutex_unlock",
        constants$54.g_mutex_unlock$FUNC, false
    );
    static final FunctionDescriptor g_rw_lock_init$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_rw_lock_init$MH = RuntimeHelper.downcallHandle(
        "g_rw_lock_init",
        constants$54.g_rw_lock_init$FUNC, false
    );
    static final FunctionDescriptor g_rw_lock_clear$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_rw_lock_clear$MH = RuntimeHelper.downcallHandle(
        "g_rw_lock_clear",
        constants$54.g_rw_lock_clear$FUNC, false
    );
    static final FunctionDescriptor g_rw_lock_writer_lock$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_rw_lock_writer_lock$MH = RuntimeHelper.downcallHandle(
        "g_rw_lock_writer_lock",
        constants$54.g_rw_lock_writer_lock$FUNC, false
    );
    static final FunctionDescriptor g_rw_lock_writer_trylock$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_rw_lock_writer_trylock$MH = RuntimeHelper.downcallHandle(
        "g_rw_lock_writer_trylock",
        constants$54.g_rw_lock_writer_trylock$FUNC, false
    );
    static final FunctionDescriptor g_rw_lock_writer_unlock$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_rw_lock_writer_unlock$MH = RuntimeHelper.downcallHandle(
        "g_rw_lock_writer_unlock",
        constants$54.g_rw_lock_writer_unlock$FUNC, false
    );
}


