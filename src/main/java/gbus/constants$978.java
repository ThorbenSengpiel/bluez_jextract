// Generated by jextract

package gbus;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$978 {

    static final FunctionDescriptor glib_autoptr_cleanup_GZlibDecompressor$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_autoptr_cleanup_GZlibDecompressor$MH = RuntimeHelper.downcallHandle(
        "glib_autoptr_cleanup_GZlibDecompressor",
        constants$978.glib_autoptr_cleanup_GZlibDecompressor$FUNC, false
    );
    static final FunctionDescriptor glib_listautoptr_cleanup_GZlibDecompressor$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_listautoptr_cleanup_GZlibDecompressor$MH = RuntimeHelper.downcallHandle(
        "glib_listautoptr_cleanup_GZlibDecompressor",
        constants$978.glib_listautoptr_cleanup_GZlibDecompressor$FUNC, false
    );
    static final FunctionDescriptor glib_slistautoptr_cleanup_GZlibDecompressor$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_slistautoptr_cleanup_GZlibDecompressor$MH = RuntimeHelper.downcallHandle(
        "glib_slistautoptr_cleanup_GZlibDecompressor",
        constants$978.glib_slistautoptr_cleanup_GZlibDecompressor$FUNC, false
    );
    static final FunctionDescriptor glib_queueautoptr_cleanup_GZlibDecompressor$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle glib_queueautoptr_cleanup_GZlibDecompressor$MH = RuntimeHelper.downcallHandle(
        "glib_queueautoptr_cleanup_GZlibDecompressor",
        constants$978.glib_queueautoptr_cleanup_GZlibDecompressor$FUNC, false
    );
    static final MemoryAddress NULL$ADDR = MemoryAddress.ofLong(0L);
    static final MemorySegment G_GNUC_FUNCTION$SEGMENT = RuntimeHelper.CONSTANT_ALLOCATOR.allocateUtf8String("");
}


