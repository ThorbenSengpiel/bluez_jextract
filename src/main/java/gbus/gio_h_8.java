// Generated by jextract

package gbus;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
 class gio_h_8 extends gio_h_7 {

    public static MethodHandle glib_autoptr_clear_GMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$925.glib_autoptr_clear_GMenuModel$MH,"glib_autoptr_clear_GMenuModel");
    }
    public static void glib_autoptr_clear_GMenuModel ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$925.glib_autoptr_clear_GMenuModel$MH, "glib_autoptr_clear_GMenuModel");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$925.glib_autoptr_cleanup_GMenuModel$MH,"glib_autoptr_cleanup_GMenuModel");
    }
    public static void glib_autoptr_cleanup_GMenuModel ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$925.glib_autoptr_cleanup_GMenuModel$MH, "glib_autoptr_cleanup_GMenuModel");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$925.glib_listautoptr_cleanup_GMenuModel$MH,"glib_listautoptr_cleanup_GMenuModel");
    }
    public static void glib_listautoptr_cleanup_GMenuModel ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$925.glib_listautoptr_cleanup_GMenuModel$MH, "glib_listautoptr_cleanup_GMenuModel");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$925.glib_slistautoptr_cleanup_GMenuModel$MH,"glib_slistautoptr_cleanup_GMenuModel");
    }
    public static void glib_slistautoptr_cleanup_GMenuModel ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$925.glib_slistautoptr_cleanup_GMenuModel$MH, "glib_slistautoptr_cleanup_GMenuModel");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMenuModel$MH() {
        return RuntimeHelper.requireNonNull(constants$926.glib_queueautoptr_cleanup_GMenuModel$MH,"glib_queueautoptr_cleanup_GMenuModel");
    }
    public static void glib_queueautoptr_cleanup_GMenuModel ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$926.glib_queueautoptr_cleanup_GMenuModel$MH, "glib_queueautoptr_cleanup_GMenuModel");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMenuAttributeIter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuAttributeIter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuAttributeIter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuAttributeIter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMenuAttributeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$926.glib_autoptr_clear_GMenuAttributeIter$MH,"glib_autoptr_clear_GMenuAttributeIter");
    }
    public static void glib_autoptr_clear_GMenuAttributeIter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$926.glib_autoptr_clear_GMenuAttributeIter$MH, "glib_autoptr_clear_GMenuAttributeIter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMenuAttributeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$926.glib_autoptr_cleanup_GMenuAttributeIter$MH,"glib_autoptr_cleanup_GMenuAttributeIter");
    }
    public static void glib_autoptr_cleanup_GMenuAttributeIter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$926.glib_autoptr_cleanup_GMenuAttributeIter$MH, "glib_autoptr_cleanup_GMenuAttributeIter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMenuAttributeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$926.glib_listautoptr_cleanup_GMenuAttributeIter$MH,"glib_listautoptr_cleanup_GMenuAttributeIter");
    }
    public static void glib_listautoptr_cleanup_GMenuAttributeIter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$926.glib_listautoptr_cleanup_GMenuAttributeIter$MH, "glib_listautoptr_cleanup_GMenuAttributeIter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMenuAttributeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$926.glib_slistautoptr_cleanup_GMenuAttributeIter$MH,"glib_slistautoptr_cleanup_GMenuAttributeIter");
    }
    public static void glib_slistautoptr_cleanup_GMenuAttributeIter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$926.glib_slistautoptr_cleanup_GMenuAttributeIter$MH, "glib_slistautoptr_cleanup_GMenuAttributeIter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMenuAttributeIter$MH() {
        return RuntimeHelper.requireNonNull(constants$926.glib_queueautoptr_cleanup_GMenuAttributeIter$MH,"glib_queueautoptr_cleanup_GMenuAttributeIter");
    }
    public static void glib_queueautoptr_cleanup_GMenuAttributeIter ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$926.glib_queueautoptr_cleanup_GMenuAttributeIter$MH, "glib_queueautoptr_cleanup_GMenuAttributeIter");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMenuLinkIter_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuLinkIter_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuLinkIter_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMenuLinkIter_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMenuLinkIter$MH() {
        return RuntimeHelper.requireNonNull(constants$927.glib_autoptr_clear_GMenuLinkIter$MH,"glib_autoptr_clear_GMenuLinkIter");
    }
    public static void glib_autoptr_clear_GMenuLinkIter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$927.glib_autoptr_clear_GMenuLinkIter$MH, "glib_autoptr_clear_GMenuLinkIter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMenuLinkIter$MH() {
        return RuntimeHelper.requireNonNull(constants$927.glib_autoptr_cleanup_GMenuLinkIter$MH,"glib_autoptr_cleanup_GMenuLinkIter");
    }
    public static void glib_autoptr_cleanup_GMenuLinkIter ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$927.glib_autoptr_cleanup_GMenuLinkIter$MH, "glib_autoptr_cleanup_GMenuLinkIter");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMenuLinkIter$MH() {
        return RuntimeHelper.requireNonNull(constants$927.glib_listautoptr_cleanup_GMenuLinkIter$MH,"glib_listautoptr_cleanup_GMenuLinkIter");
    }
    public static void glib_listautoptr_cleanup_GMenuLinkIter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$927.glib_listautoptr_cleanup_GMenuLinkIter$MH, "glib_listautoptr_cleanup_GMenuLinkIter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMenuLinkIter$MH() {
        return RuntimeHelper.requireNonNull(constants$927.glib_slistautoptr_cleanup_GMenuLinkIter$MH,"glib_slistautoptr_cleanup_GMenuLinkIter");
    }
    public static void glib_slistautoptr_cleanup_GMenuLinkIter ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$927.glib_slistautoptr_cleanup_GMenuLinkIter$MH, "glib_slistautoptr_cleanup_GMenuLinkIter");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMenuLinkIter$MH() {
        return RuntimeHelper.requireNonNull(constants$927.glib_queueautoptr_cleanup_GMenuLinkIter$MH,"glib_queueautoptr_cleanup_GMenuLinkIter");
    }
    public static void glib_queueautoptr_cleanup_GMenuLinkIter ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$927.glib_queueautoptr_cleanup_GMenuLinkIter$MH, "glib_queueautoptr_cleanup_GMenuLinkIter");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMount_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMount_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMount_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMount_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMount$MH() {
        return RuntimeHelper.requireNonNull(constants$927.glib_autoptr_clear_GMount$MH,"glib_autoptr_clear_GMount");
    }
    public static void glib_autoptr_clear_GMount ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$927.glib_autoptr_clear_GMount$MH, "glib_autoptr_clear_GMount");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMount$MH() {
        return RuntimeHelper.requireNonNull(constants$928.glib_autoptr_cleanup_GMount$MH,"glib_autoptr_cleanup_GMount");
    }
    public static void glib_autoptr_cleanup_GMount ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$928.glib_autoptr_cleanup_GMount$MH, "glib_autoptr_cleanup_GMount");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMount$MH() {
        return RuntimeHelper.requireNonNull(constants$928.glib_listautoptr_cleanup_GMount$MH,"glib_listautoptr_cleanup_GMount");
    }
    public static void glib_listautoptr_cleanup_GMount ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$928.glib_listautoptr_cleanup_GMount$MH, "glib_listautoptr_cleanup_GMount");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMount$MH() {
        return RuntimeHelper.requireNonNull(constants$928.glib_slistautoptr_cleanup_GMount$MH,"glib_slistautoptr_cleanup_GMount");
    }
    public static void glib_slistautoptr_cleanup_GMount ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$928.glib_slistautoptr_cleanup_GMount$MH, "glib_slistautoptr_cleanup_GMount");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMount$MH() {
        return RuntimeHelper.requireNonNull(constants$928.glib_queueautoptr_cleanup_GMount$MH,"glib_queueautoptr_cleanup_GMount");
    }
    public static void glib_queueautoptr_cleanup_GMount ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$928.glib_queueautoptr_cleanup_GMount$MH, "glib_queueautoptr_cleanup_GMount");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GMountOperation_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMountOperation_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMountOperation_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GMountOperation_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$928.glib_autoptr_clear_GMountOperation$MH,"glib_autoptr_clear_GMountOperation");
    }
    public static void glib_autoptr_clear_GMountOperation ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$928.glib_autoptr_clear_GMountOperation$MH, "glib_autoptr_clear_GMountOperation");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$928.glib_autoptr_cleanup_GMountOperation$MH,"glib_autoptr_cleanup_GMountOperation");
    }
    public static void glib_autoptr_cleanup_GMountOperation ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$928.glib_autoptr_cleanup_GMountOperation$MH, "glib_autoptr_cleanup_GMountOperation");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$929.glib_listautoptr_cleanup_GMountOperation$MH,"glib_listautoptr_cleanup_GMountOperation");
    }
    public static void glib_listautoptr_cleanup_GMountOperation ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$929.glib_listautoptr_cleanup_GMountOperation$MH, "glib_listautoptr_cleanup_GMountOperation");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$929.glib_slistautoptr_cleanup_GMountOperation$MH,"glib_slistautoptr_cleanup_GMountOperation");
    }
    public static void glib_slistautoptr_cleanup_GMountOperation ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$929.glib_slistautoptr_cleanup_GMountOperation$MH, "glib_slistautoptr_cleanup_GMountOperation");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GMountOperation$MH() {
        return RuntimeHelper.requireNonNull(constants$929.glib_queueautoptr_cleanup_GMountOperation$MH,"glib_queueautoptr_cleanup_GMountOperation");
    }
    public static void glib_queueautoptr_cleanup_GMountOperation ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$929.glib_queueautoptr_cleanup_GMountOperation$MH, "glib_queueautoptr_cleanup_GMountOperation");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GNativeVolumeMonitor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNativeVolumeMonitor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNativeVolumeMonitor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNativeVolumeMonitor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GNativeVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$929.glib_autoptr_clear_GNativeVolumeMonitor$MH,"glib_autoptr_clear_GNativeVolumeMonitor");
    }
    public static void glib_autoptr_clear_GNativeVolumeMonitor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$929.glib_autoptr_clear_GNativeVolumeMonitor$MH, "glib_autoptr_clear_GNativeVolumeMonitor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GNativeVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$929.glib_autoptr_cleanup_GNativeVolumeMonitor$MH,"glib_autoptr_cleanup_GNativeVolumeMonitor");
    }
    public static void glib_autoptr_cleanup_GNativeVolumeMonitor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$929.glib_autoptr_cleanup_GNativeVolumeMonitor$MH, "glib_autoptr_cleanup_GNativeVolumeMonitor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GNativeVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$929.glib_listautoptr_cleanup_GNativeVolumeMonitor$MH,"glib_listautoptr_cleanup_GNativeVolumeMonitor");
    }
    public static void glib_listautoptr_cleanup_GNativeVolumeMonitor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$929.glib_listautoptr_cleanup_GNativeVolumeMonitor$MH, "glib_listautoptr_cleanup_GNativeVolumeMonitor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GNativeVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_slistautoptr_cleanup_GNativeVolumeMonitor$MH,"glib_slistautoptr_cleanup_GNativeVolumeMonitor");
    }
    public static void glib_slistautoptr_cleanup_GNativeVolumeMonitor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$930.glib_slistautoptr_cleanup_GNativeVolumeMonitor$MH, "glib_slistautoptr_cleanup_GNativeVolumeMonitor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GNativeVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_queueautoptr_cleanup_GNativeVolumeMonitor$MH,"glib_queueautoptr_cleanup_GNativeVolumeMonitor");
    }
    public static void glib_queueautoptr_cleanup_GNativeVolumeMonitor ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$930.glib_queueautoptr_cleanup_GNativeVolumeMonitor$MH, "glib_queueautoptr_cleanup_GNativeVolumeMonitor");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GNetworkAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GNetworkAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_autoptr_clear_GNetworkAddress$MH,"glib_autoptr_clear_GNetworkAddress");
    }
    public static void glib_autoptr_clear_GNetworkAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$930.glib_autoptr_clear_GNetworkAddress$MH, "glib_autoptr_clear_GNetworkAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GNetworkAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_autoptr_cleanup_GNetworkAddress$MH,"glib_autoptr_cleanup_GNetworkAddress");
    }
    public static void glib_autoptr_cleanup_GNetworkAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$930.glib_autoptr_cleanup_GNetworkAddress$MH, "glib_autoptr_cleanup_GNetworkAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GNetworkAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_listautoptr_cleanup_GNetworkAddress$MH,"glib_listautoptr_cleanup_GNetworkAddress");
    }
    public static void glib_listautoptr_cleanup_GNetworkAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$930.glib_listautoptr_cleanup_GNetworkAddress$MH, "glib_listautoptr_cleanup_GNetworkAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GNetworkAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$930.glib_slistautoptr_cleanup_GNetworkAddress$MH,"glib_slistautoptr_cleanup_GNetworkAddress");
    }
    public static void glib_slistautoptr_cleanup_GNetworkAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$930.glib_slistautoptr_cleanup_GNetworkAddress$MH, "glib_slistautoptr_cleanup_GNetworkAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GNetworkAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_queueautoptr_cleanup_GNetworkAddress$MH,"glib_queueautoptr_cleanup_GNetworkAddress");
    }
    public static void glib_queueautoptr_cleanup_GNetworkAddress ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$931.glib_queueautoptr_cleanup_GNetworkAddress$MH, "glib_queueautoptr_cleanup_GNetworkAddress");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GNetworkMonitor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkMonitor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkMonitor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkMonitor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GNetworkMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_autoptr_clear_GNetworkMonitor$MH,"glib_autoptr_clear_GNetworkMonitor");
    }
    public static void glib_autoptr_clear_GNetworkMonitor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$931.glib_autoptr_clear_GNetworkMonitor$MH, "glib_autoptr_clear_GNetworkMonitor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GNetworkMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_autoptr_cleanup_GNetworkMonitor$MH,"glib_autoptr_cleanup_GNetworkMonitor");
    }
    public static void glib_autoptr_cleanup_GNetworkMonitor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$931.glib_autoptr_cleanup_GNetworkMonitor$MH, "glib_autoptr_cleanup_GNetworkMonitor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GNetworkMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_listautoptr_cleanup_GNetworkMonitor$MH,"glib_listautoptr_cleanup_GNetworkMonitor");
    }
    public static void glib_listautoptr_cleanup_GNetworkMonitor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$931.glib_listautoptr_cleanup_GNetworkMonitor$MH, "glib_listautoptr_cleanup_GNetworkMonitor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GNetworkMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_slistautoptr_cleanup_GNetworkMonitor$MH,"glib_slistautoptr_cleanup_GNetworkMonitor");
    }
    public static void glib_slistautoptr_cleanup_GNetworkMonitor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$931.glib_slistautoptr_cleanup_GNetworkMonitor$MH, "glib_slistautoptr_cleanup_GNetworkMonitor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GNetworkMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$931.glib_queueautoptr_cleanup_GNetworkMonitor$MH,"glib_queueautoptr_cleanup_GNetworkMonitor");
    }
    public static void glib_queueautoptr_cleanup_GNetworkMonitor ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$931.glib_queueautoptr_cleanup_GNetworkMonitor$MH, "glib_queueautoptr_cleanup_GNetworkMonitor");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GNetworkService_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkService_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkService_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNetworkService_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GNetworkService$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_autoptr_clear_GNetworkService$MH,"glib_autoptr_clear_GNetworkService");
    }
    public static void glib_autoptr_clear_GNetworkService ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$932.glib_autoptr_clear_GNetworkService$MH, "glib_autoptr_clear_GNetworkService");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GNetworkService$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_autoptr_cleanup_GNetworkService$MH,"glib_autoptr_cleanup_GNetworkService");
    }
    public static void glib_autoptr_cleanup_GNetworkService ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$932.glib_autoptr_cleanup_GNetworkService$MH, "glib_autoptr_cleanup_GNetworkService");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GNetworkService$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_listautoptr_cleanup_GNetworkService$MH,"glib_listautoptr_cleanup_GNetworkService");
    }
    public static void glib_listautoptr_cleanup_GNetworkService ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$932.glib_listautoptr_cleanup_GNetworkService$MH, "glib_listautoptr_cleanup_GNetworkService");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GNetworkService$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_slistautoptr_cleanup_GNetworkService$MH,"glib_slistautoptr_cleanup_GNetworkService");
    }
    public static void glib_slistautoptr_cleanup_GNetworkService ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$932.glib_slistautoptr_cleanup_GNetworkService$MH, "glib_slistautoptr_cleanup_GNetworkService");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GNetworkService$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_queueautoptr_cleanup_GNetworkService$MH,"glib_queueautoptr_cleanup_GNetworkService");
    }
    public static void glib_queueautoptr_cleanup_GNetworkService ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$932.glib_queueautoptr_cleanup_GNetworkService$MH, "glib_queueautoptr_cleanup_GNetworkService");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GNotification_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNotification_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNotification_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GNotification_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$932.glib_autoptr_clear_GNotification$MH,"glib_autoptr_clear_GNotification");
    }
    public static void glib_autoptr_clear_GNotification ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$932.glib_autoptr_clear_GNotification$MH, "glib_autoptr_clear_GNotification");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$933.glib_autoptr_cleanup_GNotification$MH,"glib_autoptr_cleanup_GNotification");
    }
    public static void glib_autoptr_cleanup_GNotification ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$933.glib_autoptr_cleanup_GNotification$MH, "glib_autoptr_cleanup_GNotification");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$933.glib_listautoptr_cleanup_GNotification$MH,"glib_listautoptr_cleanup_GNotification");
    }
    public static void glib_listautoptr_cleanup_GNotification ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$933.glib_listautoptr_cleanup_GNotification$MH, "glib_listautoptr_cleanup_GNotification");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$933.glib_slistautoptr_cleanup_GNotification$MH,"glib_slistautoptr_cleanup_GNotification");
    }
    public static void glib_slistautoptr_cleanup_GNotification ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$933.glib_slistautoptr_cleanup_GNotification$MH, "glib_slistautoptr_cleanup_GNotification");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$933.glib_queueautoptr_cleanup_GNotification$MH,"glib_queueautoptr_cleanup_GNotification");
    }
    public static void glib_queueautoptr_cleanup_GNotification ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$933.glib_queueautoptr_cleanup_GNotification$MH, "glib_queueautoptr_cleanup_GNotification");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$933.glib_autoptr_clear_GOutputStream$MH,"glib_autoptr_clear_GOutputStream");
    }
    public static void glib_autoptr_clear_GOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$933.glib_autoptr_clear_GOutputStream$MH, "glib_autoptr_clear_GOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$933.glib_autoptr_cleanup_GOutputStream$MH,"glib_autoptr_cleanup_GOutputStream");
    }
    public static void glib_autoptr_cleanup_GOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$933.glib_autoptr_cleanup_GOutputStream$MH, "glib_autoptr_cleanup_GOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$934.glib_listautoptr_cleanup_GOutputStream$MH,"glib_listautoptr_cleanup_GOutputStream");
    }
    public static void glib_listautoptr_cleanup_GOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$934.glib_listautoptr_cleanup_GOutputStream$MH, "glib_listautoptr_cleanup_GOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$934.glib_slistautoptr_cleanup_GOutputStream$MH,"glib_slistautoptr_cleanup_GOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$934.glib_slistautoptr_cleanup_GOutputStream$MH, "glib_slistautoptr_cleanup_GOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$934.glib_queueautoptr_cleanup_GOutputStream$MH,"glib_queueautoptr_cleanup_GOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GOutputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$934.glib_queueautoptr_cleanup_GOutputStream$MH, "glib_queueautoptr_cleanup_GOutputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GPermission_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPermission_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPermission_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPermission_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GPermission$MH() {
        return RuntimeHelper.requireNonNull(constants$934.glib_autoptr_clear_GPermission$MH,"glib_autoptr_clear_GPermission");
    }
    public static void glib_autoptr_clear_GPermission ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$934.glib_autoptr_clear_GPermission$MH, "glib_autoptr_clear_GPermission");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GPermission$MH() {
        return RuntimeHelper.requireNonNull(constants$934.glib_autoptr_cleanup_GPermission$MH,"glib_autoptr_cleanup_GPermission");
    }
    public static void glib_autoptr_cleanup_GPermission ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$934.glib_autoptr_cleanup_GPermission$MH, "glib_autoptr_cleanup_GPermission");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GPermission$MH() {
        return RuntimeHelper.requireNonNull(constants$934.glib_listautoptr_cleanup_GPermission$MH,"glib_listautoptr_cleanup_GPermission");
    }
    public static void glib_listautoptr_cleanup_GPermission ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$934.glib_listautoptr_cleanup_GPermission$MH, "glib_listautoptr_cleanup_GPermission");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GPermission$MH() {
        return RuntimeHelper.requireNonNull(constants$935.glib_slistautoptr_cleanup_GPermission$MH,"glib_slistautoptr_cleanup_GPermission");
    }
    public static void glib_slistautoptr_cleanup_GPermission ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$935.glib_slistautoptr_cleanup_GPermission$MH, "glib_slistautoptr_cleanup_GPermission");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GPermission$MH() {
        return RuntimeHelper.requireNonNull(constants$935.glib_queueautoptr_cleanup_GPermission$MH,"glib_queueautoptr_cleanup_GPermission");
    }
    public static void glib_queueautoptr_cleanup_GPermission ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$935.glib_queueautoptr_cleanup_GPermission$MH, "glib_queueautoptr_cleanup_GPermission");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GPollableInputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableInputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableInputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableInputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GPollableInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$935.glib_autoptr_clear_GPollableInputStream$MH,"glib_autoptr_clear_GPollableInputStream");
    }
    public static void glib_autoptr_clear_GPollableInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$935.glib_autoptr_clear_GPollableInputStream$MH, "glib_autoptr_clear_GPollableInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GPollableInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$935.glib_autoptr_cleanup_GPollableInputStream$MH,"glib_autoptr_cleanup_GPollableInputStream");
    }
    public static void glib_autoptr_cleanup_GPollableInputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$935.glib_autoptr_cleanup_GPollableInputStream$MH, "glib_autoptr_cleanup_GPollableInputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GPollableInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$935.glib_listautoptr_cleanup_GPollableInputStream$MH,"glib_listautoptr_cleanup_GPollableInputStream");
    }
    public static void glib_listautoptr_cleanup_GPollableInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$935.glib_listautoptr_cleanup_GPollableInputStream$MH, "glib_listautoptr_cleanup_GPollableInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GPollableInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$935.glib_slistautoptr_cleanup_GPollableInputStream$MH,"glib_slistautoptr_cleanup_GPollableInputStream");
    }
    public static void glib_slistautoptr_cleanup_GPollableInputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$935.glib_slistautoptr_cleanup_GPollableInputStream$MH, "glib_slistautoptr_cleanup_GPollableInputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GPollableInputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$936.glib_queueautoptr_cleanup_GPollableInputStream$MH,"glib_queueautoptr_cleanup_GPollableInputStream");
    }
    public static void glib_queueautoptr_cleanup_GPollableInputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$936.glib_queueautoptr_cleanup_GPollableInputStream$MH, "glib_queueautoptr_cleanup_GPollableInputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GPollableOutputStream_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableOutputStream_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableOutputStream_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPollableOutputStream_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GPollableOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$936.glib_autoptr_clear_GPollableOutputStream$MH,"glib_autoptr_clear_GPollableOutputStream");
    }
    public static void glib_autoptr_clear_GPollableOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$936.glib_autoptr_clear_GPollableOutputStream$MH, "glib_autoptr_clear_GPollableOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GPollableOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$936.glib_autoptr_cleanup_GPollableOutputStream$MH,"glib_autoptr_cleanup_GPollableOutputStream");
    }
    public static void glib_autoptr_cleanup_GPollableOutputStream ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$936.glib_autoptr_cleanup_GPollableOutputStream$MH, "glib_autoptr_cleanup_GPollableOutputStream");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GPollableOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$936.glib_listautoptr_cleanup_GPollableOutputStream$MH,"glib_listautoptr_cleanup_GPollableOutputStream");
    }
    public static void glib_listautoptr_cleanup_GPollableOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$936.glib_listautoptr_cleanup_GPollableOutputStream$MH, "glib_listautoptr_cleanup_GPollableOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GPollableOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$936.glib_slistautoptr_cleanup_GPollableOutputStream$MH,"glib_slistautoptr_cleanup_GPollableOutputStream");
    }
    public static void glib_slistautoptr_cleanup_GPollableOutputStream ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$936.glib_slistautoptr_cleanup_GPollableOutputStream$MH, "glib_slistautoptr_cleanup_GPollableOutputStream");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GPollableOutputStream$MH() {
        return RuntimeHelper.requireNonNull(constants$936.glib_queueautoptr_cleanup_GPollableOutputStream$MH,"glib_queueautoptr_cleanup_GPollableOutputStream");
    }
    public static void glib_queueautoptr_cleanup_GPollableOutputStream ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$936.glib_queueautoptr_cleanup_GPollableOutputStream$MH, "glib_queueautoptr_cleanup_GPollableOutputStream");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GPropertyAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPropertyAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPropertyAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GPropertyAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GPropertyAction$MH() {
        return RuntimeHelper.requireNonNull(constants$937.glib_autoptr_clear_GPropertyAction$MH,"glib_autoptr_clear_GPropertyAction");
    }
    public static void glib_autoptr_clear_GPropertyAction ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$937.glib_autoptr_clear_GPropertyAction$MH, "glib_autoptr_clear_GPropertyAction");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GPropertyAction$MH() {
        return RuntimeHelper.requireNonNull(constants$937.glib_autoptr_cleanup_GPropertyAction$MH,"glib_autoptr_cleanup_GPropertyAction");
    }
    public static void glib_autoptr_cleanup_GPropertyAction ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$937.glib_autoptr_cleanup_GPropertyAction$MH, "glib_autoptr_cleanup_GPropertyAction");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GPropertyAction$MH() {
        return RuntimeHelper.requireNonNull(constants$937.glib_listautoptr_cleanup_GPropertyAction$MH,"glib_listautoptr_cleanup_GPropertyAction");
    }
    public static void glib_listautoptr_cleanup_GPropertyAction ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$937.glib_listautoptr_cleanup_GPropertyAction$MH, "glib_listautoptr_cleanup_GPropertyAction");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GPropertyAction$MH() {
        return RuntimeHelper.requireNonNull(constants$937.glib_slistautoptr_cleanup_GPropertyAction$MH,"glib_slistautoptr_cleanup_GPropertyAction");
    }
    public static void glib_slistautoptr_cleanup_GPropertyAction ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$937.glib_slistautoptr_cleanup_GPropertyAction$MH, "glib_slistautoptr_cleanup_GPropertyAction");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GPropertyAction$MH() {
        return RuntimeHelper.requireNonNull(constants$937.glib_queueautoptr_cleanup_GPropertyAction$MH,"glib_queueautoptr_cleanup_GPropertyAction");
    }
    public static void glib_queueautoptr_cleanup_GPropertyAction ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$937.glib_queueautoptr_cleanup_GPropertyAction$MH, "glib_queueautoptr_cleanup_GPropertyAction");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GProxyAddressEnumerator_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddressEnumerator_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddressEnumerator_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddressEnumerator_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GProxyAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$937.glib_autoptr_clear_GProxyAddressEnumerator$MH,"glib_autoptr_clear_GProxyAddressEnumerator");
    }
    public static void glib_autoptr_clear_GProxyAddressEnumerator ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$937.glib_autoptr_clear_GProxyAddressEnumerator$MH, "glib_autoptr_clear_GProxyAddressEnumerator");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GProxyAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$938.glib_autoptr_cleanup_GProxyAddressEnumerator$MH,"glib_autoptr_cleanup_GProxyAddressEnumerator");
    }
    public static void glib_autoptr_cleanup_GProxyAddressEnumerator ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$938.glib_autoptr_cleanup_GProxyAddressEnumerator$MH, "glib_autoptr_cleanup_GProxyAddressEnumerator");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GProxyAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$938.glib_listautoptr_cleanup_GProxyAddressEnumerator$MH,"glib_listautoptr_cleanup_GProxyAddressEnumerator");
    }
    public static void glib_listautoptr_cleanup_GProxyAddressEnumerator ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$938.glib_listautoptr_cleanup_GProxyAddressEnumerator$MH, "glib_listautoptr_cleanup_GProxyAddressEnumerator");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GProxyAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$938.glib_slistautoptr_cleanup_GProxyAddressEnumerator$MH,"glib_slistautoptr_cleanup_GProxyAddressEnumerator");
    }
    public static void glib_slistautoptr_cleanup_GProxyAddressEnumerator ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$938.glib_slistautoptr_cleanup_GProxyAddressEnumerator$MH, "glib_slistautoptr_cleanup_GProxyAddressEnumerator");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GProxyAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$938.glib_queueautoptr_cleanup_GProxyAddressEnumerator$MH,"glib_queueautoptr_cleanup_GProxyAddressEnumerator");
    }
    public static void glib_queueautoptr_cleanup_GProxyAddressEnumerator ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$938.glib_queueautoptr_cleanup_GProxyAddressEnumerator$MH, "glib_queueautoptr_cleanup_GProxyAddressEnumerator");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GProxyAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GProxyAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$938.glib_autoptr_clear_GProxyAddress$MH,"glib_autoptr_clear_GProxyAddress");
    }
    public static void glib_autoptr_clear_GProxyAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$938.glib_autoptr_clear_GProxyAddress$MH, "glib_autoptr_clear_GProxyAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GProxyAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$938.glib_autoptr_cleanup_GProxyAddress$MH,"glib_autoptr_cleanup_GProxyAddress");
    }
    public static void glib_autoptr_cleanup_GProxyAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$938.glib_autoptr_cleanup_GProxyAddress$MH, "glib_autoptr_cleanup_GProxyAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GProxyAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$939.glib_listautoptr_cleanup_GProxyAddress$MH,"glib_listautoptr_cleanup_GProxyAddress");
    }
    public static void glib_listautoptr_cleanup_GProxyAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$939.glib_listautoptr_cleanup_GProxyAddress$MH, "glib_listautoptr_cleanup_GProxyAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GProxyAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$939.glib_slistautoptr_cleanup_GProxyAddress$MH,"glib_slistautoptr_cleanup_GProxyAddress");
    }
    public static void glib_slistautoptr_cleanup_GProxyAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$939.glib_slistautoptr_cleanup_GProxyAddress$MH, "glib_slistautoptr_cleanup_GProxyAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GProxyAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$939.glib_queueautoptr_cleanup_GProxyAddress$MH,"glib_queueautoptr_cleanup_GProxyAddress");
    }
    public static void glib_queueautoptr_cleanup_GProxyAddress ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$939.glib_queueautoptr_cleanup_GProxyAddress$MH, "glib_queueautoptr_cleanup_GProxyAddress");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GProxy_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxy_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxy_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxy_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$939.glib_autoptr_clear_GProxy$MH,"glib_autoptr_clear_GProxy");
    }
    public static void glib_autoptr_clear_GProxy ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$939.glib_autoptr_clear_GProxy$MH, "glib_autoptr_clear_GProxy");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$939.glib_autoptr_cleanup_GProxy$MH,"glib_autoptr_cleanup_GProxy");
    }
    public static void glib_autoptr_cleanup_GProxy ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$939.glib_autoptr_cleanup_GProxy$MH, "glib_autoptr_cleanup_GProxy");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$939.glib_listautoptr_cleanup_GProxy$MH,"glib_listautoptr_cleanup_GProxy");
    }
    public static void glib_listautoptr_cleanup_GProxy ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$939.glib_listautoptr_cleanup_GProxy$MH, "glib_listautoptr_cleanup_GProxy");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$940.glib_slistautoptr_cleanup_GProxy$MH,"glib_slistautoptr_cleanup_GProxy");
    }
    public static void glib_slistautoptr_cleanup_GProxy ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$940.glib_slistautoptr_cleanup_GProxy$MH, "glib_slistautoptr_cleanup_GProxy");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$940.glib_queueautoptr_cleanup_GProxy$MH,"glib_queueautoptr_cleanup_GProxy");
    }
    public static void glib_queueautoptr_cleanup_GProxy ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$940.glib_queueautoptr_cleanup_GProxy$MH, "glib_queueautoptr_cleanup_GProxy");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GProxyResolver_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyResolver_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyResolver_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GProxyResolver_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$940.glib_autoptr_clear_GProxyResolver$MH,"glib_autoptr_clear_GProxyResolver");
    }
    public static void glib_autoptr_clear_GProxyResolver ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$940.glib_autoptr_clear_GProxyResolver$MH, "glib_autoptr_clear_GProxyResolver");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$940.glib_autoptr_cleanup_GProxyResolver$MH,"glib_autoptr_cleanup_GProxyResolver");
    }
    public static void glib_autoptr_cleanup_GProxyResolver ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$940.glib_autoptr_cleanup_GProxyResolver$MH, "glib_autoptr_cleanup_GProxyResolver");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$940.glib_listautoptr_cleanup_GProxyResolver$MH,"glib_listautoptr_cleanup_GProxyResolver");
    }
    public static void glib_listautoptr_cleanup_GProxyResolver ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$940.glib_listautoptr_cleanup_GProxyResolver$MH, "glib_listautoptr_cleanup_GProxyResolver");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$940.glib_slistautoptr_cleanup_GProxyResolver$MH,"glib_slistautoptr_cleanup_GProxyResolver");
    }
    public static void glib_slistautoptr_cleanup_GProxyResolver ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$940.glib_slistautoptr_cleanup_GProxyResolver$MH, "glib_slistautoptr_cleanup_GProxyResolver");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$941.glib_queueautoptr_cleanup_GProxyResolver$MH,"glib_queueautoptr_cleanup_GProxyResolver");
    }
    public static void glib_queueautoptr_cleanup_GProxyResolver ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$941.glib_queueautoptr_cleanup_GProxyResolver$MH, "glib_queueautoptr_cleanup_GProxyResolver");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GRemoteActionGroup_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRemoteActionGroup_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRemoteActionGroup_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GRemoteActionGroup_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GRemoteActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$941.glib_autoptr_clear_GRemoteActionGroup$MH,"glib_autoptr_clear_GRemoteActionGroup");
    }
    public static void glib_autoptr_clear_GRemoteActionGroup ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$941.glib_autoptr_clear_GRemoteActionGroup$MH, "glib_autoptr_clear_GRemoteActionGroup");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GRemoteActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$941.glib_autoptr_cleanup_GRemoteActionGroup$MH,"glib_autoptr_cleanup_GRemoteActionGroup");
    }
    public static void glib_autoptr_cleanup_GRemoteActionGroup ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$941.glib_autoptr_cleanup_GRemoteActionGroup$MH, "glib_autoptr_cleanup_GRemoteActionGroup");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GRemoteActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$941.glib_listautoptr_cleanup_GRemoteActionGroup$MH,"glib_listautoptr_cleanup_GRemoteActionGroup");
    }
    public static void glib_listautoptr_cleanup_GRemoteActionGroup ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$941.glib_listautoptr_cleanup_GRemoteActionGroup$MH, "glib_listautoptr_cleanup_GRemoteActionGroup");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GRemoteActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$941.glib_slistautoptr_cleanup_GRemoteActionGroup$MH,"glib_slistautoptr_cleanup_GRemoteActionGroup");
    }
    public static void glib_slistautoptr_cleanup_GRemoteActionGroup ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$941.glib_slistautoptr_cleanup_GRemoteActionGroup$MH, "glib_slistautoptr_cleanup_GRemoteActionGroup");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GRemoteActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$941.glib_queueautoptr_cleanup_GRemoteActionGroup$MH,"glib_queueautoptr_cleanup_GRemoteActionGroup");
    }
    public static void glib_queueautoptr_cleanup_GRemoteActionGroup ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$941.glib_queueautoptr_cleanup_GRemoteActionGroup$MH, "glib_queueautoptr_cleanup_GRemoteActionGroup");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GResolver_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResolver_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResolver_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResolver_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$942.glib_autoptr_clear_GResolver$MH,"glib_autoptr_clear_GResolver");
    }
    public static void glib_autoptr_clear_GResolver ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$942.glib_autoptr_clear_GResolver$MH, "glib_autoptr_clear_GResolver");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$942.glib_autoptr_cleanup_GResolver$MH,"glib_autoptr_cleanup_GResolver");
    }
    public static void glib_autoptr_cleanup_GResolver ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$942.glib_autoptr_cleanup_GResolver$MH, "glib_autoptr_cleanup_GResolver");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$942.glib_listautoptr_cleanup_GResolver$MH,"glib_listautoptr_cleanup_GResolver");
    }
    public static void glib_listautoptr_cleanup_GResolver ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$942.glib_listautoptr_cleanup_GResolver$MH, "glib_listautoptr_cleanup_GResolver");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$942.glib_slistautoptr_cleanup_GResolver$MH,"glib_slistautoptr_cleanup_GResolver");
    }
    public static void glib_slistautoptr_cleanup_GResolver ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$942.glib_slistautoptr_cleanup_GResolver$MH, "glib_slistautoptr_cleanup_GResolver");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$942.glib_queueautoptr_cleanup_GResolver$MH,"glib_queueautoptr_cleanup_GResolver");
    }
    public static void glib_queueautoptr_cleanup_GResolver ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$942.glib_queueautoptr_cleanup_GResolver$MH, "glib_queueautoptr_cleanup_GResolver");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GResource_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResource_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResource_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GResource_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GResource$MH() {
        return RuntimeHelper.requireNonNull(constants$942.glib_autoptr_clear_GResource$MH,"glib_autoptr_clear_GResource");
    }
    public static void glib_autoptr_clear_GResource ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$942.glib_autoptr_clear_GResource$MH, "glib_autoptr_clear_GResource");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GResource$MH() {
        return RuntimeHelper.requireNonNull(constants$943.glib_autoptr_cleanup_GResource$MH,"glib_autoptr_cleanup_GResource");
    }
    public static void glib_autoptr_cleanup_GResource ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$943.glib_autoptr_cleanup_GResource$MH, "glib_autoptr_cleanup_GResource");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GResource$MH() {
        return RuntimeHelper.requireNonNull(constants$943.glib_listautoptr_cleanup_GResource$MH,"glib_listautoptr_cleanup_GResource");
    }
    public static void glib_listautoptr_cleanup_GResource ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$943.glib_listautoptr_cleanup_GResource$MH, "glib_listautoptr_cleanup_GResource");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GResource$MH() {
        return RuntimeHelper.requireNonNull(constants$943.glib_slistautoptr_cleanup_GResource$MH,"glib_slistautoptr_cleanup_GResource");
    }
    public static void glib_slistautoptr_cleanup_GResource ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$943.glib_slistautoptr_cleanup_GResource$MH, "glib_slistautoptr_cleanup_GResource");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GResource$MH() {
        return RuntimeHelper.requireNonNull(constants$943.glib_queueautoptr_cleanup_GResource$MH,"glib_queueautoptr_cleanup_GResource");
    }
    public static void glib_queueautoptr_cleanup_GResource ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$943.glib_queueautoptr_cleanup_GResource$MH, "glib_queueautoptr_cleanup_GResource");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSeekable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSeekable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSeekable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSeekable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSeekable$MH() {
        return RuntimeHelper.requireNonNull(constants$943.glib_autoptr_clear_GSeekable$MH,"glib_autoptr_clear_GSeekable");
    }
    public static void glib_autoptr_clear_GSeekable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$943.glib_autoptr_clear_GSeekable$MH, "glib_autoptr_clear_GSeekable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSeekable$MH() {
        return RuntimeHelper.requireNonNull(constants$943.glib_autoptr_cleanup_GSeekable$MH,"glib_autoptr_cleanup_GSeekable");
    }
    public static void glib_autoptr_cleanup_GSeekable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$943.glib_autoptr_cleanup_GSeekable$MH, "glib_autoptr_cleanup_GSeekable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSeekable$MH() {
        return RuntimeHelper.requireNonNull(constants$944.glib_listautoptr_cleanup_GSeekable$MH,"glib_listautoptr_cleanup_GSeekable");
    }
    public static void glib_listautoptr_cleanup_GSeekable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$944.glib_listautoptr_cleanup_GSeekable$MH, "glib_listautoptr_cleanup_GSeekable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSeekable$MH() {
        return RuntimeHelper.requireNonNull(constants$944.glib_slistautoptr_cleanup_GSeekable$MH,"glib_slistautoptr_cleanup_GSeekable");
    }
    public static void glib_slistautoptr_cleanup_GSeekable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$944.glib_slistautoptr_cleanup_GSeekable$MH, "glib_slistautoptr_cleanup_GSeekable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSeekable$MH() {
        return RuntimeHelper.requireNonNull(constants$944.glib_queueautoptr_cleanup_GSeekable$MH,"glib_queueautoptr_cleanup_GSeekable");
    }
    public static void glib_queueautoptr_cleanup_GSeekable ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$944.glib_queueautoptr_cleanup_GSeekable$MH, "glib_queueautoptr_cleanup_GSeekable");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSettingsBackend_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsBackend_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsBackend_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsBackend_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSettingsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$944.glib_autoptr_clear_GSettingsBackend$MH,"glib_autoptr_clear_GSettingsBackend");
    }
    public static void glib_autoptr_clear_GSettingsBackend ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$944.glib_autoptr_clear_GSettingsBackend$MH, "glib_autoptr_clear_GSettingsBackend");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSettingsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$944.glib_autoptr_cleanup_GSettingsBackend$MH,"glib_autoptr_cleanup_GSettingsBackend");
    }
    public static void glib_autoptr_cleanup_GSettingsBackend ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$944.glib_autoptr_cleanup_GSettingsBackend$MH, "glib_autoptr_cleanup_GSettingsBackend");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSettingsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$944.glib_listautoptr_cleanup_GSettingsBackend$MH,"glib_listautoptr_cleanup_GSettingsBackend");
    }
    public static void glib_listautoptr_cleanup_GSettingsBackend ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$944.glib_listautoptr_cleanup_GSettingsBackend$MH, "glib_listautoptr_cleanup_GSettingsBackend");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSettingsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$945.glib_slistautoptr_cleanup_GSettingsBackend$MH,"glib_slistautoptr_cleanup_GSettingsBackend");
    }
    public static void glib_slistautoptr_cleanup_GSettingsBackend ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$945.glib_slistautoptr_cleanup_GSettingsBackend$MH, "glib_slistautoptr_cleanup_GSettingsBackend");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSettingsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$945.glib_queueautoptr_cleanup_GSettingsBackend$MH,"glib_queueautoptr_cleanup_GSettingsBackend");
    }
    public static void glib_queueautoptr_cleanup_GSettingsBackend ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$945.glib_queueautoptr_cleanup_GSettingsBackend$MH, "glib_queueautoptr_cleanup_GSettingsBackend");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSettingsSchema_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchema_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchema_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchema_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSettingsSchema$MH() {
        return RuntimeHelper.requireNonNull(constants$945.glib_autoptr_clear_GSettingsSchema$MH,"glib_autoptr_clear_GSettingsSchema");
    }
    public static void glib_autoptr_clear_GSettingsSchema ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$945.glib_autoptr_clear_GSettingsSchema$MH, "glib_autoptr_clear_GSettingsSchema");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSettingsSchema$MH() {
        return RuntimeHelper.requireNonNull(constants$945.glib_autoptr_cleanup_GSettingsSchema$MH,"glib_autoptr_cleanup_GSettingsSchema");
    }
    public static void glib_autoptr_cleanup_GSettingsSchema ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$945.glib_autoptr_cleanup_GSettingsSchema$MH, "glib_autoptr_cleanup_GSettingsSchema");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSettingsSchema$MH() {
        return RuntimeHelper.requireNonNull(constants$945.glib_listautoptr_cleanup_GSettingsSchema$MH,"glib_listautoptr_cleanup_GSettingsSchema");
    }
    public static void glib_listautoptr_cleanup_GSettingsSchema ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$945.glib_listautoptr_cleanup_GSettingsSchema$MH, "glib_listautoptr_cleanup_GSettingsSchema");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSettingsSchema$MH() {
        return RuntimeHelper.requireNonNull(constants$945.glib_slistautoptr_cleanup_GSettingsSchema$MH,"glib_slistautoptr_cleanup_GSettingsSchema");
    }
    public static void glib_slistautoptr_cleanup_GSettingsSchema ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$945.glib_slistautoptr_cleanup_GSettingsSchema$MH, "glib_slistautoptr_cleanup_GSettingsSchema");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSettingsSchema$MH() {
        return RuntimeHelper.requireNonNull(constants$946.glib_queueautoptr_cleanup_GSettingsSchema$MH,"glib_queueautoptr_cleanup_GSettingsSchema");
    }
    public static void glib_queueautoptr_cleanup_GSettingsSchema ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$946.glib_queueautoptr_cleanup_GSettingsSchema$MH, "glib_queueautoptr_cleanup_GSettingsSchema");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSettingsSchemaKey_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaKey_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaKey_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaKey_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSettingsSchemaKey$MH() {
        return RuntimeHelper.requireNonNull(constants$946.glib_autoptr_clear_GSettingsSchemaKey$MH,"glib_autoptr_clear_GSettingsSchemaKey");
    }
    public static void glib_autoptr_clear_GSettingsSchemaKey ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$946.glib_autoptr_clear_GSettingsSchemaKey$MH, "glib_autoptr_clear_GSettingsSchemaKey");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSettingsSchemaKey$MH() {
        return RuntimeHelper.requireNonNull(constants$946.glib_autoptr_cleanup_GSettingsSchemaKey$MH,"glib_autoptr_cleanup_GSettingsSchemaKey");
    }
    public static void glib_autoptr_cleanup_GSettingsSchemaKey ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$946.glib_autoptr_cleanup_GSettingsSchemaKey$MH, "glib_autoptr_cleanup_GSettingsSchemaKey");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSettingsSchemaKey$MH() {
        return RuntimeHelper.requireNonNull(constants$946.glib_listautoptr_cleanup_GSettingsSchemaKey$MH,"glib_listautoptr_cleanup_GSettingsSchemaKey");
    }
    public static void glib_listautoptr_cleanup_GSettingsSchemaKey ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$946.glib_listautoptr_cleanup_GSettingsSchemaKey$MH, "glib_listautoptr_cleanup_GSettingsSchemaKey");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSettingsSchemaKey$MH() {
        return RuntimeHelper.requireNonNull(constants$946.glib_slistautoptr_cleanup_GSettingsSchemaKey$MH,"glib_slistautoptr_cleanup_GSettingsSchemaKey");
    }
    public static void glib_slistautoptr_cleanup_GSettingsSchemaKey ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$946.glib_slistautoptr_cleanup_GSettingsSchemaKey$MH, "glib_slistautoptr_cleanup_GSettingsSchemaKey");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSettingsSchemaKey$MH() {
        return RuntimeHelper.requireNonNull(constants$946.glib_queueautoptr_cleanup_GSettingsSchemaKey$MH,"glib_queueautoptr_cleanup_GSettingsSchemaKey");
    }
    public static void glib_queueautoptr_cleanup_GSettingsSchemaKey ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$946.glib_queueautoptr_cleanup_GSettingsSchemaKey$MH, "glib_queueautoptr_cleanup_GSettingsSchemaKey");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSettingsSchemaSource_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaSource_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaSource_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettingsSchemaSource_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSettingsSchemaSource$MH() {
        return RuntimeHelper.requireNonNull(constants$947.glib_autoptr_clear_GSettingsSchemaSource$MH,"glib_autoptr_clear_GSettingsSchemaSource");
    }
    public static void glib_autoptr_clear_GSettingsSchemaSource ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$947.glib_autoptr_clear_GSettingsSchemaSource$MH, "glib_autoptr_clear_GSettingsSchemaSource");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSettingsSchemaSource$MH() {
        return RuntimeHelper.requireNonNull(constants$947.glib_autoptr_cleanup_GSettingsSchemaSource$MH,"glib_autoptr_cleanup_GSettingsSchemaSource");
    }
    public static void glib_autoptr_cleanup_GSettingsSchemaSource ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$947.glib_autoptr_cleanup_GSettingsSchemaSource$MH, "glib_autoptr_cleanup_GSettingsSchemaSource");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSettingsSchemaSource$MH() {
        return RuntimeHelper.requireNonNull(constants$947.glib_listautoptr_cleanup_GSettingsSchemaSource$MH,"glib_listautoptr_cleanup_GSettingsSchemaSource");
    }
    public static void glib_listautoptr_cleanup_GSettingsSchemaSource ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$947.glib_listautoptr_cleanup_GSettingsSchemaSource$MH, "glib_listautoptr_cleanup_GSettingsSchemaSource");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSettingsSchemaSource$MH() {
        return RuntimeHelper.requireNonNull(constants$947.glib_slistautoptr_cleanup_GSettingsSchemaSource$MH,"glib_slistautoptr_cleanup_GSettingsSchemaSource");
    }
    public static void glib_slistautoptr_cleanup_GSettingsSchemaSource ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$947.glib_slistautoptr_cleanup_GSettingsSchemaSource$MH, "glib_slistautoptr_cleanup_GSettingsSchemaSource");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSettingsSchemaSource$MH() {
        return RuntimeHelper.requireNonNull(constants$947.glib_queueautoptr_cleanup_GSettingsSchemaSource$MH,"glib_queueautoptr_cleanup_GSettingsSchemaSource");
    }
    public static void glib_queueautoptr_cleanup_GSettingsSchemaSource ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$947.glib_queueautoptr_cleanup_GSettingsSchemaSource$MH, "glib_queueautoptr_cleanup_GSettingsSchemaSource");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSettings_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettings_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettings_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSettings_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$947.glib_autoptr_clear_GSettings$MH,"glib_autoptr_clear_GSettings");
    }
    public static void glib_autoptr_clear_GSettings ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$947.glib_autoptr_clear_GSettings$MH, "glib_autoptr_clear_GSettings");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$948.glib_autoptr_cleanup_GSettings$MH,"glib_autoptr_cleanup_GSettings");
    }
    public static void glib_autoptr_cleanup_GSettings ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$948.glib_autoptr_cleanup_GSettings$MH, "glib_autoptr_cleanup_GSettings");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$948.glib_listautoptr_cleanup_GSettings$MH,"glib_listautoptr_cleanup_GSettings");
    }
    public static void glib_listautoptr_cleanup_GSettings ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$948.glib_listautoptr_cleanup_GSettings$MH, "glib_listautoptr_cleanup_GSettings");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$948.glib_slistautoptr_cleanup_GSettings$MH,"glib_slistautoptr_cleanup_GSettings");
    }
    public static void glib_slistautoptr_cleanup_GSettings ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$948.glib_slistautoptr_cleanup_GSettings$MH, "glib_slistautoptr_cleanup_GSettings");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSettings$MH() {
        return RuntimeHelper.requireNonNull(constants$948.glib_queueautoptr_cleanup_GSettings$MH,"glib_queueautoptr_cleanup_GSettings");
    }
    public static void glib_queueautoptr_cleanup_GSettings ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$948.glib_queueautoptr_cleanup_GSettings$MH, "glib_queueautoptr_cleanup_GSettings");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSimpleActionGroup_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleActionGroup_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleActionGroup_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleActionGroup_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSimpleActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$948.glib_autoptr_clear_GSimpleActionGroup$MH,"glib_autoptr_clear_GSimpleActionGroup");
    }
    public static void glib_autoptr_clear_GSimpleActionGroup ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$948.glib_autoptr_clear_GSimpleActionGroup$MH, "glib_autoptr_clear_GSimpleActionGroup");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSimpleActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$948.glib_autoptr_cleanup_GSimpleActionGroup$MH,"glib_autoptr_cleanup_GSimpleActionGroup");
    }
    public static void glib_autoptr_cleanup_GSimpleActionGroup ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$948.glib_autoptr_cleanup_GSimpleActionGroup$MH, "glib_autoptr_cleanup_GSimpleActionGroup");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSimpleActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$949.glib_listautoptr_cleanup_GSimpleActionGroup$MH,"glib_listautoptr_cleanup_GSimpleActionGroup");
    }
    public static void glib_listautoptr_cleanup_GSimpleActionGroup ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$949.glib_listautoptr_cleanup_GSimpleActionGroup$MH, "glib_listautoptr_cleanup_GSimpleActionGroup");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSimpleActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$949.glib_slistautoptr_cleanup_GSimpleActionGroup$MH,"glib_slistautoptr_cleanup_GSimpleActionGroup");
    }
    public static void glib_slistautoptr_cleanup_GSimpleActionGroup ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$949.glib_slistautoptr_cleanup_GSimpleActionGroup$MH, "glib_slistautoptr_cleanup_GSimpleActionGroup");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSimpleActionGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$949.glib_queueautoptr_cleanup_GSimpleActionGroup$MH,"glib_queueautoptr_cleanup_GSimpleActionGroup");
    }
    public static void glib_queueautoptr_cleanup_GSimpleActionGroup ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$949.glib_queueautoptr_cleanup_GSimpleActionGroup$MH, "glib_queueautoptr_cleanup_GSimpleActionGroup");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSimpleAction_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSimpleAction$MH() {
        return RuntimeHelper.requireNonNull(constants$949.glib_autoptr_clear_GSimpleAction$MH,"glib_autoptr_clear_GSimpleAction");
    }
    public static void glib_autoptr_clear_GSimpleAction ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$949.glib_autoptr_clear_GSimpleAction$MH, "glib_autoptr_clear_GSimpleAction");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSimpleAction$MH() {
        return RuntimeHelper.requireNonNull(constants$949.glib_autoptr_cleanup_GSimpleAction$MH,"glib_autoptr_cleanup_GSimpleAction");
    }
    public static void glib_autoptr_cleanup_GSimpleAction ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$949.glib_autoptr_cleanup_GSimpleAction$MH, "glib_autoptr_cleanup_GSimpleAction");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSimpleAction$MH() {
        return RuntimeHelper.requireNonNull(constants$949.glib_listautoptr_cleanup_GSimpleAction$MH,"glib_listautoptr_cleanup_GSimpleAction");
    }
    public static void glib_listautoptr_cleanup_GSimpleAction ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$949.glib_listautoptr_cleanup_GSimpleAction$MH, "glib_listautoptr_cleanup_GSimpleAction");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSimpleAction$MH() {
        return RuntimeHelper.requireNonNull(constants$950.glib_slistautoptr_cleanup_GSimpleAction$MH,"glib_slistautoptr_cleanup_GSimpleAction");
    }
    public static void glib_slistautoptr_cleanup_GSimpleAction ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$950.glib_slistautoptr_cleanup_GSimpleAction$MH, "glib_slistautoptr_cleanup_GSimpleAction");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSimpleAction$MH() {
        return RuntimeHelper.requireNonNull(constants$950.glib_queueautoptr_cleanup_GSimpleAction$MH,"glib_queueautoptr_cleanup_GSimpleAction");
    }
    public static void glib_queueautoptr_cleanup_GSimpleAction ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$950.glib_queueautoptr_cleanup_GSimpleAction$MH, "glib_queueautoptr_cleanup_GSimpleAction");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSimpleAsyncResult_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAsyncResult_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAsyncResult_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleAsyncResult_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSimpleAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$950.glib_autoptr_clear_GSimpleAsyncResult$MH,"glib_autoptr_clear_GSimpleAsyncResult");
    }
    public static void glib_autoptr_clear_GSimpleAsyncResult ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$950.glib_autoptr_clear_GSimpleAsyncResult$MH, "glib_autoptr_clear_GSimpleAsyncResult");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSimpleAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$950.glib_autoptr_cleanup_GSimpleAsyncResult$MH,"glib_autoptr_cleanup_GSimpleAsyncResult");
    }
    public static void glib_autoptr_cleanup_GSimpleAsyncResult ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$950.glib_autoptr_cleanup_GSimpleAsyncResult$MH, "glib_autoptr_cleanup_GSimpleAsyncResult");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSimpleAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$950.glib_listautoptr_cleanup_GSimpleAsyncResult$MH,"glib_listautoptr_cleanup_GSimpleAsyncResult");
    }
    public static void glib_listautoptr_cleanup_GSimpleAsyncResult ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$950.glib_listautoptr_cleanup_GSimpleAsyncResult$MH, "glib_listautoptr_cleanup_GSimpleAsyncResult");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSimpleAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$950.glib_slistautoptr_cleanup_GSimpleAsyncResult$MH,"glib_slistautoptr_cleanup_GSimpleAsyncResult");
    }
    public static void glib_slistautoptr_cleanup_GSimpleAsyncResult ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$950.glib_slistautoptr_cleanup_GSimpleAsyncResult$MH, "glib_slistautoptr_cleanup_GSimpleAsyncResult");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSimpleAsyncResult$MH() {
        return RuntimeHelper.requireNonNull(constants$951.glib_queueautoptr_cleanup_GSimpleAsyncResult$MH,"glib_queueautoptr_cleanup_GSimpleAsyncResult");
    }
    public static void glib_queueautoptr_cleanup_GSimpleAsyncResult ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$951.glib_queueautoptr_cleanup_GSimpleAsyncResult$MH, "glib_queueautoptr_cleanup_GSimpleAsyncResult");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSimplePermission_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimplePermission_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimplePermission_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimplePermission_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSimplePermission$MH() {
        return RuntimeHelper.requireNonNull(constants$951.glib_autoptr_clear_GSimplePermission$MH,"glib_autoptr_clear_GSimplePermission");
    }
    public static void glib_autoptr_clear_GSimplePermission ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$951.glib_autoptr_clear_GSimplePermission$MH, "glib_autoptr_clear_GSimplePermission");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSimplePermission$MH() {
        return RuntimeHelper.requireNonNull(constants$951.glib_autoptr_cleanup_GSimplePermission$MH,"glib_autoptr_cleanup_GSimplePermission");
    }
    public static void glib_autoptr_cleanup_GSimplePermission ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$951.glib_autoptr_cleanup_GSimplePermission$MH, "glib_autoptr_cleanup_GSimplePermission");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSimplePermission$MH() {
        return RuntimeHelper.requireNonNull(constants$951.glib_listautoptr_cleanup_GSimplePermission$MH,"glib_listautoptr_cleanup_GSimplePermission");
    }
    public static void glib_listautoptr_cleanup_GSimplePermission ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$951.glib_listautoptr_cleanup_GSimplePermission$MH, "glib_listautoptr_cleanup_GSimplePermission");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSimplePermission$MH() {
        return RuntimeHelper.requireNonNull(constants$951.glib_slistautoptr_cleanup_GSimplePermission$MH,"glib_slistautoptr_cleanup_GSimplePermission");
    }
    public static void glib_slistautoptr_cleanup_GSimplePermission ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$951.glib_slistautoptr_cleanup_GSimplePermission$MH, "glib_slistautoptr_cleanup_GSimplePermission");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSimplePermission$MH() {
        return RuntimeHelper.requireNonNull(constants$951.glib_queueautoptr_cleanup_GSimplePermission$MH,"glib_queueautoptr_cleanup_GSimplePermission");
    }
    public static void glib_queueautoptr_cleanup_GSimplePermission ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$951.glib_queueautoptr_cleanup_GSimplePermission$MH, "glib_queueautoptr_cleanup_GSimplePermission");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSimpleProxyResolver_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleProxyResolver_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleProxyResolver_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSimpleProxyResolver_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSimpleProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$952.glib_autoptr_clear_GSimpleProxyResolver$MH,"glib_autoptr_clear_GSimpleProxyResolver");
    }
    public static void glib_autoptr_clear_GSimpleProxyResolver ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$952.glib_autoptr_clear_GSimpleProxyResolver$MH, "glib_autoptr_clear_GSimpleProxyResolver");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSimpleProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$952.glib_autoptr_cleanup_GSimpleProxyResolver$MH,"glib_autoptr_cleanup_GSimpleProxyResolver");
    }
    public static void glib_autoptr_cleanup_GSimpleProxyResolver ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$952.glib_autoptr_cleanup_GSimpleProxyResolver$MH, "glib_autoptr_cleanup_GSimpleProxyResolver");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSimpleProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$952.glib_listautoptr_cleanup_GSimpleProxyResolver$MH,"glib_listautoptr_cleanup_GSimpleProxyResolver");
    }
    public static void glib_listautoptr_cleanup_GSimpleProxyResolver ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$952.glib_listautoptr_cleanup_GSimpleProxyResolver$MH, "glib_listautoptr_cleanup_GSimpleProxyResolver");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSimpleProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$952.glib_slistautoptr_cleanup_GSimpleProxyResolver$MH,"glib_slistautoptr_cleanup_GSimpleProxyResolver");
    }
    public static void glib_slistautoptr_cleanup_GSimpleProxyResolver ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$952.glib_slistautoptr_cleanup_GSimpleProxyResolver$MH, "glib_slistautoptr_cleanup_GSimpleProxyResolver");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSimpleProxyResolver$MH() {
        return RuntimeHelper.requireNonNull(constants$952.glib_queueautoptr_cleanup_GSimpleProxyResolver$MH,"glib_queueautoptr_cleanup_GSimpleProxyResolver");
    }
    public static void glib_queueautoptr_cleanup_GSimpleProxyResolver ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$952.glib_queueautoptr_cleanup_GSimpleProxyResolver$MH, "glib_queueautoptr_cleanup_GSimpleProxyResolver");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketAddressEnumerator_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddressEnumerator_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddressEnumerator_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddressEnumerator_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$952.glib_autoptr_clear_GSocketAddressEnumerator$MH,"glib_autoptr_clear_GSocketAddressEnumerator");
    }
    public static void glib_autoptr_clear_GSocketAddressEnumerator ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$952.glib_autoptr_clear_GSocketAddressEnumerator$MH, "glib_autoptr_clear_GSocketAddressEnumerator");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$953.glib_autoptr_cleanup_GSocketAddressEnumerator$MH,"glib_autoptr_cleanup_GSocketAddressEnumerator");
    }
    public static void glib_autoptr_cleanup_GSocketAddressEnumerator ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$953.glib_autoptr_cleanup_GSocketAddressEnumerator$MH, "glib_autoptr_cleanup_GSocketAddressEnumerator");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$953.glib_listautoptr_cleanup_GSocketAddressEnumerator$MH,"glib_listautoptr_cleanup_GSocketAddressEnumerator");
    }
    public static void glib_listautoptr_cleanup_GSocketAddressEnumerator ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$953.glib_listautoptr_cleanup_GSocketAddressEnumerator$MH, "glib_listautoptr_cleanup_GSocketAddressEnumerator");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$953.glib_slistautoptr_cleanup_GSocketAddressEnumerator$MH,"glib_slistautoptr_cleanup_GSocketAddressEnumerator");
    }
    public static void glib_slistautoptr_cleanup_GSocketAddressEnumerator ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$953.glib_slistautoptr_cleanup_GSocketAddressEnumerator$MH, "glib_slistautoptr_cleanup_GSocketAddressEnumerator");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketAddressEnumerator$MH() {
        return RuntimeHelper.requireNonNull(constants$953.glib_queueautoptr_cleanup_GSocketAddressEnumerator$MH,"glib_queueautoptr_cleanup_GSocketAddressEnumerator");
    }
    public static void glib_queueautoptr_cleanup_GSocketAddressEnumerator ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$953.glib_queueautoptr_cleanup_GSocketAddressEnumerator$MH, "glib_queueautoptr_cleanup_GSocketAddressEnumerator");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketAddress_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddress_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddress_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketAddress_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$953.glib_autoptr_clear_GSocketAddress$MH,"glib_autoptr_clear_GSocketAddress");
    }
    public static void glib_autoptr_clear_GSocketAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$953.glib_autoptr_clear_GSocketAddress$MH, "glib_autoptr_clear_GSocketAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$953.glib_autoptr_cleanup_GSocketAddress$MH,"glib_autoptr_cleanup_GSocketAddress");
    }
    public static void glib_autoptr_cleanup_GSocketAddress ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$953.glib_autoptr_cleanup_GSocketAddress$MH, "glib_autoptr_cleanup_GSocketAddress");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$954.glib_listautoptr_cleanup_GSocketAddress$MH,"glib_listautoptr_cleanup_GSocketAddress");
    }
    public static void glib_listautoptr_cleanup_GSocketAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$954.glib_listautoptr_cleanup_GSocketAddress$MH, "glib_listautoptr_cleanup_GSocketAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$954.glib_slistautoptr_cleanup_GSocketAddress$MH,"glib_slistautoptr_cleanup_GSocketAddress");
    }
    public static void glib_slistautoptr_cleanup_GSocketAddress ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$954.glib_slistautoptr_cleanup_GSocketAddress$MH, "glib_slistautoptr_cleanup_GSocketAddress");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$954.glib_queueautoptr_cleanup_GSocketAddress$MH,"glib_queueautoptr_cleanup_GSocketAddress");
    }
    public static void glib_queueautoptr_cleanup_GSocketAddress ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$954.glib_queueautoptr_cleanup_GSocketAddress$MH, "glib_queueautoptr_cleanup_GSocketAddress");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketClient_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketClient_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketClient_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketClient_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketClient$MH() {
        return RuntimeHelper.requireNonNull(constants$954.glib_autoptr_clear_GSocketClient$MH,"glib_autoptr_clear_GSocketClient");
    }
    public static void glib_autoptr_clear_GSocketClient ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$954.glib_autoptr_clear_GSocketClient$MH, "glib_autoptr_clear_GSocketClient");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketClient$MH() {
        return RuntimeHelper.requireNonNull(constants$954.glib_autoptr_cleanup_GSocketClient$MH,"glib_autoptr_cleanup_GSocketClient");
    }
    public static void glib_autoptr_cleanup_GSocketClient ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$954.glib_autoptr_cleanup_GSocketClient$MH, "glib_autoptr_cleanup_GSocketClient");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketClient$MH() {
        return RuntimeHelper.requireNonNull(constants$954.glib_listautoptr_cleanup_GSocketClient$MH,"glib_listautoptr_cleanup_GSocketClient");
    }
    public static void glib_listautoptr_cleanup_GSocketClient ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$954.glib_listautoptr_cleanup_GSocketClient$MH, "glib_listautoptr_cleanup_GSocketClient");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketClient$MH() {
        return RuntimeHelper.requireNonNull(constants$955.glib_slistautoptr_cleanup_GSocketClient$MH,"glib_slistautoptr_cleanup_GSocketClient");
    }
    public static void glib_slistautoptr_cleanup_GSocketClient ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$955.glib_slistautoptr_cleanup_GSocketClient$MH, "glib_slistautoptr_cleanup_GSocketClient");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketClient$MH() {
        return RuntimeHelper.requireNonNull(constants$955.glib_queueautoptr_cleanup_GSocketClient$MH,"glib_queueautoptr_cleanup_GSocketClient");
    }
    public static void glib_queueautoptr_cleanup_GSocketClient ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$955.glib_queueautoptr_cleanup_GSocketClient$MH, "glib_queueautoptr_cleanup_GSocketClient");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketConnectable_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnectable_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnectable_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnectable_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketConnectable$MH() {
        return RuntimeHelper.requireNonNull(constants$955.glib_autoptr_clear_GSocketConnectable$MH,"glib_autoptr_clear_GSocketConnectable");
    }
    public static void glib_autoptr_clear_GSocketConnectable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$955.glib_autoptr_clear_GSocketConnectable$MH, "glib_autoptr_clear_GSocketConnectable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketConnectable$MH() {
        return RuntimeHelper.requireNonNull(constants$955.glib_autoptr_cleanup_GSocketConnectable$MH,"glib_autoptr_cleanup_GSocketConnectable");
    }
    public static void glib_autoptr_cleanup_GSocketConnectable ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$955.glib_autoptr_cleanup_GSocketConnectable$MH, "glib_autoptr_cleanup_GSocketConnectable");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketConnectable$MH() {
        return RuntimeHelper.requireNonNull(constants$955.glib_listautoptr_cleanup_GSocketConnectable$MH,"glib_listautoptr_cleanup_GSocketConnectable");
    }
    public static void glib_listautoptr_cleanup_GSocketConnectable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$955.glib_listautoptr_cleanup_GSocketConnectable$MH, "glib_listautoptr_cleanup_GSocketConnectable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketConnectable$MH() {
        return RuntimeHelper.requireNonNull(constants$955.glib_slistautoptr_cleanup_GSocketConnectable$MH,"glib_slistautoptr_cleanup_GSocketConnectable");
    }
    public static void glib_slistautoptr_cleanup_GSocketConnectable ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$955.glib_slistautoptr_cleanup_GSocketConnectable$MH, "glib_slistautoptr_cleanup_GSocketConnectable");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketConnectable$MH() {
        return RuntimeHelper.requireNonNull(constants$956.glib_queueautoptr_cleanup_GSocketConnectable$MH,"glib_queueautoptr_cleanup_GSocketConnectable");
    }
    public static void glib_queueautoptr_cleanup_GSocketConnectable ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$956.glib_queueautoptr_cleanup_GSocketConnectable$MH, "glib_queueautoptr_cleanup_GSocketConnectable");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$956.glib_autoptr_clear_GSocketConnection$MH,"glib_autoptr_clear_GSocketConnection");
    }
    public static void glib_autoptr_clear_GSocketConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$956.glib_autoptr_clear_GSocketConnection$MH, "glib_autoptr_clear_GSocketConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$956.glib_autoptr_cleanup_GSocketConnection$MH,"glib_autoptr_cleanup_GSocketConnection");
    }
    public static void glib_autoptr_cleanup_GSocketConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$956.glib_autoptr_cleanup_GSocketConnection$MH, "glib_autoptr_cleanup_GSocketConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$956.glib_listautoptr_cleanup_GSocketConnection$MH,"glib_listautoptr_cleanup_GSocketConnection");
    }
    public static void glib_listautoptr_cleanup_GSocketConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$956.glib_listautoptr_cleanup_GSocketConnection$MH, "glib_listautoptr_cleanup_GSocketConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$956.glib_slistautoptr_cleanup_GSocketConnection$MH,"glib_slistautoptr_cleanup_GSocketConnection");
    }
    public static void glib_slistautoptr_cleanup_GSocketConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$956.glib_slistautoptr_cleanup_GSocketConnection$MH, "glib_slistautoptr_cleanup_GSocketConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$956.glib_queueautoptr_cleanup_GSocketConnection$MH,"glib_queueautoptr_cleanup_GSocketConnection");
    }
    public static void glib_queueautoptr_cleanup_GSocketConnection ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$956.glib_queueautoptr_cleanup_GSocketConnection$MH, "glib_queueautoptr_cleanup_GSocketConnection");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketControlMessage_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketControlMessage_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketControlMessage_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketControlMessage_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketControlMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$957.glib_autoptr_clear_GSocketControlMessage$MH,"glib_autoptr_clear_GSocketControlMessage");
    }
    public static void glib_autoptr_clear_GSocketControlMessage ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$957.glib_autoptr_clear_GSocketControlMessage$MH, "glib_autoptr_clear_GSocketControlMessage");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketControlMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$957.glib_autoptr_cleanup_GSocketControlMessage$MH,"glib_autoptr_cleanup_GSocketControlMessage");
    }
    public static void glib_autoptr_cleanup_GSocketControlMessage ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$957.glib_autoptr_cleanup_GSocketControlMessage$MH, "glib_autoptr_cleanup_GSocketControlMessage");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketControlMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$957.glib_listautoptr_cleanup_GSocketControlMessage$MH,"glib_listautoptr_cleanup_GSocketControlMessage");
    }
    public static void glib_listautoptr_cleanup_GSocketControlMessage ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$957.glib_listautoptr_cleanup_GSocketControlMessage$MH, "glib_listautoptr_cleanup_GSocketControlMessage");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketControlMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$957.glib_slistautoptr_cleanup_GSocketControlMessage$MH,"glib_slistautoptr_cleanup_GSocketControlMessage");
    }
    public static void glib_slistautoptr_cleanup_GSocketControlMessage ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$957.glib_slistautoptr_cleanup_GSocketControlMessage$MH, "glib_slistautoptr_cleanup_GSocketControlMessage");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketControlMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$957.glib_queueautoptr_cleanup_GSocketControlMessage$MH,"glib_queueautoptr_cleanup_GSocketControlMessage");
    }
    public static void glib_queueautoptr_cleanup_GSocketControlMessage ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$957.glib_queueautoptr_cleanup_GSocketControlMessage$MH, "glib_queueautoptr_cleanup_GSocketControlMessage");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocket_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocket_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocket_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocket_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocket$MH() {
        return RuntimeHelper.requireNonNull(constants$957.glib_autoptr_clear_GSocket$MH,"glib_autoptr_clear_GSocket");
    }
    public static void glib_autoptr_clear_GSocket ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$957.glib_autoptr_clear_GSocket$MH, "glib_autoptr_clear_GSocket");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocket$MH() {
        return RuntimeHelper.requireNonNull(constants$958.glib_autoptr_cleanup_GSocket$MH,"glib_autoptr_cleanup_GSocket");
    }
    public static void glib_autoptr_cleanup_GSocket ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$958.glib_autoptr_cleanup_GSocket$MH, "glib_autoptr_cleanup_GSocket");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocket$MH() {
        return RuntimeHelper.requireNonNull(constants$958.glib_listautoptr_cleanup_GSocket$MH,"glib_listautoptr_cleanup_GSocket");
    }
    public static void glib_listautoptr_cleanup_GSocket ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$958.glib_listautoptr_cleanup_GSocket$MH, "glib_listautoptr_cleanup_GSocket");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocket$MH() {
        return RuntimeHelper.requireNonNull(constants$958.glib_slistautoptr_cleanup_GSocket$MH,"glib_slistautoptr_cleanup_GSocket");
    }
    public static void glib_slistautoptr_cleanup_GSocket ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$958.glib_slistautoptr_cleanup_GSocket$MH, "glib_slistautoptr_cleanup_GSocket");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocket$MH() {
        return RuntimeHelper.requireNonNull(constants$958.glib_queueautoptr_cleanup_GSocket$MH,"glib_queueautoptr_cleanup_GSocket");
    }
    public static void glib_queueautoptr_cleanup_GSocket ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$958.glib_queueautoptr_cleanup_GSocket$MH, "glib_queueautoptr_cleanup_GSocket");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketListener_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketListener_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketListener_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketListener_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketListener$MH() {
        return RuntimeHelper.requireNonNull(constants$958.glib_autoptr_clear_GSocketListener$MH,"glib_autoptr_clear_GSocketListener");
    }
    public static void glib_autoptr_clear_GSocketListener ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$958.glib_autoptr_clear_GSocketListener$MH, "glib_autoptr_clear_GSocketListener");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketListener$MH() {
        return RuntimeHelper.requireNonNull(constants$958.glib_autoptr_cleanup_GSocketListener$MH,"glib_autoptr_cleanup_GSocketListener");
    }
    public static void glib_autoptr_cleanup_GSocketListener ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$958.glib_autoptr_cleanup_GSocketListener$MH, "glib_autoptr_cleanup_GSocketListener");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketListener$MH() {
        return RuntimeHelper.requireNonNull(constants$959.glib_listautoptr_cleanup_GSocketListener$MH,"glib_listautoptr_cleanup_GSocketListener");
    }
    public static void glib_listautoptr_cleanup_GSocketListener ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$959.glib_listautoptr_cleanup_GSocketListener$MH, "glib_listautoptr_cleanup_GSocketListener");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketListener$MH() {
        return RuntimeHelper.requireNonNull(constants$959.glib_slistautoptr_cleanup_GSocketListener$MH,"glib_slistautoptr_cleanup_GSocketListener");
    }
    public static void glib_slistautoptr_cleanup_GSocketListener ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$959.glib_slistautoptr_cleanup_GSocketListener$MH, "glib_slistautoptr_cleanup_GSocketListener");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketListener$MH() {
        return RuntimeHelper.requireNonNull(constants$959.glib_queueautoptr_cleanup_GSocketListener$MH,"glib_queueautoptr_cleanup_GSocketListener");
    }
    public static void glib_queueautoptr_cleanup_GSocketListener ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$959.glib_queueautoptr_cleanup_GSocketListener$MH, "glib_queueautoptr_cleanup_GSocketListener");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSocketService_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketService_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketService_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSocketService_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$959.glib_autoptr_clear_GSocketService$MH,"glib_autoptr_clear_GSocketService");
    }
    public static void glib_autoptr_clear_GSocketService ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$959.glib_autoptr_clear_GSocketService$MH, "glib_autoptr_clear_GSocketService");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$959.glib_autoptr_cleanup_GSocketService$MH,"glib_autoptr_cleanup_GSocketService");
    }
    public static void glib_autoptr_cleanup_GSocketService ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$959.glib_autoptr_cleanup_GSocketService$MH, "glib_autoptr_cleanup_GSocketService");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$959.glib_listautoptr_cleanup_GSocketService$MH,"glib_listautoptr_cleanup_GSocketService");
    }
    public static void glib_listautoptr_cleanup_GSocketService ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$959.glib_listautoptr_cleanup_GSocketService$MH, "glib_listautoptr_cleanup_GSocketService");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$960.glib_slistautoptr_cleanup_GSocketService$MH,"glib_slistautoptr_cleanup_GSocketService");
    }
    public static void glib_slistautoptr_cleanup_GSocketService ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$960.glib_slistautoptr_cleanup_GSocketService$MH, "glib_slistautoptr_cleanup_GSocketService");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$960.glib_queueautoptr_cleanup_GSocketService$MH,"glib_queueautoptr_cleanup_GSocketService");
    }
    public static void glib_queueautoptr_cleanup_GSocketService ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$960.glib_queueautoptr_cleanup_GSocketService$MH, "glib_queueautoptr_cleanup_GSocketService");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSubprocess_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSubprocess_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSubprocess_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSubprocess_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSubprocess$MH() {
        return RuntimeHelper.requireNonNull(constants$960.glib_autoptr_clear_GSubprocess$MH,"glib_autoptr_clear_GSubprocess");
    }
    public static void glib_autoptr_clear_GSubprocess ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$960.glib_autoptr_clear_GSubprocess$MH, "glib_autoptr_clear_GSubprocess");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSubprocess$MH() {
        return RuntimeHelper.requireNonNull(constants$960.glib_autoptr_cleanup_GSubprocess$MH,"glib_autoptr_cleanup_GSubprocess");
    }
    public static void glib_autoptr_cleanup_GSubprocess ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$960.glib_autoptr_cleanup_GSubprocess$MH, "glib_autoptr_cleanup_GSubprocess");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSubprocess$MH() {
        return RuntimeHelper.requireNonNull(constants$960.glib_listautoptr_cleanup_GSubprocess$MH,"glib_listautoptr_cleanup_GSubprocess");
    }
    public static void glib_listautoptr_cleanup_GSubprocess ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$960.glib_listautoptr_cleanup_GSubprocess$MH, "glib_listautoptr_cleanup_GSubprocess");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSubprocess$MH() {
        return RuntimeHelper.requireNonNull(constants$960.glib_slistautoptr_cleanup_GSubprocess$MH,"glib_slistautoptr_cleanup_GSubprocess");
    }
    public static void glib_slistautoptr_cleanup_GSubprocess ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$960.glib_slistautoptr_cleanup_GSubprocess$MH, "glib_slistautoptr_cleanup_GSubprocess");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSubprocess$MH() {
        return RuntimeHelper.requireNonNull(constants$961.glib_queueautoptr_cleanup_GSubprocess$MH,"glib_queueautoptr_cleanup_GSubprocess");
    }
    public static void glib_queueautoptr_cleanup_GSubprocess ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$961.glib_queueautoptr_cleanup_GSubprocess$MH, "glib_queueautoptr_cleanup_GSubprocess");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GSubprocessLauncher_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSubprocessLauncher_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSubprocessLauncher_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GSubprocessLauncher_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GSubprocessLauncher$MH() {
        return RuntimeHelper.requireNonNull(constants$961.glib_autoptr_clear_GSubprocessLauncher$MH,"glib_autoptr_clear_GSubprocessLauncher");
    }
    public static void glib_autoptr_clear_GSubprocessLauncher ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$961.glib_autoptr_clear_GSubprocessLauncher$MH, "glib_autoptr_clear_GSubprocessLauncher");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GSubprocessLauncher$MH() {
        return RuntimeHelper.requireNonNull(constants$961.glib_autoptr_cleanup_GSubprocessLauncher$MH,"glib_autoptr_cleanup_GSubprocessLauncher");
    }
    public static void glib_autoptr_cleanup_GSubprocessLauncher ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$961.glib_autoptr_cleanup_GSubprocessLauncher$MH, "glib_autoptr_cleanup_GSubprocessLauncher");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GSubprocessLauncher$MH() {
        return RuntimeHelper.requireNonNull(constants$961.glib_listautoptr_cleanup_GSubprocessLauncher$MH,"glib_listautoptr_cleanup_GSubprocessLauncher");
    }
    public static void glib_listautoptr_cleanup_GSubprocessLauncher ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$961.glib_listautoptr_cleanup_GSubprocessLauncher$MH, "glib_listautoptr_cleanup_GSubprocessLauncher");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GSubprocessLauncher$MH() {
        return RuntimeHelper.requireNonNull(constants$961.glib_slistautoptr_cleanup_GSubprocessLauncher$MH,"glib_slistautoptr_cleanup_GSubprocessLauncher");
    }
    public static void glib_slistautoptr_cleanup_GSubprocessLauncher ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$961.glib_slistautoptr_cleanup_GSubprocessLauncher$MH, "glib_slistautoptr_cleanup_GSubprocessLauncher");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GSubprocessLauncher$MH() {
        return RuntimeHelper.requireNonNull(constants$961.glib_queueautoptr_cleanup_GSubprocessLauncher$MH,"glib_queueautoptr_cleanup_GSubprocessLauncher");
    }
    public static void glib_queueautoptr_cleanup_GSubprocessLauncher ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$961.glib_queueautoptr_cleanup_GSubprocessLauncher$MH, "glib_queueautoptr_cleanup_GSubprocessLauncher");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTask_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTask_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTask_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTask_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTask$MH() {
        return RuntimeHelper.requireNonNull(constants$962.glib_autoptr_clear_GTask$MH,"glib_autoptr_clear_GTask");
    }
    public static void glib_autoptr_clear_GTask ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$962.glib_autoptr_clear_GTask$MH, "glib_autoptr_clear_GTask");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTask$MH() {
        return RuntimeHelper.requireNonNull(constants$962.glib_autoptr_cleanup_GTask$MH,"glib_autoptr_cleanup_GTask");
    }
    public static void glib_autoptr_cleanup_GTask ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$962.glib_autoptr_cleanup_GTask$MH, "glib_autoptr_cleanup_GTask");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTask$MH() {
        return RuntimeHelper.requireNonNull(constants$962.glib_listautoptr_cleanup_GTask$MH,"glib_listautoptr_cleanup_GTask");
    }
    public static void glib_listautoptr_cleanup_GTask ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$962.glib_listautoptr_cleanup_GTask$MH, "glib_listautoptr_cleanup_GTask");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTask$MH() {
        return RuntimeHelper.requireNonNull(constants$962.glib_slistautoptr_cleanup_GTask$MH,"glib_slistautoptr_cleanup_GTask");
    }
    public static void glib_slistautoptr_cleanup_GTask ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$962.glib_slistautoptr_cleanup_GTask$MH, "glib_slistautoptr_cleanup_GTask");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTask$MH() {
        return RuntimeHelper.requireNonNull(constants$962.glib_queueautoptr_cleanup_GTask$MH,"glib_queueautoptr_cleanup_GTask");
    }
    public static void glib_queueautoptr_cleanup_GTask ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$962.glib_queueautoptr_cleanup_GTask$MH, "glib_queueautoptr_cleanup_GTask");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTcpConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTcpConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTcpConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTcpConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTcpConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$962.glib_autoptr_clear_GTcpConnection$MH,"glib_autoptr_clear_GTcpConnection");
    }
    public static void glib_autoptr_clear_GTcpConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$962.glib_autoptr_clear_GTcpConnection$MH, "glib_autoptr_clear_GTcpConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTcpConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$963.glib_autoptr_cleanup_GTcpConnection$MH,"glib_autoptr_cleanup_GTcpConnection");
    }
    public static void glib_autoptr_cleanup_GTcpConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$963.glib_autoptr_cleanup_GTcpConnection$MH, "glib_autoptr_cleanup_GTcpConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTcpConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$963.glib_listautoptr_cleanup_GTcpConnection$MH,"glib_listautoptr_cleanup_GTcpConnection");
    }
    public static void glib_listautoptr_cleanup_GTcpConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$963.glib_listautoptr_cleanup_GTcpConnection$MH, "glib_listautoptr_cleanup_GTcpConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTcpConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$963.glib_slistautoptr_cleanup_GTcpConnection$MH,"glib_slistautoptr_cleanup_GTcpConnection");
    }
    public static void glib_slistautoptr_cleanup_GTcpConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$963.glib_slistautoptr_cleanup_GTcpConnection$MH, "glib_slistautoptr_cleanup_GTcpConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTcpConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$963.glib_queueautoptr_cleanup_GTcpConnection$MH,"glib_queueautoptr_cleanup_GTcpConnection");
    }
    public static void glib_queueautoptr_cleanup_GTcpConnection ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$963.glib_queueautoptr_cleanup_GTcpConnection$MH, "glib_queueautoptr_cleanup_GTcpConnection");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTcpWrapperConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTcpWrapperConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTcpWrapperConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTcpWrapperConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTcpWrapperConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$963.glib_autoptr_clear_GTcpWrapperConnection$MH,"glib_autoptr_clear_GTcpWrapperConnection");
    }
    public static void glib_autoptr_clear_GTcpWrapperConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$963.glib_autoptr_clear_GTcpWrapperConnection$MH, "glib_autoptr_clear_GTcpWrapperConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTcpWrapperConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$963.glib_autoptr_cleanup_GTcpWrapperConnection$MH,"glib_autoptr_cleanup_GTcpWrapperConnection");
    }
    public static void glib_autoptr_cleanup_GTcpWrapperConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$963.glib_autoptr_cleanup_GTcpWrapperConnection$MH, "glib_autoptr_cleanup_GTcpWrapperConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTcpWrapperConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$964.glib_listautoptr_cleanup_GTcpWrapperConnection$MH,"glib_listautoptr_cleanup_GTcpWrapperConnection");
    }
    public static void glib_listautoptr_cleanup_GTcpWrapperConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$964.glib_listautoptr_cleanup_GTcpWrapperConnection$MH, "glib_listautoptr_cleanup_GTcpWrapperConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTcpWrapperConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$964.glib_slistautoptr_cleanup_GTcpWrapperConnection$MH,"glib_slistautoptr_cleanup_GTcpWrapperConnection");
    }
    public static void glib_slistautoptr_cleanup_GTcpWrapperConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$964.glib_slistautoptr_cleanup_GTcpWrapperConnection$MH, "glib_slistautoptr_cleanup_GTcpWrapperConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTcpWrapperConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$964.glib_queueautoptr_cleanup_GTcpWrapperConnection$MH,"glib_queueautoptr_cleanup_GTcpWrapperConnection");
    }
    public static void glib_queueautoptr_cleanup_GTcpWrapperConnection ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$964.glib_queueautoptr_cleanup_GTcpWrapperConnection$MH, "glib_queueautoptr_cleanup_GTcpWrapperConnection");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTestDBus_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTestDBus_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTestDBus_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTestDBus_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTestDBus$MH() {
        return RuntimeHelper.requireNonNull(constants$964.glib_autoptr_clear_GTestDBus$MH,"glib_autoptr_clear_GTestDBus");
    }
    public static void glib_autoptr_clear_GTestDBus ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$964.glib_autoptr_clear_GTestDBus$MH, "glib_autoptr_clear_GTestDBus");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTestDBus$MH() {
        return RuntimeHelper.requireNonNull(constants$964.glib_autoptr_cleanup_GTestDBus$MH,"glib_autoptr_cleanup_GTestDBus");
    }
    public static void glib_autoptr_cleanup_GTestDBus ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$964.glib_autoptr_cleanup_GTestDBus$MH, "glib_autoptr_cleanup_GTestDBus");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTestDBus$MH() {
        return RuntimeHelper.requireNonNull(constants$964.glib_listautoptr_cleanup_GTestDBus$MH,"glib_listautoptr_cleanup_GTestDBus");
    }
    public static void glib_listautoptr_cleanup_GTestDBus ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$964.glib_listautoptr_cleanup_GTestDBus$MH, "glib_listautoptr_cleanup_GTestDBus");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTestDBus$MH() {
        return RuntimeHelper.requireNonNull(constants$965.glib_slistautoptr_cleanup_GTestDBus$MH,"glib_slistautoptr_cleanup_GTestDBus");
    }
    public static void glib_slistautoptr_cleanup_GTestDBus ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$965.glib_slistautoptr_cleanup_GTestDBus$MH, "glib_slistautoptr_cleanup_GTestDBus");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTestDBus$MH() {
        return RuntimeHelper.requireNonNull(constants$965.glib_queueautoptr_cleanup_GTestDBus$MH,"glib_queueautoptr_cleanup_GTestDBus");
    }
    public static void glib_queueautoptr_cleanup_GTestDBus ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$965.glib_queueautoptr_cleanup_GTestDBus$MH, "glib_queueautoptr_cleanup_GTestDBus");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GThemedIcon_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThemedIcon_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThemedIcon_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThemedIcon_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GThemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$965.glib_autoptr_clear_GThemedIcon$MH,"glib_autoptr_clear_GThemedIcon");
    }
    public static void glib_autoptr_clear_GThemedIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$965.glib_autoptr_clear_GThemedIcon$MH, "glib_autoptr_clear_GThemedIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GThemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$965.glib_autoptr_cleanup_GThemedIcon$MH,"glib_autoptr_cleanup_GThemedIcon");
    }
    public static void glib_autoptr_cleanup_GThemedIcon ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$965.glib_autoptr_cleanup_GThemedIcon$MH, "glib_autoptr_cleanup_GThemedIcon");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GThemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$965.glib_listautoptr_cleanup_GThemedIcon$MH,"glib_listautoptr_cleanup_GThemedIcon");
    }
    public static void glib_listautoptr_cleanup_GThemedIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$965.glib_listautoptr_cleanup_GThemedIcon$MH, "glib_listautoptr_cleanup_GThemedIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GThemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$965.glib_slistautoptr_cleanup_GThemedIcon$MH,"glib_slistautoptr_cleanup_GThemedIcon");
    }
    public static void glib_slistautoptr_cleanup_GThemedIcon ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$965.glib_slistautoptr_cleanup_GThemedIcon$MH, "glib_slistautoptr_cleanup_GThemedIcon");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GThemedIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$966.glib_queueautoptr_cleanup_GThemedIcon$MH,"glib_queueautoptr_cleanup_GThemedIcon");
    }
    public static void glib_queueautoptr_cleanup_GThemedIcon ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$966.glib_queueautoptr_cleanup_GThemedIcon$MH, "glib_queueautoptr_cleanup_GThemedIcon");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GThreadedSocketService_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThreadedSocketService_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThreadedSocketService_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GThreadedSocketService_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GThreadedSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$966.glib_autoptr_clear_GThreadedSocketService$MH,"glib_autoptr_clear_GThreadedSocketService");
    }
    public static void glib_autoptr_clear_GThreadedSocketService ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$966.glib_autoptr_clear_GThreadedSocketService$MH, "glib_autoptr_clear_GThreadedSocketService");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GThreadedSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$966.glib_autoptr_cleanup_GThreadedSocketService$MH,"glib_autoptr_cleanup_GThreadedSocketService");
    }
    public static void glib_autoptr_cleanup_GThreadedSocketService ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$966.glib_autoptr_cleanup_GThreadedSocketService$MH, "glib_autoptr_cleanup_GThreadedSocketService");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GThreadedSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$966.glib_listautoptr_cleanup_GThreadedSocketService$MH,"glib_listautoptr_cleanup_GThreadedSocketService");
    }
    public static void glib_listautoptr_cleanup_GThreadedSocketService ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$966.glib_listautoptr_cleanup_GThreadedSocketService$MH, "glib_listautoptr_cleanup_GThreadedSocketService");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GThreadedSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$966.glib_slistautoptr_cleanup_GThreadedSocketService$MH,"glib_slistautoptr_cleanup_GThreadedSocketService");
    }
    public static void glib_slistautoptr_cleanup_GThreadedSocketService ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$966.glib_slistautoptr_cleanup_GThreadedSocketService$MH, "glib_slistautoptr_cleanup_GThreadedSocketService");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GThreadedSocketService$MH() {
        return RuntimeHelper.requireNonNull(constants$966.glib_queueautoptr_cleanup_GThreadedSocketService$MH,"glib_queueautoptr_cleanup_GThreadedSocketService");
    }
    public static void glib_queueautoptr_cleanup_GThreadedSocketService ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$966.glib_queueautoptr_cleanup_GThreadedSocketService$MH, "glib_queueautoptr_cleanup_GThreadedSocketService");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsBackend_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsBackend_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsBackend_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsBackend_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$967.glib_autoptr_clear_GTlsBackend$MH,"glib_autoptr_clear_GTlsBackend");
    }
    public static void glib_autoptr_clear_GTlsBackend ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$967.glib_autoptr_clear_GTlsBackend$MH, "glib_autoptr_clear_GTlsBackend");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$967.glib_autoptr_cleanup_GTlsBackend$MH,"glib_autoptr_cleanup_GTlsBackend");
    }
    public static void glib_autoptr_cleanup_GTlsBackend ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$967.glib_autoptr_cleanup_GTlsBackend$MH, "glib_autoptr_cleanup_GTlsBackend");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$967.glib_listautoptr_cleanup_GTlsBackend$MH,"glib_listautoptr_cleanup_GTlsBackend");
    }
    public static void glib_listautoptr_cleanup_GTlsBackend ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$967.glib_listautoptr_cleanup_GTlsBackend$MH, "glib_listautoptr_cleanup_GTlsBackend");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$967.glib_slistautoptr_cleanup_GTlsBackend$MH,"glib_slistautoptr_cleanup_GTlsBackend");
    }
    public static void glib_slistautoptr_cleanup_GTlsBackend ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$967.glib_slistautoptr_cleanup_GTlsBackend$MH, "glib_slistautoptr_cleanup_GTlsBackend");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsBackend$MH() {
        return RuntimeHelper.requireNonNull(constants$967.glib_queueautoptr_cleanup_GTlsBackend$MH,"glib_queueautoptr_cleanup_GTlsBackend");
    }
    public static void glib_queueautoptr_cleanup_GTlsBackend ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$967.glib_queueautoptr_cleanup_GTlsBackend$MH, "glib_queueautoptr_cleanup_GTlsBackend");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsCertificate_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsCertificate_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsCertificate_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsCertificate_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsCertificate$MH() {
        return RuntimeHelper.requireNonNull(constants$967.glib_autoptr_clear_GTlsCertificate$MH,"glib_autoptr_clear_GTlsCertificate");
    }
    public static void glib_autoptr_clear_GTlsCertificate ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$967.glib_autoptr_clear_GTlsCertificate$MH, "glib_autoptr_clear_GTlsCertificate");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsCertificate$MH() {
        return RuntimeHelper.requireNonNull(constants$968.glib_autoptr_cleanup_GTlsCertificate$MH,"glib_autoptr_cleanup_GTlsCertificate");
    }
    public static void glib_autoptr_cleanup_GTlsCertificate ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$968.glib_autoptr_cleanup_GTlsCertificate$MH, "glib_autoptr_cleanup_GTlsCertificate");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsCertificate$MH() {
        return RuntimeHelper.requireNonNull(constants$968.glib_listautoptr_cleanup_GTlsCertificate$MH,"glib_listautoptr_cleanup_GTlsCertificate");
    }
    public static void glib_listautoptr_cleanup_GTlsCertificate ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$968.glib_listautoptr_cleanup_GTlsCertificate$MH, "glib_listautoptr_cleanup_GTlsCertificate");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsCertificate$MH() {
        return RuntimeHelper.requireNonNull(constants$968.glib_slistautoptr_cleanup_GTlsCertificate$MH,"glib_slistautoptr_cleanup_GTlsCertificate");
    }
    public static void glib_slistautoptr_cleanup_GTlsCertificate ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$968.glib_slistautoptr_cleanup_GTlsCertificate$MH, "glib_slistautoptr_cleanup_GTlsCertificate");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsCertificate$MH() {
        return RuntimeHelper.requireNonNull(constants$968.glib_queueautoptr_cleanup_GTlsCertificate$MH,"glib_queueautoptr_cleanup_GTlsCertificate");
    }
    public static void glib_queueautoptr_cleanup_GTlsCertificate ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$968.glib_queueautoptr_cleanup_GTlsCertificate$MH, "glib_queueautoptr_cleanup_GTlsCertificate");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsClientConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsClientConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsClientConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsClientConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsClientConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$968.glib_autoptr_clear_GTlsClientConnection$MH,"glib_autoptr_clear_GTlsClientConnection");
    }
    public static void glib_autoptr_clear_GTlsClientConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$968.glib_autoptr_clear_GTlsClientConnection$MH, "glib_autoptr_clear_GTlsClientConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsClientConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$968.glib_autoptr_cleanup_GTlsClientConnection$MH,"glib_autoptr_cleanup_GTlsClientConnection");
    }
    public static void glib_autoptr_cleanup_GTlsClientConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$968.glib_autoptr_cleanup_GTlsClientConnection$MH, "glib_autoptr_cleanup_GTlsClientConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsClientConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$969.glib_listautoptr_cleanup_GTlsClientConnection$MH,"glib_listautoptr_cleanup_GTlsClientConnection");
    }
    public static void glib_listautoptr_cleanup_GTlsClientConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$969.glib_listautoptr_cleanup_GTlsClientConnection$MH, "glib_listautoptr_cleanup_GTlsClientConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsClientConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$969.glib_slistautoptr_cleanup_GTlsClientConnection$MH,"glib_slistautoptr_cleanup_GTlsClientConnection");
    }
    public static void glib_slistautoptr_cleanup_GTlsClientConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$969.glib_slistautoptr_cleanup_GTlsClientConnection$MH, "glib_slistautoptr_cleanup_GTlsClientConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsClientConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$969.glib_queueautoptr_cleanup_GTlsClientConnection$MH,"glib_queueautoptr_cleanup_GTlsClientConnection");
    }
    public static void glib_queueautoptr_cleanup_GTlsClientConnection ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$969.glib_queueautoptr_cleanup_GTlsClientConnection$MH, "glib_queueautoptr_cleanup_GTlsClientConnection");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$969.glib_autoptr_clear_GTlsConnection$MH,"glib_autoptr_clear_GTlsConnection");
    }
    public static void glib_autoptr_clear_GTlsConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$969.glib_autoptr_clear_GTlsConnection$MH, "glib_autoptr_clear_GTlsConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$969.glib_autoptr_cleanup_GTlsConnection$MH,"glib_autoptr_cleanup_GTlsConnection");
    }
    public static void glib_autoptr_cleanup_GTlsConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$969.glib_autoptr_cleanup_GTlsConnection$MH, "glib_autoptr_cleanup_GTlsConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$969.glib_listautoptr_cleanup_GTlsConnection$MH,"glib_listautoptr_cleanup_GTlsConnection");
    }
    public static void glib_listautoptr_cleanup_GTlsConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$969.glib_listautoptr_cleanup_GTlsConnection$MH, "glib_listautoptr_cleanup_GTlsConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$970.glib_slistautoptr_cleanup_GTlsConnection$MH,"glib_slistautoptr_cleanup_GTlsConnection");
    }
    public static void glib_slistautoptr_cleanup_GTlsConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$970.glib_slistautoptr_cleanup_GTlsConnection$MH, "glib_slistautoptr_cleanup_GTlsConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$970.glib_queueautoptr_cleanup_GTlsConnection$MH,"glib_queueautoptr_cleanup_GTlsConnection");
    }
    public static void glib_queueautoptr_cleanup_GTlsConnection ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$970.glib_queueautoptr_cleanup_GTlsConnection$MH, "glib_queueautoptr_cleanup_GTlsConnection");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsDatabase_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsDatabase_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsDatabase_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsDatabase_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$970.glib_autoptr_clear_GTlsDatabase$MH,"glib_autoptr_clear_GTlsDatabase");
    }
    public static void glib_autoptr_clear_GTlsDatabase ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$970.glib_autoptr_clear_GTlsDatabase$MH, "glib_autoptr_clear_GTlsDatabase");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$970.glib_autoptr_cleanup_GTlsDatabase$MH,"glib_autoptr_cleanup_GTlsDatabase");
    }
    public static void glib_autoptr_cleanup_GTlsDatabase ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$970.glib_autoptr_cleanup_GTlsDatabase$MH, "glib_autoptr_cleanup_GTlsDatabase");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$970.glib_listautoptr_cleanup_GTlsDatabase$MH,"glib_listautoptr_cleanup_GTlsDatabase");
    }
    public static void glib_listautoptr_cleanup_GTlsDatabase ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$970.glib_listautoptr_cleanup_GTlsDatabase$MH, "glib_listautoptr_cleanup_GTlsDatabase");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$970.glib_slistautoptr_cleanup_GTlsDatabase$MH,"glib_slistautoptr_cleanup_GTlsDatabase");
    }
    public static void glib_slistautoptr_cleanup_GTlsDatabase ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$970.glib_slistautoptr_cleanup_GTlsDatabase$MH, "glib_slistautoptr_cleanup_GTlsDatabase");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$971.glib_queueautoptr_cleanup_GTlsDatabase$MH,"glib_queueautoptr_cleanup_GTlsDatabase");
    }
    public static void glib_queueautoptr_cleanup_GTlsDatabase ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$971.glib_queueautoptr_cleanup_GTlsDatabase$MH, "glib_queueautoptr_cleanup_GTlsDatabase");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsFileDatabase_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsFileDatabase_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsFileDatabase_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsFileDatabase_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsFileDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$971.glib_autoptr_clear_GTlsFileDatabase$MH,"glib_autoptr_clear_GTlsFileDatabase");
    }
    public static void glib_autoptr_clear_GTlsFileDatabase ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$971.glib_autoptr_clear_GTlsFileDatabase$MH, "glib_autoptr_clear_GTlsFileDatabase");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsFileDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$971.glib_autoptr_cleanup_GTlsFileDatabase$MH,"glib_autoptr_cleanup_GTlsFileDatabase");
    }
    public static void glib_autoptr_cleanup_GTlsFileDatabase ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$971.glib_autoptr_cleanup_GTlsFileDatabase$MH, "glib_autoptr_cleanup_GTlsFileDatabase");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsFileDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$971.glib_listautoptr_cleanup_GTlsFileDatabase$MH,"glib_listautoptr_cleanup_GTlsFileDatabase");
    }
    public static void glib_listautoptr_cleanup_GTlsFileDatabase ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$971.glib_listautoptr_cleanup_GTlsFileDatabase$MH, "glib_listautoptr_cleanup_GTlsFileDatabase");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsFileDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$971.glib_slistautoptr_cleanup_GTlsFileDatabase$MH,"glib_slistautoptr_cleanup_GTlsFileDatabase");
    }
    public static void glib_slistautoptr_cleanup_GTlsFileDatabase ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$971.glib_slistautoptr_cleanup_GTlsFileDatabase$MH, "glib_slistautoptr_cleanup_GTlsFileDatabase");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsFileDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$971.glib_queueautoptr_cleanup_GTlsFileDatabase$MH,"glib_queueautoptr_cleanup_GTlsFileDatabase");
    }
    public static void glib_queueautoptr_cleanup_GTlsFileDatabase ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$971.glib_queueautoptr_cleanup_GTlsFileDatabase$MH, "glib_queueautoptr_cleanup_GTlsFileDatabase");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsInteraction_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsInteraction_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsInteraction_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsInteraction_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsInteraction$MH() {
        return RuntimeHelper.requireNonNull(constants$972.glib_autoptr_clear_GTlsInteraction$MH,"glib_autoptr_clear_GTlsInteraction");
    }
    public static void glib_autoptr_clear_GTlsInteraction ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$972.glib_autoptr_clear_GTlsInteraction$MH, "glib_autoptr_clear_GTlsInteraction");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsInteraction$MH() {
        return RuntimeHelper.requireNonNull(constants$972.glib_autoptr_cleanup_GTlsInteraction$MH,"glib_autoptr_cleanup_GTlsInteraction");
    }
    public static void glib_autoptr_cleanup_GTlsInteraction ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$972.glib_autoptr_cleanup_GTlsInteraction$MH, "glib_autoptr_cleanup_GTlsInteraction");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsInteraction$MH() {
        return RuntimeHelper.requireNonNull(constants$972.glib_listautoptr_cleanup_GTlsInteraction$MH,"glib_listautoptr_cleanup_GTlsInteraction");
    }
    public static void glib_listautoptr_cleanup_GTlsInteraction ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$972.glib_listautoptr_cleanup_GTlsInteraction$MH, "glib_listautoptr_cleanup_GTlsInteraction");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsInteraction$MH() {
        return RuntimeHelper.requireNonNull(constants$972.glib_slistautoptr_cleanup_GTlsInteraction$MH,"glib_slistautoptr_cleanup_GTlsInteraction");
    }
    public static void glib_slistautoptr_cleanup_GTlsInteraction ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$972.glib_slistautoptr_cleanup_GTlsInteraction$MH, "glib_slistautoptr_cleanup_GTlsInteraction");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsInteraction$MH() {
        return RuntimeHelper.requireNonNull(constants$972.glib_queueautoptr_cleanup_GTlsInteraction$MH,"glib_queueautoptr_cleanup_GTlsInteraction");
    }
    public static void glib_queueautoptr_cleanup_GTlsInteraction ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$972.glib_queueautoptr_cleanup_GTlsInteraction$MH, "glib_queueautoptr_cleanup_GTlsInteraction");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsPassword_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsPassword_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsPassword_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsPassword_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsPassword$MH() {
        return RuntimeHelper.requireNonNull(constants$972.glib_autoptr_clear_GTlsPassword$MH,"glib_autoptr_clear_GTlsPassword");
    }
    public static void glib_autoptr_clear_GTlsPassword ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$972.glib_autoptr_clear_GTlsPassword$MH, "glib_autoptr_clear_GTlsPassword");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsPassword$MH() {
        return RuntimeHelper.requireNonNull(constants$973.glib_autoptr_cleanup_GTlsPassword$MH,"glib_autoptr_cleanup_GTlsPassword");
    }
    public static void glib_autoptr_cleanup_GTlsPassword ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$973.glib_autoptr_cleanup_GTlsPassword$MH, "glib_autoptr_cleanup_GTlsPassword");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsPassword$MH() {
        return RuntimeHelper.requireNonNull(constants$973.glib_listautoptr_cleanup_GTlsPassword$MH,"glib_listautoptr_cleanup_GTlsPassword");
    }
    public static void glib_listautoptr_cleanup_GTlsPassword ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$973.glib_listautoptr_cleanup_GTlsPassword$MH, "glib_listautoptr_cleanup_GTlsPassword");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsPassword$MH() {
        return RuntimeHelper.requireNonNull(constants$973.glib_slistautoptr_cleanup_GTlsPassword$MH,"glib_slistautoptr_cleanup_GTlsPassword");
    }
    public static void glib_slistautoptr_cleanup_GTlsPassword ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$973.glib_slistautoptr_cleanup_GTlsPassword$MH, "glib_slistautoptr_cleanup_GTlsPassword");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsPassword$MH() {
        return RuntimeHelper.requireNonNull(constants$973.glib_queueautoptr_cleanup_GTlsPassword$MH,"glib_queueautoptr_cleanup_GTlsPassword");
    }
    public static void glib_queueautoptr_cleanup_GTlsPassword ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$973.glib_queueautoptr_cleanup_GTlsPassword$MH, "glib_queueautoptr_cleanup_GTlsPassword");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GTlsServerConnection_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsServerConnection_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsServerConnection_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GTlsServerConnection_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GTlsServerConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$973.glib_autoptr_clear_GTlsServerConnection$MH,"glib_autoptr_clear_GTlsServerConnection");
    }
    public static void glib_autoptr_clear_GTlsServerConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$973.glib_autoptr_clear_GTlsServerConnection$MH, "glib_autoptr_clear_GTlsServerConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GTlsServerConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$973.glib_autoptr_cleanup_GTlsServerConnection$MH,"glib_autoptr_cleanup_GTlsServerConnection");
    }
    public static void glib_autoptr_cleanup_GTlsServerConnection ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$973.glib_autoptr_cleanup_GTlsServerConnection$MH, "glib_autoptr_cleanup_GTlsServerConnection");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GTlsServerConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$974.glib_listautoptr_cleanup_GTlsServerConnection$MH,"glib_listautoptr_cleanup_GTlsServerConnection");
    }
    public static void glib_listautoptr_cleanup_GTlsServerConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$974.glib_listautoptr_cleanup_GTlsServerConnection$MH, "glib_listautoptr_cleanup_GTlsServerConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GTlsServerConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$974.glib_slistautoptr_cleanup_GTlsServerConnection$MH,"glib_slistautoptr_cleanup_GTlsServerConnection");
    }
    public static void glib_slistautoptr_cleanup_GTlsServerConnection ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$974.glib_slistautoptr_cleanup_GTlsServerConnection$MH, "glib_slistautoptr_cleanup_GTlsServerConnection");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GTlsServerConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$974.glib_queueautoptr_cleanup_GTlsServerConnection$MH,"glib_queueautoptr_cleanup_GTlsServerConnection");
    }
    public static void glib_queueautoptr_cleanup_GTlsServerConnection ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$974.glib_queueautoptr_cleanup_GTlsServerConnection$MH, "glib_queueautoptr_cleanup_GTlsServerConnection");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GVfs_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVfs_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVfs_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVfs_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GVfs$MH() {
        return RuntimeHelper.requireNonNull(constants$974.glib_autoptr_clear_GVfs$MH,"glib_autoptr_clear_GVfs");
    }
    public static void glib_autoptr_clear_GVfs ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$974.glib_autoptr_clear_GVfs$MH, "glib_autoptr_clear_GVfs");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GVfs$MH() {
        return RuntimeHelper.requireNonNull(constants$974.glib_autoptr_cleanup_GVfs$MH,"glib_autoptr_cleanup_GVfs");
    }
    public static void glib_autoptr_cleanup_GVfs ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$974.glib_autoptr_cleanup_GVfs$MH, "glib_autoptr_cleanup_GVfs");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GVfs$MH() {
        return RuntimeHelper.requireNonNull(constants$974.glib_listautoptr_cleanup_GVfs$MH,"glib_listautoptr_cleanup_GVfs");
    }
    public static void glib_listautoptr_cleanup_GVfs ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$974.glib_listautoptr_cleanup_GVfs$MH, "glib_listautoptr_cleanup_GVfs");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GVfs$MH() {
        return RuntimeHelper.requireNonNull(constants$975.glib_slistautoptr_cleanup_GVfs$MH,"glib_slistautoptr_cleanup_GVfs");
    }
    public static void glib_slistautoptr_cleanup_GVfs ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$975.glib_slistautoptr_cleanup_GVfs$MH, "glib_slistautoptr_cleanup_GVfs");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GVfs$MH() {
        return RuntimeHelper.requireNonNull(constants$975.glib_queueautoptr_cleanup_GVfs$MH,"glib_queueautoptr_cleanup_GVfs");
    }
    public static void glib_queueautoptr_cleanup_GVfs ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$975.glib_queueautoptr_cleanup_GVfs$MH, "glib_queueautoptr_cleanup_GVfs");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GVolume_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVolume_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVolume_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVolume_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$975.glib_autoptr_clear_GVolume$MH,"glib_autoptr_clear_GVolume");
    }
    public static void glib_autoptr_clear_GVolume ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$975.glib_autoptr_clear_GVolume$MH, "glib_autoptr_clear_GVolume");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$975.glib_autoptr_cleanup_GVolume$MH,"glib_autoptr_cleanup_GVolume");
    }
    public static void glib_autoptr_cleanup_GVolume ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$975.glib_autoptr_cleanup_GVolume$MH, "glib_autoptr_cleanup_GVolume");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$975.glib_listautoptr_cleanup_GVolume$MH,"glib_listautoptr_cleanup_GVolume");
    }
    public static void glib_listautoptr_cleanup_GVolume ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$975.glib_listautoptr_cleanup_GVolume$MH, "glib_listautoptr_cleanup_GVolume");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$975.glib_slistautoptr_cleanup_GVolume$MH,"glib_slistautoptr_cleanup_GVolume");
    }
    public static void glib_slistautoptr_cleanup_GVolume ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$975.glib_slistautoptr_cleanup_GVolume$MH, "glib_slistautoptr_cleanup_GVolume");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$976.glib_queueautoptr_cleanup_GVolume$MH,"glib_queueautoptr_cleanup_GVolume");
    }
    public static void glib_queueautoptr_cleanup_GVolume ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$976.glib_queueautoptr_cleanup_GVolume$MH, "glib_queueautoptr_cleanup_GVolume");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GVolumeMonitor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVolumeMonitor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVolumeMonitor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GVolumeMonitor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$976.glib_autoptr_clear_GVolumeMonitor$MH,"glib_autoptr_clear_GVolumeMonitor");
    }
    public static void glib_autoptr_clear_GVolumeMonitor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$976.glib_autoptr_clear_GVolumeMonitor$MH, "glib_autoptr_clear_GVolumeMonitor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$976.glib_autoptr_cleanup_GVolumeMonitor$MH,"glib_autoptr_cleanup_GVolumeMonitor");
    }
    public static void glib_autoptr_cleanup_GVolumeMonitor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$976.glib_autoptr_cleanup_GVolumeMonitor$MH, "glib_autoptr_cleanup_GVolumeMonitor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$976.glib_listautoptr_cleanup_GVolumeMonitor$MH,"glib_listautoptr_cleanup_GVolumeMonitor");
    }
    public static void glib_listautoptr_cleanup_GVolumeMonitor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$976.glib_listautoptr_cleanup_GVolumeMonitor$MH, "glib_listautoptr_cleanup_GVolumeMonitor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$976.glib_slistautoptr_cleanup_GVolumeMonitor$MH,"glib_slistautoptr_cleanup_GVolumeMonitor");
    }
    public static void glib_slistautoptr_cleanup_GVolumeMonitor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$976.glib_slistautoptr_cleanup_GVolumeMonitor$MH, "glib_slistautoptr_cleanup_GVolumeMonitor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GVolumeMonitor$MH() {
        return RuntimeHelper.requireNonNull(constants$976.glib_queueautoptr_cleanup_GVolumeMonitor$MH,"glib_queueautoptr_cleanup_GVolumeMonitor");
    }
    public static void glib_queueautoptr_cleanup_GVolumeMonitor ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$976.glib_queueautoptr_cleanup_GVolumeMonitor$MH, "glib_queueautoptr_cleanup_GVolumeMonitor");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GZlibCompressor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GZlibCompressor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GZlibCompressor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GZlibCompressor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GZlibCompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$977.glib_autoptr_clear_GZlibCompressor$MH,"glib_autoptr_clear_GZlibCompressor");
    }
    public static void glib_autoptr_clear_GZlibCompressor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$977.glib_autoptr_clear_GZlibCompressor$MH, "glib_autoptr_clear_GZlibCompressor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GZlibCompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$977.glib_autoptr_cleanup_GZlibCompressor$MH,"glib_autoptr_cleanup_GZlibCompressor");
    }
    public static void glib_autoptr_cleanup_GZlibCompressor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$977.glib_autoptr_cleanup_GZlibCompressor$MH, "glib_autoptr_cleanup_GZlibCompressor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GZlibCompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$977.glib_listautoptr_cleanup_GZlibCompressor$MH,"glib_listautoptr_cleanup_GZlibCompressor");
    }
    public static void glib_listautoptr_cleanup_GZlibCompressor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$977.glib_listautoptr_cleanup_GZlibCompressor$MH, "glib_listautoptr_cleanup_GZlibCompressor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GZlibCompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$977.glib_slistautoptr_cleanup_GZlibCompressor$MH,"glib_slistautoptr_cleanup_GZlibCompressor");
    }
    public static void glib_slistautoptr_cleanup_GZlibCompressor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$977.glib_slistautoptr_cleanup_GZlibCompressor$MH, "glib_slistautoptr_cleanup_GZlibCompressor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GZlibCompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$977.glib_queueautoptr_cleanup_GZlibCompressor$MH,"glib_queueautoptr_cleanup_GZlibCompressor");
    }
    public static void glib_queueautoptr_cleanup_GZlibCompressor ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$977.glib_queueautoptr_cleanup_GZlibCompressor$MH, "glib_queueautoptr_cleanup_GZlibCompressor");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress GZlibDecompressor_autoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GZlibDecompressor_listautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GZlibDecompressor_slistautoptr = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress GZlibDecompressor_queueautoptr = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle glib_autoptr_clear_GZlibDecompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$977.glib_autoptr_clear_GZlibDecompressor$MH,"glib_autoptr_clear_GZlibDecompressor");
    }
    public static void glib_autoptr_clear_GZlibDecompressor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$977.glib_autoptr_clear_GZlibDecompressor$MH, "glib_autoptr_clear_GZlibDecompressor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_autoptr_cleanup_GZlibDecompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$978.glib_autoptr_cleanup_GZlibDecompressor$MH,"glib_autoptr_cleanup_GZlibDecompressor");
    }
    public static void glib_autoptr_cleanup_GZlibDecompressor ( Addressable _ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$978.glib_autoptr_cleanup_GZlibDecompressor$MH, "glib_autoptr_cleanup_GZlibDecompressor");
        try {
            mh$.invokeExact(_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_listautoptr_cleanup_GZlibDecompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$978.glib_listautoptr_cleanup_GZlibDecompressor$MH,"glib_listautoptr_cleanup_GZlibDecompressor");
    }
    public static void glib_listautoptr_cleanup_GZlibDecompressor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$978.glib_listautoptr_cleanup_GZlibDecompressor$MH, "glib_listautoptr_cleanup_GZlibDecompressor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_slistautoptr_cleanup_GZlibDecompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$978.glib_slistautoptr_cleanup_GZlibDecompressor$MH,"glib_slistautoptr_cleanup_GZlibDecompressor");
    }
    public static void glib_slistautoptr_cleanup_GZlibDecompressor ( Addressable _l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$978.glib_slistautoptr_cleanup_GZlibDecompressor$MH, "glib_slistautoptr_cleanup_GZlibDecompressor");
        try {
            mh$.invokeExact(_l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle glib_queueautoptr_cleanup_GZlibDecompressor$MH() {
        return RuntimeHelper.requireNonNull(constants$978.glib_queueautoptr_cleanup_GZlibDecompressor$MH,"glib_queueautoptr_cleanup_GZlibDecompressor");
    }
    public static void glib_queueautoptr_cleanup_GZlibDecompressor ( Addressable _q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$978.glib_queueautoptr_cleanup_GZlibDecompressor$MH, "glib_queueautoptr_cleanup_GZlibDecompressor");
        try {
            mh$.invokeExact(_q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryAddress NULL() {
        return constants$978.NULL$ADDR;
    }
    public static int g_macro__has_attribute() {
        return (int)0L;
    }
    public static int g_macro__has_feature() {
        return (int)0L;
    }
    public static int g_macro__has_builtin() {
        return (int)0L;
    }
    public static int g_macro__has_extension() {
        return (int)0L;
    }
    public static MemorySegment G_GNUC_FUNCTION() {
        return constants$978.G_GNUC_FUNCTION$SEGMENT;
    }
    public static MemorySegment G_GNUC_PRETTY_FUNCTION() {
        return constants$979.G_GNUC_PRETTY_FUNCTION$SEGMENT;
    }
    public static MemorySegment G_STRLOC() {
        return constants$979.G_STRLOC$SEGMENT;
    }
    public static int FALSE() {
        return (int)0L;
    }
    public static int TRUE() {
        return (int)1L;
    }
    public static long _POSIX_C_SOURCE() {
        return 200809L;
    }
    public static int __TIMESIZE() {
        return (int)64L;
    }
    public static long __STDC_ISO_10646__() {
        return 201706L;
    }
    public static long LLONG_MIN() {
        return -9223372036854775808L;
    }
    public static long LLONG_MAX() {
        return 9223372036854775807L;
    }
    public static long ULLONG_MAX() {
        return -1L;
    }
    public static int PTHREAD_DESTRUCTOR_ITERATIONS() {
        return (int)4L;
    }
    public static int SEM_VALUE_MAX() {
        return (int)2147483647L;
    }
    public static long SSIZE_MAX() {
        return 9223372036854775807L;
    }
    public static int BC_BASE_MAX() {
        return (int)99L;
    }
    public static int BC_DIM_MAX() {
        return (int)2048L;
    }
    public static int BC_SCALE_MAX() {
        return (int)99L;
    }
    public static int BC_STRING_MAX() {
        return (int)1000L;
    }
    public static int EXPR_NEST_MAX() {
        return (int)32L;
    }
    public static int LINE_MAX() {
        return (int)2048L;
    }
    public static int RE_DUP_MAX() {
        return (int)32767L;
    }
    public static int SCHAR_MAX() {
        return (int)127L;
    }
    public static int SHRT_MAX() {
        return (int)32767L;
    }
    public static int INT_MAX() {
        return (int)2147483647L;
    }
    public static long LONG_MAX() {
        return 9223372036854775807L;
    }
    public static int SCHAR_MIN() {
        return (int)-128L;
    }
    public static int SHRT_MIN() {
        return (int)-32768L;
    }
    public static int INT_MIN() {
        return (int)-2147483648L;
    }
    public static long LONG_MIN() {
        return -9223372036854775808L;
    }
    public static int UCHAR_MAX() {
        return (int)255L;
    }
    public static int USHRT_MAX() {
        return (int)65535L;
    }
    public static int UINT_MAX() {
        return (int)4294967295L;
    }
    public static long ULONG_MAX() {
        return -1L;
    }
    public static int CHAR_BIT() {
        return (int)8L;
    }
    public static int CHAR_MIN() {
        return (int)-128L;
    }
    public static int CHAR_MAX() {
        return (int)127L;
    }
    public static int FLT_EVAL_METHOD() {
        return (int)0L;
    }
    public static int FLT_RADIX() {
        return (int)2L;
    }
    public static int FLT_MANT_DIG() {
        return (int)24L;
    }
    public static int DBL_MANT_DIG() {
        return (int)53L;
    }
    public static int LDBL_MANT_DIG() {
        return (int)64L;
    }
    public static int DECIMAL_DIG() {
        return (int)21L;
    }
    public static int FLT_DIG() {
        return (int)6L;
    }
    public static int DBL_DIG() {
        return (int)15L;
    }
    public static int LDBL_DIG() {
        return (int)18L;
    }
    public static int FLT_MIN_EXP() {
        return (int)-125L;
    }
    public static int DBL_MIN_EXP() {
        return (int)-1021L;
    }
    public static int LDBL_MIN_EXP() {
        return (int)-16381L;
    }
    public static int FLT_MIN_10_EXP() {
        return (int)-37L;
    }
    public static int DBL_MIN_10_EXP() {
        return (int)-307L;
    }
    public static int LDBL_MIN_10_EXP() {
        return (int)-4931L;
    }
    public static int FLT_MAX_EXP() {
        return (int)128L;
    }
    public static int DBL_MAX_EXP() {
        return (int)1024L;
    }
    public static int LDBL_MAX_EXP() {
        return (int)16384L;
    }
    public static int FLT_MAX_10_EXP() {
        return (int)38L;
    }
    public static int DBL_MAX_10_EXP() {
        return (int)308L;
    }
    public static int LDBL_MAX_10_EXP() {
        return (int)4932L;
    }
    public static float FLT_MAX() {
        return 3.4028234663852886E38f;
    }
    public static double DBL_MAX() {
        return 1.7976931348623157E308d;
    }
    public static float FLT_EPSILON() {
        return 1.1920928955078125E-7f;
    }
    public static double DBL_EPSILON() {
        return 2.220446049250313E-16d;
    }
    public static float FLT_MIN() {
        return 1.1754943508222875E-38f;
    }
    public static double DBL_MIN() {
        return 2.2250738585072014E-308d;
    }
    public static float FLT_TRUE_MIN() {
        return 1.401298464324817E-45f;
    }
    public static double DBL_TRUE_MIN() {
        return 4.9E-324d;
    }
    public static int FLT_DECIMAL_DIG() {
        return (int)9L;
    }
    public static int DBL_DECIMAL_DIG() {
        return (int)17L;
    }
    public static int LDBL_DECIMAL_DIG() {
        return (int)21L;
    }
    public static int FLT_HAS_SUBNORM() {
        return (int)1L;
    }
    public static int DBL_HAS_SUBNORM() {
        return (int)1L;
    }
    public static int LDBL_HAS_SUBNORM() {
        return (int)1L;
    }
    public static float G_MINFLOAT() {
        return 1.1754943508222875E-38f;
    }
    public static float G_MAXFLOAT() {
        return 3.4028234663852886E38f;
    }
    public static double G_MINDOUBLE() {
        return 2.2250738585072014E-308d;
    }
    public static double G_MAXDOUBLE() {
        return 1.7976931348623157E308d;
    }
    public static int G_MINSHORT() {
        return (int)-32768L;
    }
    public static int G_MAXSHORT() {
        return (int)32767L;
    }
    public static int G_MAXUSHORT() {
        return (int)65535L;
    }
    public static int G_MININT() {
        return (int)-2147483648L;
    }
    public static int G_MAXINT() {
        return (int)2147483647L;
    }
    public static int G_MAXUINT() {
        return (int)4294967295L;
    }
    public static long G_MINLONG() {
        return -9223372036854775808L;
    }
    public static long G_MAXLONG() {
        return 9223372036854775807L;
    }
    public static long G_MAXULONG() {
        return -1L;
    }
    public static MemorySegment G_GINT16_MODIFIER() {
        return constants$979.G_GINT16_MODIFIER$SEGMENT;
    }
    public static MemorySegment G_GINT16_FORMAT() {
        return constants$979.G_GINT16_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GUINT16_FORMAT() {
        return constants$979.G_GUINT16_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GINT32_MODIFIER() {
        return constants$979.G_GINT32_MODIFIER$SEGMENT;
    }
    public static MemorySegment G_GINT32_FORMAT() {
        return constants$980.G_GINT32_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GUINT32_FORMAT() {
        return constants$980.G_GUINT32_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GINT64_MODIFIER() {
        return constants$980.G_GINT64_MODIFIER$SEGMENT;
    }
    public static MemorySegment G_GINT64_FORMAT() {
        return constants$980.G_GINT64_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GUINT64_FORMAT() {
        return constants$980.G_GUINT64_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GSIZE_MODIFIER() {
        return constants$980.G_GSIZE_MODIFIER$SEGMENT;
    }
    public static MemorySegment G_GSSIZE_MODIFIER() {
        return constants$981.G_GSSIZE_MODIFIER$SEGMENT;
    }
    public static MemorySegment G_GSIZE_FORMAT() {
        return constants$981.G_GSIZE_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GSSIZE_FORMAT() {
        return constants$981.G_GSSIZE_FORMAT$SEGMENT;
    }
    public static long G_MAXSIZE() {
        return -1L;
    }
    public static long G_MINSSIZE() {
        return -9223372036854775808L;
    }
    public static long G_MAXSSIZE() {
        return 9223372036854775807L;
    }
    public static long G_MINOFFSET() {
        return -9223372036854775808L;
    }
    public static long G_MAXOFFSET() {
        return 9223372036854775807L;
    }
    public static MemorySegment G_GOFFSET_MODIFIER() {
        return constants$981.G_GOFFSET_MODIFIER$SEGMENT;
    }
    public static MemorySegment G_GOFFSET_FORMAT() {
        return constants$981.G_GOFFSET_FORMAT$SEGMENT;
    }
    public static MemorySegment G_POLLFD_FORMAT() {
        return constants$981.G_POLLFD_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GINTPTR_MODIFIER() {
        return constants$982.G_GINTPTR_MODIFIER$SEGMENT;
    }
    public static MemorySegment G_GINTPTR_FORMAT() {
        return constants$982.G_GINTPTR_FORMAT$SEGMENT;
    }
    public static MemorySegment G_GUINTPTR_FORMAT() {
        return constants$982.G_GUINTPTR_FORMAT$SEGMENT;
    }
    public static int G_BYTE_ORDER() {
        return (int)1234L;
    }
    public static MemorySegment G_MODULE_SUFFIX() {
        return constants$982.G_MODULE_SUFFIX$SEGMENT;
    }
    public static MemorySegment G_PID_FORMAT() {
        return constants$982.G_PID_FORMAT$SEGMENT;
    }
    public static int G_DIR_SEPARATOR() {
        return (int)47L;
    }
    public static MemorySegment G_DIR_SEPARATOR_S() {
        return constants$982.G_DIR_SEPARATOR_S$SEGMENT;
    }
    public static int G_SEARCHPATH_SEPARATOR() {
        return (int)58L;
    }
    public static MemorySegment G_SEARCHPATH_SEPARATOR_S() {
        return constants$983.G_SEARCHPATH_SEPARATOR_S$SEGMENT;
    }
    public static int GLIB_VERSION_2_26() {
        return (int)137728L;
    }
    public static int GLIB_VERSION_2_28() {
        return (int)138240L;
    }
    public static int GLIB_VERSION_2_30() {
        return (int)138752L;
    }
    public static int GLIB_VERSION_2_32() {
        return (int)139264L;
    }
    public static int GLIB_VERSION_2_34() {
        return (int)139776L;
    }
    public static int GLIB_VERSION_2_36() {
        return (int)140288L;
    }
    public static int GLIB_VERSION_2_38() {
        return (int)140800L;
    }
    public static int GLIB_VERSION_2_40() {
        return (int)141312L;
    }
    public static int GLIB_VERSION_2_42() {
        return (int)141824L;
    }
    public static int GLIB_VERSION_2_44() {
        return (int)142336L;
    }
    public static int GLIB_VERSION_2_46() {
        return (int)142848L;
    }
    public static int GLIB_VERSION_2_48() {
        return (int)143360L;
    }
    public static int GLIB_VERSION_2_50() {
        return (int)143872L;
    }
    public static int GLIB_VERSION_2_52() {
        return (int)144384L;
    }
    public static int GLIB_VERSION_2_54() {
        return (int)144896L;
    }
    public static int GLIB_VERSION_2_56() {
        return (int)145408L;
    }
    public static int GLIB_VERSION_2_58() {
        return (int)145920L;
    }
    public static int GLIB_VERSION_2_60() {
        return (int)146432L;
    }
    public static int GLIB_VERSION_2_62() {
        return (int)146944L;
    }
    public static int GLIB_VERSION_2_64() {
        return (int)147456L;
    }
    public static int GLIB_VERSION_2_66() {
        return (int)147968L;
    }
    public static int GLIB_VERSION_2_68() {
        return (int)148480L;
    }
    public static int GLIB_VERSION_2_70() {
        return (int)148992L;
    }
    public static int GLIB_VERSION_CUR_STABLE() {
        return (int)148992L;
    }
    public static int GLIB_VERSION_PREV_STABLE() {
        return (int)148480L;
    }
    public static int GLIB_VERSION_MIN_REQUIRED() {
        return (int)148992L;
    }
    public static int GLIB_VERSION_MAX_ALLOWED() {
        return (int)148992L;
    }
    public static long CLOCKS_PER_SEC() {
        return 1000000L;
    }
    public static int __BYTE_ORDER() {
        return (int)1234L;
    }
    public static int __FLOAT_WORD_ORDER() {
        return (int)1234L;
    }
    public static byte G_MININT8() {
        return (byte)-128L;
    }
    public static byte G_MAXINT8() {
        return (byte)127L;
    }
    public static byte G_MAXUINT8() {
        return (byte)255L;
    }
    public static short G_MININT16() {
        return (short)-32768L;
    }
    public static short G_MAXINT16() {
        return (short)32767L;
    }
    public static short G_MAXUINT16() {
        return (short)65535L;
    }
    public static int G_MININT32() {
        return (int)-2147483648L;
    }
    public static int G_MAXINT32() {
        return (int)2147483647L;
    }
    public static int G_MAXUINT32() {
        return (int)4294967295L;
    }
    public static long G_MININT64() {
        return -9223372036854775808L;
    }
    public static long G_MAXINT64() {
        return 9223372036854775807L;
    }
    public static long G_MAXUINT64() {
        return -1L;
    }
    public static double G_E() {
        return 2.718281828459045d;
    }
    public static double G_LN2() {
        return 0.6931471805599453d;
    }
    public static double G_LN10() {
        return 2.302585092994046d;
    }
    public static double G_PI() {
        return 3.141592653589793d;
    }
    public static double G_PI_2() {
        return 1.5707963267948966d;
    }
    public static double G_PI_4() {
        return 0.7853981633974483d;
    }
    public static double G_SQRT2() {
        return 1.4142135623730951d;
    }
    public static int G_IEEE754_FLOAT_BIAS() {
        return (int)127L;
    }
    public static int G_IEEE754_DOUBLE_BIAS() {
        return (int)1023L;
    }
    public static double G_LOG_2_BASE_10() {
        return 0.3010299956639812d;
    }
    public static MemorySegment G_OS_INFO_KEY_NAME() {
        return constants$983.G_OS_INFO_KEY_NAME$SEGMENT;
    }
    public static MemorySegment G_OS_INFO_KEY_PRETTY_NAME() {
        return constants$983.G_OS_INFO_KEY_PRETTY_NAME$SEGMENT;
    }
    public static MemorySegment G_OS_INFO_KEY_VERSION() {
        return constants$983.G_OS_INFO_KEY_VERSION$SEGMENT;
    }
    public static MemorySegment G_OS_INFO_KEY_VERSION_CODENAME() {
        return constants$983.G_OS_INFO_KEY_VERSION_CODENAME$SEGMENT;
    }
    public static MemorySegment G_OS_INFO_KEY_VERSION_ID() {
        return constants$983.G_OS_INFO_KEY_VERSION_ID$SEGMENT;
    }
    public static MemorySegment G_OS_INFO_KEY_ID() {
        return constants$984.G_OS_INFO_KEY_ID$SEGMENT;
    }
    public static MemorySegment G_OS_INFO_KEY_HOME_URL() {
        return constants$984.G_OS_INFO_KEY_HOME_URL$SEGMENT;
    }
    public static MemorySegment G_OS_INFO_KEY_DOCUMENTATION_URL() {
        return constants$984.G_OS_INFO_KEY_DOCUMENTATION_URL$SEGMENT;
    }
    public static MemorySegment G_OS_INFO_KEY_SUPPORT_URL() {
        return constants$984.G_OS_INFO_KEY_SUPPORT_URL$SEGMENT;
    }
    public static MemorySegment G_OS_INFO_KEY_BUG_REPORT_URL() {
        return constants$984.G_OS_INFO_KEY_BUG_REPORT_URL$SEGMENT;
    }
    public static MemorySegment G_OS_INFO_KEY_PRIVACY_POLICY_URL() {
        return constants$984.G_OS_INFO_KEY_PRIVACY_POLICY_URL$SEGMENT;
    }
    public static int __WCLONE() {
        return (int)2147483648L;
    }
    public static int __HAVE_DISTINCT_FLOAT16() {
        return (int)0L;
    }
    public static int __HAVE_DISTINCT_FLOAT128X() {
        return (int)0L;
    }
    public static int __HAVE_FLOAT128_UNLIKE_LDBL() {
        return (int)0L;
    }
    public static int LITTLE_ENDIAN() {
        return (int)1234L;
    }
    public static int BIG_ENDIAN() {
        return (int)4321L;
    }
    public static int PDP_ENDIAN() {
        return (int)3412L;
    }
    public static int BYTE_ORDER() {
        return (int)1234L;
    }
    public static long _SIGSET_NWORDS() {
        return 16L;
    }
    public static int __NFDBITS() {
        return (int)64L;
    }
    public static int FD_SETSIZE() {
        return (int)1024L;
    }
    public static int NFDBITS() {
        return (int)64L;
    }
    public static int __PTHREAD_RWLOCK_ELISION_EXTRA() {
        return (int)0L;
    }
    public static MemoryAddress SIG_ERR() {
        return constants$985.SIG_ERR$ADDR;
    }
    public static MemoryAddress SIG_DFL() {
        return constants$985.SIG_DFL$ADDR;
    }
    public static MemoryAddress SIG_IGN() {
        return constants$985.SIG_IGN$ADDR;
    }
    public static int SIGIO() {
        return (int)29L;
    }
    public static int SIGIOT() {
        return (int)6L;
    }
    public static int SIGCLD() {
        return (int)17L;
    }
    public static int _NSIG() {
        return (int)65L;
    }
    public static long __SI_PAD_SIZE() {
        return 28L;
    }
    public static long __SIGEV_PAD_SIZE() {
        return 12L;
    }
    public static int NSIG() {
        return (int)65L;
    }
    public static int SA_RESETHAND() {
        return (int)2147483648L;
    }
    public static int SA_NOMASK() {
        return (int)1073741824L;
    }
    public static int SA_ONESHOT() {
        return (int)2147483648L;
    }
    public static int SA_STACK() {
        return (int)134217728L;
    }
    public static int FP_XSTATE_MAGIC1() {
        return (int)1179670611L;
    }
    public static int FP_XSTATE_MAGIC2() {
        return (int)1179670597L;
    }
    public static long FP_XSTATE_MAGIC2_SIZE() {
        return 4L;
    }
    public static int NGREG() {
        return (int)23L;
    }
    public static long G_TIME_SPAN_DAY() {
        return 86400000000L;
    }
    public static long G_TIME_SPAN_HOUR() {
        return 3600000000L;
    }
    public static long G_TIME_SPAN_MINUTE() {
        return 60000000L;
    }
    public static long G_TIME_SPAN_SECOND() {
        return 1000000L;
    }
    public static long G_TIME_SPAN_MILLISECOND() {
        return 1000L;
    }
    public static int G_DATE_BAD_JULIAN() {
        return (int)0L;
    }
    public static int G_DATE_BAD_DAY() {
        return (int)0L;
    }
    public static int G_DATE_BAD_YEAR() {
        return (int)0L;
    }
    public static int MAXNAMLEN() {
        return (int)255L;
    }
    public static int G_MEM_ALIGN() {
        return (int)8L;
    }
    public static int G_HOOK_FLAG_USER_SHIFT() {
        return (int)4L;
    }
    public static int G_PRIORITY_HIGH() {
        return (int)-100L;
    }
    public static int G_SOURCE_REMOVE() {
        return (int)0L;
    }
    public static int G_SOURCE_CONTINUE() {
        return (int)1L;
    }
    public static int G_UNICODE_COMBINING_MARK() {
        return (int)10L;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_GROUP() {
        return constants$985.G_KEY_FILE_DESKTOP_GROUP$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_TYPE() {
        return constants$985.G_KEY_FILE_DESKTOP_KEY_TYPE$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_VERSION() {
        return constants$985.G_KEY_FILE_DESKTOP_KEY_VERSION$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_NAME() {
        return constants$986.G_KEY_FILE_DESKTOP_KEY_NAME$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_GENERIC_NAME() {
        return constants$986.G_KEY_FILE_DESKTOP_KEY_GENERIC_NAME$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_NO_DISPLAY() {
        return constants$986.G_KEY_FILE_DESKTOP_KEY_NO_DISPLAY$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_COMMENT() {
        return constants$986.G_KEY_FILE_DESKTOP_KEY_COMMENT$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_ICON() {
        return constants$986.G_KEY_FILE_DESKTOP_KEY_ICON$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_HIDDEN() {
        return constants$986.G_KEY_FILE_DESKTOP_KEY_HIDDEN$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN() {
        return constants$987.G_KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN() {
        return constants$987.G_KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_TRY_EXEC() {
        return constants$987.G_KEY_FILE_DESKTOP_KEY_TRY_EXEC$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_EXEC() {
        return constants$987.G_KEY_FILE_DESKTOP_KEY_EXEC$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_PATH() {
        return constants$987.G_KEY_FILE_DESKTOP_KEY_PATH$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_TERMINAL() {
        return constants$987.G_KEY_FILE_DESKTOP_KEY_TERMINAL$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_MIME_TYPE() {
        return constants$988.G_KEY_FILE_DESKTOP_KEY_MIME_TYPE$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_CATEGORIES() {
        return constants$988.G_KEY_FILE_DESKTOP_KEY_CATEGORIES$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY() {
        return constants$988.G_KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS() {
        return constants$988.G_KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_URL() {
        return constants$988.G_KEY_FILE_DESKTOP_KEY_URL$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_DBUS_ACTIVATABLE() {
        return constants$988.G_KEY_FILE_DESKTOP_KEY_DBUS_ACTIVATABLE$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_KEY_ACTIONS() {
        return constants$989.G_KEY_FILE_DESKTOP_KEY_ACTIONS$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_TYPE_APPLICATION() {
        return constants$989.G_KEY_FILE_DESKTOP_TYPE_APPLICATION$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_TYPE_LINK() {
        return constants$989.G_KEY_FILE_DESKTOP_TYPE_LINK$SEGMENT;
    }
    public static MemorySegment G_KEY_FILE_DESKTOP_TYPE_DIRECTORY() {
        return constants$989.G_KEY_FILE_DESKTOP_TYPE_DIRECTORY$SEGMENT;
    }
    public static int G_LOG_LEVEL_USER_SHIFT() {
        return (int)8L;
    }
    public static int G_LOG_FATAL_MASK() {
        return (int)5L;
    }
    public static MemoryAddress G_LOG_DOMAIN() {
        return constants$989.G_LOG_DOMAIN$ADDR;
    }
    public static MemorySegment G_OPTION_REMAINING() {
        return constants$989.G_OPTION_REMAINING$SEGMENT;
    }
    public static MemorySegment G_CSET_A_2_Z() {
        return constants$990.G_CSET_A_2_Z$SEGMENT;
    }
    public static MemorySegment G_CSET_a_2_z() {
        return constants$990.G_CSET_a_2_z$SEGMENT;
    }
    public static MemorySegment G_CSET_DIGITS() {
        return constants$990.G_CSET_DIGITS$SEGMENT;
    }
    public static MemorySegment G_CSET_LATINC() {
        return constants$990.G_CSET_LATINC$SEGMENT;
    }
    public static MemorySegment G_CSET_LATINS() {
        return constants$990.G_CSET_LATINS$SEGMENT;
    }
    public static MemorySegment G_STR_DELIMITERS() {
        return constants$990.G_STR_DELIMITERS$SEGMENT;
    }
    public static int G_ASCII_DTOSTR_BUF_SIZE() {
        return (int)39L;
    }
    public static int EWOULDBLOCK() {
        return (int)11L;
    }
    public static int EDEADLOCK() {
        return (int)35L;
    }
    public static int ENOTSUP() {
        return (int)95L;
    }
    public static MemorySegment G_TEST_OPTION_ISOLATE_DIRS() {
        return constants$991.G_TEST_OPTION_ISOLATE_DIRS$SEGMENT;
    }
    public static MemorySegment G_URI_RESERVED_CHARS_GENERIC_DELIMITERS() {
        return constants$991.G_URI_RESERVED_CHARS_GENERIC_DELIMITERS$SEGMENT;
    }
    public static MemorySegment G_URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS() {
        return constants$991.G_URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS$SEGMENT;
    }
    public static MemorySegment G_URI_RESERVED_CHARS_ALLOWED_IN_PATH_ELEMENT() {
        return constants$991.G_URI_RESERVED_CHARS_ALLOWED_IN_PATH_ELEMENT$SEGMENT;
    }
    public static MemorySegment G_URI_RESERVED_CHARS_ALLOWED_IN_PATH() {
        return constants$991.G_URI_RESERVED_CHARS_ALLOWED_IN_PATH$SEGMENT;
    }
    public static MemorySegment G_URI_RESERVED_CHARS_ALLOWED_IN_USERINFO() {
        return constants$991.G_URI_RESERVED_CHARS_ALLOWED_IN_USERINFO$SEGMENT;
    }
    public static long __NCPUBITS() {
        return 64L;
    }
    public static MemoryAddress PTHREAD_CANCELED() {
        return constants$992.PTHREAD_CANCELED$ADDR;
    }
    public static int PTHREAD_BARRIER_SERIAL_THREAD() {
        return (int)-1L;
    }
    public static int G_TYPE_FUNDAMENTAL_MAX() {
        return (int)1020L;
    }
    public static long G_TYPE_INVALID() {
        return 0L;
    }
    public static long G_TYPE_NONE() {
        return 4L;
    }
    public static long G_TYPE_INTERFACE() {
        return 8L;
    }
    public static long G_TYPE_CHAR() {
        return 12L;
    }
    public static long G_TYPE_UCHAR() {
        return 16L;
    }
    public static long G_TYPE_BOOLEAN() {
        return 20L;
    }
    public static long G_TYPE_INT() {
        return 24L;
    }
    public static long G_TYPE_UINT() {
        return 28L;
    }
    public static long G_TYPE_LONG() {
        return 32L;
    }
    public static long G_TYPE_ULONG() {
        return 36L;
    }
    public static long G_TYPE_INT64() {
        return 40L;
    }
    public static long G_TYPE_UINT64() {
        return 44L;
    }
    public static long G_TYPE_ENUM() {
        return 48L;
    }
    public static long G_TYPE_FLAGS() {
        return 52L;
    }
    public static long G_TYPE_FLOAT() {
        return 56L;
    }
    public static long G_TYPE_DOUBLE() {
        return 60L;
    }
    public static long G_TYPE_STRING() {
        return 64L;
    }
    public static long G_TYPE_POINTER() {
        return 68L;
    }
    public static long G_TYPE_BOXED() {
        return 72L;
    }
    public static long G_TYPE_PARAM() {
        return 76L;
    }
    public static long G_TYPE_OBJECT() {
        return 80L;
    }
    public static long G_TYPE_VARIANT() {
        return 84L;
    }
    public static int G_TYPE_FUNDAMENTAL_SHIFT() {
        return (int)2L;
    }
    public static int G_TYPE_RESERVED_GLIB_FIRST() {
        return (int)22L;
    }
    public static int G_TYPE_RESERVED_GLIB_LAST() {
        return (int)31L;
    }
    public static int G_TYPE_RESERVED_BSE_FIRST() {
        return (int)32L;
    }
    public static int G_TYPE_RESERVED_BSE_LAST() {
        return (int)48L;
    }
    public static int G_TYPE_RESERVED_USER_FIRST() {
        return (int)49L;
    }
    public static long G_TYPE_FLAG_RESERVED_ID_BIT() {
        return 1L;
    }
    public static int G_VALUE_NOCOPY_CONTENTS() {
        return (int)134217728L;
    }
    public static int G_VALUE_INTERNED_STRING() {
        return (int)268435456L;
    }
    public static int G_PARAM_STATIC_STRINGS() {
        return (int)224L;
    }
    public static int G_PARAM_MASK() {
        return (int)255L;
    }
    public static int G_PARAM_USER_SHIFT() {
        return (int)8L;
    }
    public static long G_SIGNAL_TYPE_STATIC_SCOPE() {
        return 1L;
    }
    public static long _POSIX_VERSION() {
        return 200809L;
    }
    public static long __POSIX2_THIS_VERSION() {
        return 200809L;
    }
    public static long _POSIX2_VERSION() {
        return 200809L;
    }
    public static long _POSIX2_C_VERSION() {
        return 200809L;
    }
    public static long _POSIX2_C_BIND() {
        return 200809L;
    }
    public static long _POSIX2_C_DEV() {
        return 200809L;
    }
    public static long _POSIX2_SW_DEV() {
        return 200809L;
    }
    public static long _POSIX2_LOCALEDEF() {
        return 200809L;
    }
    public static long _POSIX_PRIORITY_SCHEDULING() {
        return 200809L;
    }
    public static long _POSIX_SYNCHRONIZED_IO() {
        return 200809L;
    }
    public static long _POSIX_FSYNC() {
        return 200809L;
    }
    public static long _POSIX_MAPPED_FILES() {
        return 200809L;
    }
    public static long _POSIX_MEMLOCK() {
        return 200809L;
    }
    public static long _POSIX_MEMLOCK_RANGE() {
        return 200809L;
    }
    public static long _POSIX_MEMORY_PROTECTION() {
        return 200809L;
    }
    public static int _POSIX_VDISABLE() {
        return (int)0L;
    }
    public static long _POSIX_THREADS() {
        return 200809L;
    }
    public static long _POSIX_THREAD_SAFE_FUNCTIONS() {
        return 200809L;
    }
    public static long _POSIX_THREAD_PRIORITY_SCHEDULING() {
        return 200809L;
    }
    public static long _POSIX_THREAD_ATTR_STACKSIZE() {
        return 200809L;
    }
    public static long _POSIX_THREAD_ATTR_STACKADDR() {
        return 200809L;
    }
    public static long _POSIX_THREAD_PRIO_INHERIT() {
        return 200809L;
    }
    public static long _POSIX_THREAD_PRIO_PROTECT() {
        return 200809L;
    }
    public static long _POSIX_THREAD_ROBUST_PRIO_INHERIT() {
        return 200809L;
    }
    public static int _POSIX_THREAD_ROBUST_PRIO_PROTECT() {
        return (int)-1L;
    }
    public static long _POSIX_SEMAPHORES() {
        return 200809L;
    }
    public static long _POSIX_REALTIME_SIGNALS() {
        return 200809L;
    }
    public static long _POSIX_ASYNCHRONOUS_IO() {
        return 200809L;
    }
    public static long _POSIX_PRIORITIZED_IO() {
        return 200809L;
    }
    public static long _POSIX_SHARED_MEMORY_OBJECTS() {
        return 200809L;
    }
    public static long _POSIX_READER_WRITER_LOCKS() {
        return 200809L;
    }
    public static long _POSIX_TIMEOUTS() {
        return 200809L;
    }
    public static long _POSIX_SPIN_LOCKS() {
        return 200809L;
    }
    public static long _POSIX_SPAWN() {
        return 200809L;
    }
    public static long _POSIX_TIMERS() {
        return 200809L;
    }
    public static long _POSIX_BARRIERS() {
        return 200809L;
    }
    public static long _POSIX_MESSAGE_PASSING() {
        return 200809L;
    }
    public static long _POSIX_THREAD_PROCESS_SHARED() {
        return 200809L;
    }
    public static long _POSIX_CLOCK_SELECTION() {
        return 200809L;
    }
    public static long _POSIX_ADVISORY_INFO() {
        return 200809L;
    }
    public static long _POSIX_IPV6() {
        return 200809L;
    }
    public static long _POSIX_RAW_SOCKETS() {
        return 200809L;
    }
    public static long _POSIX2_CHAR_TERM() {
        return 200809L;
    }
    public static int _POSIX_SPORADIC_SERVER() {
        return (int)-1L;
    }
    public static int _POSIX_THREAD_SPORADIC_SERVER() {
        return (int)-1L;
    }
    public static int _POSIX_TRACE() {
        return (int)-1L;
    }
    public static int _POSIX_TRACE_EVENT_FILTER() {
        return (int)-1L;
    }
    public static int _POSIX_TRACE_INHERIT() {
        return (int)-1L;
    }
    public static int _POSIX_TRACE_LOG() {
        return (int)-1L;
    }
    public static int _POSIX_TYPED_MEMORY_OBJECTS() {
        return (int)-1L;
    }
    public static int _POSIX_V7_LPBIG_OFFBIG() {
        return (int)-1L;
    }
    public static int _POSIX_V6_LPBIG_OFFBIG() {
        return (int)-1L;
    }
    public static int _XBS5_LPBIG_OFFBIG() {
        return (int)-1L;
    }
    public static MemorySegment __ILP32_OFF32_CFLAGS() {
        return constants$992.__ILP32_OFF32_CFLAGS$SEGMENT;
    }
    public static MemorySegment __ILP32_OFF32_LDFLAGS() {
        return constants$992.__ILP32_OFF32_LDFLAGS$SEGMENT;
    }
    public static MemorySegment __ILP32_OFFBIG_CFLAGS() {
        return constants$992.__ILP32_OFFBIG_CFLAGS$SEGMENT;
    }
    public static MemorySegment __ILP32_OFFBIG_LDFLAGS() {
        return constants$992.__ILP32_OFFBIG_LDFLAGS$SEGMENT;
    }
    public static MemorySegment __LP64_OFF64_CFLAGS() {
        return constants$992.__LP64_OFF64_CFLAGS$SEGMENT;
    }
    public static MemorySegment __LP64_OFF64_LDFLAGS() {
        return constants$993.__LP64_OFF64_LDFLAGS$SEGMENT;
    }
    public static int L_SET() {
        return (int)0L;
    }
    public static int L_INCR() {
        return (int)1L;
    }
    public static int L_XTND() {
        return (int)2L;
    }
    public static int _SC_PAGE_SIZE() {
        return (int)30L;
    }
    public static int _CS_POSIX_V6_WIDTH_RESTRICTED_ENVS() {
        return (int)1L;
    }
    public static int _CS_POSIX_V5_WIDTH_RESTRICTED_ENVS() {
        return (int)4L;
    }
    public static int _CS_POSIX_V7_WIDTH_RESTRICTED_ENVS() {
        return (int)5L;
    }
    public static int G_DBUS_METHOD_INVOCATION_HANDLED() {
        return (int)1L;
    }
    public static int G_DBUS_METHOD_INVOCATION_UNHANDLED() {
        return (int)0L;
    }
    public static MemorySegment G_DRIVE_IDENTIFIER_KIND_UNIX_DEVICE() {
        return constants$993.G_DRIVE_IDENTIFIER_KIND_UNIX_DEVICE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_TYPE() {
        return constants$993.G_FILE_ATTRIBUTE_STANDARD_TYPE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_IS_HIDDEN() {
        return constants$993.G_FILE_ATTRIBUTE_STANDARD_IS_HIDDEN$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_IS_BACKUP() {
        return constants$993.G_FILE_ATTRIBUTE_STANDARD_IS_BACKUP$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK() {
        return constants$993.G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL() {
        return constants$994.G_FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_IS_VOLATILE() {
        return constants$994.G_FILE_ATTRIBUTE_STANDARD_IS_VOLATILE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_NAME() {
        return constants$994.G_FILE_ATTRIBUTE_STANDARD_NAME$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME() {
        return constants$994.G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_EDIT_NAME() {
        return constants$994.G_FILE_ATTRIBUTE_STANDARD_EDIT_NAME$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_COPY_NAME() {
        return constants$994.G_FILE_ATTRIBUTE_STANDARD_COPY_NAME$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_DESCRIPTION() {
        return constants$995.G_FILE_ATTRIBUTE_STANDARD_DESCRIPTION$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_ICON() {
        return constants$995.G_FILE_ATTRIBUTE_STANDARD_ICON$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON() {
        return constants$995.G_FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE() {
        return constants$995.G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE() {
        return constants$995.G_FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_SIZE() {
        return constants$995.G_FILE_ATTRIBUTE_STANDARD_SIZE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE() {
        return constants$996.G_FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET() {
        return constants$996.G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_TARGET_URI() {
        return constants$996.G_FILE_ATTRIBUTE_STANDARD_TARGET_URI$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_STANDARD_SORT_ORDER() {
        return constants$996.G_FILE_ATTRIBUTE_STANDARD_SORT_ORDER$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_ETAG_VALUE() {
        return constants$996.G_FILE_ATTRIBUTE_ETAG_VALUE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_ID_FILE() {
        return constants$996.G_FILE_ATTRIBUTE_ID_FILE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_ID_FILESYSTEM() {
        return constants$997.G_FILE_ATTRIBUTE_ID_FILESYSTEM$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_ACCESS_CAN_READ() {
        return constants$997.G_FILE_ATTRIBUTE_ACCESS_CAN_READ$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_ACCESS_CAN_WRITE() {
        return constants$997.G_FILE_ATTRIBUTE_ACCESS_CAN_WRITE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE() {
        return constants$997.G_FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_ACCESS_CAN_DELETE() {
        return constants$997.G_FILE_ATTRIBUTE_ACCESS_CAN_DELETE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_ACCESS_CAN_TRASH() {
        return constants$997.G_FILE_ATTRIBUTE_ACCESS_CAN_TRASH$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_ACCESS_CAN_RENAME() {
        return constants$998.G_FILE_ATTRIBUTE_ACCESS_CAN_RENAME$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT() {
        return constants$998.G_FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT() {
        return constants$998.G_FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT() {
        return constants$998.G_FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE() {
        return constants$998.G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE() {
        return constants$998.G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI() {
        return constants$999.G_FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START() {
        return constants$999.G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED() {
        return constants$999.G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP() {
        return constants$999.G_FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE() {
        return constants$999.G_FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL() {
        return constants$999.G_FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC() {
        return constants$1000.G_FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_TIME_MODIFIED() {
        return constants$1000.G_FILE_ATTRIBUTE_TIME_MODIFIED$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_TIME_MODIFIED_USEC() {
        return constants$1000.G_FILE_ATTRIBUTE_TIME_MODIFIED_USEC$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_TIME_ACCESS() {
        return constants$1000.G_FILE_ATTRIBUTE_TIME_ACCESS$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_TIME_ACCESS_USEC() {
        return constants$1000.G_FILE_ATTRIBUTE_TIME_ACCESS_USEC$SEGMENT;
    }
    public static MemorySegment G_FILE_ATTRIBUTE_TIME_CHANGED() {
        return constants$1000.G_FILE_ATTRIBUTE_TIME_CHANGED$SEGMENT;
    }
}


