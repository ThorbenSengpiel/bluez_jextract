// Generated by jextract

package gbus;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$550 {

    static final FunctionDescriptor g_output_stream_splice_async$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_output_stream_splice_async$MH = RuntimeHelper.downcallHandle(
        "g_output_stream_splice_async",
        constants$550.g_output_stream_splice_async$FUNC, false
    );
    static final FunctionDescriptor g_output_stream_splice_finish$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_output_stream_splice_finish$MH = RuntimeHelper.downcallHandle(
        "g_output_stream_splice_finish",
        constants$550.g_output_stream_splice_finish$FUNC, false
    );
    static final FunctionDescriptor g_output_stream_flush_async$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_output_stream_flush_async$MH = RuntimeHelper.downcallHandle(
        "g_output_stream_flush_async",
        constants$550.g_output_stream_flush_async$FUNC, false
    );
    static final FunctionDescriptor g_output_stream_flush_finish$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_output_stream_flush_finish$MH = RuntimeHelper.downcallHandle(
        "g_output_stream_flush_finish",
        constants$550.g_output_stream_flush_finish$FUNC, false
    );
    static final FunctionDescriptor g_output_stream_close_async$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_output_stream_close_async$MH = RuntimeHelper.downcallHandle(
        "g_output_stream_close_async",
        constants$550.g_output_stream_close_async$FUNC, false
    );
    static final FunctionDescriptor g_output_stream_close_finish$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_output_stream_close_finish$MH = RuntimeHelper.downcallHandle(
        "g_output_stream_close_finish",
        constants$550.g_output_stream_close_finish$FUNC, false
    );
}


