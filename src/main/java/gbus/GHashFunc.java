// Generated by jextract

package gbus;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
public interface GHashFunc {

    int apply(jdk.incubator.foreign.MemoryAddress x0);
    static NativeSymbol allocate(GHashFunc fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(GHashFunc.class, fi, constants$7.GHashFunc$FUNC, "(Ljdk/incubator/foreign/MemoryAddress;)I", scope);
    }
    static GHashFunc ofAddress(MemoryAddress addr, ResourceScope scope) {
        NativeSymbol symbol = NativeSymbol.ofAddress("GHashFunc::" + Long.toHexString(addr.toRawLongValue()), addr, scope);
return (jdk.incubator.foreign.MemoryAddress x0) -> {
            try {
                return (int)constants$7.GHashFunc$MH.invokeExact(symbol, (jdk.incubator.foreign.Addressable)x0);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


