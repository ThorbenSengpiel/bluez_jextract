// Generated by jextract

package gbus;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$838 {

    static final FunctionDescriptor g_task_set_name$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_task_set_name$MH = RuntimeHelper.downcallHandle(
        "g_task_set_name",
        constants$838.g_task_set_name$FUNC, false
    );
    static final FunctionDescriptor g_task_get_source_object$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_task_get_source_object$MH = RuntimeHelper.downcallHandle(
        "g_task_get_source_object",
        constants$838.g_task_get_source_object$FUNC, false
    );
    static final FunctionDescriptor g_task_get_task_data$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_task_get_task_data$MH = RuntimeHelper.downcallHandle(
        "g_task_get_task_data",
        constants$838.g_task_get_task_data$FUNC, false
    );
    static final FunctionDescriptor g_task_get_priority$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_task_get_priority$MH = RuntimeHelper.downcallHandle(
        "g_task_get_priority",
        constants$838.g_task_get_priority$FUNC, false
    );
    static final FunctionDescriptor g_task_get_context$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_task_get_context$MH = RuntimeHelper.downcallHandle(
        "g_task_get_context",
        constants$838.g_task_get_context$FUNC, false
    );
    static final FunctionDescriptor g_task_get_cancellable$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_task_get_cancellable$MH = RuntimeHelper.downcallHandle(
        "g_task_get_cancellable",
        constants$838.g_task_get_cancellable$FUNC, false
    );
}


