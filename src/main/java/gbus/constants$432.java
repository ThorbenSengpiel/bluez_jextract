// Generated by jextract

package gbus;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$432 {

    static final FunctionDescriptor g_type_check_is_value_type$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle g_type_check_is_value_type$MH = RuntimeHelper.downcallHandle(
        "g_type_check_is_value_type",
        constants$432.g_type_check_is_value_type$FUNC, false
    );
    static final FunctionDescriptor g_type_check_value$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_type_check_value$MH = RuntimeHelper.downcallHandle(
        "g_type_check_value",
        constants$432.g_type_check_value$FUNC, false
    );
    static final FunctionDescriptor g_type_check_value_holds$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle g_type_check_value_holds$MH = RuntimeHelper.downcallHandle(
        "g_type_check_value_holds",
        constants$432.g_type_check_value_holds$FUNC, false
    );
    static final FunctionDescriptor g_type_test_flags$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle g_type_test_flags$MH = RuntimeHelper.downcallHandle(
        "g_type_test_flags",
        constants$432.g_type_test_flags$FUNC, false
    );
    static final FunctionDescriptor g_type_name_from_instance$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_type_name_from_instance$MH = RuntimeHelper.downcallHandle(
        "g_type_name_from_instance",
        constants$432.g_type_name_from_instance$FUNC, false
    );
    static final FunctionDescriptor g_type_name_from_class$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_type_name_from_class$MH = RuntimeHelper.downcallHandle(
        "g_type_name_from_class",
        constants$432.g_type_name_from_class$FUNC, false
    );
}


