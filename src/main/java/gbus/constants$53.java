// Generated by jextract

package gbus;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
class constants$53 {

    static final FunctionDescriptor g_thread_join$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_thread_join$MH = RuntimeHelper.downcallHandle(
        "g_thread_join",
        constants$53.g_thread_join$FUNC, false
    );
    static final FunctionDescriptor g_thread_yield$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle g_thread_yield$MH = RuntimeHelper.downcallHandle(
        "g_thread_yield",
        constants$53.g_thread_yield$FUNC, false
    );
    static final FunctionDescriptor g_mutex_init$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_mutex_init$MH = RuntimeHelper.downcallHandle(
        "g_mutex_init",
        constants$53.g_mutex_init$FUNC, false
    );
    static final FunctionDescriptor g_mutex_clear$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_mutex_clear$MH = RuntimeHelper.downcallHandle(
        "g_mutex_clear",
        constants$53.g_mutex_clear$FUNC, false
    );
    static final FunctionDescriptor g_mutex_lock$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_mutex_lock$MH = RuntimeHelper.downcallHandle(
        "g_mutex_lock",
        constants$53.g_mutex_lock$FUNC, false
    );
    static final FunctionDescriptor g_mutex_trylock$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle g_mutex_trylock$MH = RuntimeHelper.downcallHandle(
        "g_mutex_trylock",
        constants$53.g_mutex_trylock$FUNC, false
    );
}


